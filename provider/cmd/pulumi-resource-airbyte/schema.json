{
    "name": "airbyte",
    "displayName": "Airbyte",
    "description": "A Pulumi package for creating and managing xyz cloud resources.",
    "keywords": [
        "pulumi",
        "airbyte",
        "category/utility"
    ],
    "homepage": "https://www.airbyte.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`airbyte` Terraform Provider](https://github.com/terraform-providers/terraform-provider-airbyte).",
    "repository": "https://github.com/ryan-pip/pulumi-airbyte",
    "pluginDownloadURL": "github://api.github.com/ryan-pip",
    "publisher": "Pulumi",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "nodejs": {
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-airbyte)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-airbyte` repo](https://github.com/ryan-pip/pulumi-airbyte/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-airbyte` repo](https://github.com/terraform-providers/terraform-provider-airbyte/issues)."
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-airbyte)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-airbyte` repo](https://github.com/ryan-pip/pulumi-airbyte/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-airbyte` repo](https://github.com/terraform-providers/terraform-provider-airbyte/issues)."
        }
    },
    "config": {
        "variables": {
            "bearerAuth": {
                "type": "string",
                "secret": true
            },
            "password": {
                "type": "string",
                "secret": true
            },
            "serverUrl": {
                "type": "string",
                "description": "Server URL (defaults to https://api.airbyte.com/v1)\n"
            },
            "username": {
                "type": "string",
                "secret": true
            }
        }
    },
    "types": {
        "airbyte:index/ConnectionConfigurations:ConnectionConfigurations": {
            "properties": {
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/ConnectionConfigurationsStream:ConnectionConfigurationsStream"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "streams"
                    ]
                }
            }
        },
        "airbyte:index/ConnectionConfigurationsStream:ConnectionConfigurationsStream": {
            "properties": {
                "cursorFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "primaryKeys": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "syncMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cursorFields",
                        "name",
                        "primaryKeys",
                        "syncMode"
                    ]
                }
            }
        },
        "airbyte:index/ConnectionSchedule:ConnectionSchedule": {
            "properties": {
                "basicTiming": {
                    "type": "string"
                },
                "cronExpression": {
                    "type": "string"
                },
                "scheduleType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "scheduleType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "basicTiming",
                        "cronExpression",
                        "scheduleType"
                    ]
                }
            }
        },
        "airbyte:index/DestinationAWSDatalakeConfiguration:DestinationAWSDatalakeConfiguration": {
            "properties": {
                "awsAccountId": {
                    "type": "string"
                },
                "bucketName": {
                    "type": "string"
                },
                "bucketPrefix": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfigurationCredentials:DestinationAWSDatalakeConfigurationCredentials"
                },
                "destinationType": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfigurationFormat:DestinationAWSDatalakeConfigurationFormat"
                },
                "glueCatalogFloatAsDecimal": {
                    "type": "boolean"
                },
                "lakeformationDatabaseDefaultTagKey": {
                    "type": "string"
                },
                "lakeformationDatabaseDefaultTagValues": {
                    "type": "string"
                },
                "lakeformationDatabaseName": {
                    "type": "string"
                },
                "lakeformationGovernedTables": {
                    "type": "boolean"
                },
                "partitioning": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "credentials",
                "destinationType",
                "lakeformationDatabaseName",
                "region"
            ]
        },
        "airbyte:index/DestinationAWSDatalakeConfigurationCredentials:DestinationAWSDatalakeConfigurationCredentials": {
            "properties": {
                "destinationAwsDatalakeAuthenticationModeIamRole": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole"
                },
                "destinationAwsDatalakeAuthenticationModeIamUser": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser"
                },
                "destinationAwsDatalakeUpdateAuthenticationModeIamRole": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole"
                },
                "destinationAwsDatalakeUpdateAuthenticationModeIamUser": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole": {
            "properties": {
                "credentialsTitle": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsTitle",
                "roleArn"
            ]
        },
        "airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string"
                },
                "awsSecretAccessKey": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsAccessKeyId",
                "awsSecretAccessKey",
                "credentialsTitle"
            ]
        },
        "airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole": {
            "properties": {
                "credentialsTitle": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsTitle",
                "roleArn"
            ]
        },
        "airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string"
                },
                "awsSecretAccessKey": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsAccessKeyId",
                "awsSecretAccessKey",
                "credentialsTitle"
            ]
        },
        "airbyte:index/DestinationAWSDatalakeConfigurationFormat:DestinationAWSDatalakeConfigurationFormat": {
            "properties": {
                "destinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson"
                },
                "destinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage"
                },
                "destinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson"
                },
                "destinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compressionCodec": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage": {
            "properties": {
                "compressionCodec": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compressionCodec": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage": {
            "properties": {
                "compressionCodec": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationAzureBlobStorageConfiguration:DestinationAzureBlobStorageConfiguration": {
            "properties": {
                "azureBlobStorageAccountKey": {
                    "type": "string"
                },
                "azureBlobStorageAccountName": {
                    "type": "string"
                },
                "azureBlobStorageContainerName": {
                    "type": "string"
                },
                "azureBlobStorageEndpointDomainName": {
                    "type": "string"
                },
                "azureBlobStorageOutputBufferSize": {
                    "type": "integer"
                },
                "azureBlobStorageSpillSize": {
                    "type": "integer"
                },
                "destinationType": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfigurationFormat:DestinationAzureBlobStorageConfigurationFormat"
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountKey",
                "azureBlobStorageAccountName",
                "destinationType",
                "format"
            ]
        },
        "airbyte:index/DestinationAzureBlobStorageConfigurationFormat:DestinationAzureBlobStorageConfigurationFormat": {
            "properties": {
                "destinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues"
                },
                "destinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues"
                },
                "destinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "flattening",
                "formatType"
            ]
        },
        "airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "flattening",
                "formatType"
            ]
        },
        "airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationBigqueryConfiguration:DestinationBigqueryConfiguration": {
            "properties": {
                "bigQueryClientBufferSizeMb": {
                    "type": "integer"
                },
                "credentialsJson": {
                    "type": "string"
                },
                "datasetId": {
                    "type": "string"
                },
                "datasetLocation": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "loadingMethod": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethod:DestinationBigqueryConfigurationLoadingMethod"
                },
                "projectId": {
                    "type": "string"
                },
                "rawDataDataset": {
                    "type": "string"
                },
                "transformationPriority": {
                    "type": "string"
                },
                "use1s1tFormat": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "datasetId",
                "datasetLocation",
                "destinationType",
                "projectId"
            ]
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethod:DestinationBigqueryConfigurationLoadingMethod": {
            "properties": {
                "destinationBigqueryLoadingMethodGcsStaging": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging"
                },
                "destinationBigqueryLoadingMethodStandardInserts": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodStandardInserts:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodStandardInserts"
                },
                "destinationBigqueryUpdateLoadingMethodGcsStaging": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging"
                },
                "destinationBigqueryUpdateLoadingMethodStandardInserts": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodStandardInserts:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodStandardInserts"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "gcsBucketName": {
                    "type": "string"
                },
                "gcsBucketPath": {
                    "type": "string"
                },
                "keepFilesInGcsBucket": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "gcsBucketName",
                "gcsBucketPath",
                "method"
            ]
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential": {
            "properties": {
                "destinationBigqueryLoadingMethodGcsStagingCredentialHmacKey": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ]
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodStandardInserts:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodStandardInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "gcsBucketName": {
                    "type": "string"
                },
                "gcsBucketPath": {
                    "type": "string"
                },
                "keepFilesInGcsBucket": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "gcsBucketName",
                "gcsBucketPath",
                "method"
            ]
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential": {
            "properties": {
                "destinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ]
        },
        "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodStandardInserts:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodStandardInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/DestinationBigqueryDenormalizedConfiguration:DestinationBigqueryDenormalizedConfiguration": {
            "properties": {
                "bigQueryClientBufferSizeMb": {
                    "type": "integer"
                },
                "credentialsJson": {
                    "type": "string"
                },
                "datasetId": {
                    "type": "string"
                },
                "datasetLocation": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "loadingMethod": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethod:DestinationBigqueryDenormalizedConfigurationLoadingMethod"
                },
                "projectId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datasetId",
                "destinationType",
                "projectId"
            ]
        },
        "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethod:DestinationBigqueryDenormalizedConfigurationLoadingMethod": {
            "properties": {
                "destinationBigqueryDenormalizedLoadingMethodGcsStaging": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging"
                },
                "destinationBigqueryDenormalizedLoadingMethodStandardInserts": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodStandardInserts:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodStandardInserts"
                },
                "destinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging"
                },
                "destinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "gcsBucketName": {
                    "type": "string"
                },
                "gcsBucketPath": {
                    "type": "string"
                },
                "keepFilesInGcsBucket": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "gcsBucketName",
                "gcsBucketPath",
                "method"
            ]
        },
        "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential": {
            "properties": {
                "destinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ]
        },
        "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodStandardInserts:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodStandardInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "gcsBucketName": {
                    "type": "string"
                },
                "gcsBucketPath": {
                    "type": "string"
                },
                "keepFilesInGcsBucket": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "gcsBucketName",
                "gcsBucketPath",
                "method"
            ]
        },
        "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential": {
            "properties": {
                "destinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ]
        },
        "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/DestinationClickhouseConfiguration:DestinationClickhouseConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfigurationTunnelMethod:DestinationClickhouseConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "port",
                "username"
            ]
        },
        "airbyte:index/DestinationClickhouseConfigurationTunnelMethod:DestinationClickhouseConfigurationTunnelMethod": {
            "properties": {
                "destinationClickhouseSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel"
                },
                "destinationClickhouseSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication"
                },
                "destinationClickhouseSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication"
                },
                "destinationClickhouseUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel"
                },
                "destinationClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationConvexConfiguration:DestinationConvexConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "deploymentUrl": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "deploymentUrl",
                "destinationType"
            ]
        },
        "airbyte:index/DestinationCumulioConfiguration:DestinationCumulioConfiguration": {
            "properties": {
                "apiHost": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiHost",
                "apiKey",
                "apiToken",
                "destinationType"
            ]
        },
        "airbyte:index/DestinationDatabendConfiguration:DestinationDatabendConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "table": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "username"
            ]
        },
        "airbyte:index/DestinationDatabricksConfiguration:DestinationDatabricksConfiguration": {
            "properties": {
                "acceptTerms": {
                    "type": "boolean"
                },
                "dataSource": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfigurationDataSource:DestinationDatabricksConfigurationDataSource"
                },
                "database": {
                    "type": "string"
                },
                "databricksHttpPath": {
                    "type": "string"
                },
                "databricksPersonalAccessToken": {
                    "type": "string"
                },
                "databricksPort": {
                    "type": "string"
                },
                "databricksServerHostname": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "enableSchemaEvolution": {
                    "type": "boolean"
                },
                "purgeStagingData": {
                    "type": "boolean"
                },
                "schema": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "acceptTerms",
                "dataSource",
                "databricksHttpPath",
                "databricksPersonalAccessToken",
                "databricksServerHostname",
                "destinationType"
            ]
        },
        "airbyte:index/DestinationDatabricksConfigurationDataSource:DestinationDatabricksConfigurationDataSource": {
            "properties": {
                "destinationDatabricksDataSourceAmazonS3": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3:DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3"
                },
                "destinationDatabricksDataSourceAzureBlobStorage": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage:DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage"
                },
                "destinationDatabricksDataSourceRecommendedManagedTables": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables:DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables"
                },
                "destinationDatabricksUpdateDataSourceAmazonS3": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3:DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3"
                },
                "destinationDatabricksUpdateDataSourceAzureBlobStorage": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage:DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage"
                },
                "destinationDatabricksUpdateDataSourceRecommendedManagedTables": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables:DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3:DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3": {
            "properties": {
                "dataSourceType": {
                    "type": "string"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "s3AccessKeyId": {
                    "type": "string"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "s3SecretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSourceType",
                "s3AccessKeyId",
                "s3BucketName",
                "s3BucketPath",
                "s3BucketRegion",
                "s3SecretAccessKey"
            ]
        },
        "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage:DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage": {
            "properties": {
                "azureBlobStorageAccountName": {
                    "type": "string"
                },
                "azureBlobStorageContainerName": {
                    "type": "string"
                },
                "azureBlobStorageEndpointDomainName": {
                    "type": "string"
                },
                "azureBlobStorageSasToken": {
                    "type": "string"
                },
                "dataSourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountName",
                "azureBlobStorageContainerName",
                "azureBlobStorageSasToken",
                "dataSourceType"
            ]
        },
        "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables:DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables": {
            "properties": {
                "dataSourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSourceType"
            ]
        },
        "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3:DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3": {
            "properties": {
                "dataSourceType": {
                    "type": "string"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "s3AccessKeyId": {
                    "type": "string"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "s3SecretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSourceType",
                "s3AccessKeyId",
                "s3BucketName",
                "s3BucketPath",
                "s3BucketRegion",
                "s3SecretAccessKey"
            ]
        },
        "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage:DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage": {
            "properties": {
                "azureBlobStorageAccountName": {
                    "type": "string"
                },
                "azureBlobStorageContainerName": {
                    "type": "string"
                },
                "azureBlobStorageEndpointDomainName": {
                    "type": "string"
                },
                "azureBlobStorageSasToken": {
                    "type": "string"
                },
                "dataSourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountName",
                "azureBlobStorageContainerName",
                "azureBlobStorageSasToken",
                "dataSourceType"
            ]
        },
        "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables:DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables": {
            "properties": {
                "dataSourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSourceType"
            ]
        },
        "airbyte:index/DestinationDevNullConfiguration:DestinationDevNullConfiguration": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "testDestination": {
                    "$ref": "#/types/airbyte:index/DestinationDevNullConfigurationTestDestination:DestinationDevNullConfigurationTestDestination"
                }
            },
            "type": "object",
            "required": [
                "destinationType",
                "testDestination"
            ]
        },
        "airbyte:index/DestinationDevNullConfigurationTestDestination:DestinationDevNullConfigurationTestDestination": {
            "properties": {
                "destinationDevNullTestDestinationSilent": {
                    "$ref": "#/types/airbyte:index/DestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent:DestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent"
                },
                "destinationDevNullUpdateTestDestinationSilent": {
                    "$ref": "#/types/airbyte:index/DestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent:DestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent:DestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent": {
            "properties": {
                "testDestinationType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "testDestinationType"
            ]
        },
        "airbyte:index/DestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent:DestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent": {
            "properties": {
                "testDestinationType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "testDestinationType"
            ]
        },
        "airbyte:index/DestinationDynamodbConfiguration:DestinationDynamodbConfiguration": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "dynamodbEndpoint": {
                    "type": "string"
                },
                "dynamodbRegion": {
                    "type": "string"
                },
                "dynamodbTableNamePrefix": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "destinationType",
                "dynamodbRegion",
                "dynamodbTableNamePrefix",
                "secretAccessKey"
            ]
        },
        "airbyte:index/DestinationElasticsearchConfiguration:DestinationElasticsearchConfiguration": {
            "properties": {
                "authenticationMethod": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethod:DestinationElasticsearchConfigurationAuthenticationMethod"
                },
                "caCertificate": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "upsert": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "destinationType",
                "endpoint"
            ]
        },
        "airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethod:DestinationElasticsearchConfigurationAuthenticationMethod": {
            "properties": {
                "destinationElasticsearchAuthenticationMethodApiKeySecret": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret:DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret"
                },
                "destinationElasticsearchAuthenticationMethodUsernamePassword": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodUsernamePassword:DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodUsernamePassword"
                },
                "destinationElasticsearchUpdateAuthenticationMethodApiKeySecret": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret:DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret"
                },
                "destinationElasticsearchUpdateAuthenticationMethodUsernamePassword": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodUsernamePassword:DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodUsernamePassword"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret:DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret": {
            "properties": {
                "apiKeyId": {
                    "type": "string"
                },
                "apiKeySecret": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKeyId",
                "apiKeySecret",
                "method"
            ]
        },
        "airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodUsernamePassword:DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodUsernamePassword": {
            "properties": {
                "method": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method",
                "password",
                "username"
            ]
        },
        "airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret:DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret": {
            "properties": {
                "apiKeyId": {
                    "type": "string"
                },
                "apiKeySecret": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKeyId",
                "apiKeySecret",
                "method"
            ]
        },
        "airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodUsernamePassword:DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodUsernamePassword": {
            "properties": {
                "method": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method",
                "password",
                "username"
            ]
        },
        "airbyte:index/DestinationFireboltConfiguration:DestinationFireboltConfiguration": {
            "properties": {
                "account": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "loadingMethod": {
                    "$ref": "#/types/airbyte:index/DestinationFireboltConfigurationLoadingMethod:DestinationFireboltConfigurationLoadingMethod"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "password",
                "username"
            ]
        },
        "airbyte:index/DestinationFireboltConfigurationLoadingMethod:DestinationFireboltConfigurationLoadingMethod": {
            "properties": {
                "destinationFireboltLoadingMethodExternalTableViaS3": {
                    "$ref": "#/types/airbyte:index/DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3:DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3"
                },
                "destinationFireboltLoadingMethodSqlInserts": {
                    "$ref": "#/types/airbyte:index/DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodSqlInserts:DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodSqlInserts"
                },
                "destinationFireboltUpdateLoadingMethodExternalTableViaS3": {
                    "$ref": "#/types/airbyte:index/DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3:DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3"
                },
                "destinationFireboltUpdateLoadingMethodSqlInserts": {
                    "$ref": "#/types/airbyte:index/DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodSqlInserts:DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodSqlInserts"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3:DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3": {
            "properties": {
                "awsKeyId": {
                    "type": "string"
                },
                "awsKeySecret": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "s3Bucket": {
                    "type": "string"
                },
                "s3Region": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsKeyId",
                "awsKeySecret",
                "method",
                "s3Bucket",
                "s3Region"
            ]
        },
        "airbyte:index/DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodSqlInserts:DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodSqlInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3:DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3": {
            "properties": {
                "awsKeyId": {
                    "type": "string"
                },
                "awsKeySecret": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "s3Bucket": {
                    "type": "string"
                },
                "s3Region": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsKeyId",
                "awsKeySecret",
                "method",
                "s3Bucket",
                "s3Region"
            ]
        },
        "airbyte:index/DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodSqlInserts:DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodSqlInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/DestinationFirestoreConfiguration:DestinationFirestoreConfiguration": {
            "properties": {
                "credentialsJson": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationType",
                "projectId"
            ]
        },
        "airbyte:index/DestinationGcsConfiguration:DestinationGcsConfiguration": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationCredential:DestinationGcsConfigurationCredential"
                },
                "destinationType": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormat:DestinationGcsConfigurationFormat"
                },
                "gcsBucketName": {
                    "type": "string"
                },
                "gcsBucketPath": {
                    "type": "string"
                },
                "gcsBucketRegion": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "destinationType",
                "format",
                "gcsBucketName",
                "gcsBucketPath"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationCredential:DestinationGcsConfigurationCredential": {
            "properties": {
                "destinationGcsAuthenticationHmacKey": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey:DestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey"
                },
                "destinationGcsUpdateAuthenticationHmacKey": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey:DestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey:DestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey:DestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormat:DestinationGcsConfigurationFormat": {
            "properties": {
                "destinationGcsOutputFormatAvroApacheAvro": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro"
                },
                "destinationGcsOutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues"
                },
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationGcsOutputFormatParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage:DestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvro": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro"
                },
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues"
                },
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationGcsUpdateOutputFormatParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro": {
            "properties": {
                "compressionCodec": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec": {
            "properties": {
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2"
                },
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate"
                },
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression"
                },
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy"
                },
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecXz": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz"
                },
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                },
                "includeChecksum": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression": {
            "properties": {
                "destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip"
                },
                "destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage:DestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage": {
            "properties": {
                "blockSizeMb": {
                    "type": "integer"
                },
                "compressionCodec": {
                    "type": "string"
                },
                "dictionaryEncoding": {
                    "type": "boolean"
                },
                "dictionaryPageSizeKb": {
                    "type": "integer"
                },
                "formatType": {
                    "type": "string"
                },
                "maxPaddingSizeMb": {
                    "type": "integer"
                },
                "pageSizeKb": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro": {
            "properties": {
                "compressionCodec": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec": {
            "properties": {
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                },
                "includeChecksum": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression": {
            "properties": {
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip"
                },
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage": {
            "properties": {
                "blockSizeMb": {
                    "type": "integer"
                },
                "compressionCodec": {
                    "type": "string"
                },
                "dictionaryEncoding": {
                    "type": "boolean"
                },
                "dictionaryPageSizeKb": {
                    "type": "integer"
                },
                "formatType": {
                    "type": "string"
                },
                "maxPaddingSizeMb": {
                    "type": "integer"
                },
                "pageSizeKb": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationGoogleSheetsConfiguration:DestinationGoogleSheetsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/DestinationGoogleSheetsConfigurationCredentials:DestinationGoogleSheetsConfigurationCredentials"
                },
                "destinationType": {
                    "type": "string"
                },
                "spreadsheetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "destinationType",
                "spreadsheetId"
            ]
        },
        "airbyte:index/DestinationGoogleSheetsConfigurationCredentials:DestinationGoogleSheetsConfigurationCredentials": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/DestinationKeenConfiguration:DestinationKeenConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "inferTimestamp": {
                    "type": "boolean"
                },
                "projectId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "destinationType",
                "projectId"
            ]
        },
        "airbyte:index/DestinationKinesisConfiguration:DestinationKinesisConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "bufferSize": {
                    "type": "integer"
                },
                "destinationType": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "shardCount": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bufferSize",
                "destinationType",
                "endpoint",
                "privateKey",
                "region",
                "shardCount"
            ]
        },
        "airbyte:index/DestinationLangchainConfiguration:DestinationLangchainConfiguration": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "embedding": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationEmbedding:DestinationLangchainConfigurationEmbedding"
                },
                "indexing": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationIndexing:DestinationLangchainConfigurationIndexing"
                },
                "processing": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationProcessing:DestinationLangchainConfigurationProcessing"
                }
            },
            "type": "object",
            "required": [
                "destinationType",
                "embedding",
                "indexing",
                "processing"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationEmbedding:DestinationLangchainConfigurationEmbedding": {
            "properties": {
                "destinationLangchainEmbeddingFake": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingFake:DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingFake"
                },
                "destinationLangchainEmbeddingOpenAi": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi:DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi"
                },
                "destinationLangchainUpdateEmbeddingFake": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake:DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake"
                },
                "destinationLangchainUpdateEmbeddingOpenAi": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi:DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingFake:DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingFake": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi:DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi": {
            "properties": {
                "mode": {
                    "type": "string"
                },
                "openaiKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake:DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi:DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi": {
            "properties": {
                "mode": {
                    "type": "string"
                },
                "openaiKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "openaiKey"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationIndexing:DestinationLangchainConfigurationIndexing": {
            "properties": {
                "destinationLangchainIndexingChromaLocalPersistance": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance:DestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance"
                },
                "destinationLangchainIndexingDocArrayHnswSearch": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch:DestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch"
                },
                "destinationLangchainIndexingPinecone": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone:DestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone"
                },
                "destinationLangchainUpdateIndexingChromaLocalPersistance": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance:DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance"
                },
                "destinationLangchainUpdateIndexingDocArrayHnswSearch": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch:DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch"
                },
                "destinationLangchainUpdateIndexingPinecone": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone:DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance:DestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance": {
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "destinationPath": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationPath"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch:DestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch": {
            "properties": {
                "destinationPath": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationPath"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone:DestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone": {
            "properties": {
                "index": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "pineconeEnvironment": {
                    "type": "string"
                },
                "pineconeKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index",
                "pineconeEnvironment",
                "pineconeKey"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance:DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance": {
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "destinationPath": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationPath"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch:DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch": {
            "properties": {
                "destinationPath": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationPath"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone:DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone": {
            "properties": {
                "index": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "pineconeEnvironment": {
                    "type": "string"
                },
                "pineconeKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index",
                "pineconeEnvironment",
                "pineconeKey"
            ]
        },
        "airbyte:index/DestinationLangchainConfigurationProcessing:DestinationLangchainConfigurationProcessing": {
            "properties": {
                "chunkOverlap": {
                    "type": "integer"
                },
                "chunkSize": {
                    "type": "integer"
                },
                "textFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "chunkSize",
                "textFields"
            ]
        },
        "airbyte:index/DestinationMSsqlConfiguration:DestinationMSsqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schema": {
                    "type": "string"
                },
                "sslMethod": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationSslMethod:DestinationMSsqlConfigurationSslMethod"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationTunnelMethod:DestinationMSsqlConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "port",
                "schema",
                "username"
            ]
        },
        "airbyte:index/DestinationMSsqlConfigurationSslMethod:DestinationMSsqlConfigurationSslMethod": {
            "properties": {
                "destinationMssqlSslMethodEncryptedTrustServerCertificate": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate"
                },
                "destinationMssqlSslMethodEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate"
                },
                "destinationMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate"
                },
                "destinationMssqlUpdateSslMethodEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate": {
            "properties": {
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ]
        },
        "airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate": {
            "properties": {
                "hostNameInCertificate": {
                    "type": "string"
                },
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ]
        },
        "airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
            "properties": {
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ]
        },
        "airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate": {
            "properties": {
                "hostNameInCertificate": {
                    "type": "string"
                },
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ]
        },
        "airbyte:index/DestinationMSsqlConfigurationTunnelMethod:DestinationMSsqlConfigurationTunnelMethod": {
            "properties": {
                "destinationMssqlSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel"
                },
                "destinationMssqlSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication"
                },
                "destinationMssqlSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication"
                },
                "destinationMssqlUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel"
                },
                "destinationMssqlUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationMongodbConfiguration:DestinationMongodbConfiguration": {
            "properties": {
                "authType": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationAuthType:DestinationMongodbConfigurationAuthType"
                },
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "instanceType": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationInstanceType:DestinationMongodbConfigurationInstanceType"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationTunnelMethod:DestinationMongodbConfigurationTunnelMethod"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "database",
                "destinationType"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationAuthType:DestinationMongodbConfigurationAuthType": {
            "properties": {
                "destinationMongodbAuthorizationTypeLoginPassword": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword:DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword"
                },
                "destinationMongodbAuthorizationTypeNone": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone:DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone"
                },
                "destinationMongodbUpdateAuthorizationTypeLoginPassword": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword:DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword"
                },
                "destinationMongodbUpdateAuthorizationTypeNone": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone:DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword:DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword": {
            "properties": {
                "authorization": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorization",
                "password",
                "username"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone:DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone": {
            "properties": {
                "authorization": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorization"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword:DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword": {
            "properties": {
                "authorization": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorization",
                "password",
                "username"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone:DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone": {
            "properties": {
                "authorization": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorization"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationInstanceType:DestinationMongodbConfigurationInstanceType": {
            "properties": {
                "destinationMongodbMongoDbInstanceTypeMongoDbAtlas": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas:DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas"
                },
                "destinationMongodbMongoDbInstanceTypeReplicaSet": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet:DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet"
                },
                "destinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance:DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance"
                },
                "destinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas"
                },
                "destinationMongodbUpdateMongoDbInstanceTypeReplicaSet": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet:DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet"
                },
                "destinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance:DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas:DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas": {
            "properties": {
                "clusterUrl": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clusterUrl",
                "instance"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet:DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet": {
            "properties": {
                "instance": {
                    "type": "string"
                },
                "replicaSet": {
                    "type": "string"
                },
                "serverAddresses": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "instance",
                "serverAddresses"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance:DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "host",
                "instance",
                "port"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
            "properties": {
                "clusterUrl": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clusterUrl",
                "instance"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet:DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet": {
            "properties": {
                "instance": {
                    "type": "string"
                },
                "replicaSet": {
                    "type": "string"
                },
                "serverAddresses": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "instance",
                "serverAddresses"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance:DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "host",
                "instance",
                "port"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationTunnelMethod:DestinationMongodbConfigurationTunnelMethod": {
            "properties": {
                "destinationMongodbSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel:DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel"
                },
                "destinationMongodbSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication"
                },
                "destinationMongodbSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication"
                },
                "destinationMongodbUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel:DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel"
                },
                "destinationMongodbUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationMongodbUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel:DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel:DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationMysqlConfiguration:DestinationMysqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfigurationTunnelMethod:DestinationMysqlConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "port",
                "username"
            ]
        },
        "airbyte:index/DestinationMysqlConfigurationTunnelMethod:DestinationMysqlConfigurationTunnelMethod": {
            "properties": {
                "destinationMysqlSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel:DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel"
                },
                "destinationMysqlSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication"
                },
                "destinationMysqlSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication"
                },
                "destinationMysqlUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel:DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel"
                },
                "destinationMysqlUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel:DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel:DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationOracleConfiguration:DestinationOracleConfiguration": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schema": {
                    "type": "string"
                },
                "sid": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfigurationTunnelMethod:DestinationOracleConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationType",
                "host",
                "port",
                "sid",
                "username"
            ]
        },
        "airbyte:index/DestinationOracleConfigurationTunnelMethod:DestinationOracleConfigurationTunnelMethod": {
            "properties": {
                "destinationOracleSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel:DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel"
                },
                "destinationOracleSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication"
                },
                "destinationOracleSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication"
                },
                "destinationOracleUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel:DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel"
                },
                "destinationOracleUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationOracleUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel:DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel:DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationPostgresConfiguration:DestinationPostgresConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schema": {
                    "type": "string"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslMode:DestinationPostgresConfigurationSslMode"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationTunnelMethod:DestinationPostgresConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "port",
                "schema",
                "username"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslMode:DestinationPostgresConfigurationSslMode": {
            "properties": {
                "destinationPostgresSslModesAllow": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow"
                },
                "destinationPostgresSslModesDisable": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable"
                },
                "destinationPostgresSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer"
                },
                "destinationPostgresSslModesRequire": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire"
                },
                "destinationPostgresSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa"
                },
                "destinationPostgresSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull"
                },
                "destinationPostgresUpdateSslModesAllow": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow"
                },
                "destinationPostgresUpdateSslModesDisable": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable"
                },
                "destinationPostgresUpdateSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer"
                },
                "destinationPostgresUpdateSslModesRequire": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire"
                },
                "destinationPostgresUpdateSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa"
                },
                "destinationPostgresUpdateSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "mode"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationTunnelMethod:DestinationPostgresConfigurationTunnelMethod": {
            "properties": {
                "destinationPostgresSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel:DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel"
                },
                "destinationPostgresSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication"
                },
                "destinationPostgresSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication"
                },
                "destinationPostgresUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel:DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel"
                },
                "destinationPostgresUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationPostgresUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel:DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel:DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationPubsubConfiguration:DestinationPubsubConfiguration": {
            "properties": {
                "batchingDelayThreshold": {
                    "type": "integer"
                },
                "batchingElementCountThreshold": {
                    "type": "integer"
                },
                "batchingEnabled": {
                    "type": "boolean"
                },
                "batchingRequestBytesThreshold": {
                    "type": "integer"
                },
                "credentialsJson": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "orderingEnabled": {
                    "type": "boolean"
                },
                "projectId": {
                    "type": "string"
                },
                "topicId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "batchingEnabled",
                "credentialsJson",
                "destinationType",
                "orderingEnabled",
                "projectId",
                "topicId"
            ]
        },
        "airbyte:index/DestinationRedisConfiguration:DestinationRedisConfiguration": {
            "properties": {
                "cacheType": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "ssl": {
                    "type": "boolean"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationSslMode:DestinationRedisConfigurationSslMode"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationTunnelMethod:DestinationRedisConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cacheType",
                "destinationType",
                "host",
                "port",
                "username"
            ]
        },
        "airbyte:index/DestinationRedisConfigurationSslMode:DestinationRedisConfigurationSslMode": {
            "properties": {
                "destinationRedisSslModesDisable": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationSslModeDestinationRedisSslModesDisable:DestinationRedisConfigurationSslModeDestinationRedisSslModesDisable"
                },
                "destinationRedisSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull:DestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull"
                },
                "destinationRedisUpdateSslModesDisable": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable:DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable"
                },
                "destinationRedisUpdateSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull:DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedisConfigurationSslModeDestinationRedisSslModesDisable:DestinationRedisConfigurationSslModeDestinationRedisSslModesDisable": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/DestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull:DestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "mode"
            ]
        },
        "airbyte:index/DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable:DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull:DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "mode"
            ]
        },
        "airbyte:index/DestinationRedisConfigurationTunnelMethod:DestinationRedisConfigurationTunnelMethod": {
            "properties": {
                "destinationRedisSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel:DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel"
                },
                "destinationRedisSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication"
                },
                "destinationRedisSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication"
                },
                "destinationRedisUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel:DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel"
                },
                "destinationRedisUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationRedisUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel:DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel:DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationRedshiftConfiguration:DestinationRedshiftConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schema": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationTunnelMethod:DestinationRedshiftConfigurationTunnelMethod"
                },
                "uploadingMethod": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethod:DestinationRedshiftConfigurationUploadingMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "password",
                "port",
                "schema",
                "username"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationTunnelMethod:DestinationRedshiftConfigurationTunnelMethod": {
            "properties": {
                "destinationRedshiftSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel"
                },
                "destinationRedshiftSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication"
                },
                "destinationRedshiftSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication"
                },
                "destinationRedshiftUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel"
                },
                "destinationRedshiftUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethod:DestinationRedshiftConfigurationUploadingMethod": {
            "properties": {
                "destinationRedshiftUpdateUploadingMethodS3Staging": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging"
                },
                "destinationRedshiftUpdateUploadingMethodStandard": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard"
                },
                "destinationRedshiftUploadingMethodS3Staging": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging"
                },
                "destinationRedshiftUploadingMethodStandard": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "encryption": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "purgeStagingData": {
                    "type": "boolean"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "method",
                "s3BucketName",
                "s3BucketRegion",
                "secretAccessKey"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption": {
            "properties": {
                "destinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption"
                },
                "destinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
            "properties": {
                "encryptionType": {
                    "type": "string"
                },
                "keyEncryptingKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionType"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption": {
            "properties": {
                "encryptionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionType"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "encryption": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "purgeStagingData": {
                    "type": "boolean"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "method",
                "s3BucketName",
                "s3BucketRegion",
                "secretAccessKey"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption": {
            "properties": {
                "destinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption"
                },
                "destinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
            "properties": {
                "encryptionType": {
                    "type": "string"
                },
                "keyEncryptingKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionType"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption": {
            "properties": {
                "encryptionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionType"
            ]
        },
        "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/DestinationS3Configuration:DestinationS3Configuration": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormat:DestinationS3ConfigurationFormat"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "s3Endpoint": {
                    "type": "string"
                },
                "s3PathFormat": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationType",
                "format",
                "s3BucketName",
                "s3BucketPath",
                "s3BucketRegion"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormat:DestinationS3ConfigurationFormat": {
            "properties": {
                "destinationS3OutputFormatAvroApacheAvro": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro"
                },
                "destinationS3OutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues"
                },
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationS3OutputFormatParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage:DestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvro": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro"
                },
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues"
                },
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationS3UpdateOutputFormatParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro": {
            "properties": {
                "compressionCodec": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec": {
            "properties": {
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2"
                },
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate"
                },
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression"
                },
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy"
                },
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecXz": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz"
                },
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                },
                "includeChecksum": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "flattening",
                "formatType"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression": {
            "properties": {
                "destinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip"
                },
                "destinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage:DestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage": {
            "properties": {
                "blockSizeMb": {
                    "type": "integer"
                },
                "compressionCodec": {
                    "type": "string"
                },
                "dictionaryEncoding": {
                    "type": "boolean"
                },
                "dictionaryPageSizeKb": {
                    "type": "integer"
                },
                "formatType": {
                    "type": "string"
                },
                "maxPaddingSizeMb": {
                    "type": "integer"
                },
                "pageSizeKb": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro": {
            "properties": {
                "compressionCodec": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec": {
            "properties": {
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                },
                "includeChecksum": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "flattening",
                "formatType"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression": {
            "properties": {
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip"
                },
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage": {
            "properties": {
                "blockSizeMb": {
                    "type": "integer"
                },
                "compressionCodec": {
                    "type": "string"
                },
                "dictionaryEncoding": {
                    "type": "boolean"
                },
                "dictionaryPageSizeKb": {
                    "type": "integer"
                },
                "formatType": {
                    "type": "string"
                },
                "maxPaddingSizeMb": {
                    "type": "integer"
                },
                "pageSizeKb": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationS3GlueConfiguration:DestinationS3GlueConfiguration": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormat:DestinationS3GlueConfigurationFormat"
                },
                "glueDatabase": {
                    "type": "string"
                },
                "glueSerializationLibrary": {
                    "type": "string"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "s3Endpoint": {
                    "type": "string"
                },
                "s3PathFormat": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationType",
                "format",
                "glueDatabase",
                "glueSerializationLibrary",
                "s3BucketName",
                "s3BucketPath",
                "s3BucketRegion"
            ]
        },
        "airbyte:index/DestinationS3GlueConfigurationFormat:DestinationS3GlueConfigurationFormat": {
            "properties": {
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationSftpJsonConfiguration:DestinationSftpJsonConfiguration": {
            "properties": {
                "destinationPath": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationPath",
                "destinationType",
                "host",
                "password",
                "username"
            ]
        },
        "airbyte:index/DestinationSnowflakeConfiguration:DestinationSnowflakeConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfigurationCredentials:DestinationSnowflakeConfigurationCredentials"
                },
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "rawDataSchema": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "use1s1tFormat": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                },
                "warehouse": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "role",
                "schema",
                "username",
                "warehouse"
            ]
        },
        "airbyte:index/DestinationSnowflakeConfigurationCredentials:DestinationSnowflakeConfigurationCredentials": {
            "properties": {
                "destinationSnowflakeAuthorizationMethodKeyPairAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication"
                },
                "destinationSnowflakeAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20"
                },
                "destinationSnowflakeAuthorizationMethodUsernameAndPassword": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword"
                },
                "destinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication"
                },
                "destinationSnowflakeUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20"
                },
                "destinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "privateKeyPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "privateKey"
            ]
        },
        "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "refreshToken"
            ]
        },
        "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password"
            ]
        },
        "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "privateKeyPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "privateKey"
            ]
        },
        "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "refreshToken"
            ]
        },
        "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password"
            ]
        },
        "airbyte:index/DestinationTimeplusConfiguration:DestinationTimeplusConfiguration": {
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apikey",
                "destinationType",
                "endpoint"
            ]
        },
        "airbyte:index/DestinationTypesenseConfiguration:DestinationTypesenseConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "destinationType",
                "host"
            ]
        },
        "airbyte:index/DestinationVerticaConfiguration:DestinationVerticaConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schema": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/DestinationVerticaConfigurationTunnelMethod:DestinationVerticaConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "port",
                "schema",
                "username"
            ]
        },
        "airbyte:index/DestinationVerticaConfigurationTunnelMethod:DestinationVerticaConfigurationTunnelMethod": {
            "properties": {
                "destinationVerticaSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel:DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel"
                },
                "destinationVerticaSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication"
                },
                "destinationVerticaSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication"
                },
                "destinationVerticaUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel:DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel"
                },
                "destinationVerticaUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationVerticaUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel:DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel:DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/DestinationXataConfiguration:DestinationXataConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "dbUrl": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "dbUrl",
                "destinationType"
            ]
        },
        "airbyte:index/SourceAhaConfiguration:SourceAhaConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "url"
            ]
        },
        "airbyte:index/SourceAircallConfiguration:SourceAircallConfiguration": {
            "properties": {
                "apiId": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiId",
                "apiToken",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceAirtableConfiguration:SourceAirtableConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfigurationCredentials:SourceAirtableConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAirtableConfigurationCredentials:SourceAirtableConfigurationCredentials": {
            "properties": {
                "sourceAirtableAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20:SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20"
                },
                "sourceAirtableAuthenticationPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken:SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken"
                },
                "sourceAirtableUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20:SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20"
                },
                "sourceAirtableUpdateAuthenticationPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken:SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20:SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken:SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20:SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken:SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceAlloydbConfiguration:SourceAlloydbConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "replicationMethod": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationReplicationMethod:SourceAlloydbConfigurationReplicationMethod"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslMode:SourceAlloydbConfigurationSslMode"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationTunnelMethod:SourceAlloydbConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "port",
                "sourceType",
                "username"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationReplicationMethod:SourceAlloydbConfigurationReplicationMethod": {
            "properties": {
                "sourceAlloydbReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc:SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc"
                },
                "sourceAlloydbReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard:SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard"
                },
                "sourceAlloydbReplicationMethodStandardXmin": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin:SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin"
                },
                "sourceAlloydbUpdateReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc:SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc"
                },
                "sourceAlloydbUpdateReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard:SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard"
                },
                "sourceAlloydbUpdateReplicationMethodStandardXmin": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin:SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc:SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "lsnCommitBehaviour": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                },
                "publication": {
                    "type": "string"
                },
                "queueSize": {
                    "type": "integer"
                },
                "replicationSlot": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method",
                "publication",
                "replicationSlot"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard:SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin:SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc:SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "lsnCommitBehaviour": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                },
                "publication": {
                    "type": "string"
                },
                "queueSize": {
                    "type": "integer"
                },
                "replicationSlot": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method",
                "publication",
                "replicationSlot"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard:SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin:SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslMode:SourceAlloydbConfigurationSslMode": {
            "properties": {
                "sourceAlloydbSslModesAllow": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow"
                },
                "sourceAlloydbSslModesDisable": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable"
                },
                "sourceAlloydbSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer"
                },
                "sourceAlloydbSslModesRequire": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire"
                },
                "sourceAlloydbSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa"
                },
                "sourceAlloydbSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull"
                },
                "sourceAlloydbUpdateSslModesAllow": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow"
                },
                "sourceAlloydbUpdateSslModesDisable": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable"
                },
                "sourceAlloydbUpdateSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer"
                },
                "sourceAlloydbUpdateSslModesRequire": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire"
                },
                "sourceAlloydbUpdateSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa"
                },
                "sourceAlloydbUpdateSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationTunnelMethod:SourceAlloydbConfigurationTunnelMethod": {
            "properties": {
                "sourceAlloydbSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel:SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel"
                },
                "sourceAlloydbSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication"
                },
                "sourceAlloydbSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication"
                },
                "sourceAlloydbUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel:SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel"
                },
                "sourceAlloydbUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel:SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel:SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourceAmazonAdsConfiguration:SourceAmazonAdsConfiguration": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "lookBackWindow": {
                    "type": "integer"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "refreshToken": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "reportRecordTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "stateFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceAmazonSellerPartnerConfiguration:SourceAmazonSellerPartnerConfiguration": {
            "properties": {
                "advancedStreamOptions": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "awsAccessKey": {
                    "type": "string"
                },
                "awsEnvironment": {
                    "type": "string"
                },
                "awsSecretKey": {
                    "type": "string"
                },
                "lwaAppId": {
                    "type": "string"
                },
                "lwaClientSecret": {
                    "type": "string"
                },
                "maxWaitSeconds": {
                    "type": "integer"
                },
                "periodInDays": {
                    "type": "integer"
                },
                "refreshToken": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "replicationEndDate": {
                    "type": "string"
                },
                "replicationStartDate": {
                    "type": "string"
                },
                "reportOptions": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsEnvironment",
                "lwaAppId",
                "lwaClientSecret",
                "refreshToken",
                "region",
                "replicationStartDate",
                "sourceType"
            ]
        },
        "airbyte:index/SourceAmazonSqsConfiguration:SourceAmazonSqsConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "attributesToReturn": {
                    "type": "string"
                },
                "deleteMessages": {
                    "type": "boolean"
                },
                "maxBatchSize": {
                    "type": "integer"
                },
                "maxWaitTime": {
                    "type": "integer"
                },
                "queueUrl": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "visibilityTimeout": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "deleteMessages",
                "queueUrl",
                "region",
                "sourceType"
            ]
        },
        "airbyte:index/SourceAmplitudeConfiguration:SourceAmplitudeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "dataRegion": {
                    "type": "string"
                },
                "requestTimeRange": {
                    "type": "integer"
                },
                "secretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "secretKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceApifyDatasetConfiguration:SourceApifyDatasetConfiguration": {
            "properties": {
                "clean": {
                    "type": "boolean"
                },
                "datasetId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datasetId",
                "sourceType"
            ]
        },
        "airbyte:index/SourceAppfollowConfiguration:SourceAppfollowConfiguration": {
            "properties": {
                "apiSecret": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "airbyte:index/SourceAsanaConfiguration:SourceAsanaConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfigurationCredentials:SourceAsanaConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAsanaConfigurationCredentials:SourceAsanaConfigurationCredentials": {
            "properties": {
                "sourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth:SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth"
                },
                "sourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken"
                },
                "sourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth:SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth"
                },
                "sourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth:SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "personalAccessToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "personalAccessToken"
            ]
        },
        "airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth:SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "personalAccessToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "personalAccessToken"
            ]
        },
        "airbyte:index/SourceAuth0Configuration:SourceAuth0Configuration": {
            "properties": {
                "baseUrl": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceAuth0ConfigurationCredentials:SourceAuth0ConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "credentials",
                "sourceType"
            ]
        },
        "airbyte:index/SourceAuth0ConfigurationCredentials:SourceAuth0ConfigurationCredentials": {
            "properties": {
                "sourceAuth0AuthenticationMethodOAuth2AccessToken": {
                    "$ref": "#/types/airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken:SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken"
                },
                "sourceAuth0AuthenticationMethodOAuth2ConfidentialApplication": {
                    "$ref": "#/types/airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication:SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication"
                },
                "sourceAuth0UpdateAuthenticationMethodOAuth2AccessToken": {
                    "$ref": "#/types/airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken:SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken"
                },
                "sourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication": {
                    "$ref": "#/types/airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication:SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken:SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ]
        },
        "airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication:SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication": {
            "properties": {
                "audience": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "audience",
                "authType",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken:SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ]
        },
        "airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication:SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication": {
            "properties": {
                "audience": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "audience",
                "authType",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceAwsCloudtrailConfiguration:SourceAwsCloudtrailConfiguration": {
            "properties": {
                "awsKeyId": {
                    "type": "string"
                },
                "awsRegionName": {
                    "type": "string"
                },
                "awsSecretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsKeyId",
                "awsRegionName",
                "awsSecretKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceAzureBlobStorageConfiguration:SourceAzureBlobStorageConfiguration": {
            "properties": {
                "azureBlobStorageAccountKey": {
                    "type": "string"
                },
                "azureBlobStorageAccountName": {
                    "type": "string"
                },
                "azureBlobStorageBlobsPrefix": {
                    "type": "string"
                },
                "azureBlobStorageContainerName": {
                    "type": "string"
                },
                "azureBlobStorageEndpoint": {
                    "type": "string"
                },
                "azureBlobStorageSchemaInferenceLimit": {
                    "type": "integer"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationFormat:SourceAzureBlobStorageConfigurationFormat"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountKey",
                "azureBlobStorageAccountName",
                "azureBlobStorageContainerName",
                "format",
                "sourceType"
            ]
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationFormat:SourceAzureBlobStorageConfigurationFormat": {
            "properties": {
                "sourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson:SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson"
                },
                "sourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson:SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson:SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson:SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ]
        },
        "airbyte:index/SourceAzureTableConfiguration:SourceAzureTableConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "storageAccessKey": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "storageEndpointSuffix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "storageAccessKey",
                "storageAccountName"
            ]
        },
        "airbyte:index/SourceBambooHrConfiguration:SourceBambooHrConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "customReportsFields": {
                    "type": "string"
                },
                "customReportsIncludeDefaultFields": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "subdomain"
            ]
        },
        "airbyte:index/SourceBigcommerceConfiguration:SourceBigcommerceConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "storeHash": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType",
                "startDate",
                "storeHash"
            ]
        },
        "airbyte:index/SourceBigqueryConfiguration:SourceBigqueryConfiguration": {
            "properties": {
                "credentialsJson": {
                    "type": "string"
                },
                "datasetId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "projectId",
                "sourceType"
            ]
        },
        "airbyte:index/SourceBingAdsConfiguration:SourceBingAdsConfiguration": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "developerToken": {
                    "type": "string"
                },
                "lookbackWindow": {
                    "type": "integer"
                },
                "refreshToken": {
                    "type": "string"
                },
                "reportsStartDate": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "developerToken",
                "refreshToken",
                "reportsStartDate",
                "sourceType"
            ]
        },
        "airbyte:index/SourceBraintreeConfiguration:SourceBraintreeConfiguration": {
            "properties": {
                "environment": {
                    "type": "string"
                },
                "merchantId": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "environment",
                "merchantId",
                "privateKey",
                "publicKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceBrazeConfiguration:SourceBrazeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate",
                "url"
            ]
        },
        "airbyte:index/SourceChargebeeConfiguration:SourceChargebeeConfiguration": {
            "properties": {
                "productCatalog": {
                    "type": "string"
                },
                "site": {
                    "type": "string"
                },
                "siteApiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "productCatalog",
                "site",
                "siteApiKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceChartmogulConfiguration:SourceChartmogulConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "interval": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "interval",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceClickhouseConfiguration:SourceClickhouseConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfigurationTunnelMethod:SourceClickhouseConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "port",
                "sourceType",
                "username"
            ]
        },
        "airbyte:index/SourceClickhouseConfigurationTunnelMethod:SourceClickhouseConfigurationTunnelMethod": {
            "properties": {
                "sourceClickhouseSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel:SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel"
                },
                "sourceClickhouseSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication"
                },
                "sourceClickhouseSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication"
                },
                "sourceClickhouseUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel:SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel"
                },
                "sourceClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel:SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel:SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourceClickupApiConfiguration:SourceClickupApiConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "folderId": {
                    "type": "string"
                },
                "includeClosedTasks": {
                    "type": "boolean"
                },
                "listId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceClockifyConfiguration:SourceClockifyConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "apiUrl": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "workspaceId"
            ]
        },
        "airbyte:index/SourceCloseComConfiguration:SourceCloseComConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceCodaConfiguration:SourceCodaConfiguration": {
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceCoinApiConfiguration:SourceCoinApiConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "environment": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "period": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "symbolId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "environment",
                "period",
                "sourceType",
                "startDate",
                "symbolId"
            ]
        },
        "airbyte:index/SourceCoinmarketcapConfiguration:SourceCoinmarketcapConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "dataType": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "symbols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "dataType",
                "sourceType"
            ]
        },
        "airbyte:index/SourceConfigcatConfiguration:SourceConfigcatConfiguration": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "sourceType",
                "username"
            ]
        },
        "airbyte:index/SourceConfluenceConfiguration:SourceConfluenceConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "domainName",
                "email",
                "sourceType"
            ]
        },
        "airbyte:index/SourceConvexConfiguration:SourceConvexConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "deploymentUrl": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "deploymentUrl",
                "sourceType"
            ]
        },
        "airbyte:index/SourceDatadogConfiguration:SourceDatadogConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "applicationKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "maxRecordsPerRequest": {
                    "type": "integer"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceDatadogConfigurationQuery:SourceDatadogConfigurationQuery"
                    }
                },
                "query": {
                    "type": "string"
                },
                "site": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "applicationKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceDatadogConfigurationQuery:SourceDatadogConfigurationQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ]
        },
        "airbyte:index/SourceDatascopeConfiguration:SourceDatascopeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceDelightedConfiguration:SourceDelightedConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "since": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "since",
                "sourceType"
            ]
        },
        "airbyte:index/SourceDixaConfiguration:SourceDixaConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceDockerhubConfiguration:SourceDockerhubConfiguration": {
            "properties": {
                "dockerUsername": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dockerUsername",
                "sourceType"
            ]
        },
        "airbyte:index/SourceDremioConfiguration:SourceDremioConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "baseUrl": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "baseUrl",
                "sourceType"
            ]
        },
        "airbyte:index/SourceDynamodbConfiguration:SourceDynamodbConfiguration": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "reservedAttributeNames": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "secretAccessKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceE2eTestCloudConfiguration:SourceE2eTestCloudConfiguration": {
            "properties": {
                "maxMessages": {
                    "type": "integer"
                },
                "messageIntervalMs": {
                    "type": "integer"
                },
                "mockCatalog": {
                    "$ref": "#/types/airbyte:index/SourceE2eTestCloudConfigurationMockCatalog:SourceE2eTestCloudConfigurationMockCatalog"
                },
                "seed": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "maxMessages",
                "mockCatalog",
                "sourceType"
            ]
        },
        "airbyte:index/SourceE2eTestCloudConfigurationMockCatalog:SourceE2eTestCloudConfigurationMockCatalog": {
            "properties": {
                "sourceE2eTestCloudMockCatalogMultiSchema": {
                    "$ref": "#/types/airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema"
                },
                "sourceE2eTestCloudMockCatalogSingleSchema": {
                    "$ref": "#/types/airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema"
                },
                "sourceE2eTestCloudUpdateMockCatalogMultiSchema": {
                    "$ref": "#/types/airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema"
                },
                "sourceE2eTestCloudUpdateMockCatalogSingleSchema": {
                    "$ref": "#/types/airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema": {
            "properties": {
                "streamSchemas": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "streamSchemas",
                "type"
            ]
        },
        "airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema": {
            "properties": {
                "streamDuplication": {
                    "type": "integer"
                },
                "streamName": {
                    "type": "string"
                },
                "streamSchema": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "streamName",
                "streamSchema",
                "type"
            ]
        },
        "airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema": {
            "properties": {
                "streamSchemas": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "streamSchemas",
                "type"
            ]
        },
        "airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema": {
            "properties": {
                "streamDuplication": {
                    "type": "integer"
                },
                "streamName": {
                    "type": "string"
                },
                "streamSchema": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "streamName",
                "streamSchema",
                "type"
            ]
        },
        "airbyte:index/SourceEmailoctopusConfiguration:SourceEmailoctopusConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceExchangeRatesConfiguration:SourceExchangeRatesConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "base": {
                    "type": "string"
                },
                "ignoreWeekends": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceFacebookMarketingConfiguration:SourceFacebookMarketingConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "actionBreakdownsAllowEmpty": {
                    "type": "boolean"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "customInsights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceFacebookMarketingConfigurationCustomInsight:SourceFacebookMarketingConfigurationCustomInsight"
                    }
                },
                "endDate": {
                    "type": "string"
                },
                "fetchThumbnailImages": {
                    "type": "boolean"
                },
                "includeDeleted": {
                    "type": "boolean"
                },
                "insightsLookbackWindow": {
                    "type": "integer"
                },
                "maxBatchSize": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "accountId",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceFacebookMarketingConfigurationCustomInsight:SourceFacebookMarketingConfigurationCustomInsight": {
            "properties": {
                "actionBreakdowns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "actionReportTime": {
                    "type": "string"
                },
                "breakdowns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endDate": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "insightsLookbackWindow": {
                    "type": "integer"
                },
                "level": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "timeIncrement": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "airbyte:index/SourceFacebookPagesConfiguration:SourceFacebookPagesConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "pageId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "pageId",
                "sourceType"
            ]
        },
        "airbyte:index/SourceFakerConfiguration:SourceFakerConfiguration": {
            "properties": {
                "alwaysUpdated": {
                    "type": "boolean"
                },
                "count": {
                    "type": "integer"
                },
                "parallelism": {
                    "type": "integer"
                },
                "recordsPerSlice": {
                    "type": "integer"
                },
                "seed": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "count",
                "sourceType"
            ]
        },
        "airbyte:index/SourceFaunaConfiguration:SourceFaunaConfiguration": {
            "properties": {
                "collection": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfigurationCollection:SourceFaunaConfigurationCollection"
                },
                "domain": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "scheme": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "domain",
                "port",
                "scheme",
                "secret",
                "sourceType"
            ]
        },
        "airbyte:index/SourceFaunaConfigurationCollection:SourceFaunaConfigurationCollection": {
            "properties": {
                "deletions": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfigurationCollectionDeletions:SourceFaunaConfigurationCollectionDeletions"
                },
                "pageSize": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "deletions",
                "pageSize"
            ]
        },
        "airbyte:index/SourceFaunaConfigurationCollectionDeletions:SourceFaunaConfigurationCollectionDeletions": {
            "properties": {
                "sourceFaunaCollectionDeletionModeDisabled": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled"
                },
                "sourceFaunaCollectionDeletionModeEnabled": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled"
                },
                "sourceFaunaUpdateCollectionDeletionModeDisabled": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled"
                },
                "sourceFaunaUpdateCollectionDeletionModeEnabled": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled": {
            "properties": {
                "deletionMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deletionMode"
            ]
        },
        "airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled": {
            "properties": {
                "column": {
                    "type": "string"
                },
                "deletionMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "column",
                "deletionMode"
            ]
        },
        "airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled": {
            "properties": {
                "deletionMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deletionMode"
            ]
        },
        "airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled": {
            "properties": {
                "column": {
                    "type": "string"
                },
                "deletionMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "column",
                "deletionMode"
            ]
        },
        "airbyte:index/SourceFileSecureConfiguration:SourceFileSecureConfiguration": {
            "properties": {
                "datasetName": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProvider:SourceFileSecureConfigurationProvider"
                },
                "readerOptions": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datasetName",
                "format",
                "provider",
                "sourceType",
                "url"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProvider:SourceFileSecureConfigurationProvider": {
            "properties": {
                "sourceFileSecureStorageProviderAzBlobAzureBlobStorage": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage"
                },
                "sourceFileSecureStorageProviderGcsGoogleCloudStorage": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage"
                },
                "sourceFileSecureStorageProviderHttpsPublicWeb": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb"
                },
                "sourceFileSecureStorageProviderS3AmazonWebServices": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices"
                },
                "sourceFileSecureStorageProviderScpSecureCopyProtocol": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol"
                },
                "sourceFileSecureStorageProviderSftpSecureFileTransferProtocol": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol"
                },
                "sourceFileSecureStorageProviderSshSecureShell": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell"
                },
                "sourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage"
                },
                "sourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage"
                },
                "sourceFileSecureUpdateStorageProviderHttpsPublicWeb": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb"
                },
                "sourceFileSecureUpdateStorageProviderS3AmazonWebServices": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices"
                },
                "sourceFileSecureUpdateStorageProviderScpSecureCopyProtocol": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol"
                },
                "sourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol"
                },
                "sourceFileSecureUpdateStorageProviderSshSecureShell": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage": {
            "properties": {
                "sasToken": {
                    "type": "string"
                },
                "sharedKey": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "storageAccount": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "storage",
                "storageAccount"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage": {
            "properties": {
                "serviceAccountJson": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "storage"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb": {
            "properties": {
                "storage": {
                    "type": "string"
                },
                "userAgent": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "storage"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string"
                },
                "awsSecretAccessKey": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "storage"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "storage",
                "user"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "storage",
                "user"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "storage",
                "user"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage": {
            "properties": {
                "sasToken": {
                    "type": "string"
                },
                "sharedKey": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "storageAccount": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "storage",
                "storageAccount"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage": {
            "properties": {
                "serviceAccountJson": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "storage"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb": {
            "properties": {
                "storage": {
                    "type": "string"
                },
                "userAgent": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "storage"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string"
                },
                "awsSecretAccessKey": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "storage"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "storage",
                "user"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "storage",
                "user"
            ]
        },
        "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "storage",
                "user"
            ]
        },
        "airbyte:index/SourceFireboltConfiguration:SourceFireboltConfiguration": {
            "properties": {
                "account": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "password",
                "sourceType",
                "username"
            ]
        },
        "airbyte:index/SourceFreshcallerConfiguration:SourceFreshcallerConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "requestsPerMinute": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "syncLagMinutes": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "domain",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceFreshdeskConfiguration:SourceFreshdeskConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "requestsPerMinute": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "domain",
                "sourceType"
            ]
        },
        "airbyte:index/SourceFreshsalesConfiguration:SourceFreshsalesConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "domainName",
                "sourceType"
            ]
        },
        "airbyte:index/SourceGainsightPxConfiguration:SourceGainsightPxConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceGcsConfiguration:SourceGcsConfiguration": {
            "properties": {
                "gcsBucket": {
                    "type": "string"
                },
                "gcsPath": {
                    "type": "string"
                },
                "serviceAccount": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "gcsBucket",
                "gcsPath",
                "serviceAccount",
                "sourceType"
            ]
        },
        "airbyte:index/SourceGetlagoConfiguration:SourceGetlagoConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceGithubConfiguration:SourceGithubConfiguration": {
            "properties": {
                "branch": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfigurationCredentials:SourceGithubConfigurationCredentials"
                },
                "repository": {
                    "type": "string"
                },
                "requestsPerHour": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "repository",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceGithubConfigurationCredentials:SourceGithubConfigurationCredentials": {
            "properties": {
                "sourceGithubAuthenticationOAuth": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth:SourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth"
                },
                "sourceGithubAuthenticationPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken:SourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken"
                },
                "sourceGithubUpdateAuthenticationOAuth": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth:SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth"
                },
                "sourceGithubUpdateAuthenticationPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken:SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth:SourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken:SourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "personalAccessToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "personalAccessToken"
            ]
        },
        "airbyte:index/SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth:SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken:SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "personalAccessToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "personalAccessToken"
            ]
        },
        "airbyte:index/SourceGitlabConfiguration:SourceGitlabConfiguration": {
            "properties": {
                "apiUrl": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfigurationCredentials:SourceGitlabConfigurationCredentials"
                },
                "groups": {
                    "type": "string"
                },
                "projects": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceGitlabConfigurationCredentials:SourceGitlabConfigurationCredentials": {
            "properties": {
                "sourceGitlabAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20:SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20"
                },
                "sourceGitlabAuthorizationMethodPrivateToken": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken:SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken"
                },
                "sourceGitlabUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20:SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20"
                },
                "sourceGitlabUpdateAuthorizationMethodPrivateToken": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken:SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20:SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken:SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20:SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken:SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceGlassfrogConfiguration:SourceGlassfrogConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceGnewsConfiguration:SourceGnewsConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "ins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "language": {
                    "type": "string"
                },
                "nullables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "query": {
                    "type": "string"
                },
                "sortby": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "topHeadlinesQuery": {
                    "type": "string"
                },
                "topHeadlinesTopic": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "query",
                "sourceType"
            ]
        },
        "airbyte:index/SourceGoogleAdsConfiguration:SourceGoogleAdsConfiguration": {
            "properties": {
                "conversionWindowDays": {
                    "type": "integer"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAdsConfigurationCredentials:SourceGoogleAdsConfigurationCredentials"
                },
                "customQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAdsConfigurationCustomQuery:SourceGoogleAdsConfigurationCustomQuery"
                    }
                },
                "customerId": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "loginCustomerId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "customerId",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceGoogleAdsConfigurationCredentials:SourceGoogleAdsConfigurationCredentials": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "developerToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "developerToken",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleAdsConfigurationCustomQuery:SourceGoogleAdsConfigurationCustomQuery": {
            "properties": {
                "query": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query",
                "tableName"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfiguration:SourceGoogleAnalyticsDataApiConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentials:SourceGoogleAnalyticsDataApiConfigurationCredentials"
                },
                "customReports": {
                    "type": "string"
                },
                "dateRangesStartDate": {
                    "type": "string"
                },
                "propertyId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "windowInDays": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "dateRangesStartDate",
                "propertyId",
                "sourceType"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentials:SourceGoogleAnalyticsDataApiConfigurationCredentials": {
            "properties": {
                "sourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth"
                },
                "sourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication"
                },
                "sourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth"
                },
                "sourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "credentialsJson": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "credentialsJson": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsV4Configuration:SourceGoogleAnalyticsV4Configuration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentials:SourceGoogleAnalyticsV4ConfigurationCredentials"
                },
                "customReports": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "viewId": {
                    "type": "string"
                },
                "windowInDays": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate",
                "viewId"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentials:SourceGoogleAnalyticsV4ConfigurationCredentials": {
            "properties": {
                "sourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth"
                },
                "sourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication"
                },
                "sourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth"
                },
                "sourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "credentialsJson": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "credentialsJson": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson"
            ]
        },
        "airbyte:index/SourceGoogleDirectoryConfiguration:SourceGoogleDirectoryConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfigurationCredentials:SourceGoogleDirectoryConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "airbyte:index/SourceGoogleDirectoryConfigurationCredentials:SourceGoogleDirectoryConfigurationCredentials": {
            "properties": {
                "sourceGoogleDirectoryGoogleCredentialsServiceAccountKey": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey"
                },
                "sourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth"
                },
                "sourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey"
                },
                "sourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey": {
            "properties": {
                "credentialsJson": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "email"
            ]
        },
        "airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey": {
            "properties": {
                "credentialsJson": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "email"
            ]
        },
        "airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGooglePagespeedInsightsConfiguration:SourceGooglePagespeedInsightsConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "categories",
                "sourceType",
                "strategies",
                "urls"
            ]
        },
        "airbyte:index/SourceGoogleSearchConsoleConfiguration:SourceGoogleSearchConsoleConfiguration": {
            "properties": {
                "authorization": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorization:SourceGoogleSearchConsoleConfigurationAuthorization"
                },
                "customReports": {
                    "type": "string"
                },
                "dataState": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "siteUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorization",
                "siteUrls",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorization:SourceGoogleSearchConsoleConfigurationAuthorization": {
            "properties": {
                "sourceGoogleSearchConsoleAuthenticationTypeOAuth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth"
                },
                "sourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication"
                },
                "sourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth"
                },
                "sourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "serviceAccountInfo": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "email",
                "serviceAccountInfo"
            ]
        },
        "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "serviceAccountInfo": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "email",
                "serviceAccountInfo"
            ]
        },
        "airbyte:index/SourceGoogleSheetsConfiguration:SourceGoogleSheetsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfigurationCredentials:SourceGoogleSheetsConfigurationCredentials"
                },
                "namesConversion": {
                    "type": "boolean"
                },
                "rowBatchSize": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "spreadsheetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "spreadsheetId"
            ]
        },
        "airbyte:index/SourceGoogleSheetsConfigurationCredentials:SourceGoogleSheetsConfigurationCredentials": {
            "properties": {
                "sourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth"
                },
                "sourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication"
                },
                "sourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth"
                },
                "sourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "serviceAccountInfo": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "serviceAccountInfo"
            ]
        },
        "airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "serviceAccountInfo": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "serviceAccountInfo"
            ]
        },
        "airbyte:index/SourceGoogleWebfontsConfiguration:SourceGoogleWebfontsConfiguration": {
            "properties": {
                "alt": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "prettyPrint": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceGoogleWorkspaceAdminReportsConfiguration:SourceGoogleWorkspaceAdminReportsConfiguration": {
            "properties": {
                "credentialsJson": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "lookback": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "email",
                "sourceType"
            ]
        },
        "airbyte:index/SourceGreenhouseConfiguration:SourceGreenhouseConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceGridlyConfiguration:SourceGridlyConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "gridId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "gridId",
                "sourceType"
            ]
        },
        "airbyte:index/SourceHarvestConfiguration:SourceHarvestConfiguration": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfigurationCredentials:SourceHarvestConfigurationCredentials"
                },
                "replicationEndDate": {
                    "type": "string"
                },
                "replicationStartDate": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "replicationStartDate",
                "sourceType"
            ]
        },
        "airbyte:index/SourceHarvestConfigurationCredentials:SourceHarvestConfigurationCredentials": {
            "properties": {
                "sourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth:SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth"
                },
                "sourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken"
                },
                "sourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth:SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth"
                },
                "sourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth:SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken"
            ]
        },
        "airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth:SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken"
            ]
        },
        "airbyte:index/SourceHubplannerConfiguration:SourceHubplannerConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceHubspotConfiguration:SourceHubspotConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfigurationCredentials:SourceHubspotConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceHubspotConfigurationCredentials:SourceHubspotConfigurationCredentials": {
            "properties": {
                "sourceHubspotAuthenticationOAuth": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth:SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth"
                },
                "sourceHubspotAuthenticationPrivateApp": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp:SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp"
                },
                "sourceHubspotUpdateAuthenticationOAuth": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth:SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth"
                },
                "sourceHubspotUpdateAuthenticationPrivateApp": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp:SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth:SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "credentialsTitle",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp:SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "credentialsTitle"
            ]
        },
        "airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth:SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "credentialsTitle",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp:SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "credentialsTitle"
            ]
        },
        "airbyte:index/SourceInsightlyConfiguration:SourceInsightlyConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate",
                "token"
            ]
        },
        "airbyte:index/SourceInstagramConfiguration:SourceInstagramConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceInstatusConfiguration:SourceInstatusConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceIntercomConfiguration:SourceIntercomConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceIp2whoisConfiguration:SourceIp2whoisConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceIterableConfiguration:SourceIterableConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceJiraConfiguration:SourceJiraConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enableExperimentalStreams": {
                    "type": "boolean"
                },
                "expandIssueChangelog": {
                    "type": "boolean"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "renderFields": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "domain",
                "email",
                "sourceType"
            ]
        },
        "airbyte:index/SourceK6CloudConfiguration:SourceK6CloudConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceKlarnaConfiguration:SourceKlarnaConfiguration": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "playground": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "playground",
                "region",
                "sourceType",
                "username"
            ]
        },
        "airbyte:index/SourceKlaviyoConfiguration:SourceKlaviyoConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceKustomerSingerConfiguration:SourceKustomerSingerConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceKyveConfiguration:SourceKyveConfiguration": {
            "properties": {
                "maxPages": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "poolIds": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startIds": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "poolIds",
                "sourceType",
                "startIds"
            ]
        },
        "airbyte:index/SourceLaunchdarklyConfiguration:SourceLaunchdarklyConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceLemlistConfiguration:SourceLemlistConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceLeverHiringConfiguration:SourceLeverHiringConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfigurationCredentials:SourceLeverHiringConfigurationCredentials"
                },
                "environment": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceLeverHiringConfigurationCredentials:SourceLeverHiringConfigurationCredentials": {
            "properties": {
                "sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey:SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey"
                },
                "sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth:SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth"
                },
                "sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey:SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey"
                },
                "sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth:SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey:SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth:SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "refreshToken"
            ]
        },
        "airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey:SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth:SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "refreshToken"
            ]
        },
        "airbyte:index/SourceLinkedinAdsConfiguration:SourceLinkedinAdsConfiguration": {
            "properties": {
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "adAnalyticsReports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfigurationAdAnalyticsReport:SourceLinkedinAdsConfigurationAdAnalyticsReport"
                    }
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfigurationCredentials:SourceLinkedinAdsConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceLinkedinAdsConfigurationAdAnalyticsReport:SourceLinkedinAdsConfigurationAdAnalyticsReport": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "pivotBy": {
                    "type": "string"
                },
                "timeGranularity": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "pivotBy",
                "timeGranularity"
            ]
        },
        "airbyte:index/SourceLinkedinAdsConfigurationCredentials:SourceLinkedinAdsConfigurationCredentials": {
            "properties": {
                "sourceLinkedinAdsAuthenticationAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken"
                },
                "sourceLinkedinAdsAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20"
                },
                "sourceLinkedinAdsUpdateAuthenticationAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken"
                },
                "sourceLinkedinAdsUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceLinkedinPagesConfiguration:SourceLinkedinPagesConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfigurationCredentials:SourceLinkedinPagesConfigurationCredentials"
                },
                "orgId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "orgId",
                "sourceType"
            ]
        },
        "airbyte:index/SourceLinkedinPagesConfigurationCredentials:SourceLinkedinPagesConfigurationCredentials": {
            "properties": {
                "sourceLinkedinPagesAuthenticationAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken"
                },
                "sourceLinkedinPagesAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20"
                },
                "sourceLinkedinPagesUpdateAuthenticationAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken"
                },
                "sourceLinkedinPagesUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceLinnworksConfiguration:SourceLinnworksConfiguration": {
            "properties": {
                "applicationId": {
                    "type": "string"
                },
                "applicationSecret": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "applicationId",
                "applicationSecret",
                "sourceType",
                "startDate",
                "token"
            ]
        },
        "airbyte:index/SourceLokaliseConfiguration:SourceLokaliseConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "projectId",
                "sourceType"
            ]
        },
        "airbyte:index/SourceMailchimpConfiguration:SourceMailchimpConfiguration": {
            "properties": {
                "campaignId": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfigurationCredentials:SourceMailchimpConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "airbyte:index/SourceMailchimpConfigurationCredentials:SourceMailchimpConfigurationCredentials": {
            "properties": {
                "sourceMailchimpAuthenticationApiKey": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey:SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey"
                },
                "sourceMailchimpAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20:SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20"
                },
                "sourceMailchimpUpdateAuthenticationApiKey": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey:SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey"
                },
                "sourceMailchimpUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20:SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey:SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey": {
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apikey",
                "authType"
            ]
        },
        "airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20:SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ]
        },
        "airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey:SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey": {
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apikey",
                "authType"
            ]
        },
        "airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20:SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ]
        },
        "airbyte:index/SourceMailgunConfiguration:SourceMailgunConfiguration": {
            "properties": {
                "domainRegion": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "privateKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceMailjetSmsConfiguration:SourceMailjetSmsConfiguration": {
            "properties": {
                "endDate": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "token"
            ]
        },
        "airbyte:index/SourceMarketoConfiguration:SourceMarketoConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "domainUrl": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "domainUrl",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceMetabaseConfiguration:SourceMetabaseConfiguration": {
            "properties": {
                "instanceApiUrl": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "sessionToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "instanceApiUrl",
                "sourceType"
            ]
        },
        "airbyte:index/SourceMicrosoftTeamsConfiguration:SourceMicrosoftTeamsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfigurationCredentials:SourceMicrosoftTeamsConfigurationCredentials"
                },
                "period": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "period",
                "sourceType"
            ]
        },
        "airbyte:index/SourceMicrosoftTeamsConfigurationCredentials:SourceMicrosoftTeamsConfigurationCredentials": {
            "properties": {
                "sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft"
                },
                "sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20"
                },
                "sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft"
                },
                "sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "tenantId"
            ]
        },
        "airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken",
                "tenantId"
            ]
        },
        "airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "tenantId"
            ]
        },
        "airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken",
                "tenantId"
            ]
        },
        "airbyte:index/SourceMixpanelConfiguration:SourceMixpanelConfiguration": {
            "properties": {
                "attributionWindow": {
                    "type": "integer"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfigurationCredentials:SourceMixpanelConfigurationCredentials"
                },
                "dateWindowSize": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer"
                },
                "projectTimezone": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "selectPropertiesByDefault": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMixpanelConfigurationCredentials:SourceMixpanelConfigurationCredentials": {
            "properties": {
                "sourceMixpanelAuthenticationWildcardProjectSecret": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret:SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret"
                },
                "sourceMixpanelAuthenticationWildcardServiceAccount": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount:SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount"
                },
                "sourceMixpanelUpdateAuthenticationWildcardProjectSecret": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret:SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret"
                },
                "sourceMixpanelUpdateAuthenticationWildcardServiceAccount": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount:SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret:SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret": {
            "properties": {
                "apiSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiSecret"
            ]
        },
        "airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount:SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "secret",
                "username"
            ]
        },
        "airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret:SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret": {
            "properties": {
                "apiSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiSecret"
            ]
        },
        "airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount:SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "secret",
                "username"
            ]
        },
        "airbyte:index/SourceMondayConfiguration:SourceMondayConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfigurationCredentials:SourceMondayConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "airbyte:index/SourceMondayConfigurationCredentials:SourceMondayConfigurationCredentials": {
            "properties": {
                "sourceMondayAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken:SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken"
                },
                "sourceMondayAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20:SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20"
                },
                "sourceMondayUpdateAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken:SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken"
                },
                "sourceMondayUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20:SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken:SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ]
        },
        "airbyte:index/SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20:SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken:SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ]
        },
        "airbyte:index/SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20:SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceMongodbConfiguration:SourceMongodbConfiguration": {
            "properties": {
                "authSource": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "instanceType": {
                    "$ref": "#/types/airbyte:index/SourceMongodbConfigurationInstanceType:SourceMongodbConfigurationInstanceType"
                },
                "password": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "sourceType"
            ]
        },
        "airbyte:index/SourceMongodbConfigurationInstanceType:SourceMongodbConfigurationInstanceType": {
            "properties": {
                "sourceMongodbMongoDbInstanceTypeMongoDbAtlas": {
                    "$ref": "#/types/airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas:SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas"
                },
                "sourceMongodbMongoDbInstanceTypeReplicaSet": {
                    "$ref": "#/types/airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet:SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet"
                },
                "sourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": {
                    "$ref": "#/types/airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance:SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance"
                },
                "sourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
                    "$ref": "#/types/airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas"
                },
                "sourceMongodbUpdateMongoDbInstanceTypeReplicaSet": {
                    "$ref": "#/types/airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet:SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet"
                },
                "sourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": {
                    "$ref": "#/types/airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance:SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas:SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clusterUrl",
                "instance"
            ]
        },
        "airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet:SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet": {
            "properties": {
                "instance": {
                    "type": "string"
                },
                "replicaSet": {
                    "type": "string"
                },
                "serverAddresses": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "instance",
                "serverAddresses"
            ]
        },
        "airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance:SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "host",
                "instance",
                "port"
            ]
        },
        "airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clusterUrl",
                "instance"
            ]
        },
        "airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet:SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet": {
            "properties": {
                "instance": {
                    "type": "string"
                },
                "replicaSet": {
                    "type": "string"
                },
                "serverAddresses": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "instance",
                "serverAddresses"
            ]
        },
        "airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance:SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "host",
                "instance",
                "port"
            ]
        },
        "airbyte:index/SourceMongodbInternalPocConfiguration:SourceMongodbInternalPocConfiguration": {
            "properties": {
                "authSource": {
                    "type": "string"
                },
                "connectionString": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "replicaSet": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "airbyte:index/SourceMssqlConfiguration:SourceMssqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "replicationMethod": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationReplicationMethod:SourceMssqlConfigurationReplicationMethod"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "sslMethod": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationSslMethod:SourceMssqlConfigurationSslMethod"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationTunnelMethod:SourceMssqlConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "port",
                "sourceType",
                "username"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationReplicationMethod:SourceMssqlConfigurationReplicationMethod": {
            "properties": {
                "sourceMssqlReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc:SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc"
                },
                "sourceMssqlReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard:SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard"
                },
                "sourceMssqlUpdateReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc:SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc"
                },
                "sourceMssqlUpdateReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard:SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc:SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "dataToSync": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "snapshotIsolation": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard:SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc:SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "dataToSync": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "snapshotIsolation": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard:SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationSslMethod:SourceMssqlConfigurationSslMethod": {
            "properties": {
                "sourceMssqlSslMethodEncryptedTrustServerCertificate": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate:SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate"
                },
                "sourceMssqlSslMethodEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate:SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate"
                },
                "sourceMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate:SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate"
                },
                "sourceMssqlUpdateSslMethodEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate:SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate:SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate": {
            "properties": {
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate:SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate": {
            "properties": {
                "hostNameInCertificate": {
                    "type": "string"
                },
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate:SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
            "properties": {
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate:SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate": {
            "properties": {
                "hostNameInCertificate": {
                    "type": "string"
                },
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationTunnelMethod:SourceMssqlConfigurationTunnelMethod": {
            "properties": {
                "sourceMssqlSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel:SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel"
                },
                "sourceMssqlSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication"
                },
                "sourceMssqlSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication"
                },
                "sourceMssqlUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel:SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel"
                },
                "sourceMssqlUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourceMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel:SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel:SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourceMyHoursConfiguration:SourceMyHoursConfiguration": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "logsBatchSize": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "email",
                "password",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceMysqlConfiguration:SourceMysqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "replicationMethod": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationReplicationMethod:SourceMysqlConfigurationReplicationMethod"
                },
                "sourceType": {
                    "type": "string"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslMode:SourceMysqlConfigurationSslMode"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationTunnelMethod:SourceMysqlConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "port",
                "replicationMethod",
                "sourceType",
                "username"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationReplicationMethod:SourceMysqlConfigurationReplicationMethod": {
            "properties": {
                "sourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc:SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc"
                },
                "sourceMysqlUpdateMethodScanChangesWithUserDefinedCursor": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor:SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor"
                },
                "sourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc:SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc"
                },
                "sourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor:SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc:SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc": {
            "properties": {
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "serverTimeZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor:SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc:SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc": {
            "properties": {
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "serverTimeZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor:SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationSslMode:SourceMysqlConfigurationSslMode": {
            "properties": {
                "sourceMysqlSslModesPreferred": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred:SourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred"
                },
                "sourceMysqlSslModesRequired": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlSslModesRequired:SourceMysqlConfigurationSslModeSourceMysqlSslModesRequired"
                },
                "sourceMysqlSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa:SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa"
                },
                "sourceMysqlSslModesVerifyIdentity": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity:SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity"
                },
                "sourceMysqlUpdateSslModesPreferred": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred:SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred"
                },
                "sourceMysqlUpdateSslModesRequired": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired:SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired"
                },
                "sourceMysqlUpdateSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa:SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa"
                },
                "sourceMysqlUpdateSslModesVerifyIdentity": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity:SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred:SourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlSslModesRequired:SourceMysqlConfigurationSslModeSourceMysqlSslModesRequired": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa:SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity:SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred:SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired:SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa:SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity:SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationTunnelMethod:SourceMysqlConfigurationTunnelMethod": {
            "properties": {
                "sourceMysqlSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel:SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel"
                },
                "sourceMysqlSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication"
                },
                "sourceMysqlSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication"
                },
                "sourceMysqlUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel:SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel"
                },
                "sourceMysqlUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourceMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel:SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel:SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourceNetsuiteConfiguration:SourceNetsuiteConfiguration": {
            "properties": {
                "consumerKey": {
                    "type": "string"
                },
                "consumerSecret": {
                    "type": "string"
                },
                "objectTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "realm": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDatetime": {
                    "type": "string"
                },
                "tokenKey": {
                    "type": "string"
                },
                "tokenSecret": {
                    "type": "string"
                },
                "windowInDays": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "consumerKey",
                "consumerSecret",
                "realm",
                "sourceType",
                "startDatetime",
                "tokenKey",
                "tokenSecret"
            ]
        },
        "airbyte:index/SourceNotionConfiguration:SourceNotionConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfigurationCredentials:SourceNotionConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceNotionConfigurationCredentials:SourceNotionConfigurationCredentials": {
            "properties": {
                "sourceNotionAuthenticateUsingAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken:SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken"
                },
                "sourceNotionAuthenticateUsingOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20:SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20"
                },
                "sourceNotionUpdateAuthenticateUsingAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken:SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken"
                },
                "sourceNotionUpdateAuthenticateUsingOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20:SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken:SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "token"
            ]
        },
        "airbyte:index/SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20:SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken:SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "token"
            ]
        },
        "airbyte:index/SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20:SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceNytimesConfiguration:SourceNytimesConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "shareType": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "period",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceOktaConfiguration:SourceOktaConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfigurationCredentials:SourceOktaConfigurationCredentials"
                },
                "domain": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "airbyte:index/SourceOktaConfigurationCredentials:SourceOktaConfigurationCredentials": {
            "properties": {
                "sourceOktaAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken:SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken"
                },
                "sourceOktaAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20:SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20"
                },
                "sourceOktaUpdateAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken:SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken"
                },
                "sourceOktaUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20:SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken:SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ]
        },
        "airbyte:index/SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20:SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken:SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ]
        },
        "airbyte:index/SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20:SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceOmnisendConfiguration:SourceOmnisendConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceOnesignalConfiguration:SourceOnesignalConfiguration": {
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceOnesignalConfigurationApplication:SourceOnesignalConfigurationApplication"
                    }
                },
                "outcomeNames": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "userAuthKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "applications",
                "outcomeNames",
                "sourceType",
                "startDate",
                "userAuthKey"
            ]
        },
        "airbyte:index/SourceOnesignalConfigurationApplication:SourceOnesignalConfigurationApplication": {
            "properties": {
                "appApiKey": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "appApiKey",
                "appId"
            ]
        },
        "airbyte:index/SourceOpenweatherConfiguration:SourceOpenweatherConfiguration": {
            "properties": {
                "appid": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "lat": {
                    "type": "string"
                },
                "lon": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "units": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "appid",
                "lat",
                "lon",
                "sourceType"
            ]
        },
        "airbyte:index/SourceOracleConfiguration:SourceOracleConfiguration": {
            "properties": {
                "connectionData": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationConnectionData:SourceOracleConfigurationConnectionData"
                },
                "encryption": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationEncryption:SourceOracleConfigurationEncryption"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationTunnelMethod:SourceOracleConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryption",
                "host",
                "port",
                "sourceType",
                "username"
            ]
        },
        "airbyte:index/SourceOracleConfigurationConnectionData:SourceOracleConfigurationConnectionData": {
            "properties": {
                "sourceOracleConnectByServiceName": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName:SourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName"
                },
                "sourceOracleConnectBySystemIdSid": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid:SourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid"
                },
                "sourceOracleUpdateConnectByServiceName": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName:SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName"
                },
                "sourceOracleUpdateConnectBySystemIdSid": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid:SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName:SourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName": {
            "properties": {
                "connectionType": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid:SourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid": {
            "properties": {
                "connectionType": {
                    "type": "string"
                },
                "sid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sid"
            ]
        },
        "airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName:SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName": {
            "properties": {
                "connectionType": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid:SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid": {
            "properties": {
                "connectionType": {
                    "type": "string"
                },
                "sid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sid"
            ]
        },
        "airbyte:index/SourceOracleConfigurationEncryption:SourceOracleConfigurationEncryption": {
            "properties": {
                "sourceOracleEncryptionNativeNetworkEncryptionNne": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne:SourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne"
                },
                "sourceOracleEncryptionTlsEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate:SourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate"
                },
                "sourceOracleUpdateEncryptionNativeNetworkEncryptionNne": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne:SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne"
                },
                "sourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate:SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne:SourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne": {
            "properties": {
                "encryptionAlgorithm": {
                    "type": "string"
                },
                "encryptionMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionMethod"
            ]
        },
        "airbyte:index/SourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate:SourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate": {
            "properties": {
                "encryptionMethod": {
                    "type": "string"
                },
                "sslCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionMethod",
                "sslCertificate"
            ]
        },
        "airbyte:index/SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne:SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne": {
            "properties": {
                "encryptionAlgorithm": {
                    "type": "string"
                },
                "encryptionMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionMethod"
            ]
        },
        "airbyte:index/SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate:SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate": {
            "properties": {
                "encryptionMethod": {
                    "type": "string"
                },
                "sslCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionMethod",
                "sslCertificate"
            ]
        },
        "airbyte:index/SourceOracleConfigurationTunnelMethod:SourceOracleConfigurationTunnelMethod": {
            "properties": {
                "sourceOracleSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel:SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel"
                },
                "sourceOracleSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication"
                },
                "sourceOracleSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication"
                },
                "sourceOracleUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel:SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel"
                },
                "sourceOracleUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourceOracleUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel:SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel:SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourceOrbConfiguration:SourceOrbConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "lookbackWindowDays": {
                    "type": "integer"
                },
                "numericEventPropertiesKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "planId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "stringEventPropertiesKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subscriptionUsageGroupingKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceOrbitConfiguration:SourceOrbitConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "sourceType",
                "workspace"
            ]
        },
        "airbyte:index/SourceOutbrainAmplifyConfiguration:SourceOutbrainAmplifyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfigurationCredentials:SourceOutbrainAmplifyConfigurationCredentials"
                },
                "endDate": {
                    "type": "string"
                },
                "geoLocationBreakdown": {
                    "type": "string"
                },
                "reportGranularity": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceOutbrainAmplifyConfigurationCredentials:SourceOutbrainAmplifyConfigurationCredentials": {
            "properties": {
                "sourceOutbrainAmplifyAuthenticationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken:SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken"
                },
                "sourceOutbrainAmplifyAuthenticationMethodUsernamePassword": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword:SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword"
                },
                "sourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken:SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken"
                },
                "sourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword:SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken:SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "type"
            ]
        },
        "airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword:SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "type",
                "username"
            ]
        },
        "airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken:SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "type"
            ]
        },
        "airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword:SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "type",
                "username"
            ]
        },
        "airbyte:index/SourceOutreachConfiguration:SourceOutreachConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "redirectUri": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "redirectUri",
                "refreshToken",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourcePaypalTransactionConfiguration:SourcePaypalTransactionConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "isSandbox": {
                    "type": "boolean"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "isSandbox",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourcePaystackConfiguration:SourcePaystackConfiguration": {
            "properties": {
                "lookbackWindowDays": {
                    "type": "integer"
                },
                "secretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "secretKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourcePendoConfiguration:SourcePendoConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourcePersistiqConfiguration:SourcePersistiqConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourcePexelsApiConfiguration:SourcePexelsApiConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "orientation": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "query",
                "sourceType"
            ]
        },
        "airbyte:index/SourcePinterestConfiguration:SourcePinterestConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourcePinterestConfigurationCredentials:SourcePinterestConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourcePinterestConfigurationCredentials:SourcePinterestConfigurationCredentials": {
            "properties": {
                "sourcePinterestAuthorizationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken:SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken"
                },
                "sourcePinterestAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20:SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20"
                },
                "sourcePinterestUpdateAuthorizationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken:SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken"
                },
                "sourcePinterestUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20:SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken:SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod"
            ]
        },
        "airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20:SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "refreshToken"
            ]
        },
        "airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken:SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod"
            ]
        },
        "airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20:SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "refreshToken"
            ]
        },
        "airbyte:index/SourcePipedriveConfiguration:SourcePipedriveConfiguration": {
            "properties": {
                "authorization": {
                    "$ref": "#/types/airbyte:index/SourcePipedriveConfigurationAuthorization:SourcePipedriveConfigurationAuthorization"
                },
                "replicationStartDate": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "replicationStartDate",
                "sourceType"
            ]
        },
        "airbyte:index/SourcePipedriveConfigurationAuthorization:SourcePipedriveConfigurationAuthorization": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ]
        },
        "airbyte:index/SourcePocketConfiguration:SourcePocketConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "consumerKey": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "detailType": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "favorite": {
                    "type": "boolean"
                },
                "search": {
                    "type": "string"
                },
                "since": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "consumerKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourcePokeapiConfiguration:SourcePokeapiConfiguration": {
            "properties": {
                "pokemonName": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "pokemonName",
                "sourceType"
            ]
        },
        "airbyte:index/SourcePolygonStockApiConfiguration:SourcePolygonStockApiConfiguration": {
            "properties": {
                "adjusted": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "multiplier": {
                    "type": "integer"
                },
                "sort": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "stocksTicker": {
                    "type": "string"
                },
                "timespan": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "endDate",
                "multiplier",
                "sourceType",
                "startDate",
                "stocksTicker",
                "timespan"
            ]
        },
        "airbyte:index/SourcePostgresConfiguration:SourcePostgresConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "replicationMethod": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationReplicationMethod:SourcePostgresConfigurationReplicationMethod"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslMode:SourcePostgresConfigurationSslMode"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationTunnelMethod:SourcePostgresConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "port",
                "sourceType",
                "username"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationReplicationMethod:SourcePostgresConfigurationReplicationMethod": {
            "properties": {
                "sourcePostgresReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc:SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc"
                },
                "sourcePostgresReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard:SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard"
                },
                "sourcePostgresReplicationMethodStandardXmin": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin:SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin"
                },
                "sourcePostgresUpdateReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc:SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc"
                },
                "sourcePostgresUpdateReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard:SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard"
                },
                "sourcePostgresUpdateReplicationMethodStandardXmin": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin:SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc:SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "lsnCommitBehaviour": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                },
                "publication": {
                    "type": "string"
                },
                "queueSize": {
                    "type": "integer"
                },
                "replicationSlot": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method",
                "publication",
                "replicationSlot"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard:SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin:SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc:SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "lsnCommitBehaviour": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                },
                "publication": {
                    "type": "string"
                },
                "queueSize": {
                    "type": "integer"
                },
                "replicationSlot": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method",
                "publication",
                "replicationSlot"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard:SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin:SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslMode:SourcePostgresConfigurationSslMode": {
            "properties": {
                "sourcePostgresSslModesAllow": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesAllow:SourcePostgresConfigurationSslModeSourcePostgresSslModesAllow"
                },
                "sourcePostgresSslModesDisable": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesDisable:SourcePostgresConfigurationSslModeSourcePostgresSslModesDisable"
                },
                "sourcePostgresSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer:SourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer"
                },
                "sourcePostgresSslModesRequire": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesRequire:SourcePostgresConfigurationSslModeSourcePostgresSslModesRequire"
                },
                "sourcePostgresSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa:SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa"
                },
                "sourcePostgresSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull:SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull"
                },
                "sourcePostgresUpdateSslModesAllow": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow"
                },
                "sourcePostgresUpdateSslModesDisable": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable"
                },
                "sourcePostgresUpdateSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer"
                },
                "sourcePostgresUpdateSslModesRequire": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire"
                },
                "sourcePostgresUpdateSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa"
                },
                "sourcePostgresUpdateSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesAllow:SourcePostgresConfigurationSslModeSourcePostgresSslModesAllow": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesDisable:SourcePostgresConfigurationSslModeSourcePostgresSslModesDisable": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer:SourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesRequire:SourcePostgresConfigurationSslModeSourcePostgresSslModesRequire": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa:SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull:SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "mode"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationTunnelMethod:SourcePostgresConfigurationTunnelMethod": {
            "properties": {
                "sourcePostgresSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel:SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel"
                },
                "sourcePostgresSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication"
                },
                "sourcePostgresSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication"
                },
                "sourcePostgresUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel:SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel"
                },
                "sourcePostgresUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourcePostgresUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel:SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel:SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ]
        },
        "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ]
        },
        "airbyte:index/SourcePosthogConfiguration:SourcePosthogConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "baseUrl": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourcePostmarkappConfiguration:SourcePostmarkappConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "xPostmarkAccountToken": {
                    "type": "string"
                },
                "xPostmarkServerToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "xPostmarkAccountToken",
                "xPostmarkServerToken"
            ]
        },
        "airbyte:index/SourcePrestashopConfiguration:SourcePrestashopConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "sourceType",
                "startDate",
                "url"
            ]
        },
        "airbyte:index/SourcePublicApisConfiguration:SourcePublicApisConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ]
        },
        "airbyte:index/SourcePunkApiConfiguration:SourcePunkApiConfiguration": {
            "properties": {
                "brewedAfter": {
                    "type": "string"
                },
                "brewedBefore": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "brewedAfter",
                "brewedBefore",
                "sourceType"
            ]
        },
        "airbyte:index/SourcePypiConfiguration:SourcePypiConfiguration": {
            "properties": {
                "projectName": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "projectName",
                "sourceType"
            ]
        },
        "airbyte:index/SourceQualarooConfiguration:SourceQualarooConfiguration": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "surveyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "sourceType",
                "startDate",
                "token"
            ]
        },
        "airbyte:index/SourceQuickbooksConfiguration:SourceQuickbooksConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceQuickbooksConfigurationCredentials:SourceQuickbooksConfigurationCredentials"
                },
                "sandbox": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sandbox",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceQuickbooksConfigurationCredentials:SourceQuickbooksConfigurationCredentials": {
            "properties": {
                "sourceQuickbooksAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20:SourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20"
                },
                "sourceQuickbooksUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20:SourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20:SourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "realmId": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "realmId",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20:SourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "realmId": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "realmId",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceRailzConfiguration:SourceRailzConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "secretKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceRechargeConfiguration:SourceRechargeConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceRecreationConfiguration:SourceRecreationConfiguration": {
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "queryCampsites": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apikey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceRecruiteeConfiguration:SourceRecruiteeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "companyId": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "companyId",
                "sourceType"
            ]
        },
        "airbyte:index/SourceRecurlyConfiguration:SourceRecurlyConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "beginTime": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceRedshiftConfiguration:SourceRedshiftConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "password",
                "port",
                "sourceType",
                "username"
            ]
        },
        "airbyte:index/SourceRetentlyConfiguration:SourceRetentlyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfigurationCredentials:SourceRetentlyConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceRetentlyConfigurationCredentials:SourceRetentlyConfigurationCredentials": {
            "properties": {
                "sourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth:SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth"
                },
                "sourceRetentlyAuthenticationMechanismAuthenticateWithApiToken": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken:SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken"
                },
                "sourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth:SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth"
                },
                "sourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken:SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth:SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken:SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth:SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken:SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "airbyte:index/SourceRkiCovidConfiguration:SourceRkiCovidConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceRssConfiguration:SourceRssConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "url"
            ]
        },
        "airbyte:index/SourceS3Configuration:SourceS3Configuration": {
            "properties": {
                "dataset": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormat:SourceS3ConfigurationFormat"
                },
                "pathPattern": {
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationProvider:SourceS3ConfigurationProvider"
                },
                "schema": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataset",
                "pathPattern",
                "provider",
                "sourceType"
            ]
        },
        "airbyte:index/SourceS3ConfigurationFormat:SourceS3ConfigurationFormat": {
            "properties": {
                "sourceS3FileFormatAvro": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatSourceS3FileFormatAvro:SourceS3ConfigurationFormatSourceS3FileFormatAvro"
                },
                "sourceS3FileFormatCsv": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatSourceS3FileFormatCsv:SourceS3ConfigurationFormatSourceS3FileFormatCsv"
                },
                "sourceS3FileFormatJsonl": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatSourceS3FileFormatJsonl:SourceS3ConfigurationFormatSourceS3FileFormatJsonl"
                },
                "sourceS3FileFormatParquet": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatSourceS3FileFormatParquet:SourceS3ConfigurationFormatSourceS3FileFormatParquet"
                },
                "sourceS3UpdateFileFormatAvro": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro:SourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro"
                },
                "sourceS3UpdateFileFormatCsv": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv:SourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv"
                },
                "sourceS3UpdateFileFormatJsonl": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl:SourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl"
                },
                "sourceS3UpdateFileFormatParquet": {
                    "$ref": "#/types/airbyte:index/SourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet:SourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationFormatSourceS3FileFormatAvro:SourceS3ConfigurationFormatSourceS3FileFormatAvro": {
            "properties": {
                "filetype": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationFormatSourceS3FileFormatCsv:SourceS3ConfigurationFormatSourceS3FileFormatCsv": {
            "properties": {
                "additionalReaderOptions": {
                    "type": "string"
                },
                "advancedOptions": {
                    "type": "string"
                },
                "blockSize": {
                    "type": "integer"
                },
                "delimiter": {
                    "type": "string"
                },
                "doubleQuote": {
                    "type": "boolean"
                },
                "encoding": {
                    "type": "string"
                },
                "escapeChar": {
                    "type": "string"
                },
                "filetype": {
                    "type": "string"
                },
                "inferDatatypes": {
                    "type": "boolean"
                },
                "newlinesInValues": {
                    "type": "boolean"
                },
                "quoteChar": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationFormatSourceS3FileFormatJsonl:SourceS3ConfigurationFormatSourceS3FileFormatJsonl": {
            "properties": {
                "blockSize": {
                    "type": "integer"
                },
                "filetype": {
                    "type": "string"
                },
                "newlinesInValues": {
                    "type": "boolean"
                },
                "unexpectedFieldBehavior": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationFormatSourceS3FileFormatParquet:SourceS3ConfigurationFormatSourceS3FileFormatParquet": {
            "properties": {
                "batchSize": {
                    "type": "integer"
                },
                "bufferSize": {
                    "type": "integer"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filetype": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro:SourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro": {
            "properties": {
                "filetype": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv:SourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv": {
            "properties": {
                "additionalReaderOptions": {
                    "type": "string"
                },
                "advancedOptions": {
                    "type": "string"
                },
                "blockSize": {
                    "type": "integer"
                },
                "delimiter": {
                    "type": "string"
                },
                "doubleQuote": {
                    "type": "boolean"
                },
                "encoding": {
                    "type": "string"
                },
                "escapeChar": {
                    "type": "string"
                },
                "filetype": {
                    "type": "string"
                },
                "inferDatatypes": {
                    "type": "boolean"
                },
                "newlinesInValues": {
                    "type": "boolean"
                },
                "quoteChar": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl:SourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl": {
            "properties": {
                "blockSize": {
                    "type": "integer"
                },
                "filetype": {
                    "type": "string"
                },
                "newlinesInValues": {
                    "type": "boolean"
                },
                "unexpectedFieldBehavior": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet:SourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet": {
            "properties": {
                "batchSize": {
                    "type": "integer"
                },
                "bufferSize": {
                    "type": "integer"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filetype": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceS3ConfigurationProvider:SourceS3ConfigurationProvider": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string"
                },
                "awsSecretAccessKey": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "pathPrefix": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bucket"
            ]
        },
        "airbyte:index/SourceSalesforceConfiguration:SourceSalesforceConfiguration": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "forceUseBulkApi": {
                    "type": "boolean"
                },
                "isSandbox": {
                    "type": "boolean"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "streamsCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/SourceSalesforceConfigurationStreamsCriteria:SourceSalesforceConfigurationStreamsCriteria"
                    }
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceSalesforceConfigurationStreamsCriteria:SourceSalesforceConfigurationStreamsCriteria": {
            "properties": {
                "criteria": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "criteria",
                "value"
            ]
        },
        "airbyte:index/SourceSalesloftConfiguration:SourceSalesloftConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfigurationCredentials:SourceSalesloftConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceSalesloftConfigurationCredentials:SourceSalesloftConfigurationCredentials": {
            "properties": {
                "sourceSalesloftCredentialsAuthenticateViaApiKey": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey:SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey"
                },
                "sourceSalesloftCredentialsAuthenticateViaOAuth": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth:SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth"
                },
                "sourceSalesloftUpdateCredentialsAuthenticateViaApiKey": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey:SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey"
                },
                "sourceSalesloftUpdateCredentialsAuthenticateViaOAuth": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth:SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey:SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ]
        },
        "airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth:SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey:SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ]
        },
        "airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth:SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceSapFieldglassConfiguration:SourceSapFieldglassConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceSecodaConfiguration:SourceSecodaConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceSendgridConfiguration:SourceSendgridConfiguration": {
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apikey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceSendinblueConfiguration:SourceSendinblueConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceSenseforceConfiguration:SourceSenseforceConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "backendUrl": {
                    "type": "string"
                },
                "datasetId": {
                    "type": "string"
                },
                "sliceRange": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "backendUrl",
                "datasetId",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceSentryConfiguration:SourceSentryConfiguration": {
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "discoverFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "organization",
                "project",
                "sourceType"
            ]
        },
        "airbyte:index/SourceSftpBulkConfiguration:SourceSftpBulkConfiguration": {
            "properties": {
                "fileMostRecent": {
                    "type": "boolean"
                },
                "filePattern": {
                    "type": "string"
                },
                "fileType": {
                    "type": "string"
                },
                "folderPath": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "privateKey": {
                    "type": "string"
                },
                "separator": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "streamName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "folderPath",
                "host",
                "port",
                "sourceType",
                "startDate",
                "streamName",
                "username"
            ]
        },
        "airbyte:index/SourceSftpConfiguration:SourceSftpConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfigurationCredentials:SourceSftpConfigurationCredentials"
                },
                "filePattern": {
                    "type": "string"
                },
                "fileTypes": {
                    "type": "string"
                },
                "folderPath": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port",
                "sourceType",
                "user"
            ]
        },
        "airbyte:index/SourceSftpConfigurationCredentials:SourceSftpConfigurationCredentials": {
            "properties": {
                "sourceSftpAuthenticationWildcardPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication:SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication"
                },
                "sourceSftpAuthenticationWildcardSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication:SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication"
                },
                "sourceSftpUpdateAuthenticationWildcardPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication:SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication"
                },
                "sourceSftpUpdateAuthenticationWildcardSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication:SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication:SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "authUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "authUserPassword"
            ]
        },
        "airbyte:index/SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication:SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "authSshKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "authSshKey"
            ]
        },
        "airbyte:index/SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication:SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "authUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "authUserPassword"
            ]
        },
        "airbyte:index/SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication:SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "authSshKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "authSshKey"
            ]
        },
        "airbyte:index/SourceShopifyConfiguration:SourceShopifyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfigurationCredentials:SourceShopifyConfigurationCredentials"
                },
                "shop": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "shop",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceShopifyConfigurationCredentials:SourceShopifyConfigurationCredentials": {
            "properties": {
                "sourceShopifyShopifyAuthorizationMethodApiPassword": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword:SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword"
                },
                "sourceShopifyShopifyAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20:SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20"
                },
                "sourceShopifyUpdateShopifyAuthorizationMethodApiPassword": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword:SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword"
                },
                "sourceShopifyUpdateShopifyAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20:SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword:SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword": {
            "properties": {
                "apiPassword": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiPassword",
                "authMethod"
            ]
        },
        "airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20:SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod"
            ]
        },
        "airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword:SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword": {
            "properties": {
                "apiPassword": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiPassword",
                "authMethod"
            ]
        },
        "airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20:SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod"
            ]
        },
        "airbyte:index/SourceShortioConfiguration:SourceShortioConfiguration": {
            "properties": {
                "domainId": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "domainId",
                "secretKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceSlackConfiguration:SourceSlackConfiguration": {
            "properties": {
                "channelFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfigurationCredentials:SourceSlackConfigurationCredentials"
                },
                "joinChannels": {
                    "type": "boolean"
                },
                "lookbackWindow": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "joinChannels",
                "lookbackWindow",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceSlackConfigurationCredentials:SourceSlackConfigurationCredentials": {
            "properties": {
                "sourceSlackAuthenticationMechanismApiToken": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken:SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken"
                },
                "sourceSlackAuthenticationMechanismSignInViaSlackOAuth": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth:SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth"
                },
                "sourceSlackUpdateAuthenticationMechanismApiToken": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken:SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken"
                },
                "sourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth:SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken:SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "optionTitle"
            ]
        },
        "airbyte:index/SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth:SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "optionTitle"
            ]
        },
        "airbyte:index/SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken:SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "optionTitle"
            ]
        },
        "airbyte:index/SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth:SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "optionTitle"
            ]
        },
        "airbyte:index/SourceSmailyConfiguration:SourceSmailyConfiguration": {
            "properties": {
                "apiPassword": {
                    "type": "string"
                },
                "apiSubdomain": {
                    "type": "string"
                },
                "apiUsername": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiPassword",
                "apiSubdomain",
                "apiUsername",
                "sourceType"
            ]
        },
        "airbyte:index/SourceSmartengageConfiguration:SourceSmartengageConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ]
        },
        "airbyte:index/SourceSmartsheetsConfiguration:SourceSmartsheetsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfigurationCredentials:SourceSmartsheetsConfigurationCredentials"
                },
                "metadataFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "spreadsheetId": {
                    "type": "string"
                },
                "startDatetime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "spreadsheetId"
            ]
        },
        "airbyte:index/SourceSmartsheetsConfigurationCredentials:SourceSmartsheetsConfigurationCredentials": {
            "properties": {
                "sourceSmartsheetsAuthorizationMethodApiAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken"
                },
                "sourceSmartsheetsAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20"
                },
                "sourceSmartsheetsUpdateAuthorizationMethodApiAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken"
                },
                "sourceSmartsheetsUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceSnapchatMarketingConfiguration:SourceSnapchatMarketingConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceSnowflakeConfiguration:SourceSnowflakeConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfigurationCredentials:SourceSnowflakeConfigurationCredentials"
                },
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "warehouse": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "role",
                "sourceType",
                "warehouse"
            ]
        },
        "airbyte:index/SourceSnowflakeConfigurationCredentials:SourceSnowflakeConfigurationCredentials": {
            "properties": {
                "sourceSnowflakeAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20:SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20"
                },
                "sourceSnowflakeAuthorizationMethodUsernameAndPassword": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword:SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword"
                },
                "sourceSnowflakeUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20:SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20"
                },
                "sourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword:SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20:SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword:SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "password",
                "username"
            ]
        },
        "airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20:SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword:SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "password",
                "username"
            ]
        },
        "airbyte:index/SourceSonarCloudConfiguration:SourceSonarCloudConfiguration": {
            "properties": {
                "componentKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endDate": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "userToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "componentKeys",
                "organization",
                "sourceType",
                "userToken"
            ]
        },
        "airbyte:index/SourceSpaceXApiConfiguration:SourceSpaceXApiConfiguration": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "options": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSquareConfiguration:SourceSquareConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfigurationCredentials:SourceSquareConfigurationCredentials"
                },
                "includeDeletedObjects": {
                    "type": "boolean"
                },
                "isSandbox": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "isSandbox",
                "sourceType"
            ]
        },
        "airbyte:index/SourceSquareConfigurationCredentials:SourceSquareConfigurationCredentials": {
            "properties": {
                "sourceSquareAuthenticationApiKey": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey:SourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey"
                },
                "sourceSquareAuthenticationOauthAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication:SourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication"
                },
                "sourceSquareUpdateAuthenticationApiKey": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey:SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey"
                },
                "sourceSquareUpdateAuthenticationOauthAuthentication": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication:SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey:SourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ]
        },
        "airbyte:index/SourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication:SourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey:SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ]
        },
        "airbyte:index/SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication:SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceStravaConfiguration:SourceStravaConfiguration": {
            "properties": {
                "athleteId": {
                    "type": "integer"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "athleteId",
                "clientId",
                "clientSecret",
                "refreshToken",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceStripeConfiguration:SourceStripeConfiguration": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "lookbackWindowDays": {
                    "type": "integer"
                },
                "sliceRange": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clientSecret",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceSurveySparrowConfiguration:SourceSurveySparrowConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "region": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfigurationRegion:SourceSurveySparrowConfigurationRegion"
                },
                "sourceType": {
                    "type": "string"
                },
                "surveyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceSurveySparrowConfigurationRegion:SourceSurveySparrowConfigurationRegion": {
            "properties": {
                "sourceSurveySparrowBaseUrlEuBasedAccount": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount"
                },
                "sourceSurveySparrowBaseUrlGlobalAccount": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount"
                },
                "sourceSurveySparrowUpdateBaseUrlEuBasedAccount": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount"
                },
                "sourceSurveySparrowUpdateBaseUrlGlobalAccount": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount": {
            "properties": {
                "urlBase": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount": {
            "properties": {
                "urlBase": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount": {
            "properties": {
                "urlBase": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount": {
            "properties": {
                "urlBase": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceSurveymonkeyConfiguration:SourceSurveymonkeyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceSurveymonkeyConfigurationCredentials:SourceSurveymonkeyConfigurationCredentials"
                },
                "origin": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "surveyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceSurveymonkeyConfigurationCredentials:SourceSurveymonkeyConfigurationCredentials": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod"
            ]
        },
        "airbyte:index/SourceTempoConfiguration:SourceTempoConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceTheGuardianApiConfiguration:SourceTheGuardianApiConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "section": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceTiktokMarketingConfiguration:SourceTiktokMarketingConfiguration": {
            "properties": {
                "attributionWindow": {
                    "type": "integer"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfigurationCredentials:SourceTiktokMarketingConfigurationCredentials"
                },
                "endDate": {
                    "type": "string"
                },
                "includeDeleted": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceTiktokMarketingConfigurationCredentials:SourceTiktokMarketingConfigurationCredentials": {
            "properties": {
                "sourceTiktokMarketingAuthenticationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20"
                },
                "sourceTiktokMarketingAuthenticationMethodSandboxAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken"
                },
                "sourceTiktokMarketingUpdateAuthenticationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20"
                },
                "sourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "advertiserId": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "appId",
                "secret"
            ]
        },
        "airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "advertiserId": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "advertiserId"
            ]
        },
        "airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "advertiserId": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "appId",
                "secret"
            ]
        },
        "airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "advertiserId": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "advertiserId"
            ]
        },
        "airbyte:index/SourceTodoistConfiguration:SourceTodoistConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "token"
            ]
        },
        "airbyte:index/SourceTrelloConfiguration:SourceTrelloConfiguration": {
            "properties": {
                "boardIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "sourceType",
                "startDate",
                "token"
            ]
        },
        "airbyte:index/SourceTrustpilotConfiguration:SourceTrustpilotConfiguration": {
            "properties": {
                "businessUnits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfigurationCredentials:SourceTrustpilotConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "businessUnits",
                "credentials",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceTrustpilotConfigurationCredentials:SourceTrustpilotConfigurationCredentials": {
            "properties": {
                "sourceTrustpilotAuthorizationMethodApiKey": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey:SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey"
                },
                "sourceTrustpilotAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20:SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20"
                },
                "sourceTrustpilotUpdateAuthorizationMethodApiKey": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey:SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey"
                },
                "sourceTrustpilotUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20:SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey:SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId"
            ]
        },
        "airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20:SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey:SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId"
            ]
        },
        "airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20:SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceTvmazeScheduleConfiguration:SourceTvmazeScheduleConfiguration": {
            "properties": {
                "domesticScheduleCountryCode": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "webScheduleCountryCode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "domesticScheduleCountryCode",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceTwilioConfiguration:SourceTwilioConfiguration": {
            "properties": {
                "accountSid": {
                    "type": "string"
                },
                "authToken": {
                    "type": "string"
                },
                "lookbackWindow": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountSid",
                "authToken",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceTwilioTaskrouterConfiguration:SourceTwilioTaskrouterConfiguration": {
            "properties": {
                "accountSid": {
                    "type": "string"
                },
                "authToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountSid",
                "authToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceTwitterConfiguration:SourceTwitterConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "query",
                "sourceType"
            ]
        },
        "airbyte:index/SourceTypeformConfiguration:SourceTypeformConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfigurationCredentials:SourceTypeformConfigurationCredentials"
                },
                "formIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType"
            ]
        },
        "airbyte:index/SourceTypeformConfigurationCredentials:SourceTypeformConfigurationCredentials": {
            "properties": {
                "sourceTypeformAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20:SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20"
                },
                "sourceTypeformAuthorizationMethodPrivateToken": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken:SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken"
                },
                "sourceTypeformUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20:SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20"
                },
                "sourceTypeformUpdateAuthorizationMethodPrivateToken": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken:SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20:SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken:SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20:SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken:SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceUsCensusConfiguration:SourceUsCensusConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "queryParams": {
                    "type": "string"
                },
                "queryPath": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "queryPath",
                "sourceType"
            ]
        },
        "airbyte:index/SourceVantageConfiguration:SourceVantageConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceWebflowConfiguration:SourceWebflowConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "siteId",
                "sourceType"
            ]
        },
        "airbyte:index/SourceWhiskyHunterConfiguration:SourceWhiskyHunterConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceWikipediaPageviewsConfiguration:SourceWikipediaPageviewsConfiguration": {
            "properties": {
                "access": {
                    "type": "string"
                },
                "agent": {
                    "type": "string"
                },
                "article": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "access",
                "agent",
                "article",
                "country",
                "end",
                "project",
                "sourceType",
                "start"
            ]
        },
        "airbyte:index/SourceWoocommerceConfiguration:SourceWoocommerceConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "apiSecret": {
                    "type": "string"
                },
                "shop": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "apiSecret",
                "shop",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceXeroConfiguration:SourceXeroConfiguration": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/airbyte:index/SourceXeroConfigurationAuthentication:SourceXeroConfigurationAuthentication"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "sourceType",
                "startDate",
                "tenantId"
            ]
        },
        "airbyte:index/SourceXeroConfigurationAuthentication:SourceXeroConfigurationAuthentication": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ]
        },
        "airbyte:index/SourceXkcdConfiguration:SourceXkcdConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceYandexMetricaConfiguration:SourceYandexMetricaConfiguration": {
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "counterId": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "counterId",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceYotpoConfiguration:SourceYotpoConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "appKey": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "appKey",
                "email",
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceYouniumConfiguration:SourceYouniumConfiguration": {
            "properties": {
                "legalEntity": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "playground": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "legalEntity",
                "password",
                "sourceType",
                "username"
            ]
        },
        "airbyte:index/SourceYoutubeAnalyticsConfiguration:SourceYoutubeAnalyticsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceYoutubeAnalyticsConfigurationCredentials:SourceYoutubeAnalyticsConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType"
            ]
        },
        "airbyte:index/SourceYoutubeAnalyticsConfigurationCredentials:SourceYoutubeAnalyticsConfigurationCredentials": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ]
        },
        "airbyte:index/SourceZendeskChatConfiguration:SourceZendeskChatConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfigurationCredentials:SourceZendeskChatConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate"
            ]
        },
        "airbyte:index/SourceZendeskChatConfigurationCredentials:SourceZendeskChatConfigurationCredentials": {
            "properties": {
                "sourceZendeskChatAuthorizationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken:SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken"
                },
                "sourceZendeskChatAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20:SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20"
                },
                "sourceZendeskChatUpdateAuthorizationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken:SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken"
                },
                "sourceZendeskChatUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20:SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken:SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "credentials"
            ]
        },
        "airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20:SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ]
        },
        "airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken:SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "credentials"
            ]
        },
        "airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20:SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ]
        },
        "airbyte:index/SourceZendeskSunshineConfiguration:SourceZendeskSunshineConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfigurationCredentials:SourceZendeskSunshineConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate",
                "subdomain"
            ]
        },
        "airbyte:index/SourceZendeskSunshineConfigurationCredentials:SourceZendeskSunshineConfigurationCredentials": {
            "properties": {
                "sourceZendeskSunshineAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken"
                },
                "sourceZendeskSunshineAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20"
                },
                "sourceZendeskSunshineUpdateAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken"
                },
                "sourceZendeskSunshineUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authMethod",
                "email"
            ]
        },
        "airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authMethod",
                "email"
            ]
        },
        "airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod",
                "clientId",
                "clientSecret"
            ]
        },
        "airbyte:index/SourceZendeskSupportConfiguration:SourceZendeskSupportConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfigurationCredentials:SourceZendeskSupportConfigurationCredentials"
                },
                "ignorePagination": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate",
                "subdomain"
            ]
        },
        "airbyte:index/SourceZendeskSupportConfigurationCredentials:SourceZendeskSupportConfigurationCredentials": {
            "properties": {
                "sourceZendeskSupportAuthenticationApiToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken"
                },
                "sourceZendeskSupportAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20"
                },
                "sourceZendeskSupportUpdateAuthenticationApiToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken"
                },
                "sourceZendeskSupportUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "email"
            ]
        },
        "airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "email"
            ]
        },
        "airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceZendeskTalkConfiguration:SourceZendeskTalkConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfigurationCredentials:SourceZendeskTalkConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate",
                "subdomain"
            ]
        },
        "airbyte:index/SourceZendeskTalkConfigurationCredentials:SourceZendeskTalkConfigurationCredentials": {
            "properties": {
                "sourceZendeskTalkAuthenticationApiToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken"
                },
                "sourceZendeskTalkAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20"
                },
                "sourceZendeskTalkUpdateAuthenticationApiToken": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken"
                },
                "sourceZendeskTalkUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20"
                }
            },
            "type": "object"
        },
        "airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "email"
            ]
        },
        "airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "email"
            ]
        },
        "airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken"
            ]
        },
        "airbyte:index/SourceZenloopConfiguration:SourceZenloopConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "surveyGroupId": {
                    "type": "string"
                },
                "surveyId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceZohoCrmConfiguration:SourceZohoCrmConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "dcRegion": {
                    "type": "string"
                },
                "edition": {
                    "type": "string"
                },
                "environment": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDatetime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "dcRegion",
                "edition",
                "environment",
                "refreshToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceZoomConfiguration:SourceZoomConfiguration": {
            "properties": {
                "jwtToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "jwtToken",
                "sourceType"
            ]
        },
        "airbyte:index/SourceZuoraConfiguration:SourceZuoraConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "dataQuery": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "tenantEndpoint": {
                    "type": "string"
                },
                "windowInDays": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "dataQuery",
                "sourceType",
                "startDate",
                "tenantEndpoint"
            ]
        },
        "airbyte:index/getConnectionConfigurations:getConnectionConfigurations": {
            "properties": {
                "streams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/getConnectionConfigurationsStream:getConnectionConfigurationsStream"
                    }
                }
            },
            "type": "object",
            "required": [
                "streams"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getConnectionConfigurationsStream:getConnectionConfigurationsStream": {
            "properties": {
                "cursorFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "primaryKeys": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "syncMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cursorFields",
                "name",
                "primaryKeys",
                "syncMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getConnectionSchedule:getConnectionSchedule": {
            "properties": {
                "basicTiming": {
                    "type": "string"
                },
                "cronExpression": {
                    "type": "string"
                },
                "scheduleType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "basicTiming",
                "cronExpression",
                "scheduleType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAWSDatalakeConfiguration:getDestinationAWSDatalakeConfiguration": {
            "properties": {
                "awsAccountId": {
                    "type": "string"
                },
                "bucketName": {
                    "type": "string"
                },
                "bucketPrefix": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getDestinationAWSDatalakeConfigurationCredentials:getDestinationAWSDatalakeConfigurationCredentials"
                },
                "destinationType": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/getDestinationAWSDatalakeConfigurationFormat:getDestinationAWSDatalakeConfigurationFormat"
                },
                "glueCatalogFloatAsDecimal": {
                    "type": "boolean"
                },
                "lakeformationDatabaseDefaultTagKey": {
                    "type": "string"
                },
                "lakeformationDatabaseDefaultTagValues": {
                    "type": "string"
                },
                "lakeformationDatabaseName": {
                    "type": "string"
                },
                "lakeformationGovernedTables": {
                    "type": "boolean"
                },
                "partitioning": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsAccountId",
                "bucketName",
                "bucketPrefix",
                "credentials",
                "destinationType",
                "format",
                "glueCatalogFloatAsDecimal",
                "lakeformationDatabaseDefaultTagKey",
                "lakeformationDatabaseDefaultTagValues",
                "lakeformationDatabaseName",
                "lakeformationGovernedTables",
                "partitioning",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAWSDatalakeConfigurationCredentials:getDestinationAWSDatalakeConfigurationCredentials": {
            "properties": {
                "destinationAwsDatalakeAuthenticationModeIamRole": {
                    "$ref": "#/types/airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole"
                },
                "destinationAwsDatalakeAuthenticationModeIamUser": {
                    "$ref": "#/types/airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser"
                },
                "destinationAwsDatalakeUpdateAuthenticationModeIamRole": {
                    "$ref": "#/types/airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole"
                },
                "destinationAwsDatalakeUpdateAuthenticationModeIamUser": {
                    "$ref": "#/types/airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser"
                }
            },
            "type": "object",
            "required": [
                "destinationAwsDatalakeAuthenticationModeIamRole",
                "destinationAwsDatalakeAuthenticationModeIamUser",
                "destinationAwsDatalakeUpdateAuthenticationModeIamRole",
                "destinationAwsDatalakeUpdateAuthenticationModeIamUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole": {
            "properties": {
                "credentialsTitle": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsTitle",
                "roleArn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string"
                },
                "awsSecretAccessKey": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsAccessKeyId",
                "awsSecretAccessKey",
                "credentialsTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole": {
            "properties": {
                "credentialsTitle": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsTitle",
                "roleArn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string"
                },
                "awsSecretAccessKey": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsAccessKeyId",
                "awsSecretAccessKey",
                "credentialsTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAWSDatalakeConfigurationFormat:getDestinationAWSDatalakeConfigurationFormat": {
            "properties": {
                "destinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson"
                },
                "destinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage"
                },
                "destinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson"
                },
                "destinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage"
                }
            },
            "type": "object",
            "required": [
                "destinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson",
                "destinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage",
                "destinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson",
                "destinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compressionCodec": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage": {
            "properties": {
                "compressionCodec": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compressionCodec": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage": {
            "properties": {
                "compressionCodec": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAzureBlobStorageConfiguration:getDestinationAzureBlobStorageConfiguration": {
            "properties": {
                "azureBlobStorageAccountKey": {
                    "type": "string"
                },
                "azureBlobStorageAccountName": {
                    "type": "string"
                },
                "azureBlobStorageContainerName": {
                    "type": "string"
                },
                "azureBlobStorageEndpointDomainName": {
                    "type": "string"
                },
                "azureBlobStorageOutputBufferSize": {
                    "type": "integer"
                },
                "azureBlobStorageSpillSize": {
                    "type": "integer"
                },
                "destinationType": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/getDestinationAzureBlobStorageConfigurationFormat:getDestinationAzureBlobStorageConfigurationFormat"
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountKey",
                "azureBlobStorageAccountName",
                "azureBlobStorageContainerName",
                "azureBlobStorageEndpointDomainName",
                "azureBlobStorageOutputBufferSize",
                "azureBlobStorageSpillSize",
                "destinationType",
                "format"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAzureBlobStorageConfigurationFormat:getDestinationAzureBlobStorageConfigurationFormat": {
            "properties": {
                "destinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues"
                },
                "destinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues"
                },
                "destinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson"
                }
            },
            "type": "object",
            "required": [
                "destinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues",
                "destinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson",
                "destinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues",
                "destinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "flattening",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "flattening",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryConfiguration:getDestinationBigqueryConfiguration": {
            "properties": {
                "bigQueryClientBufferSizeMb": {
                    "type": "integer"
                },
                "credentialsJson": {
                    "type": "string"
                },
                "datasetId": {
                    "type": "string"
                },
                "datasetLocation": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "loadingMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryConfigurationLoadingMethod:getDestinationBigqueryConfigurationLoadingMethod"
                },
                "projectId": {
                    "type": "string"
                },
                "rawDataDataset": {
                    "type": "string"
                },
                "transformationPriority": {
                    "type": "string"
                },
                "use1s1tFormat": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "bigQueryClientBufferSizeMb",
                "credentialsJson",
                "datasetId",
                "datasetLocation",
                "destinationType",
                "loadingMethod",
                "projectId",
                "rawDataDataset",
                "transformationPriority",
                "use1s1tFormat"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryConfigurationLoadingMethod:getDestinationBigqueryConfigurationLoadingMethod": {
            "properties": {
                "destinationBigqueryLoadingMethodGcsStaging": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging"
                },
                "destinationBigqueryLoadingMethodStandardInserts": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodStandardInserts:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodStandardInserts"
                },
                "destinationBigqueryUpdateLoadingMethodGcsStaging": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging"
                },
                "destinationBigqueryUpdateLoadingMethodStandardInserts": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodStandardInserts:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodStandardInserts"
                }
            },
            "type": "object",
            "required": [
                "destinationBigqueryLoadingMethodGcsStaging",
                "destinationBigqueryLoadingMethodStandardInserts",
                "destinationBigqueryUpdateLoadingMethodGcsStaging",
                "destinationBigqueryUpdateLoadingMethodStandardInserts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "gcsBucketName": {
                    "type": "string"
                },
                "gcsBucketPath": {
                    "type": "string"
                },
                "keepFilesInGcsBucket": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "fileBufferCount",
                "gcsBucketName",
                "gcsBucketPath",
                "keepFilesInGcsBucket",
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential": {
            "properties": {
                "destinationBigqueryLoadingMethodGcsStagingCredentialHmacKey": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey"
                }
            },
            "type": "object",
            "required": [
                "destinationBigqueryLoadingMethodGcsStagingCredentialHmacKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodStandardInserts:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodStandardInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "gcsBucketName": {
                    "type": "string"
                },
                "gcsBucketPath": {
                    "type": "string"
                },
                "keepFilesInGcsBucket": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "fileBufferCount",
                "gcsBucketName",
                "gcsBucketPath",
                "keepFilesInGcsBucket",
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential": {
            "properties": {
                "destinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey"
                }
            },
            "type": "object",
            "required": [
                "destinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodStandardInserts:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodStandardInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryDenormalizedConfiguration:getDestinationBigqueryDenormalizedConfiguration": {
            "properties": {
                "bigQueryClientBufferSizeMb": {
                    "type": "integer"
                },
                "credentialsJson": {
                    "type": "string"
                },
                "datasetId": {
                    "type": "string"
                },
                "datasetLocation": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "loadingMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethod:getDestinationBigqueryDenormalizedConfigurationLoadingMethod"
                },
                "projectId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bigQueryClientBufferSizeMb",
                "credentialsJson",
                "datasetId",
                "datasetLocation",
                "destinationType",
                "loadingMethod",
                "projectId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethod:getDestinationBigqueryDenormalizedConfigurationLoadingMethod": {
            "properties": {
                "destinationBigqueryDenormalizedLoadingMethodGcsStaging": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging"
                },
                "destinationBigqueryDenormalizedLoadingMethodStandardInserts": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodStandardInserts:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodStandardInserts"
                },
                "destinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging"
                },
                "destinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts"
                }
            },
            "type": "object",
            "required": [
                "destinationBigqueryDenormalizedLoadingMethodGcsStaging",
                "destinationBigqueryDenormalizedLoadingMethodStandardInserts",
                "destinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging",
                "destinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "gcsBucketName": {
                    "type": "string"
                },
                "gcsBucketPath": {
                    "type": "string"
                },
                "keepFilesInGcsBucket": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "fileBufferCount",
                "gcsBucketName",
                "gcsBucketPath",
                "keepFilesInGcsBucket",
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential": {
            "properties": {
                "destinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey"
                }
            },
            "type": "object",
            "required": [
                "destinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodStandardInserts:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodStandardInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "gcsBucketName": {
                    "type": "string"
                },
                "gcsBucketPath": {
                    "type": "string"
                },
                "keepFilesInGcsBucket": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "fileBufferCount",
                "gcsBucketName",
                "gcsBucketPath",
                "keepFilesInGcsBucket",
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential": {
            "properties": {
                "destinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey": {
                    "$ref": "#/types/airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey"
                }
            },
            "type": "object",
            "required": [
                "destinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationClickhouseConfiguration:getDestinationClickhouseConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationClickhouseConfigurationTunnelMethod:getDestinationClickhouseConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationClickhouseConfigurationTunnelMethod:getDestinationClickhouseConfigurationTunnelMethod": {
            "properties": {
                "destinationClickhouseSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel"
                },
                "destinationClickhouseSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication"
                },
                "destinationClickhouseSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication"
                },
                "destinationClickhouseUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel"
                },
                "destinationClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "destinationClickhouseSshTunnelMethodNoTunnel",
                "destinationClickhouseSshTunnelMethodPasswordAuthentication",
                "destinationClickhouseSshTunnelMethodSshKeyAuthentication",
                "destinationClickhouseUpdateSshTunnelMethodNoTunnel",
                "destinationClickhouseUpdateSshTunnelMethodPasswordAuthentication",
                "destinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationConvexConfiguration:getDestinationConvexConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "deploymentUrl": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "deploymentUrl",
                "destinationType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationCumulioConfiguration:getDestinationCumulioConfiguration": {
            "properties": {
                "apiHost": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiHost",
                "apiKey",
                "apiToken",
                "destinationType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDatabendConfiguration:getDestinationDatabendConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "table": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "password",
                "port",
                "table",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDatabricksConfiguration:getDestinationDatabricksConfiguration": {
            "properties": {
                "acceptTerms": {
                    "type": "boolean"
                },
                "dataSource": {
                    "$ref": "#/types/airbyte:index/getDestinationDatabricksConfigurationDataSource:getDestinationDatabricksConfigurationDataSource"
                },
                "database": {
                    "type": "string"
                },
                "databricksHttpPath": {
                    "type": "string"
                },
                "databricksPersonalAccessToken": {
                    "type": "string"
                },
                "databricksPort": {
                    "type": "string"
                },
                "databricksServerHostname": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "enableSchemaEvolution": {
                    "type": "boolean"
                },
                "purgeStagingData": {
                    "type": "boolean"
                },
                "schema": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "acceptTerms",
                "dataSource",
                "database",
                "databricksHttpPath",
                "databricksPersonalAccessToken",
                "databricksPort",
                "databricksServerHostname",
                "destinationType",
                "enableSchemaEvolution",
                "purgeStagingData",
                "schema"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDatabricksConfigurationDataSource:getDestinationDatabricksConfigurationDataSource": {
            "properties": {
                "destinationDatabricksDataSourceAmazonS3": {
                    "$ref": "#/types/airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3"
                },
                "destinationDatabricksDataSourceAzureBlobStorage": {
                    "$ref": "#/types/airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage"
                },
                "destinationDatabricksDataSourceRecommendedManagedTables": {
                    "$ref": "#/types/airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables"
                },
                "destinationDatabricksUpdateDataSourceAmazonS3": {
                    "$ref": "#/types/airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3"
                },
                "destinationDatabricksUpdateDataSourceAzureBlobStorage": {
                    "$ref": "#/types/airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage"
                },
                "destinationDatabricksUpdateDataSourceRecommendedManagedTables": {
                    "$ref": "#/types/airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables"
                }
            },
            "type": "object",
            "required": [
                "destinationDatabricksDataSourceAmazonS3",
                "destinationDatabricksDataSourceAzureBlobStorage",
                "destinationDatabricksDataSourceRecommendedManagedTables",
                "destinationDatabricksUpdateDataSourceAmazonS3",
                "destinationDatabricksUpdateDataSourceAzureBlobStorage",
                "destinationDatabricksUpdateDataSourceRecommendedManagedTables"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3": {
            "properties": {
                "dataSourceType": {
                    "type": "string"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "s3AccessKeyId": {
                    "type": "string"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "s3SecretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSourceType",
                "fileNamePattern",
                "s3AccessKeyId",
                "s3BucketName",
                "s3BucketPath",
                "s3BucketRegion",
                "s3SecretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage": {
            "properties": {
                "azureBlobStorageAccountName": {
                    "type": "string"
                },
                "azureBlobStorageContainerName": {
                    "type": "string"
                },
                "azureBlobStorageEndpointDomainName": {
                    "type": "string"
                },
                "azureBlobStorageSasToken": {
                    "type": "string"
                },
                "dataSourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountName",
                "azureBlobStorageContainerName",
                "azureBlobStorageEndpointDomainName",
                "azureBlobStorageSasToken",
                "dataSourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables": {
            "properties": {
                "dataSourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3": {
            "properties": {
                "dataSourceType": {
                    "type": "string"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "s3AccessKeyId": {
                    "type": "string"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "s3SecretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSourceType",
                "fileNamePattern",
                "s3AccessKeyId",
                "s3BucketName",
                "s3BucketPath",
                "s3BucketRegion",
                "s3SecretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage": {
            "properties": {
                "azureBlobStorageAccountName": {
                    "type": "string"
                },
                "azureBlobStorageContainerName": {
                    "type": "string"
                },
                "azureBlobStorageEndpointDomainName": {
                    "type": "string"
                },
                "azureBlobStorageSasToken": {
                    "type": "string"
                },
                "dataSourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountName",
                "azureBlobStorageContainerName",
                "azureBlobStorageEndpointDomainName",
                "azureBlobStorageSasToken",
                "dataSourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables": {
            "properties": {
                "dataSourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDevNullConfiguration:getDestinationDevNullConfiguration": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "testDestination": {
                    "$ref": "#/types/airbyte:index/getDestinationDevNullConfigurationTestDestination:getDestinationDevNullConfigurationTestDestination"
                }
            },
            "type": "object",
            "required": [
                "destinationType",
                "testDestination"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDevNullConfigurationTestDestination:getDestinationDevNullConfigurationTestDestination": {
            "properties": {
                "destinationDevNullTestDestinationSilent": {
                    "$ref": "#/types/airbyte:index/getDestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent:getDestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent"
                },
                "destinationDevNullUpdateTestDestinationSilent": {
                    "$ref": "#/types/airbyte:index/getDestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent:getDestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent"
                }
            },
            "type": "object",
            "required": [
                "destinationDevNullTestDestinationSilent",
                "destinationDevNullUpdateTestDestinationSilent"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent:getDestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent": {
            "properties": {
                "testDestinationType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "testDestinationType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent:getDestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent": {
            "properties": {
                "testDestinationType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "testDestinationType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationDynamodbConfiguration:getDestinationDynamodbConfiguration": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "dynamodbEndpoint": {
                    "type": "string"
                },
                "dynamodbRegion": {
                    "type": "string"
                },
                "dynamodbTableNamePrefix": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "destinationType",
                "dynamodbEndpoint",
                "dynamodbRegion",
                "dynamodbTableNamePrefix",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationElasticsearchConfiguration:getDestinationElasticsearchConfiguration": {
            "properties": {
                "authenticationMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethod:getDestinationElasticsearchConfigurationAuthenticationMethod"
                },
                "caCertificate": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "upsert": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "authenticationMethod",
                "caCertificate",
                "destinationType",
                "endpoint",
                "upsert"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethod:getDestinationElasticsearchConfigurationAuthenticationMethod": {
            "properties": {
                "destinationElasticsearchAuthenticationMethodApiKeySecret": {
                    "$ref": "#/types/airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret:getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret"
                },
                "destinationElasticsearchAuthenticationMethodUsernamePassword": {
                    "$ref": "#/types/airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodUsernamePassword:getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodUsernamePassword"
                },
                "destinationElasticsearchUpdateAuthenticationMethodApiKeySecret": {
                    "$ref": "#/types/airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret:getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret"
                },
                "destinationElasticsearchUpdateAuthenticationMethodUsernamePassword": {
                    "$ref": "#/types/airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodUsernamePassword:getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodUsernamePassword"
                }
            },
            "type": "object",
            "required": [
                "destinationElasticsearchAuthenticationMethodApiKeySecret",
                "destinationElasticsearchAuthenticationMethodUsernamePassword",
                "destinationElasticsearchUpdateAuthenticationMethodApiKeySecret",
                "destinationElasticsearchUpdateAuthenticationMethodUsernamePassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret:getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret": {
            "properties": {
                "apiKeyId": {
                    "type": "string"
                },
                "apiKeySecret": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKeyId",
                "apiKeySecret",
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodUsernamePassword:getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodUsernamePassword": {
            "properties": {
                "method": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret:getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret": {
            "properties": {
                "apiKeyId": {
                    "type": "string"
                },
                "apiKeySecret": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKeyId",
                "apiKeySecret",
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodUsernamePassword:getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodUsernamePassword": {
            "properties": {
                "method": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationFireboltConfiguration:getDestinationFireboltConfiguration": {
            "properties": {
                "account": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "loadingMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationFireboltConfigurationLoadingMethod:getDestinationFireboltConfigurationLoadingMethod"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "account",
                "database",
                "destinationType",
                "engine",
                "host",
                "loadingMethod",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationFireboltConfigurationLoadingMethod:getDestinationFireboltConfigurationLoadingMethod": {
            "properties": {
                "destinationFireboltLoadingMethodExternalTableViaS3": {
                    "$ref": "#/types/airbyte:index/getDestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3:getDestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3"
                },
                "destinationFireboltLoadingMethodSqlInserts": {
                    "$ref": "#/types/airbyte:index/getDestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodSqlInserts:getDestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodSqlInserts"
                },
                "destinationFireboltUpdateLoadingMethodExternalTableViaS3": {
                    "$ref": "#/types/airbyte:index/getDestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3:getDestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3"
                },
                "destinationFireboltUpdateLoadingMethodSqlInserts": {
                    "$ref": "#/types/airbyte:index/getDestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodSqlInserts:getDestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodSqlInserts"
                }
            },
            "type": "object",
            "required": [
                "destinationFireboltLoadingMethodExternalTableViaS3",
                "destinationFireboltLoadingMethodSqlInserts",
                "destinationFireboltUpdateLoadingMethodExternalTableViaS3",
                "destinationFireboltUpdateLoadingMethodSqlInserts"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3:getDestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3": {
            "properties": {
                "awsKeyId": {
                    "type": "string"
                },
                "awsKeySecret": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "s3Bucket": {
                    "type": "string"
                },
                "s3Region": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsKeyId",
                "awsKeySecret",
                "method",
                "s3Bucket",
                "s3Region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodSqlInserts:getDestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodSqlInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3:getDestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3": {
            "properties": {
                "awsKeyId": {
                    "type": "string"
                },
                "awsKeySecret": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "s3Bucket": {
                    "type": "string"
                },
                "s3Region": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsKeyId",
                "awsKeySecret",
                "method",
                "s3Bucket",
                "s3Region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodSqlInserts:getDestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodSqlInserts": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationFirestoreConfiguration:getDestinationFirestoreConfiguration": {
            "properties": {
                "credentialsJson": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "destinationType",
                "projectId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfiguration:getDestinationGcsConfiguration": {
            "properties": {
                "credential": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationCredential:getDestinationGcsConfigurationCredential"
                },
                "destinationType": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormat:getDestinationGcsConfigurationFormat"
                },
                "gcsBucketName": {
                    "type": "string"
                },
                "gcsBucketPath": {
                    "type": "string"
                },
                "gcsBucketRegion": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credential",
                "destinationType",
                "format",
                "gcsBucketName",
                "gcsBucketPath",
                "gcsBucketRegion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationCredential:getDestinationGcsConfigurationCredential": {
            "properties": {
                "destinationGcsAuthenticationHmacKey": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey:getDestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey"
                },
                "destinationGcsUpdateAuthenticationHmacKey": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey:getDestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey"
                }
            },
            "type": "object",
            "required": [
                "destinationGcsAuthenticationHmacKey",
                "destinationGcsUpdateAuthenticationHmacKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey:getDestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey:getDestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey": {
            "properties": {
                "credentialType": {
                    "type": "string"
                },
                "hmacKeyAccessId": {
                    "type": "string"
                },
                "hmacKeySecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "hmacKeyAccessId",
                "hmacKeySecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormat:getDestinationGcsConfigurationFormat": {
            "properties": {
                "destinationGcsOutputFormatAvroApacheAvro": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro"
                },
                "destinationGcsOutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues"
                },
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationGcsOutputFormatParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvro": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro"
                },
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues"
                },
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationGcsUpdateOutputFormatParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage"
                }
            },
            "type": "object",
            "required": [
                "destinationGcsOutputFormatAvroApacheAvro",
                "destinationGcsOutputFormatCsvCommaSeparatedValues",
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJson",
                "destinationGcsOutputFormatParquetColumnarStorage",
                "destinationGcsUpdateOutputFormatAvroApacheAvro",
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValues",
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson",
                "destinationGcsUpdateOutputFormatParquetColumnarStorage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro": {
            "properties": {
                "compressionCodec": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec": {
            "properties": {
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2"
                },
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate"
                },
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression"
                },
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy"
                },
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecXz": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz"
                },
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard"
                }
            },
            "type": "object",
            "required": [
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecXz",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                },
                "includeChecksum": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel",
                "includeChecksum"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compression",
                "flattening",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression": {
            "properties": {
                "destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip"
                },
                "destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
                }
            },
            "type": "object",
            "required": [
                "destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip",
                "destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compression",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object",
            "required": [
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip",
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage": {
            "properties": {
                "blockSizeMb": {
                    "type": "integer"
                },
                "compressionCodec": {
                    "type": "string"
                },
                "dictionaryEncoding": {
                    "type": "boolean"
                },
                "dictionaryPageSizeKb": {
                    "type": "integer"
                },
                "formatType": {
                    "type": "string"
                },
                "maxPaddingSizeMb": {
                    "type": "integer"
                },
                "pageSizeKb": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "blockSizeMb",
                "compressionCodec",
                "dictionaryEncoding",
                "dictionaryPageSizeKb",
                "formatType",
                "maxPaddingSizeMb",
                "pageSizeKb"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro": {
            "properties": {
                "compressionCodec": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec": {
            "properties": {
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz"
                },
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard"
                }
            },
            "type": "object",
            "required": [
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                },
                "includeChecksum": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel",
                "includeChecksum"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compression",
                "flattening",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression": {
            "properties": {
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip"
                },
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
                }
            },
            "type": "object",
            "required": [
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip",
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compression",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object",
            "required": [
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip",
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage": {
            "properties": {
                "blockSizeMb": {
                    "type": "integer"
                },
                "compressionCodec": {
                    "type": "string"
                },
                "dictionaryEncoding": {
                    "type": "boolean"
                },
                "dictionaryPageSizeKb": {
                    "type": "integer"
                },
                "formatType": {
                    "type": "string"
                },
                "maxPaddingSizeMb": {
                    "type": "integer"
                },
                "pageSizeKb": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "blockSizeMb",
                "compressionCodec",
                "dictionaryEncoding",
                "dictionaryPageSizeKb",
                "formatType",
                "maxPaddingSizeMb",
                "pageSizeKb"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGoogleSheetsConfiguration:getDestinationGoogleSheetsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getDestinationGoogleSheetsConfigurationCredentials:getDestinationGoogleSheetsConfigurationCredentials"
                },
                "destinationType": {
                    "type": "string"
                },
                "spreadsheetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "destinationType",
                "spreadsheetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationGoogleSheetsConfigurationCredentials:getDestinationGoogleSheetsConfigurationCredentials": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationKeenConfiguration:getDestinationKeenConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "inferTimestamp": {
                    "type": "boolean"
                },
                "projectId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "destinationType",
                "inferTimestamp",
                "projectId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationKinesisConfiguration:getDestinationKinesisConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "bufferSize": {
                    "type": "integer"
                },
                "destinationType": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "shardCount": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "bufferSize",
                "destinationType",
                "endpoint",
                "privateKey",
                "region",
                "shardCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfiguration:getDestinationLangchainConfiguration": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "embedding": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationEmbedding:getDestinationLangchainConfigurationEmbedding"
                },
                "indexing": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationIndexing:getDestinationLangchainConfigurationIndexing"
                },
                "processing": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationProcessing:getDestinationLangchainConfigurationProcessing"
                }
            },
            "type": "object",
            "required": [
                "destinationType",
                "embedding",
                "indexing",
                "processing"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationEmbedding:getDestinationLangchainConfigurationEmbedding": {
            "properties": {
                "destinationLangchainEmbeddingFake": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingFake:getDestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingFake"
                },
                "destinationLangchainEmbeddingOpenAi": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi:getDestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi"
                },
                "destinationLangchainUpdateEmbeddingFake": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake:getDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake"
                },
                "destinationLangchainUpdateEmbeddingOpenAi": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi:getDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi"
                }
            },
            "type": "object",
            "required": [
                "destinationLangchainEmbeddingFake",
                "destinationLangchainEmbeddingOpenAi",
                "destinationLangchainUpdateEmbeddingFake",
                "destinationLangchainUpdateEmbeddingOpenAi"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingFake:getDestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingFake": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi:getDestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi": {
            "properties": {
                "mode": {
                    "type": "string"
                },
                "openaiKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode",
                "openaiKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake:getDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi:getDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi": {
            "properties": {
                "mode": {
                    "type": "string"
                },
                "openaiKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode",
                "openaiKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationIndexing:getDestinationLangchainConfigurationIndexing": {
            "properties": {
                "destinationLangchainIndexingChromaLocalPersistance": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance:getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance"
                },
                "destinationLangchainIndexingDocArrayHnswSearch": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch:getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch"
                },
                "destinationLangchainIndexingPinecone": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone:getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone"
                },
                "destinationLangchainUpdateIndexingChromaLocalPersistance": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance:getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance"
                },
                "destinationLangchainUpdateIndexingDocArrayHnswSearch": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch:getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch"
                },
                "destinationLangchainUpdateIndexingPinecone": {
                    "$ref": "#/types/airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone:getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone"
                }
            },
            "type": "object",
            "required": [
                "destinationLangchainIndexingChromaLocalPersistance",
                "destinationLangchainIndexingDocArrayHnswSearch",
                "destinationLangchainIndexingPinecone",
                "destinationLangchainUpdateIndexingChromaLocalPersistance",
                "destinationLangchainUpdateIndexingDocArrayHnswSearch",
                "destinationLangchainUpdateIndexingPinecone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance:getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance": {
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "destinationPath": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "collectionName",
                "destinationPath",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch:getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch": {
            "properties": {
                "destinationPath": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationPath",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone:getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone": {
            "properties": {
                "index": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "pineconeEnvironment": {
                    "type": "string"
                },
                "pineconeKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index",
                "mode",
                "pineconeEnvironment",
                "pineconeKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance:getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance": {
            "properties": {
                "collectionName": {
                    "type": "string"
                },
                "destinationPath": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "collectionName",
                "destinationPath",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch:getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch": {
            "properties": {
                "destinationPath": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationPath",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone:getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone": {
            "properties": {
                "index": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "pineconeEnvironment": {
                    "type": "string"
                },
                "pineconeKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "index",
                "mode",
                "pineconeEnvironment",
                "pineconeKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationLangchainConfigurationProcessing:getDestinationLangchainConfigurationProcessing": {
            "properties": {
                "chunkOverlap": {
                    "type": "integer"
                },
                "chunkSize": {
                    "type": "integer"
                },
                "textFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "chunkOverlap",
                "chunkSize",
                "textFields"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfiguration:getDestinationMSsqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schema": {
                    "type": "string"
                },
                "sslMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationSslMethod:getDestinationMSsqlConfigurationSslMethod"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationTunnelMethod:getDestinationMSsqlConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "schema",
                "sslMethod",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationSslMethod:getDestinationMSsqlConfigurationSslMethod": {
            "properties": {
                "destinationMssqlSslMethodEncryptedTrustServerCertificate": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate"
                },
                "destinationMssqlSslMethodEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate"
                },
                "destinationMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate"
                },
                "destinationMssqlUpdateSslMethodEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate"
                }
            },
            "type": "object",
            "required": [
                "destinationMssqlSslMethodEncryptedTrustServerCertificate",
                "destinationMssqlSslMethodEncryptedVerifyCertificate",
                "destinationMssqlUpdateSslMethodEncryptedTrustServerCertificate",
                "destinationMssqlUpdateSslMethodEncryptedVerifyCertificate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate": {
            "properties": {
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate": {
            "properties": {
                "hostNameInCertificate": {
                    "type": "string"
                },
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "hostNameInCertificate",
                "sslMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
            "properties": {
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate": {
            "properties": {
                "hostNameInCertificate": {
                    "type": "string"
                },
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "hostNameInCertificate",
                "sslMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationTunnelMethod:getDestinationMSsqlConfigurationTunnelMethod": {
            "properties": {
                "destinationMssqlSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel"
                },
                "destinationMssqlSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication"
                },
                "destinationMssqlSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication"
                },
                "destinationMssqlUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel"
                },
                "destinationMssqlUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "destinationMssqlSshTunnelMethodNoTunnel",
                "destinationMssqlSshTunnelMethodPasswordAuthentication",
                "destinationMssqlSshTunnelMethodSshKeyAuthentication",
                "destinationMssqlUpdateSshTunnelMethodNoTunnel",
                "destinationMssqlUpdateSshTunnelMethodPasswordAuthentication",
                "destinationMssqlUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfiguration:getDestinationMongodbConfiguration": {
            "properties": {
                "authType": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationAuthType:getDestinationMongodbConfigurationAuthType"
                },
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "instanceType": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationInstanceType:getDestinationMongodbConfigurationInstanceType"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationTunnelMethod:getDestinationMongodbConfigurationTunnelMethod"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "database",
                "destinationType",
                "instanceType",
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationAuthType:getDestinationMongodbConfigurationAuthType": {
            "properties": {
                "destinationMongodbAuthorizationTypeLoginPassword": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword:getDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword"
                },
                "destinationMongodbAuthorizationTypeNone": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone:getDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone"
                },
                "destinationMongodbUpdateAuthorizationTypeLoginPassword": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword:getDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword"
                },
                "destinationMongodbUpdateAuthorizationTypeNone": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone:getDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone"
                }
            },
            "type": "object",
            "required": [
                "destinationMongodbAuthorizationTypeLoginPassword",
                "destinationMongodbAuthorizationTypeNone",
                "destinationMongodbUpdateAuthorizationTypeLoginPassword",
                "destinationMongodbUpdateAuthorizationTypeNone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword:getDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword": {
            "properties": {
                "authorization": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorization",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone:getDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone": {
            "properties": {
                "authorization": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorization"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword:getDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword": {
            "properties": {
                "authorization": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorization",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone:getDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone": {
            "properties": {
                "authorization": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorization"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationInstanceType:getDestinationMongodbConfigurationInstanceType": {
            "properties": {
                "destinationMongodbMongoDbInstanceTypeMongoDbAtlas": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas"
                },
                "destinationMongodbMongoDbInstanceTypeReplicaSet": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet"
                },
                "destinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance"
                },
                "destinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas"
                },
                "destinationMongodbUpdateMongoDbInstanceTypeReplicaSet": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet"
                },
                "destinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance"
                }
            },
            "type": "object",
            "required": [
                "destinationMongodbMongoDbInstanceTypeMongoDbAtlas",
                "destinationMongodbMongoDbInstanceTypeReplicaSet",
                "destinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance",
                "destinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas",
                "destinationMongodbUpdateMongoDbInstanceTypeReplicaSet",
                "destinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas": {
            "properties": {
                "clusterUrl": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clusterUrl",
                "instance"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet": {
            "properties": {
                "instance": {
                    "type": "string"
                },
                "replicaSet": {
                    "type": "string"
                },
                "serverAddresses": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "instance",
                "replicaSet",
                "serverAddresses"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "host",
                "instance",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
            "properties": {
                "clusterUrl": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clusterUrl",
                "instance"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet": {
            "properties": {
                "instance": {
                    "type": "string"
                },
                "replicaSet": {
                    "type": "string"
                },
                "serverAddresses": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "instance",
                "replicaSet",
                "serverAddresses"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "host",
                "instance",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationTunnelMethod:getDestinationMongodbConfigurationTunnelMethod": {
            "properties": {
                "destinationMongodbSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel"
                },
                "destinationMongodbSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication"
                },
                "destinationMongodbSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication"
                },
                "destinationMongodbUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel"
                },
                "destinationMongodbUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationMongodbUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "destinationMongodbSshTunnelMethodNoTunnel",
                "destinationMongodbSshTunnelMethodPasswordAuthentication",
                "destinationMongodbSshTunnelMethodSshKeyAuthentication",
                "destinationMongodbUpdateSshTunnelMethodNoTunnel",
                "destinationMongodbUpdateSshTunnelMethodPasswordAuthentication",
                "destinationMongodbUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMysqlConfiguration:getDestinationMysqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationMysqlConfigurationTunnelMethod:getDestinationMysqlConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMysqlConfigurationTunnelMethod:getDestinationMysqlConfigurationTunnelMethod": {
            "properties": {
                "destinationMysqlSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel"
                },
                "destinationMysqlSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication"
                },
                "destinationMysqlSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication"
                },
                "destinationMysqlUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel"
                },
                "destinationMysqlUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "destinationMysqlSshTunnelMethodNoTunnel",
                "destinationMysqlSshTunnelMethodPasswordAuthentication",
                "destinationMysqlSshTunnelMethodSshKeyAuthentication",
                "destinationMysqlUpdateSshTunnelMethodNoTunnel",
                "destinationMysqlUpdateSshTunnelMethodPasswordAuthentication",
                "destinationMysqlUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationOracleConfiguration:getDestinationOracleConfiguration": {
            "properties": {
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schema": {
                    "type": "string"
                },
                "sid": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationOracleConfigurationTunnelMethod:getDestinationOracleConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationType",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "schema",
                "sid",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationOracleConfigurationTunnelMethod:getDestinationOracleConfigurationTunnelMethod": {
            "properties": {
                "destinationOracleSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel:getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel"
                },
                "destinationOracleSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication"
                },
                "destinationOracleSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication"
                },
                "destinationOracleUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel:getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel"
                },
                "destinationOracleUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationOracleUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "destinationOracleSshTunnelMethodNoTunnel",
                "destinationOracleSshTunnelMethodPasswordAuthentication",
                "destinationOracleSshTunnelMethodSshKeyAuthentication",
                "destinationOracleUpdateSshTunnelMethodNoTunnel",
                "destinationOracleUpdateSshTunnelMethodPasswordAuthentication",
                "destinationOracleUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel:getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel:getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfiguration:getDestinationPostgresConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schema": {
                    "type": "string"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslMode:getDestinationPostgresConfigurationSslMode"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationTunnelMethod:getDestinationPostgresConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "schema",
                "sslMode",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslMode:getDestinationPostgresConfigurationSslMode": {
            "properties": {
                "destinationPostgresSslModesAllow": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow"
                },
                "destinationPostgresSslModesDisable": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable"
                },
                "destinationPostgresSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer"
                },
                "destinationPostgresSslModesRequire": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire"
                },
                "destinationPostgresSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa"
                },
                "destinationPostgresSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull"
                },
                "destinationPostgresUpdateSslModesAllow": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow"
                },
                "destinationPostgresUpdateSslModesDisable": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable"
                },
                "destinationPostgresUpdateSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer"
                },
                "destinationPostgresUpdateSslModesRequire": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire"
                },
                "destinationPostgresUpdateSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa"
                },
                "destinationPostgresUpdateSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull"
                }
            },
            "type": "object",
            "required": [
                "destinationPostgresSslModesAllow",
                "destinationPostgresSslModesDisable",
                "destinationPostgresSslModesPrefer",
                "destinationPostgresSslModesRequire",
                "destinationPostgresSslModesVerifyCa",
                "destinationPostgresSslModesVerifyFull",
                "destinationPostgresUpdateSslModesAllow",
                "destinationPostgresUpdateSslModesDisable",
                "destinationPostgresUpdateSslModesPrefer",
                "destinationPostgresUpdateSslModesRequire",
                "destinationPostgresUpdateSslModesVerifyCa",
                "destinationPostgresUpdateSslModesVerifyFull"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationTunnelMethod:getDestinationPostgresConfigurationTunnelMethod": {
            "properties": {
                "destinationPostgresSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel"
                },
                "destinationPostgresSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication"
                },
                "destinationPostgresSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication"
                },
                "destinationPostgresUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel"
                },
                "destinationPostgresUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationPostgresUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "destinationPostgresSshTunnelMethodNoTunnel",
                "destinationPostgresSshTunnelMethodPasswordAuthentication",
                "destinationPostgresSshTunnelMethodSshKeyAuthentication",
                "destinationPostgresUpdateSshTunnelMethodNoTunnel",
                "destinationPostgresUpdateSshTunnelMethodPasswordAuthentication",
                "destinationPostgresUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationPubsubConfiguration:getDestinationPubsubConfiguration": {
            "properties": {
                "batchingDelayThreshold": {
                    "type": "integer"
                },
                "batchingElementCountThreshold": {
                    "type": "integer"
                },
                "batchingEnabled": {
                    "type": "boolean"
                },
                "batchingRequestBytesThreshold": {
                    "type": "integer"
                },
                "credentialsJson": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "orderingEnabled": {
                    "type": "boolean"
                },
                "projectId": {
                    "type": "string"
                },
                "topicId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "batchingDelayThreshold",
                "batchingElementCountThreshold",
                "batchingEnabled",
                "batchingRequestBytesThreshold",
                "credentialsJson",
                "destinationType",
                "orderingEnabled",
                "projectId",
                "topicId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfiguration:getDestinationRedisConfiguration": {
            "properties": {
                "cacheType": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "ssl": {
                    "type": "boolean"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationSslMode:getDestinationRedisConfigurationSslMode"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationTunnelMethod:getDestinationRedisConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cacheType",
                "destinationType",
                "host",
                "password",
                "port",
                "ssl",
                "sslMode",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationSslMode:getDestinationRedisConfigurationSslMode": {
            "properties": {
                "destinationRedisSslModesDisable": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationSslModeDestinationRedisSslModesDisable:getDestinationRedisConfigurationSslModeDestinationRedisSslModesDisable"
                },
                "destinationRedisSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull:getDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull"
                },
                "destinationRedisUpdateSslModesDisable": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable:getDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable"
                },
                "destinationRedisUpdateSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull:getDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull"
                }
            },
            "type": "object",
            "required": [
                "destinationRedisSslModesDisable",
                "destinationRedisSslModesVerifyFull",
                "destinationRedisUpdateSslModesDisable",
                "destinationRedisUpdateSslModesVerifyFull"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationSslModeDestinationRedisSslModesDisable:getDestinationRedisConfigurationSslModeDestinationRedisSslModesDisable": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull:getDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable:getDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull:getDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationTunnelMethod:getDestinationRedisConfigurationTunnelMethod": {
            "properties": {
                "destinationRedisSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel:getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel"
                },
                "destinationRedisSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication"
                },
                "destinationRedisSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication"
                },
                "destinationRedisUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel:getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel"
                },
                "destinationRedisUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationRedisUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "destinationRedisSshTunnelMethodNoTunnel",
                "destinationRedisSshTunnelMethodPasswordAuthentication",
                "destinationRedisSshTunnelMethodSshKeyAuthentication",
                "destinationRedisUpdateSshTunnelMethodNoTunnel",
                "destinationRedisUpdateSshTunnelMethodPasswordAuthentication",
                "destinationRedisUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel:getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel:getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfiguration:getDestinationRedshiftConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schema": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationTunnelMethod:getDestinationRedshiftConfigurationTunnelMethod"
                },
                "uploadingMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationUploadingMethod:getDestinationRedshiftConfigurationUploadingMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "schema",
                "tunnelMethod",
                "uploadingMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationTunnelMethod:getDestinationRedshiftConfigurationTunnelMethod": {
            "properties": {
                "destinationRedshiftSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel"
                },
                "destinationRedshiftSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication"
                },
                "destinationRedshiftSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication"
                },
                "destinationRedshiftUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel"
                },
                "destinationRedshiftUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "destinationRedshiftSshTunnelMethodNoTunnel",
                "destinationRedshiftSshTunnelMethodPasswordAuthentication",
                "destinationRedshiftSshTunnelMethodSshKeyAuthentication",
                "destinationRedshiftUpdateSshTunnelMethodNoTunnel",
                "destinationRedshiftUpdateSshTunnelMethodPasswordAuthentication",
                "destinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationUploadingMethod:getDestinationRedshiftConfigurationUploadingMethod": {
            "properties": {
                "destinationRedshiftUpdateUploadingMethodS3Staging": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging"
                },
                "destinationRedshiftUpdateUploadingMethodStandard": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard"
                },
                "destinationRedshiftUploadingMethodS3Staging": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging"
                },
                "destinationRedshiftUploadingMethodStandard": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard"
                }
            },
            "type": "object",
            "required": [
                "destinationRedshiftUpdateUploadingMethodS3Staging",
                "destinationRedshiftUpdateUploadingMethodStandard",
                "destinationRedshiftUploadingMethodS3Staging",
                "destinationRedshiftUploadingMethodStandard"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "encryption": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "purgeStagingData": {
                    "type": "boolean"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "encryption",
                "fileBufferCount",
                "fileNamePattern",
                "method",
                "purgeStagingData",
                "s3BucketName",
                "s3BucketPath",
                "s3BucketRegion",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption": {
            "properties": {
                "destinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption"
                },
                "destinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption"
                }
            },
            "type": "object",
            "required": [
                "destinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption",
                "destinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
            "properties": {
                "encryptionType": {
                    "type": "string"
                },
                "keyEncryptingKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionType",
                "keyEncryptingKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption": {
            "properties": {
                "encryptionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "encryption": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption"
                },
                "fileBufferCount": {
                    "type": "integer"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "purgeStagingData": {
                    "type": "boolean"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "encryption",
                "fileBufferCount",
                "fileNamePattern",
                "method",
                "purgeStagingData",
                "s3BucketName",
                "s3BucketPath",
                "s3BucketRegion",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption": {
            "properties": {
                "destinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption"
                },
                "destinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption": {
                    "$ref": "#/types/airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption"
                }
            },
            "type": "object",
            "required": [
                "destinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption",
                "destinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
            "properties": {
                "encryptionType": {
                    "type": "string"
                },
                "keyEncryptingKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionType",
                "keyEncryptingKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption": {
            "properties": {
                "encryptionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3Configuration:getDestinationS3Configuration": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormat:getDestinationS3ConfigurationFormat"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "s3Endpoint": {
                    "type": "string"
                },
                "s3PathFormat": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "destinationType",
                "fileNamePattern",
                "format",
                "s3BucketName",
                "s3BucketPath",
                "s3BucketRegion",
                "s3Endpoint",
                "s3PathFormat",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormat:getDestinationS3ConfigurationFormat": {
            "properties": {
                "destinationS3OutputFormatAvroApacheAvro": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro"
                },
                "destinationS3OutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues"
                },
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationS3OutputFormatParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage:getDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvro": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro"
                },
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValues": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues"
                },
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationS3UpdateOutputFormatParquetColumnarStorage": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage"
                }
            },
            "type": "object",
            "required": [
                "destinationS3OutputFormatAvroApacheAvro",
                "destinationS3OutputFormatCsvCommaSeparatedValues",
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJson",
                "destinationS3OutputFormatParquetColumnarStorage",
                "destinationS3UpdateOutputFormatAvroApacheAvro",
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValues",
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson",
                "destinationS3UpdateOutputFormatParquetColumnarStorage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro": {
            "properties": {
                "compressionCodec": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec": {
            "properties": {
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2"
                },
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate"
                },
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression"
                },
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy"
                },
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecXz": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz"
                },
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard"
                }
            },
            "type": "object",
            "required": [
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecXz",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                },
                "includeChecksum": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel",
                "includeChecksum"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compression",
                "flattening",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression": {
            "properties": {
                "destinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip"
                },
                "destinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
                }
            },
            "type": "object",
            "required": [
                "destinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip",
                "destinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compression",
                "flattening",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object",
            "required": [
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip",
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage:getDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage": {
            "properties": {
                "blockSizeMb": {
                    "type": "integer"
                },
                "compressionCodec": {
                    "type": "string"
                },
                "dictionaryEncoding": {
                    "type": "boolean"
                },
                "dictionaryPageSizeKb": {
                    "type": "integer"
                },
                "formatType": {
                    "type": "string"
                },
                "maxPaddingSizeMb": {
                    "type": "integer"
                },
                "pageSizeKb": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "blockSizeMb",
                "compressionCodec",
                "dictionaryEncoding",
                "dictionaryPageSizeKb",
                "formatType",
                "maxPaddingSizeMb",
                "pageSizeKb"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro": {
            "properties": {
                "compressionCodec": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionCodec",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec": {
            "properties": {
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz"
                },
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard"
                }
            },
            "type": "object",
            "required": [
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": {
            "properties": {
                "codec": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "codec"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
            "properties": {
                "codec": {
                    "type": "string"
                },
                "compressionLevel": {
                    "type": "integer"
                },
                "includeChecksum": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "codec",
                "compressionLevel",
                "includeChecksum"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compression",
                "flattening",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression": {
            "properties": {
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip"
                },
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
                }
            },
            "type": "object",
            "required": [
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip",
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compression",
                "flattening",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object",
            "required": [
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip",
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage": {
            "properties": {
                "blockSizeMb": {
                    "type": "integer"
                },
                "compressionCodec": {
                    "type": "string"
                },
                "dictionaryEncoding": {
                    "type": "boolean"
                },
                "dictionaryPageSizeKb": {
                    "type": "integer"
                },
                "formatType": {
                    "type": "string"
                },
                "maxPaddingSizeMb": {
                    "type": "integer"
                },
                "pageSizeKb": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "blockSizeMb",
                "compressionCodec",
                "dictionaryEncoding",
                "dictionaryPageSizeKb",
                "formatType",
                "maxPaddingSizeMb",
                "pageSizeKb"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3GlueConfiguration:getDestinationS3GlueConfiguration": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "fileNamePattern": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/getDestinationS3GlueConfigurationFormat:getDestinationS3GlueConfigurationFormat"
                },
                "glueDatabase": {
                    "type": "string"
                },
                "glueSerializationLibrary": {
                    "type": "string"
                },
                "s3BucketName": {
                    "type": "string"
                },
                "s3BucketPath": {
                    "type": "string"
                },
                "s3BucketRegion": {
                    "type": "string"
                },
                "s3Endpoint": {
                    "type": "string"
                },
                "s3PathFormat": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "destinationType",
                "fileNamePattern",
                "format",
                "glueDatabase",
                "glueSerializationLibrary",
                "s3BucketName",
                "s3BucketPath",
                "s3BucketRegion",
                "s3Endpoint",
                "s3PathFormat",
                "secretAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3GlueConfigurationFormat:getDestinationS3GlueConfigurationFormat": {
            "properties": {
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson"
                },
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson"
                }
            },
            "type": "object",
            "required": [
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson",
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compression",
                "flattening",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object",
            "required": [
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip",
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "compression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression"
                },
                "flattening": {
                    "type": "string"
                },
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compression",
                "flattening",
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
            "properties": {
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                    "$ref": "#/types/airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"
                },
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                    "$ref": "#/types/airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
                }
            },
            "type": "object",
            "required": [
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip",
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
            "properties": {
                "compressionType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "compressionType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationSftpJsonConfiguration:getDestinationSftpJsonConfiguration": {
            "properties": {
                "destinationPath": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destinationPath",
                "destinationType",
                "host",
                "password",
                "port",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationSnowflakeConfiguration:getDestinationSnowflakeConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getDestinationSnowflakeConfigurationCredentials:getDestinationSnowflakeConfigurationCredentials"
                },
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "rawDataSchema": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "use1s1tFormat": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                },
                "warehouse": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "database",
                "destinationType",
                "host",
                "jdbcUrlParams",
                "rawDataSchema",
                "role",
                "schema",
                "use1s1tFormat",
                "username",
                "warehouse"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationSnowflakeConfigurationCredentials:getDestinationSnowflakeConfigurationCredentials": {
            "properties": {
                "destinationSnowflakeAuthorizationMethodKeyPairAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication"
                },
                "destinationSnowflakeAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20"
                },
                "destinationSnowflakeAuthorizationMethodUsernameAndPassword": {
                    "$ref": "#/types/airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword"
                },
                "destinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication"
                },
                "destinationSnowflakeUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20"
                },
                "destinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
                    "$ref": "#/types/airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword"
                }
            },
            "type": "object",
            "required": [
                "destinationSnowflakeAuthorizationMethodKeyPairAuthentication",
                "destinationSnowflakeAuthorizationMethodOAuth20",
                "destinationSnowflakeAuthorizationMethodUsernameAndPassword",
                "destinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication",
                "destinationSnowflakeUpdateAuthorizationMethodOAuth20",
                "destinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "privateKeyPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "privateKey",
                "privateKeyPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "password"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "privateKeyPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "privateKey",
                "privateKeyPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "password"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationTimeplusConfiguration:getDestinationTimeplusConfiguration": {
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apikey",
                "destinationType",
                "endpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationTypesenseConfiguration:getDestinationTypesenseConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "batchSize",
                "destinationType",
                "host",
                "port",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationVerticaConfiguration:getDestinationVerticaConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schema": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getDestinationVerticaConfigurationTunnelMethod:getDestinationVerticaConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "destinationType",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "schema",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationVerticaConfigurationTunnelMethod:getDestinationVerticaConfigurationTunnelMethod": {
            "properties": {
                "destinationVerticaSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel"
                },
                "destinationVerticaSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication"
                },
                "destinationVerticaSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication"
                },
                "destinationVerticaUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel"
                },
                "destinationVerticaUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication"
                },
                "destinationVerticaUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "destinationVerticaSshTunnelMethodNoTunnel",
                "destinationVerticaSshTunnelMethodPasswordAuthentication",
                "destinationVerticaSshTunnelMethodSshKeyAuthentication",
                "destinationVerticaUpdateSshTunnelMethodNoTunnel",
                "destinationVerticaUpdateSshTunnelMethodPasswordAuthentication",
                "destinationVerticaUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getDestinationXataConfiguration:getDestinationXataConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "dbUrl": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "dbUrl",
                "destinationType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAhaConfiguration:getSourceAhaConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAircallConfiguration:getSourceAircallConfiguration": {
            "properties": {
                "apiId": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiId",
                "apiToken",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAirtableConfiguration:getSourceAirtableConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceAirtableConfigurationCredentials:getSourceAirtableConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAirtableConfigurationCredentials:getSourceAirtableConfigurationCredentials": {
            "properties": {
                "sourceAirtableAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20:getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20"
                },
                "sourceAirtableAuthenticationPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken:getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken"
                },
                "sourceAirtableUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20:getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20"
                },
                "sourceAirtableUpdateAuthenticationPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken:getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken"
                }
            },
            "type": "object",
            "required": [
                "sourceAirtableAuthenticationOAuth20",
                "sourceAirtableAuthenticationPersonalAccessToken",
                "sourceAirtableUpdateAuthenticationOAuth20",
                "sourceAirtableUpdateAuthenticationPersonalAccessToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20:getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken:getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20:getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken:getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfiguration:getSourceAlloydbConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "replicationMethod": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationReplicationMethod:getSourceAlloydbConfigurationReplicationMethod"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslMode:getSourceAlloydbConfigurationSslMode"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationTunnelMethod:getSourceAlloydbConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "replicationMethod",
                "schemas",
                "sourceType",
                "sslMode",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationReplicationMethod:getSourceAlloydbConfigurationReplicationMethod": {
            "properties": {
                "sourceAlloydbReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc"
                },
                "sourceAlloydbReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard"
                },
                "sourceAlloydbReplicationMethodStandardXmin": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin"
                },
                "sourceAlloydbUpdateReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc"
                },
                "sourceAlloydbUpdateReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard"
                },
                "sourceAlloydbUpdateReplicationMethodStandardXmin": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin"
                }
            },
            "type": "object",
            "required": [
                "sourceAlloydbReplicationMethodLogicalReplicationCdc",
                "sourceAlloydbReplicationMethodStandard",
                "sourceAlloydbReplicationMethodStandardXmin",
                "sourceAlloydbUpdateReplicationMethodLogicalReplicationCdc",
                "sourceAlloydbUpdateReplicationMethodStandard",
                "sourceAlloydbUpdateReplicationMethodStandardXmin"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "lsnCommitBehaviour": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                },
                "publication": {
                    "type": "string"
                },
                "queueSize": {
                    "type": "integer"
                },
                "replicationSlot": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "initialWaitingSeconds",
                "lsnCommitBehaviour",
                "method",
                "plugin",
                "publication",
                "queueSize",
                "replicationSlot"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "lsnCommitBehaviour": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                },
                "publication": {
                    "type": "string"
                },
                "queueSize": {
                    "type": "integer"
                },
                "replicationSlot": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "initialWaitingSeconds",
                "lsnCommitBehaviour",
                "method",
                "plugin",
                "publication",
                "queueSize",
                "replicationSlot"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslMode:getSourceAlloydbConfigurationSslMode": {
            "properties": {
                "sourceAlloydbSslModesAllow": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow"
                },
                "sourceAlloydbSslModesDisable": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable"
                },
                "sourceAlloydbSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer"
                },
                "sourceAlloydbSslModesRequire": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire"
                },
                "sourceAlloydbSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa"
                },
                "sourceAlloydbSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull"
                },
                "sourceAlloydbUpdateSslModesAllow": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow"
                },
                "sourceAlloydbUpdateSslModesDisable": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable"
                },
                "sourceAlloydbUpdateSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer"
                },
                "sourceAlloydbUpdateSslModesRequire": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire"
                },
                "sourceAlloydbUpdateSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa"
                },
                "sourceAlloydbUpdateSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull"
                }
            },
            "type": "object",
            "required": [
                "sourceAlloydbSslModesAllow",
                "sourceAlloydbSslModesDisable",
                "sourceAlloydbSslModesPrefer",
                "sourceAlloydbSslModesRequire",
                "sourceAlloydbSslModesVerifyCa",
                "sourceAlloydbSslModesVerifyFull",
                "sourceAlloydbUpdateSslModesAllow",
                "sourceAlloydbUpdateSslModesDisable",
                "sourceAlloydbUpdateSslModesPrefer",
                "sourceAlloydbUpdateSslModesRequire",
                "sourceAlloydbUpdateSslModesVerifyCa",
                "sourceAlloydbUpdateSslModesVerifyFull"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationTunnelMethod:getSourceAlloydbConfigurationTunnelMethod": {
            "properties": {
                "sourceAlloydbSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel"
                },
                "sourceAlloydbSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication"
                },
                "sourceAlloydbSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication"
                },
                "sourceAlloydbUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel"
                },
                "sourceAlloydbUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourceAlloydbSshTunnelMethodNoTunnel",
                "sourceAlloydbSshTunnelMethodPasswordAuthentication",
                "sourceAlloydbSshTunnelMethodSshKeyAuthentication",
                "sourceAlloydbUpdateSshTunnelMethodNoTunnel",
                "sourceAlloydbUpdateSshTunnelMethodPasswordAuthentication",
                "sourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAmazonAdsConfiguration:getSourceAmazonAdsConfiguration": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "lookBackWindow": {
                    "type": "integer"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "refreshToken": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "reportRecordTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "stateFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "lookBackWindow",
                "profiles",
                "refreshToken",
                "region",
                "reportRecordTypes",
                "sourceType",
                "startDate",
                "stateFilters"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAmazonSellerPartnerConfiguration:getSourceAmazonSellerPartnerConfiguration": {
            "properties": {
                "advancedStreamOptions": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "awsAccessKey": {
                    "type": "string"
                },
                "awsEnvironment": {
                    "type": "string"
                },
                "awsSecretKey": {
                    "type": "string"
                },
                "lwaAppId": {
                    "type": "string"
                },
                "lwaClientSecret": {
                    "type": "string"
                },
                "maxWaitSeconds": {
                    "type": "integer"
                },
                "periodInDays": {
                    "type": "integer"
                },
                "refreshToken": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "replicationEndDate": {
                    "type": "string"
                },
                "replicationStartDate": {
                    "type": "string"
                },
                "reportOptions": {
                    "type": "string"
                },
                "roleArn": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "advancedStreamOptions",
                "authType",
                "awsAccessKey",
                "awsEnvironment",
                "awsSecretKey",
                "lwaAppId",
                "lwaClientSecret",
                "maxWaitSeconds",
                "periodInDays",
                "refreshToken",
                "region",
                "replicationEndDate",
                "replicationStartDate",
                "reportOptions",
                "roleArn",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAmazonSqsConfiguration:getSourceAmazonSqsConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "attributesToReturn": {
                    "type": "string"
                },
                "deleteMessages": {
                    "type": "boolean"
                },
                "maxBatchSize": {
                    "type": "integer"
                },
                "maxWaitTime": {
                    "type": "integer"
                },
                "queueUrl": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "visibilityTimeout": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "attributesToReturn",
                "deleteMessages",
                "maxBatchSize",
                "maxWaitTime",
                "queueUrl",
                "region",
                "secretKey",
                "sourceType",
                "visibilityTimeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAmplitudeConfiguration:getSourceAmplitudeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "dataRegion": {
                    "type": "string"
                },
                "requestTimeRange": {
                    "type": "integer"
                },
                "secretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "dataRegion",
                "requestTimeRange",
                "secretKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceApifyDatasetConfiguration:getSourceApifyDatasetConfiguration": {
            "properties": {
                "clean": {
                    "type": "boolean"
                },
                "datasetId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clean",
                "datasetId",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAppfollowConfiguration:getSourceAppfollowConfiguration": {
            "properties": {
                "apiSecret": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiSecret",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAsanaConfiguration:getSourceAsanaConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceAsanaConfigurationCredentials:getSourceAsanaConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAsanaConfigurationCredentials:getSourceAsanaConfigurationCredentials": {
            "properties": {
                "sourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth": {
                    "$ref": "#/types/airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth:getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth"
                },
                "sourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken"
                },
                "sourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth": {
                    "$ref": "#/types/airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth:getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth"
                },
                "sourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken"
                }
            },
            "type": "object",
            "required": [
                "sourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth",
                "sourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken",
                "sourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth",
                "sourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth:getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "optionTitle",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "personalAccessToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "optionTitle",
                "personalAccessToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth:getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "optionTitle",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "personalAccessToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "optionTitle",
                "personalAccessToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAuth0Configuration:getSourceAuth0Configuration": {
            "properties": {
                "baseUrl": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceAuth0ConfigurationCredentials:getSourceAuth0ConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "credentials",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAuth0ConfigurationCredentials:getSourceAuth0ConfigurationCredentials": {
            "properties": {
                "sourceAuth0AuthenticationMethodOAuth2AccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken:getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken"
                },
                "sourceAuth0AuthenticationMethodOAuth2ConfidentialApplication": {
                    "$ref": "#/types/airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication:getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication"
                },
                "sourceAuth0UpdateAuthenticationMethodOAuth2AccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken:getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken"
                },
                "sourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication": {
                    "$ref": "#/types/airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication:getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication"
                }
            },
            "type": "object",
            "required": [
                "sourceAuth0AuthenticationMethodOAuth2AccessToken",
                "sourceAuth0AuthenticationMethodOAuth2ConfidentialApplication",
                "sourceAuth0UpdateAuthenticationMethodOAuth2AccessToken",
                "sourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken:getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication:getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication": {
            "properties": {
                "audience": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "audience",
                "authType",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken:getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication:getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication": {
            "properties": {
                "audience": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "audience",
                "authType",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAwsCloudtrailConfiguration:getSourceAwsCloudtrailConfiguration": {
            "properties": {
                "awsKeyId": {
                    "type": "string"
                },
                "awsRegionName": {
                    "type": "string"
                },
                "awsSecretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsKeyId",
                "awsRegionName",
                "awsSecretKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAzureBlobStorageConfiguration:getSourceAzureBlobStorageConfiguration": {
            "properties": {
                "azureBlobStorageAccountKey": {
                    "type": "string"
                },
                "azureBlobStorageAccountName": {
                    "type": "string"
                },
                "azureBlobStorageBlobsPrefix": {
                    "type": "string"
                },
                "azureBlobStorageContainerName": {
                    "type": "string"
                },
                "azureBlobStorageEndpoint": {
                    "type": "string"
                },
                "azureBlobStorageSchemaInferenceLimit": {
                    "type": "integer"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/getSourceAzureBlobStorageConfigurationFormat:getSourceAzureBlobStorageConfigurationFormat"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "azureBlobStorageAccountKey",
                "azureBlobStorageAccountName",
                "azureBlobStorageBlobsPrefix",
                "azureBlobStorageContainerName",
                "azureBlobStorageEndpoint",
                "azureBlobStorageSchemaInferenceLimit",
                "format",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAzureBlobStorageConfigurationFormat:getSourceAzureBlobStorageConfigurationFormat": {
            "properties": {
                "sourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson:getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson"
                },
                "sourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson": {
                    "$ref": "#/types/airbyte:index/getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson:getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson"
                }
            },
            "type": "object",
            "required": [
                "sourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson",
                "sourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson:getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson:getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson": {
            "properties": {
                "formatType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "formatType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceAzureTableConfiguration:getSourceAzureTableConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "storageAccessKey": {
                    "type": "string"
                },
                "storageAccountName": {
                    "type": "string"
                },
                "storageEndpointSuffix": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "storageAccessKey",
                "storageAccountName",
                "storageEndpointSuffix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceBambooHrConfiguration:getSourceBambooHrConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "customReportsFields": {
                    "type": "string"
                },
                "customReportsIncludeDefaultFields": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "customReportsFields",
                "customReportsIncludeDefaultFields",
                "sourceType",
                "subdomain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceBigcommerceConfiguration:getSourceBigcommerceConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "storeHash": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType",
                "startDate",
                "storeHash"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceBigqueryConfiguration:getSourceBigqueryConfiguration": {
            "properties": {
                "credentialsJson": {
                    "type": "string"
                },
                "datasetId": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "datasetId",
                "projectId",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceBingAdsConfiguration:getSourceBingAdsConfiguration": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "developerToken": {
                    "type": "string"
                },
                "lookbackWindow": {
                    "type": "integer"
                },
                "refreshToken": {
                    "type": "string"
                },
                "reportsStartDate": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "clientId",
                "clientSecret",
                "developerToken",
                "lookbackWindow",
                "refreshToken",
                "reportsStartDate",
                "sourceType",
                "tenantId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceBraintreeConfiguration:getSourceBraintreeConfiguration": {
            "properties": {
                "environment": {
                    "type": "string"
                },
                "merchantId": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "environment",
                "merchantId",
                "privateKey",
                "publicKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceBrazeConfiguration:getSourceBrazeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceChargebeeConfiguration:getSourceChargebeeConfiguration": {
            "properties": {
                "productCatalog": {
                    "type": "string"
                },
                "site": {
                    "type": "string"
                },
                "siteApiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "productCatalog",
                "site",
                "siteApiKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceChartmogulConfiguration:getSourceChartmogulConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "interval": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "interval",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceClickhouseConfiguration:getSourceClickhouseConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getSourceClickhouseConfigurationTunnelMethod:getSourceClickhouseConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "password",
                "port",
                "sourceType",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceClickhouseConfigurationTunnelMethod:getSourceClickhouseConfigurationTunnelMethod": {
            "properties": {
                "sourceClickhouseSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel"
                },
                "sourceClickhouseSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication"
                },
                "sourceClickhouseSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication"
                },
                "sourceClickhouseUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel"
                },
                "sourceClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourceClickhouseSshTunnelMethodNoTunnel",
                "sourceClickhouseSshTunnelMethodPasswordAuthentication",
                "sourceClickhouseSshTunnelMethodSshKeyAuthentication",
                "sourceClickhouseUpdateSshTunnelMethodNoTunnel",
                "sourceClickhouseUpdateSshTunnelMethodPasswordAuthentication",
                "sourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceClickupApiConfiguration:getSourceClickupApiConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "folderId": {
                    "type": "string"
                },
                "includeClosedTasks": {
                    "type": "boolean"
                },
                "listId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "folderId",
                "includeClosedTasks",
                "listId",
                "sourceType",
                "spaceId",
                "teamId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceClockifyConfiguration:getSourceClockifyConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "apiUrl": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "apiUrl",
                "sourceType",
                "workspaceId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceCloseComConfiguration:getSourceCloseComConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceCodaConfiguration:getSourceCodaConfiguration": {
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceCoinApiConfiguration:getSourceCoinApiConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "environment": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "period": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "symbolId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "endDate",
                "environment",
                "limit",
                "period",
                "sourceType",
                "startDate",
                "symbolId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceCoinmarketcapConfiguration:getSourceCoinmarketcapConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "dataType": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "symbols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "dataType",
                "sourceType",
                "symbols"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceConfigcatConfiguration:getSourceConfigcatConfiguration": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "sourceType",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceConfluenceConfiguration:getSourceConfluenceConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "domainName",
                "email",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceConvexConfiguration:getSourceConvexConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "deploymentUrl": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "deploymentUrl",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceDatadogConfiguration:getSourceDatadogConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "applicationKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "maxRecordsPerRequest": {
                    "type": "integer"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/getSourceDatadogConfigurationQuery:getSourceDatadogConfigurationQuery"
                    }
                },
                "query": {
                    "type": "string"
                },
                "site": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "applicationKey",
                "endDate",
                "maxRecordsPerRequest",
                "queries",
                "query",
                "site",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceDatadogConfigurationQuery:getSourceDatadogConfigurationQuery": {
            "properties": {
                "dataSource": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "name",
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceDatascopeConfiguration:getSourceDatascopeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceDelightedConfiguration:getSourceDelightedConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "since": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "since",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceDixaConfiguration:getSourceDixaConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "batchSize": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "batchSize",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceDockerhubConfiguration:getSourceDockerhubConfiguration": {
            "properties": {
                "dockerUsername": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dockerUsername",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceDremioConfiguration:getSourceDremioConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "baseUrl": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "baseUrl",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceDynamodbConfiguration:getSourceDynamodbConfiguration": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "reservedAttributeNames": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKeyId",
                "endpoint",
                "region",
                "reservedAttributeNames",
                "secretAccessKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceE2eTestCloudConfiguration:getSourceE2eTestCloudConfiguration": {
            "properties": {
                "maxMessages": {
                    "type": "integer"
                },
                "messageIntervalMs": {
                    "type": "integer"
                },
                "mockCatalog": {
                    "$ref": "#/types/airbyte:index/getSourceE2eTestCloudConfigurationMockCatalog:getSourceE2eTestCloudConfigurationMockCatalog"
                },
                "seed": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "maxMessages",
                "messageIntervalMs",
                "mockCatalog",
                "seed",
                "sourceType",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceE2eTestCloudConfigurationMockCatalog:getSourceE2eTestCloudConfigurationMockCatalog": {
            "properties": {
                "sourceE2eTestCloudMockCatalogMultiSchema": {
                    "$ref": "#/types/airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema"
                },
                "sourceE2eTestCloudMockCatalogSingleSchema": {
                    "$ref": "#/types/airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema"
                },
                "sourceE2eTestCloudUpdateMockCatalogMultiSchema": {
                    "$ref": "#/types/airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema"
                },
                "sourceE2eTestCloudUpdateMockCatalogSingleSchema": {
                    "$ref": "#/types/airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema"
                }
            },
            "type": "object",
            "required": [
                "sourceE2eTestCloudMockCatalogMultiSchema",
                "sourceE2eTestCloudMockCatalogSingleSchema",
                "sourceE2eTestCloudUpdateMockCatalogMultiSchema",
                "sourceE2eTestCloudUpdateMockCatalogSingleSchema"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema": {
            "properties": {
                "streamSchemas": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "streamSchemas",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema": {
            "properties": {
                "streamDuplication": {
                    "type": "integer"
                },
                "streamName": {
                    "type": "string"
                },
                "streamSchema": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "streamDuplication",
                "streamName",
                "streamSchema",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema": {
            "properties": {
                "streamSchemas": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "streamSchemas",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema": {
            "properties": {
                "streamDuplication": {
                    "type": "integer"
                },
                "streamName": {
                    "type": "string"
                },
                "streamSchema": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "streamDuplication",
                "streamName",
                "streamSchema",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceEmailoctopusConfiguration:getSourceEmailoctopusConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceExchangeRatesConfiguration:getSourceExchangeRatesConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "base": {
                    "type": "string"
                },
                "ignoreWeekends": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "base",
                "ignoreWeekends",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFacebookMarketingConfiguration:getSourceFacebookMarketingConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "actionBreakdownsAllowEmpty": {
                    "type": "boolean"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "customInsights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/getSourceFacebookMarketingConfigurationCustomInsight:getSourceFacebookMarketingConfigurationCustomInsight"
                    }
                },
                "endDate": {
                    "type": "string"
                },
                "fetchThumbnailImages": {
                    "type": "boolean"
                },
                "includeDeleted": {
                    "type": "boolean"
                },
                "insightsLookbackWindow": {
                    "type": "integer"
                },
                "maxBatchSize": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "accountId",
                "actionBreakdownsAllowEmpty",
                "clientId",
                "clientSecret",
                "customInsights",
                "endDate",
                "fetchThumbnailImages",
                "includeDeleted",
                "insightsLookbackWindow",
                "maxBatchSize",
                "pageSize",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFacebookMarketingConfigurationCustomInsight:getSourceFacebookMarketingConfigurationCustomInsight": {
            "properties": {
                "actionBreakdowns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "actionReportTime": {
                    "type": "string"
                },
                "breakdowns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endDate": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "insightsLookbackWindow": {
                    "type": "integer"
                },
                "level": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "timeIncrement": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "actionBreakdowns",
                "actionReportTime",
                "breakdowns",
                "endDate",
                "fields",
                "insightsLookbackWindow",
                "level",
                "name",
                "startDate",
                "timeIncrement"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFacebookPagesConfiguration:getSourceFacebookPagesConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "pageId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "pageId",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFakerConfiguration:getSourceFakerConfiguration": {
            "properties": {
                "alwaysUpdated": {
                    "type": "boolean"
                },
                "count": {
                    "type": "integer"
                },
                "parallelism": {
                    "type": "integer"
                },
                "recordsPerSlice": {
                    "type": "integer"
                },
                "seed": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "alwaysUpdated",
                "count",
                "parallelism",
                "recordsPerSlice",
                "seed",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFaunaConfiguration:getSourceFaunaConfiguration": {
            "properties": {
                "collection": {
                    "$ref": "#/types/airbyte:index/getSourceFaunaConfigurationCollection:getSourceFaunaConfigurationCollection"
                },
                "domain": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "scheme": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "collection",
                "domain",
                "port",
                "scheme",
                "secret",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFaunaConfigurationCollection:getSourceFaunaConfigurationCollection": {
            "properties": {
                "deletions": {
                    "$ref": "#/types/airbyte:index/getSourceFaunaConfigurationCollectionDeletions:getSourceFaunaConfigurationCollectionDeletions"
                },
                "pageSize": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "deletions",
                "pageSize"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFaunaConfigurationCollectionDeletions:getSourceFaunaConfigurationCollectionDeletions": {
            "properties": {
                "sourceFaunaCollectionDeletionModeDisabled": {
                    "$ref": "#/types/airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled"
                },
                "sourceFaunaCollectionDeletionModeEnabled": {
                    "$ref": "#/types/airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled"
                },
                "sourceFaunaUpdateCollectionDeletionModeDisabled": {
                    "$ref": "#/types/airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled"
                },
                "sourceFaunaUpdateCollectionDeletionModeEnabled": {
                    "$ref": "#/types/airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled"
                }
            },
            "type": "object",
            "required": [
                "sourceFaunaCollectionDeletionModeDisabled",
                "sourceFaunaCollectionDeletionModeEnabled",
                "sourceFaunaUpdateCollectionDeletionModeDisabled",
                "sourceFaunaUpdateCollectionDeletionModeEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled": {
            "properties": {
                "deletionMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deletionMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled": {
            "properties": {
                "column": {
                    "type": "string"
                },
                "deletionMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "column",
                "deletionMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled": {
            "properties": {
                "deletionMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "deletionMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled": {
            "properties": {
                "column": {
                    "type": "string"
                },
                "deletionMode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "column",
                "deletionMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfiguration:getSourceFileSecureConfiguration": {
            "properties": {
                "datasetName": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProvider:getSourceFileSecureConfigurationProvider"
                },
                "readerOptions": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "datasetName",
                "format",
                "provider",
                "readerOptions",
                "sourceType",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProvider:getSourceFileSecureConfigurationProvider": {
            "properties": {
                "sourceFileSecureStorageProviderAzBlobAzureBlobStorage": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage"
                },
                "sourceFileSecureStorageProviderGcsGoogleCloudStorage": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage"
                },
                "sourceFileSecureStorageProviderHttpsPublicWeb": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb"
                },
                "sourceFileSecureStorageProviderS3AmazonWebServices": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices"
                },
                "sourceFileSecureStorageProviderScpSecureCopyProtocol": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol"
                },
                "sourceFileSecureStorageProviderSftpSecureFileTransferProtocol": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol"
                },
                "sourceFileSecureStorageProviderSshSecureShell": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell"
                },
                "sourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage"
                },
                "sourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage"
                },
                "sourceFileSecureUpdateStorageProviderHttpsPublicWeb": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb"
                },
                "sourceFileSecureUpdateStorageProviderS3AmazonWebServices": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices"
                },
                "sourceFileSecureUpdateStorageProviderScpSecureCopyProtocol": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol"
                },
                "sourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol"
                },
                "sourceFileSecureUpdateStorageProviderSshSecureShell": {
                    "$ref": "#/types/airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell"
                }
            },
            "type": "object",
            "required": [
                "sourceFileSecureStorageProviderAzBlobAzureBlobStorage",
                "sourceFileSecureStorageProviderGcsGoogleCloudStorage",
                "sourceFileSecureStorageProviderHttpsPublicWeb",
                "sourceFileSecureStorageProviderS3AmazonWebServices",
                "sourceFileSecureStorageProviderScpSecureCopyProtocol",
                "sourceFileSecureStorageProviderSftpSecureFileTransferProtocol",
                "sourceFileSecureStorageProviderSshSecureShell",
                "sourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage",
                "sourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage",
                "sourceFileSecureUpdateStorageProviderHttpsPublicWeb",
                "sourceFileSecureUpdateStorageProviderS3AmazonWebServices",
                "sourceFileSecureUpdateStorageProviderScpSecureCopyProtocol",
                "sourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol",
                "sourceFileSecureUpdateStorageProviderSshSecureShell"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage": {
            "properties": {
                "sasToken": {
                    "type": "string"
                },
                "sharedKey": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "storageAccount": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sasToken",
                "sharedKey",
                "storage",
                "storageAccount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage": {
            "properties": {
                "serviceAccountJson": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceAccountJson",
                "storage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb": {
            "properties": {
                "storage": {
                    "type": "string"
                },
                "userAgent": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "storage",
                "userAgent"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string"
                },
                "awsSecretAccessKey": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsAccessKeyId",
                "awsSecretAccessKey",
                "storage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "password",
                "port",
                "storage",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "password",
                "port",
                "storage",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "password",
                "port",
                "storage",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage": {
            "properties": {
                "sasToken": {
                    "type": "string"
                },
                "sharedKey": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "storageAccount": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sasToken",
                "sharedKey",
                "storage",
                "storageAccount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage": {
            "properties": {
                "serviceAccountJson": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "serviceAccountJson",
                "storage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb": {
            "properties": {
                "storage": {
                    "type": "string"
                },
                "userAgent": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "storage",
                "userAgent"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string"
                },
                "awsSecretAccessKey": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsAccessKeyId",
                "awsSecretAccessKey",
                "storage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "password",
                "port",
                "storage",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "password",
                "port",
                "storage",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "host",
                "password",
                "port",
                "storage",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFireboltConfiguration:getSourceFireboltConfiguration": {
            "properties": {
                "account": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "engine": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "account",
                "database",
                "engine",
                "host",
                "password",
                "sourceType",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFreshcallerConfiguration:getSourceFreshcallerConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "requestsPerMinute": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "syncLagMinutes": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "domain",
                "requestsPerMinute",
                "sourceType",
                "startDate",
                "syncLagMinutes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFreshdeskConfiguration:getSourceFreshdeskConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "requestsPerMinute": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "domain",
                "requestsPerMinute",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceFreshsalesConfiguration:getSourceFreshsalesConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "domainName": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "domainName",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGainsightPxConfiguration:getSourceGainsightPxConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGcsConfiguration:getSourceGcsConfiguration": {
            "properties": {
                "gcsBucket": {
                    "type": "string"
                },
                "gcsPath": {
                    "type": "string"
                },
                "serviceAccount": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "gcsBucket",
                "gcsPath",
                "serviceAccount",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGetlagoConfiguration:getSourceGetlagoConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGithubConfiguration:getSourceGithubConfiguration": {
            "properties": {
                "branch": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceGithubConfigurationCredentials:getSourceGithubConfigurationCredentials"
                },
                "repository": {
                    "type": "string"
                },
                "requestsPerHour": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "branch",
                "credentials",
                "repository",
                "requestsPerHour",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGithubConfigurationCredentials:getSourceGithubConfigurationCredentials": {
            "properties": {
                "sourceGithubAuthenticationOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth:getSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth"
                },
                "sourceGithubAuthenticationPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken:getSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken"
                },
                "sourceGithubUpdateAuthenticationOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth:getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth"
                },
                "sourceGithubUpdateAuthenticationPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken:getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken"
                }
            },
            "type": "object",
            "required": [
                "sourceGithubAuthenticationOAuth",
                "sourceGithubAuthenticationPersonalAccessToken",
                "sourceGithubUpdateAuthenticationOAuth",
                "sourceGithubUpdateAuthenticationPersonalAccessToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth:getSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "optionTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken:getSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "personalAccessToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "optionTitle",
                "personalAccessToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth:getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "optionTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken:getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "personalAccessToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "optionTitle",
                "personalAccessToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGitlabConfiguration:getSourceGitlabConfiguration": {
            "properties": {
                "apiUrl": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceGitlabConfigurationCredentials:getSourceGitlabConfigurationCredentials"
                },
                "groups": {
                    "type": "string"
                },
                "projects": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiUrl",
                "credentials",
                "groups",
                "projects",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGitlabConfigurationCredentials:getSourceGitlabConfigurationCredentials": {
            "properties": {
                "sourceGitlabAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20:getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20"
                },
                "sourceGitlabAuthorizationMethodPrivateToken": {
                    "$ref": "#/types/airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken:getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken"
                },
                "sourceGitlabUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20:getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20"
                },
                "sourceGitlabUpdateAuthorizationMethodPrivateToken": {
                    "$ref": "#/types/airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken:getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken"
                }
            },
            "type": "object",
            "required": [
                "sourceGitlabAuthorizationMethodOAuth20",
                "sourceGitlabAuthorizationMethodPrivateToken",
                "sourceGitlabUpdateAuthorizationMethodOAuth20",
                "sourceGitlabUpdateAuthorizationMethodPrivateToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20:getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken:getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20:getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken:getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGlassfrogConfiguration:getSourceGlassfrogConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGnewsConfiguration:getSourceGnewsConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "ins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "language": {
                    "type": "string"
                },
                "nullables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "query": {
                    "type": "string"
                },
                "sortby": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "topHeadlinesQuery": {
                    "type": "string"
                },
                "topHeadlinesTopic": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "country",
                "endDate",
                "ins",
                "language",
                "nullables",
                "query",
                "sortby",
                "sourceType",
                "startDate",
                "topHeadlinesQuery",
                "topHeadlinesTopic"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAdsConfiguration:getSourceGoogleAdsConfiguration": {
            "properties": {
                "conversionWindowDays": {
                    "type": "integer"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleAdsConfigurationCredentials:getSourceGoogleAdsConfigurationCredentials"
                },
                "customQueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/getSourceGoogleAdsConfigurationCustomQuery:getSourceGoogleAdsConfigurationCustomQuery"
                    }
                },
                "customerId": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "loginCustomerId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "conversionWindowDays",
                "credentials",
                "customQueries",
                "customerId",
                "endDate",
                "loginCustomerId",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAdsConfigurationCredentials:getSourceGoogleAdsConfigurationCredentials": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "developerToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "developerToken",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAdsConfigurationCustomQuery:getSourceGoogleAdsConfigurationCustomQuery": {
            "properties": {
                "query": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "query",
                "tableName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsDataApiConfiguration:getSourceGoogleAnalyticsDataApiConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentials:getSourceGoogleAnalyticsDataApiConfigurationCredentials"
                },
                "customReports": {
                    "type": "string"
                },
                "dateRangesStartDate": {
                    "type": "string"
                },
                "propertyId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "windowInDays": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "customReports",
                "dateRangesStartDate",
                "propertyId",
                "sourceType",
                "windowInDays"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentials:getSourceGoogleAnalyticsDataApiConfigurationCredentials": {
            "properties": {
                "sourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth"
                },
                "sourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication"
                },
                "sourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth"
                },
                "sourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth",
                "sourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication",
                "sourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth",
                "sourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "credentialsJson": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "credentialsJson"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "credentialsJson": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "credentialsJson"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsV4Configuration:getSourceGoogleAnalyticsV4Configuration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentials:getSourceGoogleAnalyticsV4ConfigurationCredentials"
                },
                "customReports": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "viewId": {
                    "type": "string"
                },
                "windowInDays": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "customReports",
                "sourceType",
                "startDate",
                "viewId",
                "windowInDays"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentials:getSourceGoogleAnalyticsV4ConfigurationCredentials": {
            "properties": {
                "sourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth"
                },
                "sourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication"
                },
                "sourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth"
                },
                "sourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth",
                "sourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication",
                "sourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth",
                "sourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "credentialsJson": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "credentialsJson"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "credentialsJson": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "credentialsJson"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleDirectoryConfiguration:getSourceGoogleDirectoryConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleDirectoryConfigurationCredentials:getSourceGoogleDirectoryConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleDirectoryConfigurationCredentials:getSourceGoogleDirectoryConfigurationCredentials": {
            "properties": {
                "sourceGoogleDirectoryGoogleCredentialsServiceAccountKey": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey"
                },
                "sourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth"
                },
                "sourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey"
                },
                "sourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth"
                }
            },
            "type": "object",
            "required": [
                "sourceGoogleDirectoryGoogleCredentialsServiceAccountKey",
                "sourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth",
                "sourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey",
                "sourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey": {
            "properties": {
                "credentialsJson": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "credentialsTitle",
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "credentialsTitle",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey": {
            "properties": {
                "credentialsJson": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "credentialsTitle",
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "credentialsTitle",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGooglePagespeedInsightsConfiguration:getSourceGooglePagespeedInsightsConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "strategies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "categories",
                "sourceType",
                "strategies",
                "urls"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSearchConsoleConfiguration:getSourceGoogleSearchConsoleConfiguration": {
            "properties": {
                "authorization": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorization:getSourceGoogleSearchConsoleConfigurationAuthorization"
                },
                "customReports": {
                    "type": "string"
                },
                "dataState": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "siteUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorization",
                "customReports",
                "dataState",
                "endDate",
                "siteUrls",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorization:getSourceGoogleSearchConsoleConfigurationAuthorization": {
            "properties": {
                "sourceGoogleSearchConsoleAuthenticationTypeOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth"
                },
                "sourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication"
                },
                "sourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth"
                },
                "sourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourceGoogleSearchConsoleAuthenticationTypeOAuth",
                "sourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication",
                "sourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth",
                "sourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "serviceAccountInfo": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "email",
                "serviceAccountInfo"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "serviceAccountInfo": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "email",
                "serviceAccountInfo"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSheetsConfiguration:getSourceGoogleSheetsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleSheetsConfigurationCredentials:getSourceGoogleSheetsConfigurationCredentials"
                },
                "namesConversion": {
                    "type": "boolean"
                },
                "rowBatchSize": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "spreadsheetId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "namesConversion",
                "rowBatchSize",
                "sourceType",
                "spreadsheetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSheetsConfigurationCredentials:getSourceGoogleSheetsConfigurationCredentials": {
            "properties": {
                "sourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth"
                },
                "sourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication"
                },
                "sourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth"
                },
                "sourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth",
                "sourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication",
                "sourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth",
                "sourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "serviceAccountInfo": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "serviceAccountInfo"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "serviceAccountInfo": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "serviceAccountInfo"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleWebfontsConfiguration:getSourceGoogleWebfontsConfiguration": {
            "properties": {
                "alt": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "prettyPrint": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "alt",
                "apiKey",
                "prettyPrint",
                "sort",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGoogleWorkspaceAdminReportsConfiguration:getSourceGoogleWorkspaceAdminReportsConfiguration": {
            "properties": {
                "credentialsJson": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "lookback": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentialsJson",
                "email",
                "lookback",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGreenhouseConfiguration:getSourceGreenhouseConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceGridlyConfiguration:getSourceGridlyConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "gridId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "gridId",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHarvestConfiguration:getSourceHarvestConfiguration": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceHarvestConfigurationCredentials:getSourceHarvestConfigurationCredentials"
                },
                "replicationEndDate": {
                    "type": "string"
                },
                "replicationStartDate": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "credentials",
                "replicationEndDate",
                "replicationStartDate",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHarvestConfigurationCredentials:getSourceHarvestConfigurationCredentials": {
            "properties": {
                "sourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth:getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth"
                },
                "sourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken"
                },
                "sourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth:getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth"
                },
                "sourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken"
                }
            },
            "type": "object",
            "required": [
                "sourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth",
                "sourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken",
                "sourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth",
                "sourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth:getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth:getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHubplannerConfiguration:getSourceHubplannerConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHubspotConfiguration:getSourceHubspotConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceHubspotConfigurationCredentials:getSourceHubspotConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHubspotConfigurationCredentials:getSourceHubspotConfigurationCredentials": {
            "properties": {
                "sourceHubspotAuthenticationOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth:getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth"
                },
                "sourceHubspotAuthenticationPrivateApp": {
                    "$ref": "#/types/airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp:getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp"
                },
                "sourceHubspotUpdateAuthenticationOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth:getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth"
                },
                "sourceHubspotUpdateAuthenticationPrivateApp": {
                    "$ref": "#/types/airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp:getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp"
                }
            },
            "type": "object",
            "required": [
                "sourceHubspotAuthenticationOAuth",
                "sourceHubspotAuthenticationPrivateApp",
                "sourceHubspotUpdateAuthenticationOAuth",
                "sourceHubspotUpdateAuthenticationPrivateApp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth:getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "credentialsTitle",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp:getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "credentialsTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth:getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "credentialsTitle",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp:getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "credentialsTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "credentialsTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceInsightlyConfiguration:getSourceInsightlyConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceInstagramConfiguration:getSourceInstagramConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceInstatusConfiguration:getSourceInstatusConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceIntercomConfiguration:getSourceIntercomConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceIp2whoisConfiguration:getSourceIp2whoisConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "domain",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceIterableConfiguration:getSourceIterableConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceJiraConfiguration:getSourceJiraConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enableExperimentalStreams": {
                    "type": "boolean"
                },
                "expandIssueChangelog": {
                    "type": "boolean"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "renderFields": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "domain",
                "email",
                "enableExperimentalStreams",
                "expandIssueChangelog",
                "projects",
                "renderFields",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceK6CloudConfiguration:getSourceK6CloudConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceKlarnaConfiguration:getSourceKlarnaConfiguration": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "playground": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "playground",
                "region",
                "sourceType",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceKlaviyoConfiguration:getSourceKlaviyoConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceKustomerSingerConfiguration:getSourceKustomerSingerConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceKyveConfiguration:getSourceKyveConfiguration": {
            "properties": {
                "maxPages": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "poolIds": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startIds": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "maxPages",
                "pageSize",
                "poolIds",
                "sourceType",
                "startIds",
                "urlBase"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLaunchdarklyConfiguration:getSourceLaunchdarklyConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLemlistConfiguration:getSourceLemlistConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLeverHiringConfiguration:getSourceLeverHiringConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceLeverHiringConfigurationCredentials:getSourceLeverHiringConfigurationCredentials"
                },
                "environment": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "environment",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLeverHiringConfigurationCredentials:getSourceLeverHiringConfigurationCredentials": {
            "properties": {
                "sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey": {
                    "$ref": "#/types/airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey"
                },
                "sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth"
                },
                "sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey": {
                    "$ref": "#/types/airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey"
                },
                "sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth"
                }
            },
            "type": "object",
            "required": [
                "sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey",
                "sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth",
                "sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey",
                "sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinAdsConfiguration:getSourceLinkedinAdsConfiguration": {
            "properties": {
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "adAnalyticsReports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/getSourceLinkedinAdsConfigurationAdAnalyticsReport:getSourceLinkedinAdsConfigurationAdAnalyticsReport"
                    }
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceLinkedinAdsConfigurationCredentials:getSourceLinkedinAdsConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountIds",
                "adAnalyticsReports",
                "credentials",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinAdsConfigurationAdAnalyticsReport:getSourceLinkedinAdsConfigurationAdAnalyticsReport": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "pivotBy": {
                    "type": "string"
                },
                "timeGranularity": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "pivotBy",
                "timeGranularity"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinAdsConfigurationCredentials:getSourceLinkedinAdsConfigurationCredentials": {
            "properties": {
                "sourceLinkedinAdsAuthenticationAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken"
                },
                "sourceLinkedinAdsAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20"
                },
                "sourceLinkedinAdsUpdateAuthenticationAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken"
                },
                "sourceLinkedinAdsUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceLinkedinAdsAuthenticationAccessToken",
                "sourceLinkedinAdsAuthenticationOAuth20",
                "sourceLinkedinAdsUpdateAuthenticationAccessToken",
                "sourceLinkedinAdsUpdateAuthenticationOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinPagesConfiguration:getSourceLinkedinPagesConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceLinkedinPagesConfigurationCredentials:getSourceLinkedinPagesConfigurationCredentials"
                },
                "orgId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "orgId",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinPagesConfigurationCredentials:getSourceLinkedinPagesConfigurationCredentials": {
            "properties": {
                "sourceLinkedinPagesAuthenticationAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken"
                },
                "sourceLinkedinPagesAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20"
                },
                "sourceLinkedinPagesUpdateAuthenticationAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken"
                },
                "sourceLinkedinPagesUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceLinkedinPagesAuthenticationAccessToken",
                "sourceLinkedinPagesAuthenticationOAuth20",
                "sourceLinkedinPagesUpdateAuthenticationAccessToken",
                "sourceLinkedinPagesUpdateAuthenticationOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLinnworksConfiguration:getSourceLinnworksConfiguration": {
            "properties": {
                "applicationId": {
                    "type": "string"
                },
                "applicationSecret": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "applicationId",
                "applicationSecret",
                "sourceType",
                "startDate",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceLokaliseConfiguration:getSourceLokaliseConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "projectId",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMailchimpConfiguration:getSourceMailchimpConfiguration": {
            "properties": {
                "campaignId": {
                    "type": "string"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceMailchimpConfigurationCredentials:getSourceMailchimpConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "campaignId",
                "credentials",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMailchimpConfigurationCredentials:getSourceMailchimpConfigurationCredentials": {
            "properties": {
                "sourceMailchimpAuthenticationApiKey": {
                    "$ref": "#/types/airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey:getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey"
                },
                "sourceMailchimpAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20:getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20"
                },
                "sourceMailchimpUpdateAuthenticationApiKey": {
                    "$ref": "#/types/airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey:getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey"
                },
                "sourceMailchimpUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20:getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceMailchimpAuthenticationApiKey",
                "sourceMailchimpAuthenticationOAuth20",
                "sourceMailchimpUpdateAuthenticationApiKey",
                "sourceMailchimpUpdateAuthenticationOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey:getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey": {
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apikey",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20:getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey:getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey": {
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apikey",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20:getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMailgunConfiguration:getSourceMailgunConfiguration": {
            "properties": {
                "domainRegion": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "domainRegion",
                "privateKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMailjetSmsConfiguration:getSourceMailjetSmsConfiguration": {
            "properties": {
                "endDate": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "endDate",
                "sourceType",
                "startDate",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMarketoConfiguration:getSourceMarketoConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "domainUrl": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "domainUrl",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMetabaseConfiguration:getSourceMetabaseConfiguration": {
            "properties": {
                "instanceApiUrl": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "sessionToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "instanceApiUrl",
                "password",
                "sessionToken",
                "sourceType",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMicrosoftTeamsConfiguration:getSourceMicrosoftTeamsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceMicrosoftTeamsConfigurationCredentials:getSourceMicrosoftTeamsConfigurationCredentials"
                },
                "period": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "period",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMicrosoftTeamsConfigurationCredentials:getSourceMicrosoftTeamsConfigurationCredentials": {
            "properties": {
                "sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft": {
                    "$ref": "#/types/airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft"
                },
                "sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20"
                },
                "sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft": {
                    "$ref": "#/types/airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft"
                },
                "sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft",
                "sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20",
                "sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft",
                "sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "tenantId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tenantId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "tenantId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tenantId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMixpanelConfiguration:getSourceMixpanelConfiguration": {
            "properties": {
                "attributionWindow": {
                    "type": "integer"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceMixpanelConfigurationCredentials:getSourceMixpanelConfigurationCredentials"
                },
                "dateWindowSize": {
                    "type": "integer"
                },
                "endDate": {
                    "type": "string"
                },
                "projectId": {
                    "type": "integer"
                },
                "projectTimezone": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "selectPropertiesByDefault": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attributionWindow",
                "credentials",
                "dateWindowSize",
                "endDate",
                "projectId",
                "projectTimezone",
                "region",
                "selectPropertiesByDefault",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMixpanelConfigurationCredentials:getSourceMixpanelConfigurationCredentials": {
            "properties": {
                "sourceMixpanelAuthenticationWildcardProjectSecret": {
                    "$ref": "#/types/airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret:getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret"
                },
                "sourceMixpanelAuthenticationWildcardServiceAccount": {
                    "$ref": "#/types/airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount:getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount"
                },
                "sourceMixpanelUpdateAuthenticationWildcardProjectSecret": {
                    "$ref": "#/types/airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret:getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret"
                },
                "sourceMixpanelUpdateAuthenticationWildcardServiceAccount": {
                    "$ref": "#/types/airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount:getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount"
                }
            },
            "type": "object",
            "required": [
                "sourceMixpanelAuthenticationWildcardProjectSecret",
                "sourceMixpanelAuthenticationWildcardServiceAccount",
                "sourceMixpanelUpdateAuthenticationWildcardProjectSecret",
                "sourceMixpanelUpdateAuthenticationWildcardServiceAccount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret:getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret": {
            "properties": {
                "apiSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiSecret",
                "optionTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount:getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "optionTitle",
                "secret",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret:getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret": {
            "properties": {
                "apiSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiSecret",
                "optionTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount:getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount": {
            "properties": {
                "optionTitle": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "optionTitle",
                "secret",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMondayConfiguration:getSourceMondayConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceMondayConfigurationCredentials:getSourceMondayConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMondayConfigurationCredentials:getSourceMondayConfigurationCredentials": {
            "properties": {
                "sourceMondayAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken:getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken"
                },
                "sourceMondayAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20:getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20"
                },
                "sourceMondayUpdateAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken:getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken"
                },
                "sourceMondayUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20:getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceMondayAuthorizationMethodApiToken",
                "sourceMondayAuthorizationMethodOAuth20",
                "sourceMondayUpdateAuthorizationMethodApiToken",
                "sourceMondayUpdateAuthorizationMethodOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken:getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20:getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "subdomain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken:getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20:getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "subdomain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMongodbConfiguration:getSourceMongodbConfiguration": {
            "properties": {
                "authSource": {
                    "type": "string"
                },
                "database": {
                    "type": "string"
                },
                "instanceType": {
                    "$ref": "#/types/airbyte:index/getSourceMongodbConfigurationInstanceType:getSourceMongodbConfigurationInstanceType"
                },
                "password": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authSource",
                "database",
                "instanceType",
                "password",
                "sourceType",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMongodbConfigurationInstanceType:getSourceMongodbConfigurationInstanceType": {
            "properties": {
                "sourceMongodbMongoDbInstanceTypeMongoDbAtlas": {
                    "$ref": "#/types/airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas:getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas"
                },
                "sourceMongodbMongoDbInstanceTypeReplicaSet": {
                    "$ref": "#/types/airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet:getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet"
                },
                "sourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": {
                    "$ref": "#/types/airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance:getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance"
                },
                "sourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
                    "$ref": "#/types/airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas"
                },
                "sourceMongodbUpdateMongoDbInstanceTypeReplicaSet": {
                    "$ref": "#/types/airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet:getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet"
                },
                "sourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": {
                    "$ref": "#/types/airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance:getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance"
                }
            },
            "type": "object",
            "required": [
                "sourceMongodbMongoDbInstanceTypeMongoDbAtlas",
                "sourceMongodbMongoDbInstanceTypeReplicaSet",
                "sourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance",
                "sourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas",
                "sourceMongodbUpdateMongoDbInstanceTypeReplicaSet",
                "sourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas:getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clusterUrl",
                "instance"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet:getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet": {
            "properties": {
                "instance": {
                    "type": "string"
                },
                "replicaSet": {
                    "type": "string"
                },
                "serverAddresses": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "instance",
                "replicaSet",
                "serverAddresses"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance:getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "host",
                "instance",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "clusterUrl": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clusterUrl",
                "instance"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet:getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet": {
            "properties": {
                "instance": {
                    "type": "string"
                },
                "replicaSet": {
                    "type": "string"
                },
                "serverAddresses": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "instance",
                "replicaSet",
                "serverAddresses"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance:getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": {
            "properties": {
                "host": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "host",
                "instance",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMongodbInternalPocConfiguration:getSourceMongodbInternalPocConfiguration": {
            "properties": {
                "authSource": {
                    "type": "string"
                },
                "connectionString": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "replicaSet": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authSource",
                "connectionString",
                "password",
                "replicaSet",
                "sourceType",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfiguration:getSourceMssqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "replicationMethod": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationReplicationMethod:getSourceMssqlConfigurationReplicationMethod"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "sslMethod": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationSslMethod:getSourceMssqlConfigurationSslMethod"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationTunnelMethod:getSourceMssqlConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "replicationMethod",
                "schemas",
                "sourceType",
                "sslMethod",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationReplicationMethod:getSourceMssqlConfigurationReplicationMethod": {
            "properties": {
                "sourceMssqlReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc:getSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc"
                },
                "sourceMssqlReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard:getSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard"
                },
                "sourceMssqlUpdateReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc:getSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc"
                },
                "sourceMssqlUpdateReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard:getSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard"
                }
            },
            "type": "object",
            "required": [
                "sourceMssqlReplicationMethodLogicalReplicationCdc",
                "sourceMssqlReplicationMethodStandard",
                "sourceMssqlUpdateReplicationMethodLogicalReplicationCdc",
                "sourceMssqlUpdateReplicationMethodStandard"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc:getSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "dataToSync": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "snapshotIsolation": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataToSync",
                "initialWaitingSeconds",
                "method",
                "snapshotIsolation"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard:getSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc:getSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "dataToSync": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "snapshotIsolation": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataToSync",
                "initialWaitingSeconds",
                "method",
                "snapshotIsolation"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard:getSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationSslMethod:getSourceMssqlConfigurationSslMethod": {
            "properties": {
                "sourceMssqlSslMethodEncryptedTrustServerCertificate": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate"
                },
                "sourceMssqlSslMethodEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate"
                },
                "sourceMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate"
                },
                "sourceMssqlUpdateSslMethodEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate"
                }
            },
            "type": "object",
            "required": [
                "sourceMssqlSslMethodEncryptedTrustServerCertificate",
                "sourceMssqlSslMethodEncryptedVerifyCertificate",
                "sourceMssqlUpdateSslMethodEncryptedTrustServerCertificate",
                "sourceMssqlUpdateSslMethodEncryptedVerifyCertificate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate": {
            "properties": {
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate": {
            "properties": {
                "hostNameInCertificate": {
                    "type": "string"
                },
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "hostNameInCertificate",
                "sslMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
            "properties": {
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sslMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate": {
            "properties": {
                "hostNameInCertificate": {
                    "type": "string"
                },
                "sslMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "hostNameInCertificate",
                "sslMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationTunnelMethod:getSourceMssqlConfigurationTunnelMethod": {
            "properties": {
                "sourceMssqlSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel:getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel"
                },
                "sourceMssqlSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication"
                },
                "sourceMssqlSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication"
                },
                "sourceMssqlUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel:getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel"
                },
                "sourceMssqlUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourceMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourceMssqlSshTunnelMethodNoTunnel",
                "sourceMssqlSshTunnelMethodPasswordAuthentication",
                "sourceMssqlSshTunnelMethodSshKeyAuthentication",
                "sourceMssqlUpdateSshTunnelMethodNoTunnel",
                "sourceMssqlUpdateSshTunnelMethodPasswordAuthentication",
                "sourceMssqlUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel:getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel:getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMyHoursConfiguration:getSourceMyHoursConfiguration": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "logsBatchSize": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "email",
                "logsBatchSize",
                "password",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfiguration:getSourceMysqlConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "replicationMethod": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationReplicationMethod:getSourceMysqlConfigurationReplicationMethod"
                },
                "sourceType": {
                    "type": "string"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationSslMode:getSourceMysqlConfigurationSslMode"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationTunnelMethod:getSourceMysqlConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "replicationMethod",
                "sourceType",
                "sslMode",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationReplicationMethod:getSourceMysqlConfigurationReplicationMethod": {
            "properties": {
                "sourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc:getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc"
                },
                "sourceMysqlUpdateMethodScanChangesWithUserDefinedCursor": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor:getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor"
                },
                "sourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc:getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc"
                },
                "sourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor:getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor"
                }
            },
            "type": "object",
            "required": [
                "sourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc",
                "sourceMysqlUpdateMethodScanChangesWithUserDefinedCursor",
                "sourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc",
                "sourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc:getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc": {
            "properties": {
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "serverTimeZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "initialWaitingSeconds",
                "method",
                "serverTimeZone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor:getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc:getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc": {
            "properties": {
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "serverTimeZone": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "initialWaitingSeconds",
                "method",
                "serverTimeZone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor:getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationSslMode:getSourceMysqlConfigurationSslMode": {
            "properties": {
                "sourceMysqlSslModesPreferred": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred:getSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred"
                },
                "sourceMysqlSslModesRequired": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlSslModesRequired:getSourceMysqlConfigurationSslModeSourceMysqlSslModesRequired"
                },
                "sourceMysqlSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa:getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa"
                },
                "sourceMysqlSslModesVerifyIdentity": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity:getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity"
                },
                "sourceMysqlUpdateSslModesPreferred": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred:getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred"
                },
                "sourceMysqlUpdateSslModesRequired": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired:getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired"
                },
                "sourceMysqlUpdateSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa:getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa"
                },
                "sourceMysqlUpdateSslModesVerifyIdentity": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity:getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity"
                }
            },
            "type": "object",
            "required": [
                "sourceMysqlSslModesPreferred",
                "sourceMysqlSslModesRequired",
                "sourceMysqlSslModesVerifyCa",
                "sourceMysqlSslModesVerifyIdentity",
                "sourceMysqlUpdateSslModesPreferred",
                "sourceMysqlUpdateSslModesRequired",
                "sourceMysqlUpdateSslModesVerifyCa",
                "sourceMysqlUpdateSslModesVerifyIdentity"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred:getSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlSslModesRequired:getSourceMysqlConfigurationSslModeSourceMysqlSslModesRequired": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa:getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity:getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred:getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired:getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired": {
            "properties": {
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa:getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity:getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity": {
            "properties": {
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationTunnelMethod:getSourceMysqlConfigurationTunnelMethod": {
            "properties": {
                "sourceMysqlSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel:getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel"
                },
                "sourceMysqlSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication"
                },
                "sourceMysqlSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication"
                },
                "sourceMysqlUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel:getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel"
                },
                "sourceMysqlUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourceMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourceMysqlSshTunnelMethodNoTunnel",
                "sourceMysqlSshTunnelMethodPasswordAuthentication",
                "sourceMysqlSshTunnelMethodSshKeyAuthentication",
                "sourceMysqlUpdateSshTunnelMethodNoTunnel",
                "sourceMysqlUpdateSshTunnelMethodPasswordAuthentication",
                "sourceMysqlUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel:getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel:getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceNetsuiteConfiguration:getSourceNetsuiteConfiguration": {
            "properties": {
                "consumerKey": {
                    "type": "string"
                },
                "consumerSecret": {
                    "type": "string"
                },
                "objectTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "realm": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDatetime": {
                    "type": "string"
                },
                "tokenKey": {
                    "type": "string"
                },
                "tokenSecret": {
                    "type": "string"
                },
                "windowInDays": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "consumerKey",
                "consumerSecret",
                "objectTypes",
                "realm",
                "sourceType",
                "startDatetime",
                "tokenKey",
                "tokenSecret",
                "windowInDays"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceNotionConfiguration:getSourceNotionConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceNotionConfigurationCredentials:getSourceNotionConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceNotionConfigurationCredentials:getSourceNotionConfigurationCredentials": {
            "properties": {
                "sourceNotionAuthenticateUsingAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken:getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken"
                },
                "sourceNotionAuthenticateUsingOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20:getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20"
                },
                "sourceNotionUpdateAuthenticateUsingAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken:getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken"
                },
                "sourceNotionUpdateAuthenticateUsingOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20:getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceNotionAuthenticateUsingAccessToken",
                "sourceNotionAuthenticateUsingOAuth20",
                "sourceNotionUpdateAuthenticateUsingAccessToken",
                "sourceNotionUpdateAuthenticateUsingOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken:getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20:getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken:getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20:getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceNytimesConfiguration:getSourceNytimesConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "period": {
                    "type": "integer"
                },
                "shareType": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "endDate",
                "period",
                "shareType",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOktaConfiguration:getSourceOktaConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceOktaConfigurationCredentials:getSourceOktaConfigurationCredentials"
                },
                "domain": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "domain",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOktaConfigurationCredentials:getSourceOktaConfigurationCredentials": {
            "properties": {
                "sourceOktaAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken:getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken"
                },
                "sourceOktaAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20:getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20"
                },
                "sourceOktaUpdateAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken:getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken"
                },
                "sourceOktaUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20:getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceOktaAuthorizationMethodApiToken",
                "sourceOktaAuthorizationMethodOAuth20",
                "sourceOktaUpdateAuthorizationMethodApiToken",
                "sourceOktaUpdateAuthorizationMethodOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken:getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20:getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken:getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20:getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOmnisendConfiguration:getSourceOmnisendConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOnesignalConfiguration:getSourceOnesignalConfiguration": {
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/getSourceOnesignalConfigurationApplication:getSourceOnesignalConfigurationApplication"
                    }
                },
                "outcomeNames": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "userAuthKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "applications",
                "outcomeNames",
                "sourceType",
                "startDate",
                "userAuthKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOnesignalConfigurationApplication:getSourceOnesignalConfigurationApplication": {
            "properties": {
                "appApiKey": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "appApiKey",
                "appId",
                "appName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOpenweatherConfiguration:getSourceOpenweatherConfiguration": {
            "properties": {
                "appid": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "lat": {
                    "type": "string"
                },
                "lon": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "units": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "appid",
                "lang",
                "lat",
                "lon",
                "sourceType",
                "units"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfiguration:getSourceOracleConfiguration": {
            "properties": {
                "connectionData": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationConnectionData:getSourceOracleConfigurationConnectionData"
                },
                "encryption": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationEncryption:getSourceOracleConfigurationEncryption"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationTunnelMethod:getSourceOracleConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "connectionData",
                "encryption",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "schemas",
                "sourceType",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationConnectionData:getSourceOracleConfigurationConnectionData": {
            "properties": {
                "sourceOracleConnectByServiceName": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName:getSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName"
                },
                "sourceOracleConnectBySystemIdSid": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid:getSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid"
                },
                "sourceOracleUpdateConnectByServiceName": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName:getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName"
                },
                "sourceOracleUpdateConnectBySystemIdSid": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid:getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid"
                }
            },
            "type": "object",
            "required": [
                "sourceOracleConnectByServiceName",
                "sourceOracleConnectBySystemIdSid",
                "sourceOracleUpdateConnectByServiceName",
                "sourceOracleUpdateConnectBySystemIdSid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName:getSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName": {
            "properties": {
                "connectionType": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "connectionType",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid:getSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid": {
            "properties": {
                "connectionType": {
                    "type": "string"
                },
                "sid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "connectionType",
                "sid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName:getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName": {
            "properties": {
                "connectionType": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "connectionType",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid:getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid": {
            "properties": {
                "connectionType": {
                    "type": "string"
                },
                "sid": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "connectionType",
                "sid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationEncryption:getSourceOracleConfigurationEncryption": {
            "properties": {
                "sourceOracleEncryptionNativeNetworkEncryptionNne": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne:getSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne"
                },
                "sourceOracleEncryptionTlsEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate:getSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate"
                },
                "sourceOracleUpdateEncryptionNativeNetworkEncryptionNne": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne:getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne"
                },
                "sourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate:getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate"
                }
            },
            "type": "object",
            "required": [
                "sourceOracleEncryptionNativeNetworkEncryptionNne",
                "sourceOracleEncryptionTlsEncryptedVerifyCertificate",
                "sourceOracleUpdateEncryptionNativeNetworkEncryptionNne",
                "sourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne:getSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne": {
            "properties": {
                "encryptionAlgorithm": {
                    "type": "string"
                },
                "encryptionMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionAlgorithm",
                "encryptionMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate:getSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate": {
            "properties": {
                "encryptionMethod": {
                    "type": "string"
                },
                "sslCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionMethod",
                "sslCertificate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne:getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne": {
            "properties": {
                "encryptionAlgorithm": {
                    "type": "string"
                },
                "encryptionMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionAlgorithm",
                "encryptionMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate:getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate": {
            "properties": {
                "encryptionMethod": {
                    "type": "string"
                },
                "sslCertificate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "encryptionMethod",
                "sslCertificate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationTunnelMethod:getSourceOracleConfigurationTunnelMethod": {
            "properties": {
                "sourceOracleSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel:getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel"
                },
                "sourceOracleSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication"
                },
                "sourceOracleSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication"
                },
                "sourceOracleUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel:getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel"
                },
                "sourceOracleUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourceOracleUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourceOracleSshTunnelMethodNoTunnel",
                "sourceOracleSshTunnelMethodPasswordAuthentication",
                "sourceOracleSshTunnelMethodSshKeyAuthentication",
                "sourceOracleUpdateSshTunnelMethodNoTunnel",
                "sourceOracleUpdateSshTunnelMethodPasswordAuthentication",
                "sourceOracleUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel:getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel:getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOrbConfiguration:getSourceOrbConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "lookbackWindowDays": {
                    "type": "integer"
                },
                "numericEventPropertiesKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "planId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "stringEventPropertiesKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subscriptionUsageGroupingKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "lookbackWindowDays",
                "numericEventPropertiesKeys",
                "planId",
                "sourceType",
                "startDate",
                "stringEventPropertiesKeys",
                "subscriptionUsageGroupingKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOrbitConfiguration:getSourceOrbitConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "sourceType",
                "startDate",
                "workspace"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOutbrainAmplifyConfiguration:getSourceOutbrainAmplifyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceOutbrainAmplifyConfigurationCredentials:getSourceOutbrainAmplifyConfigurationCredentials"
                },
                "endDate": {
                    "type": "string"
                },
                "geoLocationBreakdown": {
                    "type": "string"
                },
                "reportGranularity": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "endDate",
                "geoLocationBreakdown",
                "reportGranularity",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOutbrainAmplifyConfigurationCredentials:getSourceOutbrainAmplifyConfigurationCredentials": {
            "properties": {
                "sourceOutbrainAmplifyAuthenticationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken:getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken"
                },
                "sourceOutbrainAmplifyAuthenticationMethodUsernamePassword": {
                    "$ref": "#/types/airbyte:index/getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword:getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword"
                },
                "sourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken:getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken"
                },
                "sourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword": {
                    "$ref": "#/types/airbyte:index/getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword:getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword"
                }
            },
            "type": "object",
            "required": [
                "sourceOutbrainAmplifyAuthenticationMethodAccessToken",
                "sourceOutbrainAmplifyAuthenticationMethodUsernamePassword",
                "sourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken",
                "sourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken:getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword:getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "type",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken:getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword:getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword": {
            "properties": {
                "password": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "password",
                "type",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceOutreachConfiguration:getSourceOutreachConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "redirectUri": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "redirectUri",
                "refreshToken",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePaypalTransactionConfiguration:getSourcePaypalTransactionConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "isSandbox": {
                    "type": "boolean"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "isSandbox",
                "refreshToken",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePaystackConfiguration:getSourcePaystackConfiguration": {
            "properties": {
                "lookbackWindowDays": {
                    "type": "integer"
                },
                "secretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "lookbackWindowDays",
                "secretKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePendoConfiguration:getSourcePendoConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePersistiqConfiguration:getSourcePersistiqConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePexelsApiConfiguration:getSourcePexelsApiConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "orientation": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "color",
                "locale",
                "orientation",
                "query",
                "size",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePinterestConfiguration:getSourcePinterestConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourcePinterestConfigurationCredentials:getSourcePinterestConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "startDate",
                "statuses"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePinterestConfigurationCredentials:getSourcePinterestConfigurationCredentials": {
            "properties": {
                "sourcePinterestAuthorizationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken:getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken"
                },
                "sourcePinterestAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20:getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20"
                },
                "sourcePinterestUpdateAuthorizationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken:getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken"
                },
                "sourcePinterestUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20:getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourcePinterestAuthorizationMethodAccessToken",
                "sourcePinterestAuthorizationMethodOAuth20",
                "sourcePinterestUpdateAuthorizationMethodAccessToken",
                "sourcePinterestUpdateAuthorizationMethodOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken:getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20:getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken:getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20:getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePipedriveConfiguration:getSourcePipedriveConfiguration": {
            "properties": {
                "authorization": {
                    "$ref": "#/types/airbyte:index/getSourcePipedriveConfigurationAuthorization:getSourcePipedriveConfigurationAuthorization"
                },
                "replicationStartDate": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorization",
                "replicationStartDate",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePipedriveConfigurationAuthorization:getSourcePipedriveConfigurationAuthorization": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePocketConfiguration:getSourcePocketConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "consumerKey": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "detailType": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "favorite": {
                    "type": "boolean"
                },
                "search": {
                    "type": "string"
                },
                "since": {
                    "type": "string"
                },
                "sort": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "consumerKey",
                "contentType",
                "detailType",
                "domain",
                "favorite",
                "search",
                "since",
                "sort",
                "sourceType",
                "state",
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePokeapiConfiguration:getSourcePokeapiConfiguration": {
            "properties": {
                "pokemonName": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "pokemonName",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePolygonStockApiConfiguration:getSourcePolygonStockApiConfiguration": {
            "properties": {
                "adjusted": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "multiplier": {
                    "type": "integer"
                },
                "sort": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "stocksTicker": {
                    "type": "string"
                },
                "timespan": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "adjusted",
                "apiKey",
                "endDate",
                "limit",
                "multiplier",
                "sort",
                "sourceType",
                "startDate",
                "stocksTicker",
                "timespan"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfiguration:getSourcePostgresConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "replicationMethod": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationReplicationMethod:getSourcePostgresConfigurationReplicationMethod"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "sslMode": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslMode:getSourcePostgresConfigurationSslMode"
                },
                "tunnelMethod": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationTunnelMethod:getSourcePostgresConfigurationTunnelMethod"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "replicationMethod",
                "schemas",
                "sourceType",
                "sslMode",
                "tunnelMethod",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationReplicationMethod:getSourcePostgresConfigurationReplicationMethod": {
            "properties": {
                "sourcePostgresReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc:getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc"
                },
                "sourcePostgresReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard:getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard"
                },
                "sourcePostgresReplicationMethodStandardXmin": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin:getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin"
                },
                "sourcePostgresUpdateReplicationMethodLogicalReplicationCdc": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc:getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc"
                },
                "sourcePostgresUpdateReplicationMethodStandard": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard:getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard"
                },
                "sourcePostgresUpdateReplicationMethodStandardXmin": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin:getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin"
                }
            },
            "type": "object",
            "required": [
                "sourcePostgresReplicationMethodLogicalReplicationCdc",
                "sourcePostgresReplicationMethodStandard",
                "sourcePostgresReplicationMethodStandardXmin",
                "sourcePostgresUpdateReplicationMethodLogicalReplicationCdc",
                "sourcePostgresUpdateReplicationMethodStandard",
                "sourcePostgresUpdateReplicationMethodStandardXmin"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc:getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "lsnCommitBehaviour": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                },
                "publication": {
                    "type": "string"
                },
                "queueSize": {
                    "type": "integer"
                },
                "replicationSlot": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "initialWaitingSeconds",
                "lsnCommitBehaviour",
                "method",
                "plugin",
                "publication",
                "queueSize",
                "replicationSlot"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard:getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin:getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc:getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "initialWaitingSeconds": {
                    "type": "integer"
                },
                "lsnCommitBehaviour": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                },
                "publication": {
                    "type": "string"
                },
                "queueSize": {
                    "type": "integer"
                },
                "replicationSlot": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "initialWaitingSeconds",
                "lsnCommitBehaviour",
                "method",
                "plugin",
                "publication",
                "queueSize",
                "replicationSlot"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard:getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin:getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin": {
            "properties": {
                "method": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "method"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslMode:getSourcePostgresConfigurationSslMode": {
            "properties": {
                "sourcePostgresSslModesAllow": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow:getSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow"
                },
                "sourcePostgresSslModesDisable": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable:getSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable"
                },
                "sourcePostgresSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer:getSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer"
                },
                "sourcePostgresSslModesRequire": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire:getSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire"
                },
                "sourcePostgresSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa:getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa"
                },
                "sourcePostgresSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull:getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull"
                },
                "sourcePostgresUpdateSslModesAllow": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow"
                },
                "sourcePostgresUpdateSslModesDisable": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable"
                },
                "sourcePostgresUpdateSslModesPrefer": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer"
                },
                "sourcePostgresUpdateSslModesRequire": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire"
                },
                "sourcePostgresUpdateSslModesVerifyCa": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa"
                },
                "sourcePostgresUpdateSslModesVerifyFull": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull"
                }
            },
            "type": "object",
            "required": [
                "sourcePostgresSslModesAllow",
                "sourcePostgresSslModesDisable",
                "sourcePostgresSslModesPrefer",
                "sourcePostgresSslModesRequire",
                "sourcePostgresSslModesVerifyCa",
                "sourcePostgresSslModesVerifyFull",
                "sourcePostgresUpdateSslModesAllow",
                "sourcePostgresUpdateSslModesDisable",
                "sourcePostgresUpdateSslModesPrefer",
                "sourcePostgresUpdateSslModesRequire",
                "sourcePostgresUpdateSslModesVerifyCa",
                "sourcePostgresUpdateSslModesVerifyFull"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow:getSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable:getSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer:getSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire:getSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa:getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull:getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "caCertificate": {
                    "type": "string"
                },
                "clientCertificate": {
                    "type": "string"
                },
                "clientKey": {
                    "type": "string"
                },
                "clientKeyPassword": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "caCertificate",
                "clientCertificate",
                "clientKey",
                "clientKeyPassword",
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationTunnelMethod:getSourcePostgresConfigurationTunnelMethod": {
            "properties": {
                "sourcePostgresSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel:getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel"
                },
                "sourcePostgresSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication"
                },
                "sourcePostgresSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication"
                },
                "sourcePostgresUpdateSshTunnelMethodNoTunnel": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel:getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel"
                },
                "sourcePostgresUpdateSshTunnelMethodPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication"
                },
                "sourcePostgresUpdateSshTunnelMethodSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourcePostgresSshTunnelMethodNoTunnel",
                "sourcePostgresSshTunnelMethodPasswordAuthentication",
                "sourcePostgresSshTunnelMethodSshKeyAuthentication",
                "sourcePostgresUpdateSshTunnelMethodNoTunnel",
                "sourcePostgresUpdateSshTunnelMethodPasswordAuthentication",
                "sourcePostgresUpdateSshTunnelMethodSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel:getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel:getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel": {
            "properties": {
                "tunnelMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication": {
            "properties": {
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                },
                "tunnelUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser",
                "tunnelUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication": {
            "properties": {
                "sshKey": {
                    "type": "string"
                },
                "tunnelHost": {
                    "type": "string"
                },
                "tunnelMethod": {
                    "type": "string"
                },
                "tunnelPort": {
                    "type": "integer"
                },
                "tunnelUser": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sshKey",
                "tunnelHost",
                "tunnelMethod",
                "tunnelPort",
                "tunnelUser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePosthogConfiguration:getSourcePosthogConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "baseUrl": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "baseUrl",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePostmarkappConfiguration:getSourcePostmarkappConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "xPostmarkAccountToken": {
                    "type": "string"
                },
                "xPostmarkServerToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "xPostmarkAccountToken",
                "xPostmarkServerToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePrestashopConfiguration:getSourcePrestashopConfiguration": {
            "properties": {
                "accessKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessKey",
                "sourceType",
                "startDate",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePublicApisConfiguration:getSourcePublicApisConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePunkApiConfiguration:getSourcePunkApiConfiguration": {
            "properties": {
                "brewedAfter": {
                    "type": "string"
                },
                "brewedBefore": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "brewedAfter",
                "brewedBefore",
                "id",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourcePypiConfiguration:getSourcePypiConfiguration": {
            "properties": {
                "projectName": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "projectName",
                "sourceType",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceQualarooConfiguration:getSourceQualarooConfiguration": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "surveyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "key",
                "sourceType",
                "startDate",
                "surveyIds",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceQuickbooksConfiguration:getSourceQuickbooksConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceQuickbooksConfigurationCredentials:getSourceQuickbooksConfigurationCredentials"
                },
                "sandbox": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sandbox",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceQuickbooksConfigurationCredentials:getSourceQuickbooksConfigurationCredentials": {
            "properties": {
                "sourceQuickbooksAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20:getSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20"
                },
                "sourceQuickbooksUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20:getSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceQuickbooksAuthorizationMethodOAuth20",
                "sourceQuickbooksUpdateAuthorizationMethodOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20:getSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "realmId": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "realmId",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20:getSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "realmId": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "realmId",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRailzConfiguration:getSourceRailzConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "secretKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRechargeConfiguration:getSourceRechargeConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRecreationConfiguration:getSourceRecreationConfiguration": {
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "queryCampsites": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apikey",
                "queryCampsites",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRecruiteeConfiguration:getSourceRecruiteeConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "companyId": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "companyId",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRecurlyConfiguration:getSourceRecurlyConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "beginTime": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "beginTime",
                "endTime",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRedshiftConfiguration:getSourceRedshiftConfiguration": {
            "properties": {
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "jdbcUrlParams",
                "password",
                "port",
                "schemas",
                "sourceType",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRetentlyConfiguration:getSourceRetentlyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceRetentlyConfigurationCredentials:getSourceRetentlyConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRetentlyConfigurationCredentials:getSourceRetentlyConfigurationCredentials": {
            "properties": {
                "sourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth:getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth"
                },
                "sourceRetentlyAuthenticationMechanismAuthenticateWithApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken:getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken"
                },
                "sourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth:getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth"
                },
                "sourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken:getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken"
                }
            },
            "type": "object",
            "required": [
                "sourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth",
                "sourceRetentlyAuthenticationMechanismAuthenticateWithApiToken",
                "sourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth",
                "sourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth:getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken:getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth:getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken:getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRkiCovidConfiguration:getSourceRkiCovidConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceRssConfiguration:getSourceRssConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceS3Configuration:getSourceS3Configuration": {
            "properties": {
                "dataset": {
                    "type": "string"
                },
                "format": {
                    "$ref": "#/types/airbyte:index/getSourceS3ConfigurationFormat:getSourceS3ConfigurationFormat"
                },
                "pathPattern": {
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/types/airbyte:index/getSourceS3ConfigurationProvider:getSourceS3ConfigurationProvider"
                },
                "schema": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "dataset",
                "format",
                "pathPattern",
                "provider",
                "schema",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceS3ConfigurationFormat:getSourceS3ConfigurationFormat": {
            "properties": {
                "sourceS3FileFormatAvro": {
                    "$ref": "#/types/airbyte:index/getSourceS3ConfigurationFormatSourceS3FileFormatAvro:getSourceS3ConfigurationFormatSourceS3FileFormatAvro"
                },
                "sourceS3FileFormatCsv": {
                    "$ref": "#/types/airbyte:index/getSourceS3ConfigurationFormatSourceS3FileFormatCsv:getSourceS3ConfigurationFormatSourceS3FileFormatCsv"
                },
                "sourceS3FileFormatJsonl": {
                    "$ref": "#/types/airbyte:index/getSourceS3ConfigurationFormatSourceS3FileFormatJsonl:getSourceS3ConfigurationFormatSourceS3FileFormatJsonl"
                },
                "sourceS3FileFormatParquet": {
                    "$ref": "#/types/airbyte:index/getSourceS3ConfigurationFormatSourceS3FileFormatParquet:getSourceS3ConfigurationFormatSourceS3FileFormatParquet"
                },
                "sourceS3UpdateFileFormatAvro": {
                    "$ref": "#/types/airbyte:index/getSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro:getSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro"
                },
                "sourceS3UpdateFileFormatCsv": {
                    "$ref": "#/types/airbyte:index/getSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv:getSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv"
                },
                "sourceS3UpdateFileFormatJsonl": {
                    "$ref": "#/types/airbyte:index/getSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl:getSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl"
                },
                "sourceS3UpdateFileFormatParquet": {
                    "$ref": "#/types/airbyte:index/getSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet:getSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet"
                }
            },
            "type": "object",
            "required": [
                "sourceS3FileFormatAvro",
                "sourceS3FileFormatCsv",
                "sourceS3FileFormatJsonl",
                "sourceS3FileFormatParquet",
                "sourceS3UpdateFileFormatAvro",
                "sourceS3UpdateFileFormatCsv",
                "sourceS3UpdateFileFormatJsonl",
                "sourceS3UpdateFileFormatParquet"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceS3ConfigurationFormatSourceS3FileFormatAvro:getSourceS3ConfigurationFormatSourceS3FileFormatAvro": {
            "properties": {
                "filetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "filetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceS3ConfigurationFormatSourceS3FileFormatCsv:getSourceS3ConfigurationFormatSourceS3FileFormatCsv": {
            "properties": {
                "additionalReaderOptions": {
                    "type": "string"
                },
                "advancedOptions": {
                    "type": "string"
                },
                "blockSize": {
                    "type": "integer"
                },
                "delimiter": {
                    "type": "string"
                },
                "doubleQuote": {
                    "type": "boolean"
                },
                "encoding": {
                    "type": "string"
                },
                "escapeChar": {
                    "type": "string"
                },
                "filetype": {
                    "type": "string"
                },
                "inferDatatypes": {
                    "type": "boolean"
                },
                "newlinesInValues": {
                    "type": "boolean"
                },
                "quoteChar": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "additionalReaderOptions",
                "advancedOptions",
                "blockSize",
                "delimiter",
                "doubleQuote",
                "encoding",
                "escapeChar",
                "filetype",
                "inferDatatypes",
                "newlinesInValues",
                "quoteChar"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceS3ConfigurationFormatSourceS3FileFormatJsonl:getSourceS3ConfigurationFormatSourceS3FileFormatJsonl": {
            "properties": {
                "blockSize": {
                    "type": "integer"
                },
                "filetype": {
                    "type": "string"
                },
                "newlinesInValues": {
                    "type": "boolean"
                },
                "unexpectedFieldBehavior": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "blockSize",
                "filetype",
                "newlinesInValues",
                "unexpectedFieldBehavior"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceS3ConfigurationFormatSourceS3FileFormatParquet:getSourceS3ConfigurationFormatSourceS3FileFormatParquet": {
            "properties": {
                "batchSize": {
                    "type": "integer"
                },
                "bufferSize": {
                    "type": "integer"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "batchSize",
                "bufferSize",
                "columns",
                "filetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro:getSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro": {
            "properties": {
                "filetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "filetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv:getSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv": {
            "properties": {
                "additionalReaderOptions": {
                    "type": "string"
                },
                "advancedOptions": {
                    "type": "string"
                },
                "blockSize": {
                    "type": "integer"
                },
                "delimiter": {
                    "type": "string"
                },
                "doubleQuote": {
                    "type": "boolean"
                },
                "encoding": {
                    "type": "string"
                },
                "escapeChar": {
                    "type": "string"
                },
                "filetype": {
                    "type": "string"
                },
                "inferDatatypes": {
                    "type": "boolean"
                },
                "newlinesInValues": {
                    "type": "boolean"
                },
                "quoteChar": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "additionalReaderOptions",
                "advancedOptions",
                "blockSize",
                "delimiter",
                "doubleQuote",
                "encoding",
                "escapeChar",
                "filetype",
                "inferDatatypes",
                "newlinesInValues",
                "quoteChar"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl:getSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl": {
            "properties": {
                "blockSize": {
                    "type": "integer"
                },
                "filetype": {
                    "type": "string"
                },
                "newlinesInValues": {
                    "type": "boolean"
                },
                "unexpectedFieldBehavior": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "blockSize",
                "filetype",
                "newlinesInValues",
                "unexpectedFieldBehavior"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet:getSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet": {
            "properties": {
                "batchSize": {
                    "type": "integer"
                },
                "bufferSize": {
                    "type": "integer"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filetype": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "batchSize",
                "bufferSize",
                "columns",
                "filetype"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceS3ConfigurationProvider:getSourceS3ConfigurationProvider": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string"
                },
                "awsSecretAccessKey": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "pathPrefix": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsAccessKeyId",
                "awsSecretAccessKey",
                "bucket",
                "endpoint",
                "pathPrefix",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSalesforceConfiguration:getSourceSalesforceConfiguration": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "forceUseBulkApi": {
                    "type": "boolean"
                },
                "isSandbox": {
                    "type": "boolean"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "streamsCriterias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/airbyte:index/getSourceSalesforceConfigurationStreamsCriteria:getSourceSalesforceConfigurationStreamsCriteria"
                    }
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "forceUseBulkApi",
                "isSandbox",
                "refreshToken",
                "sourceType",
                "startDate",
                "streamsCriterias"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSalesforceConfigurationStreamsCriteria:getSourceSalesforceConfigurationStreamsCriteria": {
            "properties": {
                "criteria": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "criteria",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSalesloftConfiguration:getSourceSalesloftConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceSalesloftConfigurationCredentials:getSourceSalesloftConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSalesloftConfigurationCredentials:getSourceSalesloftConfigurationCredentials": {
            "properties": {
                "sourceSalesloftCredentialsAuthenticateViaApiKey": {
                    "$ref": "#/types/airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey:getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey"
                },
                "sourceSalesloftCredentialsAuthenticateViaOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth:getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth"
                },
                "sourceSalesloftUpdateCredentialsAuthenticateViaApiKey": {
                    "$ref": "#/types/airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey:getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey"
                },
                "sourceSalesloftUpdateCredentialsAuthenticateViaOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth:getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth"
                }
            },
            "type": "object",
            "required": [
                "sourceSalesloftCredentialsAuthenticateViaApiKey",
                "sourceSalesloftCredentialsAuthenticateViaOAuth",
                "sourceSalesloftUpdateCredentialsAuthenticateViaApiKey",
                "sourceSalesloftUpdateCredentialsAuthenticateViaOAuth"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey:getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth:getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey:getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth:getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSapFieldglassConfiguration:getSourceSapFieldglassConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSecodaConfiguration:getSourceSecodaConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSendgridConfiguration:getSourceSendgridConfiguration": {
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apikey",
                "sourceType",
                "startTime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSendinblueConfiguration:getSourceSendinblueConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSenseforceConfiguration:getSourceSenseforceConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "backendUrl": {
                    "type": "string"
                },
                "datasetId": {
                    "type": "string"
                },
                "sliceRange": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "backendUrl",
                "datasetId",
                "sliceRange",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSentryConfiguration:getSourceSentryConfiguration": {
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "discoverFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "discoverFields",
                "hostname",
                "organization",
                "project",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSftpBulkConfiguration:getSourceSftpBulkConfiguration": {
            "properties": {
                "fileMostRecent": {
                    "type": "boolean"
                },
                "filePattern": {
                    "type": "string"
                },
                "fileType": {
                    "type": "string"
                },
                "folderPath": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "privateKey": {
                    "type": "string"
                },
                "separator": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "streamName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "fileMostRecent",
                "filePattern",
                "fileType",
                "folderPath",
                "host",
                "password",
                "port",
                "privateKey",
                "separator",
                "sourceType",
                "startDate",
                "streamName",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSftpConfiguration:getSourceSftpConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceSftpConfigurationCredentials:getSourceSftpConfigurationCredentials"
                },
                "filePattern": {
                    "type": "string"
                },
                "fileTypes": {
                    "type": "string"
                },
                "folderPath": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "filePattern",
                "fileTypes",
                "folderPath",
                "host",
                "port",
                "sourceType",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSftpConfigurationCredentials:getSourceSftpConfigurationCredentials": {
            "properties": {
                "sourceSftpAuthenticationWildcardPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication:getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication"
                },
                "sourceSftpAuthenticationWildcardSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication:getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication"
                },
                "sourceSftpUpdateAuthenticationWildcardPasswordAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication:getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication"
                },
                "sourceSftpUpdateAuthenticationWildcardSshKeyAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication:getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourceSftpAuthenticationWildcardPasswordAuthentication",
                "sourceSftpAuthenticationWildcardSshKeyAuthentication",
                "sourceSftpUpdateAuthenticationWildcardPasswordAuthentication",
                "sourceSftpUpdateAuthenticationWildcardSshKeyAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication:getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "authUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "authUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication:getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "authSshKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "authSshKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication:getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "authUserPassword": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "authUserPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication:getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication": {
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "authSshKey": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authMethod",
                "authSshKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceShopifyConfiguration:getSourceShopifyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceShopifyConfigurationCredentials:getSourceShopifyConfigurationCredentials"
                },
                "shop": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "shop",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceShopifyConfigurationCredentials:getSourceShopifyConfigurationCredentials": {
            "properties": {
                "sourceShopifyShopifyAuthorizationMethodApiPassword": {
                    "$ref": "#/types/airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword:getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword"
                },
                "sourceShopifyShopifyAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20:getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20"
                },
                "sourceShopifyUpdateShopifyAuthorizationMethodApiPassword": {
                    "$ref": "#/types/airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword:getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword"
                },
                "sourceShopifyUpdateShopifyAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20:getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceShopifyShopifyAuthorizationMethodApiPassword",
                "sourceShopifyShopifyAuthorizationMethodOAuth20",
                "sourceShopifyUpdateShopifyAuthorizationMethodApiPassword",
                "sourceShopifyUpdateShopifyAuthorizationMethodOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword:getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword": {
            "properties": {
                "apiPassword": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiPassword",
                "authMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20:getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword:getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword": {
            "properties": {
                "apiPassword": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiPassword",
                "authMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20:getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceShortioConfiguration:getSourceShortioConfiguration": {
            "properties": {
                "domainId": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "domainId",
                "secretKey",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSlackConfiguration:getSourceSlackConfiguration": {
            "properties": {
                "channelFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceSlackConfigurationCredentials:getSourceSlackConfigurationCredentials"
                },
                "joinChannels": {
                    "type": "boolean"
                },
                "lookbackWindow": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "channelFilters",
                "credentials",
                "joinChannels",
                "lookbackWindow",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSlackConfigurationCredentials:getSourceSlackConfigurationCredentials": {
            "properties": {
                "sourceSlackAuthenticationMechanismApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken:getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken"
                },
                "sourceSlackAuthenticationMechanismSignInViaSlackOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth:getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth"
                },
                "sourceSlackUpdateAuthenticationMechanismApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken:getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken"
                },
                "sourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth": {
                    "$ref": "#/types/airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth:getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth"
                }
            },
            "type": "object",
            "required": [
                "sourceSlackAuthenticationMechanismApiToken",
                "sourceSlackAuthenticationMechanismSignInViaSlackOAuth",
                "sourceSlackUpdateAuthenticationMechanismApiToken",
                "sourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken:getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "optionTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth:getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "optionTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken:getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "optionTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth:getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "optionTitle": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "optionTitle"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSmailyConfiguration:getSourceSmailyConfiguration": {
            "properties": {
                "apiPassword": {
                    "type": "string"
                },
                "apiSubdomain": {
                    "type": "string"
                },
                "apiUsername": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiPassword",
                "apiSubdomain",
                "apiUsername",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSmartengageConfiguration:getSourceSmartengageConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSmartsheetsConfiguration:getSourceSmartsheetsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceSmartsheetsConfigurationCredentials:getSourceSmartsheetsConfigurationCredentials"
                },
                "metadataFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "spreadsheetId": {
                    "type": "string"
                },
                "startDatetime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "metadataFields",
                "sourceType",
                "spreadsheetId",
                "startDatetime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSmartsheetsConfigurationCredentials:getSourceSmartsheetsConfigurationCredentials": {
            "properties": {
                "sourceSmartsheetsAuthorizationMethodApiAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken"
                },
                "sourceSmartsheetsAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20"
                },
                "sourceSmartsheetsUpdateAuthorizationMethodApiAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken"
                },
                "sourceSmartsheetsUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceSmartsheetsAuthorizationMethodApiAccessToken",
                "sourceSmartsheetsAuthorizationMethodOAuth20",
                "sourceSmartsheetsUpdateAuthorizationMethodApiAccessToken",
                "sourceSmartsheetsUpdateAuthorizationMethodOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSnapchatMarketingConfiguration:getSourceSnapchatMarketingConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "endDate",
                "refreshToken",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSnowflakeConfiguration:getSourceSnowflakeConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceSnowflakeConfigurationCredentials:getSourceSnowflakeConfigurationCredentials"
                },
                "database": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "jdbcUrlParams": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "warehouse": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "database",
                "host",
                "jdbcUrlParams",
                "role",
                "schema",
                "sourceType",
                "warehouse"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSnowflakeConfigurationCredentials:getSourceSnowflakeConfigurationCredentials": {
            "properties": {
                "sourceSnowflakeAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20"
                },
                "sourceSnowflakeAuthorizationMethodUsernameAndPassword": {
                    "$ref": "#/types/airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword"
                },
                "sourceSnowflakeUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20"
                },
                "sourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
                    "$ref": "#/types/airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword"
                }
            },
            "type": "object",
            "required": [
                "sourceSnowflakeAuthorizationMethodOAuth20",
                "sourceSnowflakeAuthorizationMethodUsernameAndPassword",
                "sourceSnowflakeUpdateAuthorizationMethodOAuth20",
                "sourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "password",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSonarCloudConfiguration:getSourceSonarCloudConfiguration": {
            "properties": {
                "componentKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endDate": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "userToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "componentKeys",
                "endDate",
                "organization",
                "sourceType",
                "startDate",
                "userToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSpaceXApiConfiguration:getSourceSpaceXApiConfiguration": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "options": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "options",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSquareConfiguration:getSourceSquareConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceSquareConfigurationCredentials:getSourceSquareConfigurationCredentials"
                },
                "includeDeletedObjects": {
                    "type": "boolean"
                },
                "isSandbox": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "includeDeletedObjects",
                "isSandbox",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSquareConfigurationCredentials:getSourceSquareConfigurationCredentials": {
            "properties": {
                "sourceSquareAuthenticationApiKey": {
                    "$ref": "#/types/airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey:getSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey"
                },
                "sourceSquareAuthenticationOauthAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication:getSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication"
                },
                "sourceSquareUpdateAuthenticationApiKey": {
                    "$ref": "#/types/airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey:getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey"
                },
                "sourceSquareUpdateAuthenticationOauthAuthentication": {
                    "$ref": "#/types/airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication:getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication"
                }
            },
            "type": "object",
            "required": [
                "sourceSquareAuthenticationApiKey",
                "sourceSquareAuthenticationOauthAuthentication",
                "sourceSquareUpdateAuthenticationApiKey",
                "sourceSquareUpdateAuthenticationOauthAuthentication"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey:getSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication:getSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey:getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication:getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceStravaConfiguration:getSourceStravaConfiguration": {
            "properties": {
                "athleteId": {
                    "type": "integer"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "athleteId",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceStripeConfiguration:getSourceStripeConfiguration": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "lookbackWindowDays": {
                    "type": "integer"
                },
                "sliceRange": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "clientSecret",
                "lookbackWindowDays",
                "sliceRange",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSurveySparrowConfiguration:getSourceSurveySparrowConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "region": {
                    "$ref": "#/types/airbyte:index/getSourceSurveySparrowConfigurationRegion:getSourceSurveySparrowConfigurationRegion"
                },
                "sourceType": {
                    "type": "string"
                },
                "surveyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "region",
                "sourceType",
                "surveyIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSurveySparrowConfigurationRegion:getSourceSurveySparrowConfigurationRegion": {
            "properties": {
                "sourceSurveySparrowBaseUrlEuBasedAccount": {
                    "$ref": "#/types/airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount"
                },
                "sourceSurveySparrowBaseUrlGlobalAccount": {
                    "$ref": "#/types/airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount"
                },
                "sourceSurveySparrowUpdateBaseUrlEuBasedAccount": {
                    "$ref": "#/types/airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount"
                },
                "sourceSurveySparrowUpdateBaseUrlGlobalAccount": {
                    "$ref": "#/types/airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount"
                }
            },
            "type": "object",
            "required": [
                "sourceSurveySparrowBaseUrlEuBasedAccount",
                "sourceSurveySparrowBaseUrlGlobalAccount",
                "sourceSurveySparrowUpdateBaseUrlEuBasedAccount",
                "sourceSurveySparrowUpdateBaseUrlGlobalAccount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount": {
            "properties": {
                "urlBase": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "urlBase"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount": {
            "properties": {
                "urlBase": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "urlBase"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount": {
            "properties": {
                "urlBase": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "urlBase"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount": {
            "properties": {
                "urlBase": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "urlBase"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSurveymonkeyConfiguration:getSourceSurveymonkeyConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceSurveymonkeyConfigurationCredentials:getSourceSurveymonkeyConfigurationCredentials"
                },
                "origin": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "surveyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "origin",
                "sourceType",
                "startDate",
                "surveyIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceSurveymonkeyConfigurationCredentials:getSourceSurveymonkeyConfigurationCredentials": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTempoConfiguration:getSourceTempoConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTheGuardianApiConfiguration:getSourceTheGuardianApiConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "section": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "endDate",
                "query",
                "section",
                "sourceType",
                "startDate",
                "tag"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTiktokMarketingConfiguration:getSourceTiktokMarketingConfiguration": {
            "properties": {
                "attributionWindow": {
                    "type": "integer"
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceTiktokMarketingConfigurationCredentials:getSourceTiktokMarketingConfigurationCredentials"
                },
                "endDate": {
                    "type": "string"
                },
                "includeDeleted": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "attributionWindow",
                "credentials",
                "endDate",
                "includeDeleted",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTiktokMarketingConfigurationCredentials:getSourceTiktokMarketingConfigurationCredentials": {
            "properties": {
                "sourceTiktokMarketingAuthenticationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20"
                },
                "sourceTiktokMarketingAuthenticationMethodSandboxAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken"
                },
                "sourceTiktokMarketingUpdateAuthenticationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20"
                },
                "sourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken"
                }
            },
            "type": "object",
            "required": [
                "sourceTiktokMarketingAuthenticationMethodOAuth20",
                "sourceTiktokMarketingAuthenticationMethodSandboxAccessToken",
                "sourceTiktokMarketingUpdateAuthenticationMethodOAuth20",
                "sourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "advertiserId": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "advertiserId",
                "appId",
                "authType",
                "secret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "advertiserId": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "advertiserId",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "advertiserId": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "advertiserId",
                "appId",
                "authType",
                "secret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "advertiserId": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "advertiserId",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTodoistConfiguration:getSourceTodoistConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTrelloConfiguration:getSourceTrelloConfiguration": {
            "properties": {
                "boardIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "boardIds",
                "key",
                "sourceType",
                "startDate",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTrustpilotConfiguration:getSourceTrustpilotConfiguration": {
            "properties": {
                "businessUnits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceTrustpilotConfigurationCredentials:getSourceTrustpilotConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "businessUnits",
                "credentials",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTrustpilotConfigurationCredentials:getSourceTrustpilotConfigurationCredentials": {
            "properties": {
                "sourceTrustpilotAuthorizationMethodApiKey": {
                    "$ref": "#/types/airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey"
                },
                "sourceTrustpilotAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20"
                },
                "sourceTrustpilotUpdateAuthorizationMethodApiKey": {
                    "$ref": "#/types/airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey"
                },
                "sourceTrustpilotUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceTrustpilotAuthorizationMethodApiKey",
                "sourceTrustpilotAuthorizationMethodOAuth20",
                "sourceTrustpilotUpdateAuthorizationMethodApiKey",
                "sourceTrustpilotUpdateAuthorizationMethodOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey": {
            "properties": {
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authType",
                "clientId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTvmazeScheduleConfiguration:getSourceTvmazeScheduleConfiguration": {
            "properties": {
                "domesticScheduleCountryCode": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "webScheduleCountryCode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "domesticScheduleCountryCode",
                "endDate",
                "sourceType",
                "startDate",
                "webScheduleCountryCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTwilioConfiguration:getSourceTwilioConfiguration": {
            "properties": {
                "accountSid": {
                    "type": "string"
                },
                "authToken": {
                    "type": "string"
                },
                "lookbackWindow": {
                    "type": "integer"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountSid",
                "authToken",
                "lookbackWindow",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTwilioTaskrouterConfiguration:getSourceTwilioTaskrouterConfiguration": {
            "properties": {
                "accountSid": {
                    "type": "string"
                },
                "authToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountSid",
                "authToken",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTwitterConfiguration:getSourceTwitterConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "endDate",
                "query",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTypeformConfiguration:getSourceTypeformConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceTypeformConfigurationCredentials:getSourceTypeformConfigurationCredentials"
                },
                "formIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "formIds",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTypeformConfigurationCredentials:getSourceTypeformConfigurationCredentials": {
            "properties": {
                "sourceTypeformAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20:getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20"
                },
                "sourceTypeformAuthorizationMethodPrivateToken": {
                    "$ref": "#/types/airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken:getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken"
                },
                "sourceTypeformUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20:getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20"
                },
                "sourceTypeformUpdateAuthorizationMethodPrivateToken": {
                    "$ref": "#/types/airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken:getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken"
                }
            },
            "type": "object",
            "required": [
                "sourceTypeformAuthorizationMethodOAuth20",
                "sourceTypeformAuthorizationMethodPrivateToken",
                "sourceTypeformUpdateAuthorizationMethodOAuth20",
                "sourceTypeformUpdateAuthorizationMethodPrivateToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20:getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken:getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20:getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken:getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceUsCensusConfiguration:getSourceUsCensusConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "queryParams": {
                    "type": "string"
                },
                "queryPath": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "queryParams",
                "queryPath",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceVantageConfiguration:getSourceVantageConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceWebflowConfiguration:getSourceWebflowConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "siteId",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceWhiskyHunterConfiguration:getSourceWhiskyHunterConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceWikipediaPageviewsConfiguration:getSourceWikipediaPageviewsConfiguration": {
            "properties": {
                "access": {
                    "type": "string"
                },
                "agent": {
                    "type": "string"
                },
                "article": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "access",
                "agent",
                "article",
                "country",
                "end",
                "project",
                "sourceType",
                "start"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceWoocommerceConfiguration:getSourceWoocommerceConfiguration": {
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "apiSecret": {
                    "type": "string"
                },
                "shop": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "apiSecret",
                "shop",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceXeroConfiguration:getSourceXeroConfiguration": {
            "properties": {
                "authentication": {
                    "$ref": "#/types/airbyte:index/getSourceXeroConfigurationAuthentication:getSourceXeroConfigurationAuthentication"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authentication",
                "sourceType",
                "startDate",
                "tenantId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceXeroConfigurationAuthentication:getSourceXeroConfigurationAuthentication": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "tokenExpiryDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "refreshToken",
                "tokenExpiryDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceXkcdConfiguration:getSourceXkcdConfiguration": {
            "properties": {
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceYandexMetricaConfiguration:getSourceYandexMetricaConfiguration": {
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "counterId": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authToken",
                "counterId",
                "endDate",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceYotpoConfiguration:getSourceYotpoConfiguration": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "appKey": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "appKey",
                "email",
                "sourceType",
                "startDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceYouniumConfiguration:getSourceYouniumConfiguration": {
            "properties": {
                "legalEntity": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "playground": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "legalEntity",
                "password",
                "playground",
                "sourceType",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceYoutubeAnalyticsConfiguration:getSourceYoutubeAnalyticsConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceYoutubeAnalyticsConfigurationCredentials:getSourceYoutubeAnalyticsConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceYoutubeAnalyticsConfigurationCredentials:getSourceYoutubeAnalyticsConfigurationCredentials": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskChatConfiguration:getSourceZendeskChatConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskChatConfigurationCredentials:getSourceZendeskChatConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "startDate",
                "subdomain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskChatConfigurationCredentials:getSourceZendeskChatConfigurationCredentials": {
            "properties": {
                "sourceZendeskChatAuthorizationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken"
                },
                "sourceZendeskChatAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20"
                },
                "sourceZendeskChatUpdateAuthorizationMethodAccessToken": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken"
                },
                "sourceZendeskChatUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceZendeskChatAuthorizationMethodAccessToken",
                "sourceZendeskChatAuthorizationMethodOAuth20",
                "sourceZendeskChatUpdateAuthorizationMethodAccessToken",
                "sourceZendeskChatUpdateAuthorizationMethodOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "credentials",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "credentials",
                "refreshToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSunshineConfiguration:getSourceZendeskSunshineConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskSunshineConfigurationCredentials:getSourceZendeskSunshineConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "startDate",
                "subdomain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSunshineConfigurationCredentials:getSourceZendeskSunshineConfigurationCredentials": {
            "properties": {
                "sourceZendeskSunshineAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken"
                },
                "sourceZendeskSunshineAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20"
                },
                "sourceZendeskSunshineUpdateAuthorizationMethodApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken"
                },
                "sourceZendeskSunshineUpdateAuthorizationMethodOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceZendeskSunshineAuthorizationMethodApiToken",
                "sourceZendeskSunshineAuthorizationMethodOAuth20",
                "sourceZendeskSunshineUpdateAuthorizationMethodApiToken",
                "sourceZendeskSunshineUpdateAuthorizationMethodOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authMethod",
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authMethod",
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "authMethod": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authMethod",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSupportConfiguration:getSourceZendeskSupportConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskSupportConfigurationCredentials:getSourceZendeskSupportConfigurationCredentials"
                },
                "ignorePagination": {
                    "type": "boolean"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "ignorePagination",
                "sourceType",
                "startDate",
                "subdomain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSupportConfigurationCredentials:getSourceZendeskSupportConfigurationCredentials": {
            "properties": {
                "sourceZendeskSupportAuthenticationApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken"
                },
                "sourceZendeskSupportAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20"
                },
                "sourceZendeskSupportUpdateAuthenticationApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken"
                },
                "sourceZendeskSupportUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceZendeskSupportAuthenticationApiToken",
                "sourceZendeskSupportAuthenticationOAuth20",
                "sourceZendeskSupportUpdateAuthenticationApiToken",
                "sourceZendeskSupportUpdateAuthenticationOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "credentials",
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "credentials",
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "credentials": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "clientId",
                "clientSecret",
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskTalkConfiguration:getSourceZendeskTalkConfiguration": {
            "properties": {
                "credentials": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskTalkConfigurationCredentials:getSourceZendeskTalkConfigurationCredentials"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "sourceType",
                "startDate",
                "subdomain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskTalkConfigurationCredentials:getSourceZendeskTalkConfigurationCredentials": {
            "properties": {
                "sourceZendeskTalkAuthenticationApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken"
                },
                "sourceZendeskTalkAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20"
                },
                "sourceZendeskTalkUpdateAuthenticationApiToken": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken"
                },
                "sourceZendeskTalkUpdateAuthenticationOAuth20": {
                    "$ref": "#/types/airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20"
                }
            },
            "type": "object",
            "required": [
                "sourceZendeskTalkAuthenticationApiToken",
                "sourceZendeskTalkAuthenticationOAuth20",
                "sourceZendeskTalkUpdateAuthenticationApiToken",
                "sourceZendeskTalkUpdateAuthenticationOAuth20"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType",
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken": {
            "properties": {
                "additionalProperties": {
                    "type": "string"
                },
                "apiToken": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "authType",
                "email"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "additionalProperties": {
                    "type": "string"
                },
                "authType": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "authType",
                "clientId",
                "clientSecret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZenloopConfiguration:getSourceZenloopConfiguration": {
            "properties": {
                "apiToken": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "surveyGroupId": {
                    "type": "string"
                },
                "surveyId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "apiToken",
                "dateFrom",
                "sourceType",
                "surveyGroupId",
                "surveyId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZohoCrmConfiguration:getSourceZohoCrmConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "dcRegion": {
                    "type": "string"
                },
                "edition": {
                    "type": "string"
                },
                "environment": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDatetime": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "dcRegion",
                "edition",
                "environment",
                "refreshToken",
                "sourceType",
                "startDatetime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZoomConfiguration:getSourceZoomConfiguration": {
            "properties": {
                "jwtToken": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "jwtToken",
                "sourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "airbyte:index/getSourceZuoraConfiguration:getSourceZuoraConfiguration": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "dataQuery": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "tenantEndpoint": {
                    "type": "string"
                },
                "windowInDays": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "clientSecret",
                "dataQuery",
                "sourceType",
                "startDate",
                "tenantEndpoint",
                "windowInDays"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the airbyte package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "bearerAuth": {
                "type": "string",
                "secret": true
            },
            "password": {
                "type": "string",
                "secret": true
            },
            "serverUrl": {
                "type": "string",
                "description": "Server URL (defaults to https://api.airbyte.com/v1)\n"
            },
            "username": {
                "type": "string",
                "secret": true
            }
        },
        "inputProperties": {
            "bearerAuth": {
                "type": "string",
                "secret": true
            },
            "password": {
                "type": "string",
                "secret": true
            },
            "serverUrl": {
                "type": "string",
                "description": "Server URL (defaults to https://api.airbyte.com/v1)\n"
            },
            "username": {
                "type": "string",
                "secret": true
            }
        }
    },
    "resources": {
        "airbyte:index/connection:Connection": {
            "properties": {
                "configurations": {
                    "$ref": "#/types/airbyte:index/ConnectionConfigurations:ConnectionConfigurations",
                    "description": "A list of configured stream options for a connection.\n"
                },
                "connectionId": {
                    "type": "string"
                },
                "dataResidency": {
                    "type": "string",
                    "description": "must be one of [\"auto\", \"us\", \"eu\"]\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Optional name of the connection\n"
                },
                "namespaceDefinition": {
                    "type": "string",
                    "description": "must be one of [\"source\", \"destination\", \"custom_format\"] Define the location where the data will be stored in the\ndestination\n"
                },
                "namespaceFormat": {
                    "type": "string",
                    "description": "Used when namespaceDefinition is 'custom_format'. If blank then behaves like namespaceDefinition = 'destination'. If\n\"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n"
                },
                "nonBreakingSchemaUpdatesBehavior": {
                    "type": "string",
                    "description": "must be one of [\"ignore\", \"disable_connection\", \"propagate_columns\", \"propagate_fully\"] Set how Airbyte handles syncs\nwhen it detects a non-breaking schema change in the source\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix that will be prepended to the name of each stream when it is written to the destination (ex. “airbyte_”\ncauses “projects” =\u003e “airbyte_projects”).\n"
                },
                "schedule": {
                    "$ref": "#/types/airbyte:index/ConnectionSchedule:ConnectionSchedule",
                    "description": "schedule for when the the connection should run, per the schedule type\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "must be one of [\"active\", \"inactive\", \"deprecated\"]\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configurations",
                "connectionId",
                "dataResidency",
                "destinationId",
                "name",
                "namespaceDefinition",
                "namespaceFormat",
                "nonBreakingSchemaUpdatesBehavior",
                "prefix",
                "schedule",
                "sourceId",
                "status",
                "workspaceId"
            ],
            "inputProperties": {
                "configurations": {
                    "$ref": "#/types/airbyte:index/ConnectionConfigurations:ConnectionConfigurations",
                    "description": "A list of configured stream options for a connection.\n"
                },
                "dataResidency": {
                    "type": "string",
                    "description": "must be one of [\"auto\", \"us\", \"eu\"]\n"
                },
                "destinationId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Optional name of the connection\n"
                },
                "namespaceDefinition": {
                    "type": "string",
                    "description": "must be one of [\"source\", \"destination\", \"custom_format\"] Define the location where the data will be stored in the\ndestination\n"
                },
                "namespaceFormat": {
                    "type": "string",
                    "description": "Used when namespaceDefinition is 'custom_format'. If blank then behaves like namespaceDefinition = 'destination'. If\n\"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n"
                },
                "nonBreakingSchemaUpdatesBehavior": {
                    "type": "string",
                    "description": "must be one of [\"ignore\", \"disable_connection\", \"propagate_columns\", \"propagate_fully\"] Set how Airbyte handles syncs\nwhen it detects a non-breaking schema change in the source\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix that will be prepended to the name of each stream when it is written to the destination (ex. “airbyte_”\ncauses “projects” =\u003e “airbyte_projects”).\n"
                },
                "schedule": {
                    "$ref": "#/types/airbyte:index/ConnectionSchedule:ConnectionSchedule",
                    "description": "schedule for when the the connection should run, per the schedule type\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "must be one of [\"active\", \"inactive\", \"deprecated\"]\n"
                }
            },
            "requiredInputs": [
                "destinationId",
                "sourceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Connection resources.\n",
                "properties": {
                    "configurations": {
                        "$ref": "#/types/airbyte:index/ConnectionConfigurations:ConnectionConfigurations",
                        "description": "A list of configured stream options for a connection.\n"
                    },
                    "connectionId": {
                        "type": "string"
                    },
                    "dataResidency": {
                        "type": "string",
                        "description": "must be one of [\"auto\", \"us\", \"eu\"]\n"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Optional name of the connection\n"
                    },
                    "namespaceDefinition": {
                        "type": "string",
                        "description": "must be one of [\"source\", \"destination\", \"custom_format\"] Define the location where the data will be stored in the\ndestination\n"
                    },
                    "namespaceFormat": {
                        "type": "string",
                        "description": "Used when namespaceDefinition is 'custom_format'. If blank then behaves like namespaceDefinition = 'destination'. If\n\"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'.\n"
                    },
                    "nonBreakingSchemaUpdatesBehavior": {
                        "type": "string",
                        "description": "must be one of [\"ignore\", \"disable_connection\", \"propagate_columns\", \"propagate_fully\"] Set how Airbyte handles syncs\nwhen it detects a non-breaking schema change in the source\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "Prefix that will be prepended to the name of each stream when it is written to the destination (ex. “airbyte_”\ncauses “projects” =\u003e “airbyte_projects”).\n"
                    },
                    "schedule": {
                        "$ref": "#/types/airbyte:index/ConnectionSchedule:ConnectionSchedule",
                        "description": "schedule for when the the connection should run, per the schedule type\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "must be one of [\"active\", \"inactive\", \"deprecated\"]\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationAWSDatalake:DestinationAWSDatalake": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfiguration:DestinationAWSDatalakeConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfiguration:DestinationAWSDatalakeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationAWSDatalake resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationAWSDatalakeConfiguration:DestinationAWSDatalakeConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationAzureBlobStorage:DestinationAzureBlobStorage": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfiguration:DestinationAzureBlobStorageConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfiguration:DestinationAzureBlobStorageConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationAzureBlobStorage resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationAzureBlobStorageConfiguration:DestinationAzureBlobStorageConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationBigquery:DestinationBigquery": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfiguration:DestinationBigqueryConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryConfiguration:DestinationBigqueryConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationBigquery resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationBigqueryConfiguration:DestinationBigqueryConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationBigqueryDenormalized:DestinationBigqueryDenormalized": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfiguration:DestinationBigqueryDenormalizedConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfiguration:DestinationBigqueryDenormalizedConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationBigqueryDenormalized resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationBigqueryDenormalizedConfiguration:DestinationBigqueryDenormalizedConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationClickhouse:DestinationClickhouse": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfiguration:DestinationClickhouseConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationClickhouseConfiguration:DestinationClickhouseConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationClickhouse resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationClickhouseConfiguration:DestinationClickhouseConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationConvex:DestinationConvex": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationConvexConfiguration:DestinationConvexConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationConvexConfiguration:DestinationConvexConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationConvex resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationConvexConfiguration:DestinationConvexConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationCumulio:DestinationCumulio": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationCumulioConfiguration:DestinationCumulioConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationCumulioConfiguration:DestinationCumulioConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationCumulio resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationCumulioConfiguration:DestinationCumulioConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationDatabend:DestinationDatabend": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDatabendConfiguration:DestinationDatabendConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDatabendConfiguration:DestinationDatabendConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationDatabend resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationDatabendConfiguration:DestinationDatabendConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationDatabricks:DestinationDatabricks": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfiguration:DestinationDatabricksConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDatabricksConfiguration:DestinationDatabricksConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationDatabricks resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationDatabricksConfiguration:DestinationDatabricksConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationDevNull:DestinationDevNull": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDevNullConfiguration:DestinationDevNullConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDevNullConfiguration:DestinationDevNullConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationDevNull resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationDevNullConfiguration:DestinationDevNullConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationDynamodb:DestinationDynamodb": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDynamodbConfiguration:DestinationDynamodbConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationDynamodbConfiguration:DestinationDynamodbConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationDynamodb resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationDynamodbConfiguration:DestinationDynamodbConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationElasticsearch:DestinationElasticsearch": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfiguration:DestinationElasticsearchConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationElasticsearchConfiguration:DestinationElasticsearchConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationElasticsearch resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationElasticsearchConfiguration:DestinationElasticsearchConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationFirebolt:DestinationFirebolt": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationFireboltConfiguration:DestinationFireboltConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationFireboltConfiguration:DestinationFireboltConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationFirebolt resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationFireboltConfiguration:DestinationFireboltConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationFirestore:DestinationFirestore": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationFirestoreConfiguration:DestinationFirestoreConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationFirestoreConfiguration:DestinationFirestoreConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationFirestore resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationFirestoreConfiguration:DestinationFirestoreConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationGcs:DestinationGcs": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfiguration:DestinationGcsConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationGcsConfiguration:DestinationGcsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationGcs resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationGcsConfiguration:DestinationGcsConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationGoogleSheets:DestinationGoogleSheets": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationGoogleSheetsConfiguration:DestinationGoogleSheetsConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationGoogleSheetsConfiguration:DestinationGoogleSheetsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationGoogleSheets resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationGoogleSheetsConfiguration:DestinationGoogleSheetsConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationKeen:DestinationKeen": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationKeenConfiguration:DestinationKeenConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationKeenConfiguration:DestinationKeenConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationKeen resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationKeenConfiguration:DestinationKeenConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationKinesis:DestinationKinesis": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationKinesisConfiguration:DestinationKinesisConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationKinesisConfiguration:DestinationKinesisConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationKinesis resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationKinesisConfiguration:DestinationKinesisConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationLangchain:DestinationLangchain": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfiguration:DestinationLangchainConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationLangchainConfiguration:DestinationLangchainConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationLangchain resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationLangchainConfiguration:DestinationLangchainConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationMSsql:DestinationMSsql": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfiguration:DestinationMSsqlConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMSsqlConfiguration:DestinationMSsqlConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationMSsql resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationMSsqlConfiguration:DestinationMSsqlConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationMongodb:DestinationMongodb": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfiguration:DestinationMongodbConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMongodbConfiguration:DestinationMongodbConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationMongodb resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationMongodbConfiguration:DestinationMongodbConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationMysql:DestinationMysql": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfiguration:DestinationMysqlConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationMysqlConfiguration:DestinationMysqlConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationMysql resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationMysqlConfiguration:DestinationMysqlConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationOracle:DestinationOracle": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfiguration:DestinationOracleConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationOracleConfiguration:DestinationOracleConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationOracle resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationOracleConfiguration:DestinationOracleConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationPostgres:DestinationPostgres": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfiguration:DestinationPostgresConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationPostgresConfiguration:DestinationPostgresConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationPostgres resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationPostgresConfiguration:DestinationPostgresConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationPubsub:DestinationPubsub": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationPubsubConfiguration:DestinationPubsubConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationPubsubConfiguration:DestinationPubsubConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationPubsub resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationPubsubConfiguration:DestinationPubsubConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationRedis:DestinationRedis": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfiguration:DestinationRedisConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationRedisConfiguration:DestinationRedisConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationRedis resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationRedisConfiguration:DestinationRedisConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationRedshift:DestinationRedshift": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfiguration:DestinationRedshiftConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationRedshiftConfiguration:DestinationRedshiftConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationRedshift resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationRedshiftConfiguration:DestinationRedshiftConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationS3:DestinationS3": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationS3Configuration:DestinationS3Configuration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationS3Configuration:DestinationS3Configuration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationS3 resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationS3Configuration:DestinationS3Configuration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationS3Glue:DestinationS3Glue": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfiguration:DestinationS3GlueConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationS3GlueConfiguration:DestinationS3GlueConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationS3Glue resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationS3GlueConfiguration:DestinationS3GlueConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationSftpJson:DestinationSftpJson": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationSftpJsonConfiguration:DestinationSftpJsonConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationSftpJsonConfiguration:DestinationSftpJsonConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationSftpJson resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationSftpJsonConfiguration:DestinationSftpJsonConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationSnowflake:DestinationSnowflake": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfiguration:DestinationSnowflakeConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationSnowflakeConfiguration:DestinationSnowflakeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationSnowflake resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationSnowflakeConfiguration:DestinationSnowflakeConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationTimeplus:DestinationTimeplus": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationTimeplusConfiguration:DestinationTimeplusConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationTimeplusConfiguration:DestinationTimeplusConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationTimeplus resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationTimeplusConfiguration:DestinationTimeplusConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationTypesense:DestinationTypesense": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationTypesenseConfiguration:DestinationTypesenseConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationTypesenseConfiguration:DestinationTypesenseConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationTypesense resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationTypesenseConfiguration:DestinationTypesenseConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationVertica:DestinationVertica": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationVerticaConfiguration:DestinationVerticaConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationVerticaConfiguration:DestinationVerticaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationVertica resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationVerticaConfiguration:DestinationVerticaConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/destinationXata:DestinationXata": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationXataConfiguration:DestinationXataConfiguration"
                },
                "destinationId": {
                    "type": "string"
                },
                "destinationType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "destinationId",
                "destinationType",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/DestinationXataConfiguration:DestinationXataConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DestinationXata resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/DestinationXataConfiguration:DestinationXataConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "destinationType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAha:SourceAha": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAhaConfiguration:SourceAhaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAhaConfiguration:SourceAhaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAha resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAhaConfiguration:SourceAhaConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAircall:SourceAircall": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAircallConfiguration:SourceAircallConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAircallConfiguration:SourceAircallConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAircall resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAircallConfiguration:SourceAircallConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAirtable:SourceAirtable": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfiguration:SourceAirtableConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAirtableConfiguration:SourceAirtableConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAirtable resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAirtableConfiguration:SourceAirtableConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAlloydb:SourceAlloydb": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfiguration:SourceAlloydbConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAlloydbConfiguration:SourceAlloydbConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAlloydb resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAlloydbConfiguration:SourceAlloydbConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAmazonAds:SourceAmazonAds": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonAdsConfiguration:SourceAmazonAdsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonAdsConfiguration:SourceAmazonAdsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAmazonAds resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAmazonAdsConfiguration:SourceAmazonAdsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAmazonSellerPartner:SourceAmazonSellerPartner": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonSellerPartnerConfiguration:SourceAmazonSellerPartnerConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonSellerPartnerConfiguration:SourceAmazonSellerPartnerConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAmazonSellerPartner resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAmazonSellerPartnerConfiguration:SourceAmazonSellerPartnerConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAmazonSqs:SourceAmazonSqs": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonSqsConfiguration:SourceAmazonSqsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmazonSqsConfiguration:SourceAmazonSqsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAmazonSqs resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAmazonSqsConfiguration:SourceAmazonSqsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAmplitude:SourceAmplitude": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmplitudeConfiguration:SourceAmplitudeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAmplitudeConfiguration:SourceAmplitudeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAmplitude resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAmplitudeConfiguration:SourceAmplitudeConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceApifyDataset:SourceApifyDataset": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceApifyDatasetConfiguration:SourceApifyDatasetConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceApifyDatasetConfiguration:SourceApifyDatasetConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceApifyDataset resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceApifyDatasetConfiguration:SourceApifyDatasetConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAppfollow:SourceAppfollow": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAppfollowConfiguration:SourceAppfollowConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAppfollowConfiguration:SourceAppfollowConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAppfollow resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAppfollowConfiguration:SourceAppfollowConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAsana:SourceAsana": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfiguration:SourceAsanaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAsanaConfiguration:SourceAsanaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAsana resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAsanaConfiguration:SourceAsanaConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAuth0:SourceAuth0": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAuth0Configuration:SourceAuth0Configuration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAuth0Configuration:SourceAuth0Configuration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAuth0 resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAuth0Configuration:SourceAuth0Configuration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAwsCloudtrail:SourceAwsCloudtrail": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAwsCloudtrailConfiguration:SourceAwsCloudtrailConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAwsCloudtrailConfiguration:SourceAwsCloudtrailConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAwsCloudtrail resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAwsCloudtrailConfiguration:SourceAwsCloudtrailConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAzureBlobStorage:SourceAzureBlobStorage": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfiguration:SourceAzureBlobStorageConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfiguration:SourceAzureBlobStorageConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAzureBlobStorage resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAzureBlobStorageConfiguration:SourceAzureBlobStorageConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceAzureTable:SourceAzureTable": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAzureTableConfiguration:SourceAzureTableConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceAzureTableConfiguration:SourceAzureTableConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceAzureTable resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceAzureTableConfiguration:SourceAzureTableConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceBambooHr:SourceBambooHr": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBambooHrConfiguration:SourceBambooHrConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBambooHrConfiguration:SourceBambooHrConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceBambooHr resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceBambooHrConfiguration:SourceBambooHrConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceBigcommerce:SourceBigcommerce": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBigcommerceConfiguration:SourceBigcommerceConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBigcommerceConfiguration:SourceBigcommerceConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceBigcommerce resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceBigcommerceConfiguration:SourceBigcommerceConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceBigquery:SourceBigquery": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBigqueryConfiguration:SourceBigqueryConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBigqueryConfiguration:SourceBigqueryConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceBigquery resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceBigqueryConfiguration:SourceBigqueryConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceBingAds:SourceBingAds": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBingAdsConfiguration:SourceBingAdsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBingAdsConfiguration:SourceBingAdsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceBingAds resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceBingAdsConfiguration:SourceBingAdsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceBraintree:SourceBraintree": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBraintreeConfiguration:SourceBraintreeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBraintreeConfiguration:SourceBraintreeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceBraintree resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceBraintreeConfiguration:SourceBraintreeConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceBraze:SourceBraze": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBrazeConfiguration:SourceBrazeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceBrazeConfiguration:SourceBrazeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceBraze resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceBrazeConfiguration:SourceBrazeConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceChargebee:SourceChargebee": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceChargebeeConfiguration:SourceChargebeeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceChargebeeConfiguration:SourceChargebeeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceChargebee resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceChargebeeConfiguration:SourceChargebeeConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceChartmogul:SourceChartmogul": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceChartmogulConfiguration:SourceChartmogulConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceChartmogulConfiguration:SourceChartmogulConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceChartmogul resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceChartmogulConfiguration:SourceChartmogulConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceClickhouse:SourceClickhouse": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfiguration:SourceClickhouseConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClickhouseConfiguration:SourceClickhouseConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceClickhouse resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceClickhouseConfiguration:SourceClickhouseConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceClickupApi:SourceClickupApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClickupApiConfiguration:SourceClickupApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClickupApiConfiguration:SourceClickupApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceClickupApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceClickupApiConfiguration:SourceClickupApiConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceClockify:SourceClockify": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClockifyConfiguration:SourceClockifyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceClockifyConfiguration:SourceClockifyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceClockify resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceClockifyConfiguration:SourceClockifyConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceCloseCom:SourceCloseCom": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCloseComConfiguration:SourceCloseComConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCloseComConfiguration:SourceCloseComConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceCloseCom resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceCloseComConfiguration:SourceCloseComConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceCoda:SourceCoda": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCodaConfiguration:SourceCodaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCodaConfiguration:SourceCodaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceCoda resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceCodaConfiguration:SourceCodaConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceCoinApi:SourceCoinApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCoinApiConfiguration:SourceCoinApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCoinApiConfiguration:SourceCoinApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceCoinApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceCoinApiConfiguration:SourceCoinApiConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceCoinmarketcap:SourceCoinmarketcap": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCoinmarketcapConfiguration:SourceCoinmarketcapConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceCoinmarketcapConfiguration:SourceCoinmarketcapConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceCoinmarketcap resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceCoinmarketcapConfiguration:SourceCoinmarketcapConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceConfigcat:SourceConfigcat": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConfigcatConfiguration:SourceConfigcatConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConfigcatConfiguration:SourceConfigcatConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceConfigcat resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceConfigcatConfiguration:SourceConfigcatConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceConfluence:SourceConfluence": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConfluenceConfiguration:SourceConfluenceConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConfluenceConfiguration:SourceConfluenceConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceConfluence resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceConfluenceConfiguration:SourceConfluenceConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceConvex:SourceConvex": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConvexConfiguration:SourceConvexConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceConvexConfiguration:SourceConvexConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceConvex resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceConvexConfiguration:SourceConvexConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDatadog:SourceDatadog": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDatadogConfiguration:SourceDatadogConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDatadogConfiguration:SourceDatadogConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDatadog resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDatadogConfiguration:SourceDatadogConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDatascope:SourceDatascope": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDatascopeConfiguration:SourceDatascopeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDatascopeConfiguration:SourceDatascopeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDatascope resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDatascopeConfiguration:SourceDatascopeConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDelighted:SourceDelighted": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDelightedConfiguration:SourceDelightedConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDelightedConfiguration:SourceDelightedConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDelighted resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDelightedConfiguration:SourceDelightedConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDixa:SourceDixa": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDixaConfiguration:SourceDixaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDixaConfiguration:SourceDixaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDixa resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDixaConfiguration:SourceDixaConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDockerhub:SourceDockerhub": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDockerhubConfiguration:SourceDockerhubConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDockerhubConfiguration:SourceDockerhubConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDockerhub resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDockerhubConfiguration:SourceDockerhubConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDremio:SourceDremio": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDremioConfiguration:SourceDremioConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDremioConfiguration:SourceDremioConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDremio resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDremioConfiguration:SourceDremioConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceDynamodb:SourceDynamodb": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDynamodbConfiguration:SourceDynamodbConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceDynamodbConfiguration:SourceDynamodbConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceDynamodb resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceDynamodbConfiguration:SourceDynamodbConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceE2eTestCloud:SourceE2eTestCloud": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceE2eTestCloudConfiguration:SourceE2eTestCloudConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceE2eTestCloudConfiguration:SourceE2eTestCloudConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceE2eTestCloud resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceE2eTestCloudConfiguration:SourceE2eTestCloudConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceEmailoctopus:SourceEmailoctopus": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceEmailoctopusConfiguration:SourceEmailoctopusConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceEmailoctopusConfiguration:SourceEmailoctopusConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceEmailoctopus resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceEmailoctopusConfiguration:SourceEmailoctopusConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceExchangeRates:SourceExchangeRates": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceExchangeRatesConfiguration:SourceExchangeRatesConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceExchangeRatesConfiguration:SourceExchangeRatesConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceExchangeRates resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceExchangeRatesConfiguration:SourceExchangeRatesConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFacebookMarketing:SourceFacebookMarketing": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFacebookMarketingConfiguration:SourceFacebookMarketingConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFacebookMarketingConfiguration:SourceFacebookMarketingConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFacebookMarketing resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFacebookMarketingConfiguration:SourceFacebookMarketingConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFacebookPages:SourceFacebookPages": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFacebookPagesConfiguration:SourceFacebookPagesConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFacebookPagesConfiguration:SourceFacebookPagesConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFacebookPages resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFacebookPagesConfiguration:SourceFacebookPagesConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFaker:SourceFaker": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFakerConfiguration:SourceFakerConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFakerConfiguration:SourceFakerConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFaker resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFakerConfiguration:SourceFakerConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFauna:SourceFauna": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfiguration:SourceFaunaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFaunaConfiguration:SourceFaunaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFauna resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFaunaConfiguration:SourceFaunaConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFileSecure:SourceFileSecure": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfiguration:SourceFileSecureConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFileSecureConfiguration:SourceFileSecureConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFileSecure resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFileSecureConfiguration:SourceFileSecureConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFirebolt:SourceFirebolt": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFireboltConfiguration:SourceFireboltConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFireboltConfiguration:SourceFireboltConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFirebolt resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFireboltConfiguration:SourceFireboltConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFreshcaller:SourceFreshcaller": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshcallerConfiguration:SourceFreshcallerConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshcallerConfiguration:SourceFreshcallerConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFreshcaller resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFreshcallerConfiguration:SourceFreshcallerConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFreshdesk:SourceFreshdesk": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshdeskConfiguration:SourceFreshdeskConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshdeskConfiguration:SourceFreshdeskConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFreshdesk resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFreshdeskConfiguration:SourceFreshdeskConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceFreshsales:SourceFreshsales": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshsalesConfiguration:SourceFreshsalesConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceFreshsalesConfiguration:SourceFreshsalesConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceFreshsales resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceFreshsalesConfiguration:SourceFreshsalesConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGainsightPx:SourceGainsightPx": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGainsightPxConfiguration:SourceGainsightPxConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGainsightPxConfiguration:SourceGainsightPxConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGainsightPx resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGainsightPxConfiguration:SourceGainsightPxConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGcs:SourceGcs": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGcsConfiguration:SourceGcsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGcsConfiguration:SourceGcsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGcs resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGcsConfiguration:SourceGcsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGetlago:SourceGetlago": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGetlagoConfiguration:SourceGetlagoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGetlagoConfiguration:SourceGetlagoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGetlago resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGetlagoConfiguration:SourceGetlagoConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGithub:SourceGithub": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfiguration:SourceGithubConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGithubConfiguration:SourceGithubConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGithub resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGithubConfiguration:SourceGithubConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGitlab:SourceGitlab": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfiguration:SourceGitlabConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGitlabConfiguration:SourceGitlabConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGitlab resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGitlabConfiguration:SourceGitlabConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGlassfrog:SourceGlassfrog": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGlassfrogConfiguration:SourceGlassfrogConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGlassfrogConfiguration:SourceGlassfrogConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGlassfrog resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGlassfrogConfiguration:SourceGlassfrogConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGnews:SourceGnews": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGnewsConfiguration:SourceGnewsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGnewsConfiguration:SourceGnewsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGnews resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGnewsConfiguration:SourceGnewsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleAds:SourceGoogleAds": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAdsConfiguration:SourceGoogleAdsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAdsConfiguration:SourceGoogleAdsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleAds resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAdsConfiguration:SourceGoogleAdsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleAnalyticsDataApi:SourceGoogleAnalyticsDataApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfiguration:SourceGoogleAnalyticsDataApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfiguration:SourceGoogleAnalyticsDataApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleAnalyticsDataApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsDataApiConfiguration:SourceGoogleAnalyticsDataApiConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleAnalyticsV4:SourceGoogleAnalyticsV4": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4Configuration:SourceGoogleAnalyticsV4Configuration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4Configuration:SourceGoogleAnalyticsV4Configuration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleAnalyticsV4 resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleAnalyticsV4Configuration:SourceGoogleAnalyticsV4Configuration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleDirectory:SourceGoogleDirectory": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfiguration:SourceGoogleDirectoryConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfiguration:SourceGoogleDirectoryConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleDirectory resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleDirectoryConfiguration:SourceGoogleDirectoryConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGooglePagespeedInsights:SourceGooglePagespeedInsights": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGooglePagespeedInsightsConfiguration:SourceGooglePagespeedInsightsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGooglePagespeedInsightsConfiguration:SourceGooglePagespeedInsightsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGooglePagespeedInsights resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGooglePagespeedInsightsConfiguration:SourceGooglePagespeedInsightsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleSearchConsole:SourceGoogleSearchConsole": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfiguration:SourceGoogleSearchConsoleConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfiguration:SourceGoogleSearchConsoleConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleSearchConsole resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleSearchConsoleConfiguration:SourceGoogleSearchConsoleConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleSheets:SourceGoogleSheets": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfiguration:SourceGoogleSheetsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfiguration:SourceGoogleSheetsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleSheets resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleSheetsConfiguration:SourceGoogleSheetsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleWebfonts:SourceGoogleWebfonts": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleWebfontsConfiguration:SourceGoogleWebfontsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleWebfontsConfiguration:SourceGoogleWebfontsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleWebfonts resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleWebfontsConfiguration:SourceGoogleWebfontsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGoogleWorkspaceAdminReports:SourceGoogleWorkspaceAdminReports": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleWorkspaceAdminReportsConfiguration:SourceGoogleWorkspaceAdminReportsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGoogleWorkspaceAdminReportsConfiguration:SourceGoogleWorkspaceAdminReportsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGoogleWorkspaceAdminReports resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGoogleWorkspaceAdminReportsConfiguration:SourceGoogleWorkspaceAdminReportsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGreenhouse:SourceGreenhouse": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGreenhouseConfiguration:SourceGreenhouseConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGreenhouseConfiguration:SourceGreenhouseConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGreenhouse resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGreenhouseConfiguration:SourceGreenhouseConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceGridly:SourceGridly": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGridlyConfiguration:SourceGridlyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceGridlyConfiguration:SourceGridlyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceGridly resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceGridlyConfiguration:SourceGridlyConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceHarvest:SourceHarvest": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfiguration:SourceHarvestConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHarvestConfiguration:SourceHarvestConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceHarvest resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceHarvestConfiguration:SourceHarvestConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceHubplanner:SourceHubplanner": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHubplannerConfiguration:SourceHubplannerConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHubplannerConfiguration:SourceHubplannerConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceHubplanner resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceHubplannerConfiguration:SourceHubplannerConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceHubspot:SourceHubspot": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfiguration:SourceHubspotConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceHubspotConfiguration:SourceHubspotConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceHubspot resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceHubspotConfiguration:SourceHubspotConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceInsightly:SourceInsightly": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInsightlyConfiguration:SourceInsightlyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInsightlyConfiguration:SourceInsightlyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceInsightly resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceInsightlyConfiguration:SourceInsightlyConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceInstagram:SourceInstagram": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInstagramConfiguration:SourceInstagramConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInstagramConfiguration:SourceInstagramConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceInstagram resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceInstagramConfiguration:SourceInstagramConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceInstatus:SourceInstatus": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInstatusConfiguration:SourceInstatusConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceInstatusConfiguration:SourceInstatusConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceInstatus resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceInstatusConfiguration:SourceInstatusConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceIntercom:SourceIntercom": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIntercomConfiguration:SourceIntercomConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIntercomConfiguration:SourceIntercomConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceIntercom resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceIntercomConfiguration:SourceIntercomConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceIp2whois:SourceIp2whois": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIp2whoisConfiguration:SourceIp2whoisConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIp2whoisConfiguration:SourceIp2whoisConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceIp2whois resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceIp2whoisConfiguration:SourceIp2whoisConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceIterable:SourceIterable": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIterableConfiguration:SourceIterableConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceIterableConfiguration:SourceIterableConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceIterable resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceIterableConfiguration:SourceIterableConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceJira:SourceJira": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceJiraConfiguration:SourceJiraConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceJiraConfiguration:SourceJiraConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceJira resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceJiraConfiguration:SourceJiraConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceK6Cloud:SourceK6Cloud": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceK6CloudConfiguration:SourceK6CloudConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceK6CloudConfiguration:SourceK6CloudConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceK6Cloud resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceK6CloudConfiguration:SourceK6CloudConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceKlarna:SourceKlarna": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKlarnaConfiguration:SourceKlarnaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKlarnaConfiguration:SourceKlarnaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceKlarna resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceKlarnaConfiguration:SourceKlarnaConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceKlaviyo:SourceKlaviyo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKlaviyoConfiguration:SourceKlaviyoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKlaviyoConfiguration:SourceKlaviyoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceKlaviyo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceKlaviyoConfiguration:SourceKlaviyoConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceKustomerSinger:SourceKustomerSinger": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKustomerSingerConfiguration:SourceKustomerSingerConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKustomerSingerConfiguration:SourceKustomerSingerConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceKustomerSinger resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceKustomerSingerConfiguration:SourceKustomerSingerConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceKyve:SourceKyve": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKyveConfiguration:SourceKyveConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceKyveConfiguration:SourceKyveConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceKyve resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceKyveConfiguration:SourceKyveConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLaunchdarkly:SourceLaunchdarkly": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLaunchdarklyConfiguration:SourceLaunchdarklyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLaunchdarklyConfiguration:SourceLaunchdarklyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLaunchdarkly resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLaunchdarklyConfiguration:SourceLaunchdarklyConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLemlist:SourceLemlist": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLemlistConfiguration:SourceLemlistConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLemlistConfiguration:SourceLemlistConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLemlist resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLemlistConfiguration:SourceLemlistConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLeverHiring:SourceLeverHiring": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfiguration:SourceLeverHiringConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLeverHiringConfiguration:SourceLeverHiringConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLeverHiring resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLeverHiringConfiguration:SourceLeverHiringConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLinkedinAds:SourceLinkedinAds": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfiguration:SourceLinkedinAdsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfiguration:SourceLinkedinAdsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLinkedinAds resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLinkedinAdsConfiguration:SourceLinkedinAdsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLinkedinPages:SourceLinkedinPages": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfiguration:SourceLinkedinPagesConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfiguration:SourceLinkedinPagesConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLinkedinPages resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLinkedinPagesConfiguration:SourceLinkedinPagesConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLinnworks:SourceLinnworks": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinnworksConfiguration:SourceLinnworksConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLinnworksConfiguration:SourceLinnworksConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLinnworks resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLinnworksConfiguration:SourceLinnworksConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceLokalise:SourceLokalise": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLokaliseConfiguration:SourceLokaliseConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceLokaliseConfiguration:SourceLokaliseConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceLokalise resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceLokaliseConfiguration:SourceLokaliseConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMailchimp:SourceMailchimp": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfiguration:SourceMailchimpConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailchimpConfiguration:SourceMailchimpConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMailchimp resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMailchimpConfiguration:SourceMailchimpConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMailgun:SourceMailgun": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailgunConfiguration:SourceMailgunConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailgunConfiguration:SourceMailgunConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMailgun resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMailgunConfiguration:SourceMailgunConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMailjetSms:SourceMailjetSms": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailjetSmsConfiguration:SourceMailjetSmsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMailjetSmsConfiguration:SourceMailjetSmsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMailjetSms resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMailjetSmsConfiguration:SourceMailjetSmsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMarketo:SourceMarketo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMarketoConfiguration:SourceMarketoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMarketoConfiguration:SourceMarketoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMarketo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMarketoConfiguration:SourceMarketoConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMetabase:SourceMetabase": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMetabaseConfiguration:SourceMetabaseConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMetabaseConfiguration:SourceMetabaseConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMetabase resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMetabaseConfiguration:SourceMetabaseConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMicrosoftTeams:SourceMicrosoftTeams": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfiguration:SourceMicrosoftTeamsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfiguration:SourceMicrosoftTeamsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMicrosoftTeams resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMicrosoftTeamsConfiguration:SourceMicrosoftTeamsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMixpanel:SourceMixpanel": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfiguration:SourceMixpanelConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMixpanelConfiguration:SourceMixpanelConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMixpanel resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMixpanelConfiguration:SourceMixpanelConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMonday:SourceMonday": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfiguration:SourceMondayConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMondayConfiguration:SourceMondayConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMonday resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMondayConfiguration:SourceMondayConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMongodb:SourceMongodb": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMongodbConfiguration:SourceMongodbConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMongodbConfiguration:SourceMongodbConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMongodb resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMongodbConfiguration:SourceMongodbConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMongodbInternalPoc:SourceMongodbInternalPoc": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMongodbInternalPocConfiguration:SourceMongodbInternalPocConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMongodbInternalPocConfiguration:SourceMongodbInternalPocConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMongodbInternalPoc resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMongodbInternalPocConfiguration:SourceMongodbInternalPocConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMssql:SourceMssql": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfiguration:SourceMssqlConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMssqlConfiguration:SourceMssqlConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMssql resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMssqlConfiguration:SourceMssqlConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMyHours:SourceMyHours": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMyHoursConfiguration:SourceMyHoursConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMyHoursConfiguration:SourceMyHoursConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMyHours resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMyHoursConfiguration:SourceMyHoursConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceMysql:SourceMysql": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfiguration:SourceMysqlConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceMysqlConfiguration:SourceMysqlConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceMysql resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceMysqlConfiguration:SourceMysqlConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceNetsuite:SourceNetsuite": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNetsuiteConfiguration:SourceNetsuiteConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNetsuiteConfiguration:SourceNetsuiteConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceNetsuite resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceNetsuiteConfiguration:SourceNetsuiteConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceNotion:SourceNotion": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfiguration:SourceNotionConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNotionConfiguration:SourceNotionConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceNotion resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceNotionConfiguration:SourceNotionConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceNytimes:SourceNytimes": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNytimesConfiguration:SourceNytimesConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceNytimesConfiguration:SourceNytimesConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceNytimes resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceNytimesConfiguration:SourceNytimesConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOkta:SourceOkta": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfiguration:SourceOktaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOktaConfiguration:SourceOktaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOkta resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOktaConfiguration:SourceOktaConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOmnisend:SourceOmnisend": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOmnisendConfiguration:SourceOmnisendConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOmnisendConfiguration:SourceOmnisendConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOmnisend resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOmnisendConfiguration:SourceOmnisendConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOnesignal:SourceOnesignal": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOnesignalConfiguration:SourceOnesignalConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOnesignalConfiguration:SourceOnesignalConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOnesignal resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOnesignalConfiguration:SourceOnesignalConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOpenweather:SourceOpenweather": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOpenweatherConfiguration:SourceOpenweatherConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOpenweatherConfiguration:SourceOpenweatherConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOpenweather resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOpenweatherConfiguration:SourceOpenweatherConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOracle:SourceOracle": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfiguration:SourceOracleConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOracleConfiguration:SourceOracleConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOracle resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOracleConfiguration:SourceOracleConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOrb:SourceOrb": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOrbConfiguration:SourceOrbConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOrbConfiguration:SourceOrbConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOrb resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOrbConfiguration:SourceOrbConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOrbit:SourceOrbit": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOrbitConfiguration:SourceOrbitConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOrbitConfiguration:SourceOrbitConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOrbit resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOrbitConfiguration:SourceOrbitConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOutbrainAmplify:SourceOutbrainAmplify": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfiguration:SourceOutbrainAmplifyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfiguration:SourceOutbrainAmplifyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOutbrainAmplify resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOutbrainAmplifyConfiguration:SourceOutbrainAmplifyConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceOutreach:SourceOutreach": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOutreachConfiguration:SourceOutreachConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceOutreachConfiguration:SourceOutreachConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceOutreach resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceOutreachConfiguration:SourceOutreachConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePaypalTransaction:SourcePaypalTransaction": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePaypalTransactionConfiguration:SourcePaypalTransactionConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePaypalTransactionConfiguration:SourcePaypalTransactionConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePaypalTransaction resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePaypalTransactionConfiguration:SourcePaypalTransactionConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePaystack:SourcePaystack": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePaystackConfiguration:SourcePaystackConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePaystackConfiguration:SourcePaystackConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePaystack resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePaystackConfiguration:SourcePaystackConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePendo:SourcePendo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePendoConfiguration:SourcePendoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePendoConfiguration:SourcePendoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePendo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePendoConfiguration:SourcePendoConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePersistiq:SourcePersistiq": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePersistiqConfiguration:SourcePersistiqConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePersistiqConfiguration:SourcePersistiqConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePersistiq resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePersistiqConfiguration:SourcePersistiqConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePexelsApi:SourcePexelsApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePexelsApiConfiguration:SourcePexelsApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePexelsApiConfiguration:SourcePexelsApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePexelsApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePexelsApiConfiguration:SourcePexelsApiConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePinterest:SourcePinterest": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePinterestConfiguration:SourcePinterestConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePinterestConfiguration:SourcePinterestConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePinterest resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePinterestConfiguration:SourcePinterestConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePipedrive:SourcePipedrive": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePipedriveConfiguration:SourcePipedriveConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePipedriveConfiguration:SourcePipedriveConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePipedrive resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePipedriveConfiguration:SourcePipedriveConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePocket:SourcePocket": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePocketConfiguration:SourcePocketConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePocketConfiguration:SourcePocketConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePocket resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePocketConfiguration:SourcePocketConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePokeapi:SourcePokeapi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePokeapiConfiguration:SourcePokeapiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePokeapiConfiguration:SourcePokeapiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePokeapi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePokeapiConfiguration:SourcePokeapiConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePolygonStockApi:SourcePolygonStockApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePolygonStockApiConfiguration:SourcePolygonStockApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePolygonStockApiConfiguration:SourcePolygonStockApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePolygonStockApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePolygonStockApiConfiguration:SourcePolygonStockApiConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePostgres:SourcePostgres": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfiguration:SourcePostgresConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePostgresConfiguration:SourcePostgresConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePostgres resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePostgresConfiguration:SourcePostgresConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePosthog:SourcePosthog": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePosthogConfiguration:SourcePosthogConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePosthogConfiguration:SourcePosthogConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePosthog resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePosthogConfiguration:SourcePosthogConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePostmarkapp:SourcePostmarkapp": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePostmarkappConfiguration:SourcePostmarkappConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePostmarkappConfiguration:SourcePostmarkappConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePostmarkapp resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePostmarkappConfiguration:SourcePostmarkappConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePrestashop:SourcePrestashop": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePrestashopConfiguration:SourcePrestashopConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePrestashopConfiguration:SourcePrestashopConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePrestashop resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePrestashopConfiguration:SourcePrestashopConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePublicApis:SourcePublicApis": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePublicApisConfiguration:SourcePublicApisConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePublicApisConfiguration:SourcePublicApisConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePublicApis resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePublicApisConfiguration:SourcePublicApisConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePunkApi:SourcePunkApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePunkApiConfiguration:SourcePunkApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePunkApiConfiguration:SourcePunkApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePunkApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePunkApiConfiguration:SourcePunkApiConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourcePypi:SourcePypi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePypiConfiguration:SourcePypiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourcePypiConfiguration:SourcePypiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourcePypi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourcePypiConfiguration:SourcePypiConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceQualaroo:SourceQualaroo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceQualarooConfiguration:SourceQualarooConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceQualarooConfiguration:SourceQualarooConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceQualaroo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceQualarooConfiguration:SourceQualarooConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceQuickbooks:SourceQuickbooks": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceQuickbooksConfiguration:SourceQuickbooksConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceQuickbooksConfiguration:SourceQuickbooksConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceQuickbooks resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceQuickbooksConfiguration:SourceQuickbooksConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRailz:SourceRailz": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRailzConfiguration:SourceRailzConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRailzConfiguration:SourceRailzConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRailz resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRailzConfiguration:SourceRailzConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRecharge:SourceRecharge": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRechargeConfiguration:SourceRechargeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRechargeConfiguration:SourceRechargeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRecharge resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRechargeConfiguration:SourceRechargeConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRecreation:SourceRecreation": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecreationConfiguration:SourceRecreationConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecreationConfiguration:SourceRecreationConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRecreation resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRecreationConfiguration:SourceRecreationConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRecruitee:SourceRecruitee": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecruiteeConfiguration:SourceRecruiteeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecruiteeConfiguration:SourceRecruiteeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRecruitee resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRecruiteeConfiguration:SourceRecruiteeConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRecurly:SourceRecurly": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecurlyConfiguration:SourceRecurlyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRecurlyConfiguration:SourceRecurlyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRecurly resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRecurlyConfiguration:SourceRecurlyConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRedshift:SourceRedshift": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRedshiftConfiguration:SourceRedshiftConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRedshiftConfiguration:SourceRedshiftConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRedshift resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRedshiftConfiguration:SourceRedshiftConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRetently:SourceRetently": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfiguration:SourceRetentlyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRetentlyConfiguration:SourceRetentlyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRetently resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRetentlyConfiguration:SourceRetentlyConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRkiCovid:SourceRkiCovid": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRkiCovidConfiguration:SourceRkiCovidConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRkiCovidConfiguration:SourceRkiCovidConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRkiCovid resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRkiCovidConfiguration:SourceRkiCovidConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceRss:SourceRss": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRssConfiguration:SourceRssConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceRssConfiguration:SourceRssConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceRss resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceRssConfiguration:SourceRssConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceS3:SourceS3": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceS3Configuration:SourceS3Configuration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceS3Configuration:SourceS3Configuration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceS3 resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceS3Configuration:SourceS3Configuration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSalesforce:SourceSalesforce": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSalesforceConfiguration:SourceSalesforceConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSalesforceConfiguration:SourceSalesforceConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSalesforce resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSalesforceConfiguration:SourceSalesforceConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSalesloft:SourceSalesloft": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfiguration:SourceSalesloftConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSalesloftConfiguration:SourceSalesloftConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSalesloft resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSalesloftConfiguration:SourceSalesloftConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSapFieldglass:SourceSapFieldglass": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSapFieldglassConfiguration:SourceSapFieldglassConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSapFieldglassConfiguration:SourceSapFieldglassConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSapFieldglass resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSapFieldglassConfiguration:SourceSapFieldglassConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSecoda:SourceSecoda": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSecodaConfiguration:SourceSecodaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSecodaConfiguration:SourceSecodaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSecoda resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSecodaConfiguration:SourceSecodaConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSendgrid:SourceSendgrid": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSendgridConfiguration:SourceSendgridConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSendgridConfiguration:SourceSendgridConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSendgrid resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSendgridConfiguration:SourceSendgridConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSendinblue:SourceSendinblue": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSendinblueConfiguration:SourceSendinblueConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSendinblueConfiguration:SourceSendinblueConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSendinblue resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSendinblueConfiguration:SourceSendinblueConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSenseforce:SourceSenseforce": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSenseforceConfiguration:SourceSenseforceConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSenseforceConfiguration:SourceSenseforceConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSenseforce resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSenseforceConfiguration:SourceSenseforceConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSentry:SourceSentry": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSentryConfiguration:SourceSentryConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSentryConfiguration:SourceSentryConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSentry resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSentryConfiguration:SourceSentryConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSftp:SourceSftp": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfiguration:SourceSftpConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSftpConfiguration:SourceSftpConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSftp resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSftpConfiguration:SourceSftpConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSftpBulk:SourceSftpBulk": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfiguration:SourceSftpBulkConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSftpBulkConfiguration:SourceSftpBulkConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSftpBulk resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSftpBulkConfiguration:SourceSftpBulkConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceShopify:SourceShopify": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfiguration:SourceShopifyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceShopifyConfiguration:SourceShopifyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceShopify resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceShopifyConfiguration:SourceShopifyConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceShortio:SourceShortio": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceShortioConfiguration:SourceShortioConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceShortioConfiguration:SourceShortioConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceShortio resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceShortioConfiguration:SourceShortioConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSlack:SourceSlack": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfiguration:SourceSlackConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSlackConfiguration:SourceSlackConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSlack resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSlackConfiguration:SourceSlackConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSmaily:SourceSmaily": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmailyConfiguration:SourceSmailyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmailyConfiguration:SourceSmailyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSmaily resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSmailyConfiguration:SourceSmailyConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSmartengage:SourceSmartengage": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmartengageConfiguration:SourceSmartengageConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmartengageConfiguration:SourceSmartengageConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSmartengage resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSmartengageConfiguration:SourceSmartengageConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSmartsheets:SourceSmartsheets": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfiguration:SourceSmartsheetsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSmartsheetsConfiguration:SourceSmartsheetsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSmartsheets resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSmartsheetsConfiguration:SourceSmartsheetsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSnapchatMarketing:SourceSnapchatMarketing": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSnapchatMarketingConfiguration:SourceSnapchatMarketingConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSnapchatMarketingConfiguration:SourceSnapchatMarketingConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSnapchatMarketing resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSnapchatMarketingConfiguration:SourceSnapchatMarketingConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSnowflake:SourceSnowflake": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfiguration:SourceSnowflakeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSnowflakeConfiguration:SourceSnowflakeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSnowflake resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSnowflakeConfiguration:SourceSnowflakeConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSonarCloud:SourceSonarCloud": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSonarCloudConfiguration:SourceSonarCloudConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSonarCloudConfiguration:SourceSonarCloudConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSonarCloud resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSonarCloudConfiguration:SourceSonarCloudConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSpaceXApi:SourceSpaceXApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSpaceXApiConfiguration:SourceSpaceXApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSpaceXApiConfiguration:SourceSpaceXApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSpaceXApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSpaceXApiConfiguration:SourceSpaceXApiConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSquare:SourceSquare": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfiguration:SourceSquareConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSquareConfiguration:SourceSquareConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSquare resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSquareConfiguration:SourceSquareConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceStrava:SourceStrava": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceStravaConfiguration:SourceStravaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceStravaConfiguration:SourceStravaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceStrava resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceStravaConfiguration:SourceStravaConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceStripe:SourceStripe": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceStripeConfiguration:SourceStripeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceStripeConfiguration:SourceStripeConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceStripe resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceStripeConfiguration:SourceStripeConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSurveySparrow:SourceSurveySparrow": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfiguration:SourceSurveySparrowConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSurveySparrowConfiguration:SourceSurveySparrowConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSurveySparrow resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSurveySparrowConfiguration:SourceSurveySparrowConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceSurveymonkey:SourceSurveymonkey": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSurveymonkeyConfiguration:SourceSurveymonkeyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceSurveymonkeyConfiguration:SourceSurveymonkeyConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceSurveymonkey resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceSurveymonkeyConfiguration:SourceSurveymonkeyConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTempo:SourceTempo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTempoConfiguration:SourceTempoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTempoConfiguration:SourceTempoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTempo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTempoConfiguration:SourceTempoConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTheGuardianApi:SourceTheGuardianApi": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTheGuardianApiConfiguration:SourceTheGuardianApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTheGuardianApiConfiguration:SourceTheGuardianApiConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTheGuardianApi resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTheGuardianApiConfiguration:SourceTheGuardianApiConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTiktokMarketing:SourceTiktokMarketing": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfiguration:SourceTiktokMarketingConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfiguration:SourceTiktokMarketingConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTiktokMarketing resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTiktokMarketingConfiguration:SourceTiktokMarketingConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTodoist:SourceTodoist": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTodoistConfiguration:SourceTodoistConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTodoistConfiguration:SourceTodoistConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTodoist resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTodoistConfiguration:SourceTodoistConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTrello:SourceTrello": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTrelloConfiguration:SourceTrelloConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTrelloConfiguration:SourceTrelloConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTrello resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTrelloConfiguration:SourceTrelloConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTrustpilot:SourceTrustpilot": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfiguration:SourceTrustpilotConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTrustpilotConfiguration:SourceTrustpilotConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTrustpilot resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTrustpilotConfiguration:SourceTrustpilotConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTvmazeSchedule:SourceTvmazeSchedule": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTvmazeScheduleConfiguration:SourceTvmazeScheduleConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTvmazeScheduleConfiguration:SourceTvmazeScheduleConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTvmazeSchedule resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTvmazeScheduleConfiguration:SourceTvmazeScheduleConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTwilio:SourceTwilio": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwilioConfiguration:SourceTwilioConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwilioConfiguration:SourceTwilioConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTwilio resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTwilioConfiguration:SourceTwilioConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTwilioTaskrouter:SourceTwilioTaskrouter": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwilioTaskrouterConfiguration:SourceTwilioTaskrouterConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwilioTaskrouterConfiguration:SourceTwilioTaskrouterConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTwilioTaskrouter resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTwilioTaskrouterConfiguration:SourceTwilioTaskrouterConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTwitter:SourceTwitter": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwitterConfiguration:SourceTwitterConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTwitterConfiguration:SourceTwitterConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTwitter resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTwitterConfiguration:SourceTwitterConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceTypeform:SourceTypeform": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfiguration:SourceTypeformConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceTypeformConfiguration:SourceTypeformConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceTypeform resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceTypeformConfiguration:SourceTypeformConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceUsCensus:SourceUsCensus": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceUsCensusConfiguration:SourceUsCensusConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceUsCensusConfiguration:SourceUsCensusConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceUsCensus resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceUsCensusConfiguration:SourceUsCensusConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceVantage:SourceVantage": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceVantageConfiguration:SourceVantageConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceVantageConfiguration:SourceVantageConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceVantage resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceVantageConfiguration:SourceVantageConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceWebflow:SourceWebflow": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWebflowConfiguration:SourceWebflowConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWebflowConfiguration:SourceWebflowConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceWebflow resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceWebflowConfiguration:SourceWebflowConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceWhiskyHunter:SourceWhiskyHunter": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWhiskyHunterConfiguration:SourceWhiskyHunterConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWhiskyHunterConfiguration:SourceWhiskyHunterConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceWhiskyHunter resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceWhiskyHunterConfiguration:SourceWhiskyHunterConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceWikipediaPageviews:SourceWikipediaPageviews": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWikipediaPageviewsConfiguration:SourceWikipediaPageviewsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWikipediaPageviewsConfiguration:SourceWikipediaPageviewsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceWikipediaPageviews resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceWikipediaPageviewsConfiguration:SourceWikipediaPageviewsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceWoocommerce:SourceWoocommerce": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWoocommerceConfiguration:SourceWoocommerceConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceWoocommerceConfiguration:SourceWoocommerceConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceWoocommerce resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceWoocommerceConfiguration:SourceWoocommerceConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceXero:SourceXero": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceXeroConfiguration:SourceXeroConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceXeroConfiguration:SourceXeroConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceXero resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceXeroConfiguration:SourceXeroConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceXkcd:SourceXkcd": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceXkcdConfiguration:SourceXkcdConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceXkcdConfiguration:SourceXkcdConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceXkcd resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceXkcdConfiguration:SourceXkcdConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceYandexMetrica:SourceYandexMetrica": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYandexMetricaConfiguration:SourceYandexMetricaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYandexMetricaConfiguration:SourceYandexMetricaConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceYandexMetrica resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceYandexMetricaConfiguration:SourceYandexMetricaConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceYotpo:SourceYotpo": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYotpoConfiguration:SourceYotpoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYotpoConfiguration:SourceYotpoConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceYotpo resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceYotpoConfiguration:SourceYotpoConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceYounium:SourceYounium": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYouniumConfiguration:SourceYouniumConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYouniumConfiguration:SourceYouniumConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceYounium resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceYouniumConfiguration:SourceYouniumConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceYoutubeAnalytics:SourceYoutubeAnalytics": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYoutubeAnalyticsConfiguration:SourceYoutubeAnalyticsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceYoutubeAnalyticsConfiguration:SourceYoutubeAnalyticsConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceYoutubeAnalytics resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceYoutubeAnalyticsConfiguration:SourceYoutubeAnalyticsConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZendeskChat:SourceZendeskChat": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfiguration:SourceZendeskChatConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskChatConfiguration:SourceZendeskChatConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZendeskChat resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZendeskChatConfiguration:SourceZendeskChatConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZendeskSunshine:SourceZendeskSunshine": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfiguration:SourceZendeskSunshineConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfiguration:SourceZendeskSunshineConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZendeskSunshine resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZendeskSunshineConfiguration:SourceZendeskSunshineConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZendeskSupport:SourceZendeskSupport": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfiguration:SourceZendeskSupportConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskSupportConfiguration:SourceZendeskSupportConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZendeskSupport resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZendeskSupportConfiguration:SourceZendeskSupportConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZendeskTalk:SourceZendeskTalk": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfiguration:SourceZendeskTalkConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZendeskTalkConfiguration:SourceZendeskTalkConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZendeskTalk resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZendeskTalkConfiguration:SourceZendeskTalkConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZenloop:SourceZenloop": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZenloopConfiguration:SourceZenloopConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZenloopConfiguration:SourceZenloopConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZenloop resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZenloopConfiguration:SourceZenloopConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZohoCrm:SourceZohoCrm": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZohoCrmConfiguration:SourceZohoCrmConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZohoCrmConfiguration:SourceZohoCrmConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZohoCrm resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZohoCrmConfiguration:SourceZohoCrmConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZoom:SourceZoom": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZoomConfiguration:SourceZoomConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZoomConfiguration:SourceZoomConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZoom resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZoomConfiguration:SourceZoomConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/sourceZuora:SourceZuora": {
            "properties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZuoraConfiguration:SourceZuoraConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "sourceId": {
                    "type": "string"
                },
                "sourceType": {
                    "type": "string"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "configuration",
                "name",
                "sourceId",
                "sourceType",
                "workspaceId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/airbyte:index/SourceZuoraConfiguration:SourceZuoraConfiguration"
                },
                "name": {
                    "type": "string"
                },
                "secretId": {
                    "type": "string",
                    "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configuration",
                "name",
                "workspaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SourceZuora resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/SourceZuoraConfiguration:SourceZuoraConfiguration"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "Optional secretID obtained through the public API OAuth redirect flow.\n"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "airbyte:index/workspace:Workspace": {
            "properties": {
                "dataResidency": {
                    "type": "string",
                    "description": "must be one of [\"auto\", \"us\", \"eu\"]\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the workspace\n"
                },
                "workspaceId": {
                    "type": "string"
                }
            },
            "required": [
                "dataResidency",
                "name",
                "workspaceId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the workspace\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Workspace resources.\n",
                "properties": {
                    "dataResidency": {
                        "type": "string",
                        "description": "must be one of [\"auto\", \"us\", \"eu\"]\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the workspace\n"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "airbyte:index/getConnection:getConnection": {
            "inputs": {
                "description": "A collection of arguments for invoking getConnection.\n",
                "properties": {
                    "connectionId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "connectionId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConnection.\n",
                "properties": {
                    "configurations": {
                        "$ref": "#/types/airbyte:index/getConnectionConfigurations:getConnectionConfigurations"
                    },
                    "connectionId": {
                        "type": "string"
                    },
                    "dataResidency": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespaceDefinition": {
                        "type": "string"
                    },
                    "namespaceFormat": {
                        "type": "string"
                    },
                    "nonBreakingSchemaUpdatesBehavior": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "schedule": {
                        "$ref": "#/types/airbyte:index/getConnectionSchedule:getConnectionSchedule"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configurations",
                    "connectionId",
                    "dataResidency",
                    "destinationId",
                    "name",
                    "namespaceDefinition",
                    "namespaceFormat",
                    "nonBreakingSchemaUpdatesBehavior",
                    "prefix",
                    "schedule",
                    "sourceId",
                    "status",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationAWSDatalake:getDestinationAWSDatalake": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationAWSDatalake.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationAWSDatalake.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationAWSDatalakeConfiguration:getDestinationAWSDatalakeConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationAzureBlobStorage:getDestinationAzureBlobStorage": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationAzureBlobStorage.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationAzureBlobStorage.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationAzureBlobStorageConfiguration:getDestinationAzureBlobStorageConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationBigquery:getDestinationBigquery": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationBigquery.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationBigquery.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationBigqueryConfiguration:getDestinationBigqueryConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationBigqueryDenormalized:getDestinationBigqueryDenormalized": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationBigqueryDenormalized.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationBigqueryDenormalized.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationBigqueryDenormalizedConfiguration:getDestinationBigqueryDenormalizedConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationClickhouse:getDestinationClickhouse": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationClickhouse.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationClickhouse.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationClickhouseConfiguration:getDestinationClickhouseConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationConvex:getDestinationConvex": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationConvex.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationConvex.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationConvexConfiguration:getDestinationConvexConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationCumulio:getDestinationCumulio": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationCumulio.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationCumulio.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationCumulioConfiguration:getDestinationCumulioConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationDatabend:getDestinationDatabend": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationDatabend.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationDatabend.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationDatabendConfiguration:getDestinationDatabendConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationDatabricks:getDestinationDatabricks": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationDatabricks.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationDatabricks.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationDatabricksConfiguration:getDestinationDatabricksConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationDevNull:getDestinationDevNull": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationDevNull.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationDevNull.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationDevNullConfiguration:getDestinationDevNullConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationDynamodb:getDestinationDynamodb": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationDynamodb.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationDynamodb.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationDynamodbConfiguration:getDestinationDynamodbConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationElasticsearch:getDestinationElasticsearch": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationElasticsearch.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationElasticsearch.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationElasticsearchConfiguration:getDestinationElasticsearchConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationFirebolt:getDestinationFirebolt": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationFirebolt.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationFirebolt.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationFireboltConfiguration:getDestinationFireboltConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationFirestore:getDestinationFirestore": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationFirestore.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationFirestore.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationFirestoreConfiguration:getDestinationFirestoreConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationGcs:getDestinationGcs": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationGcs.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationGcs.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationGcsConfiguration:getDestinationGcsConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationGoogleSheets:getDestinationGoogleSheets": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationGoogleSheets.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationGoogleSheets.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationGoogleSheetsConfiguration:getDestinationGoogleSheetsConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationKeen:getDestinationKeen": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationKeen.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationKeen.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationKeenConfiguration:getDestinationKeenConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationKinesis:getDestinationKinesis": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationKinesis.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationKinesis.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationKinesisConfiguration:getDestinationKinesisConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationLangchain:getDestinationLangchain": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationLangchain.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationLangchain.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationLangchainConfiguration:getDestinationLangchainConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationMSsql:getDestinationMSsql": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationMSsql.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationMSsql.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationMSsqlConfiguration:getDestinationMSsqlConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationMongodb:getDestinationMongodb": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationMongodb.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationMongodb.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationMongodbConfiguration:getDestinationMongodbConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationMysql:getDestinationMysql": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationMysql.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationMysql.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationMysqlConfiguration:getDestinationMysqlConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationOracle:getDestinationOracle": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationOracle.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationOracle.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationOracleConfiguration:getDestinationOracleConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationPostgres:getDestinationPostgres": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationPostgres.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationPostgres.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationPostgresConfiguration:getDestinationPostgresConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationPubsub:getDestinationPubsub": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationPubsub.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationPubsub.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationPubsubConfiguration:getDestinationPubsubConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationRedis:getDestinationRedis": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationRedis.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationRedis.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationRedisConfiguration:getDestinationRedisConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationRedshift:getDestinationRedshift": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationRedshift.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationRedshift.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationRedshiftConfiguration:getDestinationRedshiftConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationS3:getDestinationS3": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationS3.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationS3.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationS3Configuration:getDestinationS3Configuration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationS3Glue:getDestinationS3Glue": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationS3Glue.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationS3Glue.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationS3GlueConfiguration:getDestinationS3GlueConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationSftpJson:getDestinationSftpJson": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationSftpJson.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationSftpJson.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationSftpJsonConfiguration:getDestinationSftpJsonConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationSnowflake:getDestinationSnowflake": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationSnowflake.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationSnowflake.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationSnowflakeConfiguration:getDestinationSnowflakeConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationTimeplus:getDestinationTimeplus": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationTimeplus.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationTimeplus.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationTimeplusConfiguration:getDestinationTimeplusConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationTypesense:getDestinationTypesense": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationTypesense.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationTypesense.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationTypesenseConfiguration:getDestinationTypesenseConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationVertica:getDestinationVertica": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationVertica.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationVertica.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationVerticaConfiguration:getDestinationVerticaConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getDestinationXata:getDestinationXata": {
            "inputs": {
                "description": "A collection of arguments for invoking getDestinationXata.\n",
                "properties": {
                    "destinationId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "destinationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDestinationXata.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getDestinationXataConfiguration:getDestinationXataConfiguration"
                    },
                    "destinationId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "destinationId",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAha:getSourceAha": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAha.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAha.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAhaConfiguration:getSourceAhaConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAircall:getSourceAircall": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAircall.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAircall.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAircallConfiguration:getSourceAircallConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAirtable:getSourceAirtable": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAirtable.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAirtable.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAirtableConfiguration:getSourceAirtableConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAlloydb:getSourceAlloydb": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAlloydb.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAlloydb.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAlloydbConfiguration:getSourceAlloydbConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAmazonAds:getSourceAmazonAds": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAmazonAds.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAmazonAds.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAmazonAdsConfiguration:getSourceAmazonAdsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAmazonSellerPartner:getSourceAmazonSellerPartner": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAmazonSellerPartner.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAmazonSellerPartner.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAmazonSellerPartnerConfiguration:getSourceAmazonSellerPartnerConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAmazonSqs:getSourceAmazonSqs": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAmazonSqs.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAmazonSqs.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAmazonSqsConfiguration:getSourceAmazonSqsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAmplitude:getSourceAmplitude": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAmplitude.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAmplitude.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAmplitudeConfiguration:getSourceAmplitudeConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceApifyDataset:getSourceApifyDataset": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceApifyDataset.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceApifyDataset.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceApifyDatasetConfiguration:getSourceApifyDatasetConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAppfollow:getSourceAppfollow": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAppfollow.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAppfollow.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAppfollowConfiguration:getSourceAppfollowConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAsana:getSourceAsana": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAsana.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAsana.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAsanaConfiguration:getSourceAsanaConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAuth0:getSourceAuth0": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAuth0.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAuth0.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAuth0Configuration:getSourceAuth0Configuration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAwsCloudtrail:getSourceAwsCloudtrail": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAwsCloudtrail.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAwsCloudtrail.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAwsCloudtrailConfiguration:getSourceAwsCloudtrailConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAzureBlobStorage:getSourceAzureBlobStorage": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAzureBlobStorage.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAzureBlobStorage.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAzureBlobStorageConfiguration:getSourceAzureBlobStorageConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceAzureTable:getSourceAzureTable": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceAzureTable.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceAzureTable.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceAzureTableConfiguration:getSourceAzureTableConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceBambooHr:getSourceBambooHr": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceBambooHr.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceBambooHr.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceBambooHrConfiguration:getSourceBambooHrConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceBigcommerce:getSourceBigcommerce": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceBigcommerce.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceBigcommerce.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceBigcommerceConfiguration:getSourceBigcommerceConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceBigquery:getSourceBigquery": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceBigquery.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceBigquery.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceBigqueryConfiguration:getSourceBigqueryConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceBingAds:getSourceBingAds": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceBingAds.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceBingAds.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceBingAdsConfiguration:getSourceBingAdsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceBraintree:getSourceBraintree": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceBraintree.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceBraintree.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceBraintreeConfiguration:getSourceBraintreeConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceBraze:getSourceBraze": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceBraze.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceBraze.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceBrazeConfiguration:getSourceBrazeConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceChargebee:getSourceChargebee": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceChargebee.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceChargebee.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceChargebeeConfiguration:getSourceChargebeeConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceChartmogul:getSourceChartmogul": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceChartmogul.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceChartmogul.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceChartmogulConfiguration:getSourceChartmogulConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceClickhouse:getSourceClickhouse": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceClickhouse.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceClickhouse.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceClickhouseConfiguration:getSourceClickhouseConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceClickupApi:getSourceClickupApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceClickupApi.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceClickupApi.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceClickupApiConfiguration:getSourceClickupApiConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceClockify:getSourceClockify": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceClockify.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceClockify.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceClockifyConfiguration:getSourceClockifyConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceCloseCom:getSourceCloseCom": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceCloseCom.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceCloseCom.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceCloseComConfiguration:getSourceCloseComConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceCoda:getSourceCoda": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceCoda.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceCoda.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceCodaConfiguration:getSourceCodaConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceCoinApi:getSourceCoinApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceCoinApi.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceCoinApi.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceCoinApiConfiguration:getSourceCoinApiConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceCoinmarketcap:getSourceCoinmarketcap": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceCoinmarketcap.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceCoinmarketcap.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceCoinmarketcapConfiguration:getSourceCoinmarketcapConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceConfigcat:getSourceConfigcat": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceConfigcat.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceConfigcat.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceConfigcatConfiguration:getSourceConfigcatConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceConfluence:getSourceConfluence": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceConfluence.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceConfluence.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceConfluenceConfiguration:getSourceConfluenceConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceConvex:getSourceConvex": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceConvex.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceConvex.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceConvexConfiguration:getSourceConvexConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDatadog:getSourceDatadog": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDatadog.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDatadog.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceDatadogConfiguration:getSourceDatadogConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDatascope:getSourceDatascope": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDatascope.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDatascope.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceDatascopeConfiguration:getSourceDatascopeConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDelighted:getSourceDelighted": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDelighted.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDelighted.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceDelightedConfiguration:getSourceDelightedConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDixa:getSourceDixa": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDixa.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDixa.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceDixaConfiguration:getSourceDixaConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDockerhub:getSourceDockerhub": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDockerhub.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDockerhub.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceDockerhubConfiguration:getSourceDockerhubConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDremio:getSourceDremio": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDremio.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDremio.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceDremioConfiguration:getSourceDremioConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceDynamodb:getSourceDynamodb": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceDynamodb.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceDynamodb.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceDynamodbConfiguration:getSourceDynamodbConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceE2eTestCloud:getSourceE2eTestCloud": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceE2eTestCloud.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceE2eTestCloud.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceE2eTestCloudConfiguration:getSourceE2eTestCloudConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceEmailoctopus:getSourceEmailoctopus": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceEmailoctopus.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceEmailoctopus.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceEmailoctopusConfiguration:getSourceEmailoctopusConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceExchangeRates:getSourceExchangeRates": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceExchangeRates.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceExchangeRates.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceExchangeRatesConfiguration:getSourceExchangeRatesConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFacebookMarketing:getSourceFacebookMarketing": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFacebookMarketing.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFacebookMarketing.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceFacebookMarketingConfiguration:getSourceFacebookMarketingConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFacebookPages:getSourceFacebookPages": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFacebookPages.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFacebookPages.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceFacebookPagesConfiguration:getSourceFacebookPagesConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFaker:getSourceFaker": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFaker.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFaker.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceFakerConfiguration:getSourceFakerConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFauna:getSourceFauna": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFauna.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFauna.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceFaunaConfiguration:getSourceFaunaConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFileSecure:getSourceFileSecure": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFileSecure.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFileSecure.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceFileSecureConfiguration:getSourceFileSecureConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFirebolt:getSourceFirebolt": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFirebolt.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFirebolt.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceFireboltConfiguration:getSourceFireboltConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFreshcaller:getSourceFreshcaller": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFreshcaller.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFreshcaller.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceFreshcallerConfiguration:getSourceFreshcallerConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFreshdesk:getSourceFreshdesk": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFreshdesk.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFreshdesk.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceFreshdeskConfiguration:getSourceFreshdeskConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceFreshsales:getSourceFreshsales": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceFreshsales.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceFreshsales.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceFreshsalesConfiguration:getSourceFreshsalesConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGainsightPx:getSourceGainsightPx": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGainsightPx.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGainsightPx.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGainsightPxConfiguration:getSourceGainsightPxConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGcs:getSourceGcs": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGcs.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGcs.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGcsConfiguration:getSourceGcsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGetlago:getSourceGetlago": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGetlago.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGetlago.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGetlagoConfiguration:getSourceGetlagoConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGithub:getSourceGithub": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGithub.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGithub.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGithubConfiguration:getSourceGithubConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGitlab:getSourceGitlab": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGitlab.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGitlab.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGitlabConfiguration:getSourceGitlabConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGlassfrog:getSourceGlassfrog": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGlassfrog.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGlassfrog.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGlassfrogConfiguration:getSourceGlassfrogConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGnews:getSourceGnews": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGnews.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGnews.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGnewsConfiguration:getSourceGnewsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleAds:getSourceGoogleAds": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleAds.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleAds.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGoogleAdsConfiguration:getSourceGoogleAdsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsDataApi:getSourceGoogleAnalyticsDataApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleAnalyticsDataApi.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleAnalyticsDataApi.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsDataApiConfiguration:getSourceGoogleAnalyticsDataApiConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleAnalyticsV4:getSourceGoogleAnalyticsV4": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleAnalyticsV4.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleAnalyticsV4.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGoogleAnalyticsV4Configuration:getSourceGoogleAnalyticsV4Configuration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleDirectory:getSourceGoogleDirectory": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleDirectory.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleDirectory.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGoogleDirectoryConfiguration:getSourceGoogleDirectoryConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGooglePagespeedInsights:getSourceGooglePagespeedInsights": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGooglePagespeedInsights.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGooglePagespeedInsights.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGooglePagespeedInsightsConfiguration:getSourceGooglePagespeedInsightsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleSearchConsole:getSourceGoogleSearchConsole": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleSearchConsole.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleSearchConsole.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGoogleSearchConsoleConfiguration:getSourceGoogleSearchConsoleConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleSheets:getSourceGoogleSheets": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleSheets.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleSheets.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGoogleSheetsConfiguration:getSourceGoogleSheetsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleWebfonts:getSourceGoogleWebfonts": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleWebfonts.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleWebfonts.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGoogleWebfontsConfiguration:getSourceGoogleWebfontsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGoogleWorkspaceAdminReports:getSourceGoogleWorkspaceAdminReports": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGoogleWorkspaceAdminReports.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGoogleWorkspaceAdminReports.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGoogleWorkspaceAdminReportsConfiguration:getSourceGoogleWorkspaceAdminReportsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGreenhouse:getSourceGreenhouse": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGreenhouse.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGreenhouse.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGreenhouseConfiguration:getSourceGreenhouseConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceGridly:getSourceGridly": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceGridly.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceGridly.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceGridlyConfiguration:getSourceGridlyConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceHarvest:getSourceHarvest": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceHarvest.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceHarvest.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceHarvestConfiguration:getSourceHarvestConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceHubplanner:getSourceHubplanner": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceHubplanner.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceHubplanner.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceHubplannerConfiguration:getSourceHubplannerConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceHubspot:getSourceHubspot": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceHubspot.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceHubspot.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceHubspotConfiguration:getSourceHubspotConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceInsightly:getSourceInsightly": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceInsightly.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceInsightly.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceInsightlyConfiguration:getSourceInsightlyConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceInstagram:getSourceInstagram": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceInstagram.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceInstagram.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceInstagramConfiguration:getSourceInstagramConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceInstatus:getSourceInstatus": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceInstatus.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceInstatus.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceInstatusConfiguration:getSourceInstatusConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceIntercom:getSourceIntercom": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceIntercom.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceIntercom.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceIntercomConfiguration:getSourceIntercomConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceIp2whois:getSourceIp2whois": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceIp2whois.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceIp2whois.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceIp2whoisConfiguration:getSourceIp2whoisConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceIterable:getSourceIterable": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceIterable.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceIterable.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceIterableConfiguration:getSourceIterableConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceJira:getSourceJira": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceJira.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceJira.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceJiraConfiguration:getSourceJiraConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceK6Cloud:getSourceK6Cloud": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceK6Cloud.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceK6Cloud.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceK6CloudConfiguration:getSourceK6CloudConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceKlarna:getSourceKlarna": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceKlarna.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceKlarna.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceKlarnaConfiguration:getSourceKlarnaConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceKlaviyo:getSourceKlaviyo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceKlaviyo.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceKlaviyo.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceKlaviyoConfiguration:getSourceKlaviyoConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceKustomerSinger:getSourceKustomerSinger": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceKustomerSinger.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceKustomerSinger.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceKustomerSingerConfiguration:getSourceKustomerSingerConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceKyve:getSourceKyve": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceKyve.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceKyve.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceKyveConfiguration:getSourceKyveConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLaunchdarkly:getSourceLaunchdarkly": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLaunchdarkly.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLaunchdarkly.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceLaunchdarklyConfiguration:getSourceLaunchdarklyConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLemlist:getSourceLemlist": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLemlist.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLemlist.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceLemlistConfiguration:getSourceLemlistConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLeverHiring:getSourceLeverHiring": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLeverHiring.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLeverHiring.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceLeverHiringConfiguration:getSourceLeverHiringConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLinkedinAds:getSourceLinkedinAds": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLinkedinAds.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLinkedinAds.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceLinkedinAdsConfiguration:getSourceLinkedinAdsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLinkedinPages:getSourceLinkedinPages": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLinkedinPages.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLinkedinPages.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceLinkedinPagesConfiguration:getSourceLinkedinPagesConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLinnworks:getSourceLinnworks": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLinnworks.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLinnworks.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceLinnworksConfiguration:getSourceLinnworksConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceLokalise:getSourceLokalise": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceLokalise.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceLokalise.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceLokaliseConfiguration:getSourceLokaliseConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMailchimp:getSourceMailchimp": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMailchimp.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMailchimp.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMailchimpConfiguration:getSourceMailchimpConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMailgun:getSourceMailgun": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMailgun.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMailgun.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMailgunConfiguration:getSourceMailgunConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMailjetSms:getSourceMailjetSms": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMailjetSms.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMailjetSms.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMailjetSmsConfiguration:getSourceMailjetSmsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMarketo:getSourceMarketo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMarketo.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMarketo.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMarketoConfiguration:getSourceMarketoConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMetabase:getSourceMetabase": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMetabase.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMetabase.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMetabaseConfiguration:getSourceMetabaseConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMicrosoftTeams:getSourceMicrosoftTeams": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMicrosoftTeams.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMicrosoftTeams.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMicrosoftTeamsConfiguration:getSourceMicrosoftTeamsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMixpanel:getSourceMixpanel": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMixpanel.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMixpanel.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMixpanelConfiguration:getSourceMixpanelConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMonday:getSourceMonday": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMonday.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMonday.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMondayConfiguration:getSourceMondayConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMongodb:getSourceMongodb": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMongodb.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMongodb.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMongodbConfiguration:getSourceMongodbConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMongodbInternalPoc:getSourceMongodbInternalPoc": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMongodbInternalPoc.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMongodbInternalPoc.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMongodbInternalPocConfiguration:getSourceMongodbInternalPocConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMssql:getSourceMssql": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMssql.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMssql.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMssqlConfiguration:getSourceMssqlConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMyHours:getSourceMyHours": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMyHours.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMyHours.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMyHoursConfiguration:getSourceMyHoursConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceMysql:getSourceMysql": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceMysql.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceMysql.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceMysqlConfiguration:getSourceMysqlConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceNetsuite:getSourceNetsuite": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceNetsuite.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceNetsuite.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceNetsuiteConfiguration:getSourceNetsuiteConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceNotion:getSourceNotion": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceNotion.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceNotion.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceNotionConfiguration:getSourceNotionConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceNytimes:getSourceNytimes": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceNytimes.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceNytimes.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceNytimesConfiguration:getSourceNytimesConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOkta:getSourceOkta": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOkta.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOkta.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceOktaConfiguration:getSourceOktaConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOmnisend:getSourceOmnisend": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOmnisend.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOmnisend.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceOmnisendConfiguration:getSourceOmnisendConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOnesignal:getSourceOnesignal": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOnesignal.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOnesignal.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceOnesignalConfiguration:getSourceOnesignalConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOpenweather:getSourceOpenweather": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOpenweather.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOpenweather.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceOpenweatherConfiguration:getSourceOpenweatherConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOracle:getSourceOracle": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOracle.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOracle.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceOracleConfiguration:getSourceOracleConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOrb:getSourceOrb": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOrb.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOrb.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceOrbConfiguration:getSourceOrbConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOrbit:getSourceOrbit": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOrbit.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOrbit.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceOrbitConfiguration:getSourceOrbitConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOutbrainAmplify:getSourceOutbrainAmplify": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOutbrainAmplify.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOutbrainAmplify.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceOutbrainAmplifyConfiguration:getSourceOutbrainAmplifyConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceOutreach:getSourceOutreach": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceOutreach.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceOutreach.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceOutreachConfiguration:getSourceOutreachConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePaypalTransaction:getSourcePaypalTransaction": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePaypalTransaction.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePaypalTransaction.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePaypalTransactionConfiguration:getSourcePaypalTransactionConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePaystack:getSourcePaystack": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePaystack.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePaystack.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePaystackConfiguration:getSourcePaystackConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePendo:getSourcePendo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePendo.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePendo.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePendoConfiguration:getSourcePendoConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePersistiq:getSourcePersistiq": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePersistiq.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePersistiq.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePersistiqConfiguration:getSourcePersistiqConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePexelsApi:getSourcePexelsApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePexelsApi.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePexelsApi.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePexelsApiConfiguration:getSourcePexelsApiConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePinterest:getSourcePinterest": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePinterest.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePinterest.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePinterestConfiguration:getSourcePinterestConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePipedrive:getSourcePipedrive": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePipedrive.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePipedrive.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePipedriveConfiguration:getSourcePipedriveConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePocket:getSourcePocket": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePocket.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePocket.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePocketConfiguration:getSourcePocketConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePokeapi:getSourcePokeapi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePokeapi.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePokeapi.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePokeapiConfiguration:getSourcePokeapiConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePolygonStockApi:getSourcePolygonStockApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePolygonStockApi.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePolygonStockApi.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePolygonStockApiConfiguration:getSourcePolygonStockApiConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePostgres:getSourcePostgres": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePostgres.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePostgres.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePostgresConfiguration:getSourcePostgresConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePosthog:getSourcePosthog": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePosthog.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePosthog.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePosthogConfiguration:getSourcePosthogConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePostmarkapp:getSourcePostmarkapp": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePostmarkapp.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePostmarkapp.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePostmarkappConfiguration:getSourcePostmarkappConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePrestashop:getSourcePrestashop": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePrestashop.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePrestashop.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePrestashopConfiguration:getSourcePrestashopConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePublicApis:getSourcePublicApis": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePublicApis.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePublicApis.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePublicApisConfiguration:getSourcePublicApisConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePunkApi:getSourcePunkApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePunkApi.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePunkApi.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePunkApiConfiguration:getSourcePunkApiConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourcePypi:getSourcePypi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourcePypi.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourcePypi.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourcePypiConfiguration:getSourcePypiConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceQualaroo:getSourceQualaroo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceQualaroo.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceQualaroo.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceQualarooConfiguration:getSourceQualarooConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceQuickbooks:getSourceQuickbooks": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceQuickbooks.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceQuickbooks.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceQuickbooksConfiguration:getSourceQuickbooksConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRailz:getSourceRailz": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRailz.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRailz.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceRailzConfiguration:getSourceRailzConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRecharge:getSourceRecharge": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRecharge.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRecharge.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceRechargeConfiguration:getSourceRechargeConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRecreation:getSourceRecreation": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRecreation.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRecreation.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceRecreationConfiguration:getSourceRecreationConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRecruitee:getSourceRecruitee": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRecruitee.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRecruitee.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceRecruiteeConfiguration:getSourceRecruiteeConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRecurly:getSourceRecurly": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRecurly.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRecurly.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceRecurlyConfiguration:getSourceRecurlyConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRedshift:getSourceRedshift": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRedshift.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRedshift.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceRedshiftConfiguration:getSourceRedshiftConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRetently:getSourceRetently": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRetently.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRetently.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceRetentlyConfiguration:getSourceRetentlyConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRkiCovid:getSourceRkiCovid": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRkiCovid.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRkiCovid.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceRkiCovidConfiguration:getSourceRkiCovidConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceRss:getSourceRss": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceRss.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceRss.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceRssConfiguration:getSourceRssConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceS3:getSourceS3": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceS3.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceS3.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceS3Configuration:getSourceS3Configuration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSalesforce:getSourceSalesforce": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSalesforce.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSalesforce.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSalesforceConfiguration:getSourceSalesforceConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSalesloft:getSourceSalesloft": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSalesloft.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSalesloft.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSalesloftConfiguration:getSourceSalesloftConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSapFieldglass:getSourceSapFieldglass": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSapFieldglass.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSapFieldglass.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSapFieldglassConfiguration:getSourceSapFieldglassConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSecoda:getSourceSecoda": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSecoda.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSecoda.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSecodaConfiguration:getSourceSecodaConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSendgrid:getSourceSendgrid": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSendgrid.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSendgrid.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSendgridConfiguration:getSourceSendgridConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSendinblue:getSourceSendinblue": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSendinblue.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSendinblue.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSendinblueConfiguration:getSourceSendinblueConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSenseforce:getSourceSenseforce": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSenseforce.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSenseforce.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSenseforceConfiguration:getSourceSenseforceConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSentry:getSourceSentry": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSentry.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSentry.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSentryConfiguration:getSourceSentryConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSftp:getSourceSftp": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSftp.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSftp.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSftpConfiguration:getSourceSftpConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSftpBulk:getSourceSftpBulk": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSftpBulk.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSftpBulk.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSftpBulkConfiguration:getSourceSftpBulkConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceShopify:getSourceShopify": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceShopify.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceShopify.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceShopifyConfiguration:getSourceShopifyConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceShortio:getSourceShortio": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceShortio.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceShortio.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceShortioConfiguration:getSourceShortioConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSlack:getSourceSlack": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSlack.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSlack.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSlackConfiguration:getSourceSlackConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSmaily:getSourceSmaily": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSmaily.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSmaily.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSmailyConfiguration:getSourceSmailyConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSmartengage:getSourceSmartengage": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSmartengage.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSmartengage.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSmartengageConfiguration:getSourceSmartengageConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSmartsheets:getSourceSmartsheets": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSmartsheets.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSmartsheets.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSmartsheetsConfiguration:getSourceSmartsheetsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSnapchatMarketing:getSourceSnapchatMarketing": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSnapchatMarketing.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSnapchatMarketing.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSnapchatMarketingConfiguration:getSourceSnapchatMarketingConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSnowflake:getSourceSnowflake": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSnowflake.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSnowflake.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSnowflakeConfiguration:getSourceSnowflakeConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSonarCloud:getSourceSonarCloud": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSonarCloud.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSonarCloud.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSonarCloudConfiguration:getSourceSonarCloudConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSpaceXApi:getSourceSpaceXApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSpaceXApi.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSpaceXApi.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSpaceXApiConfiguration:getSourceSpaceXApiConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSquare:getSourceSquare": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSquare.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSquare.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSquareConfiguration:getSourceSquareConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceStrava:getSourceStrava": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceStrava.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceStrava.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceStravaConfiguration:getSourceStravaConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceStripe:getSourceStripe": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceStripe.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceStripe.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceStripeConfiguration:getSourceStripeConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSurveySparrow:getSourceSurveySparrow": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSurveySparrow.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSurveySparrow.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSurveySparrowConfiguration:getSourceSurveySparrowConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceSurveymonkey:getSourceSurveymonkey": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceSurveymonkey.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceSurveymonkey.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceSurveymonkeyConfiguration:getSourceSurveymonkeyConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTempo:getSourceTempo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTempo.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTempo.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceTempoConfiguration:getSourceTempoConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTheGuardianApi:getSourceTheGuardianApi": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTheGuardianApi.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTheGuardianApi.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceTheGuardianApiConfiguration:getSourceTheGuardianApiConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTiktokMarketing:getSourceTiktokMarketing": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTiktokMarketing.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTiktokMarketing.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceTiktokMarketingConfiguration:getSourceTiktokMarketingConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTodoist:getSourceTodoist": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTodoist.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTodoist.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceTodoistConfiguration:getSourceTodoistConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTrello:getSourceTrello": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTrello.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTrello.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceTrelloConfiguration:getSourceTrelloConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTrustpilot:getSourceTrustpilot": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTrustpilot.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTrustpilot.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceTrustpilotConfiguration:getSourceTrustpilotConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTvmazeSchedule:getSourceTvmazeSchedule": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTvmazeSchedule.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTvmazeSchedule.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceTvmazeScheduleConfiguration:getSourceTvmazeScheduleConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTwilio:getSourceTwilio": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTwilio.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTwilio.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceTwilioConfiguration:getSourceTwilioConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTwilioTaskrouter:getSourceTwilioTaskrouter": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTwilioTaskrouter.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTwilioTaskrouter.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceTwilioTaskrouterConfiguration:getSourceTwilioTaskrouterConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTwitter:getSourceTwitter": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTwitter.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTwitter.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceTwitterConfiguration:getSourceTwitterConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceTypeform:getSourceTypeform": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceTypeform.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceTypeform.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceTypeformConfiguration:getSourceTypeformConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceUsCensus:getSourceUsCensus": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceUsCensus.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceUsCensus.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceUsCensusConfiguration:getSourceUsCensusConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceVantage:getSourceVantage": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceVantage.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceVantage.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceVantageConfiguration:getSourceVantageConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceWebflow:getSourceWebflow": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceWebflow.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceWebflow.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceWebflowConfiguration:getSourceWebflowConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceWhiskyHunter:getSourceWhiskyHunter": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceWhiskyHunter.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceWhiskyHunter.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceWhiskyHunterConfiguration:getSourceWhiskyHunterConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceWikipediaPageviews:getSourceWikipediaPageviews": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceWikipediaPageviews.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceWikipediaPageviews.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceWikipediaPageviewsConfiguration:getSourceWikipediaPageviewsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceWoocommerce:getSourceWoocommerce": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceWoocommerce.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceWoocommerce.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceWoocommerceConfiguration:getSourceWoocommerceConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceXero:getSourceXero": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceXero.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceXero.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceXeroConfiguration:getSourceXeroConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceXkcd:getSourceXkcd": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceXkcd.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceXkcd.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceXkcdConfiguration:getSourceXkcdConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceYandexMetrica:getSourceYandexMetrica": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceYandexMetrica.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceYandexMetrica.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceYandexMetricaConfiguration:getSourceYandexMetricaConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceYotpo:getSourceYotpo": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceYotpo.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceYotpo.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceYotpoConfiguration:getSourceYotpoConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceYounium:getSourceYounium": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceYounium.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceYounium.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceYouniumConfiguration:getSourceYouniumConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceYoutubeAnalytics:getSourceYoutubeAnalytics": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceYoutubeAnalytics.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceYoutubeAnalytics.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceYoutubeAnalyticsConfiguration:getSourceYoutubeAnalyticsConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZendeskChat:getSourceZendeskChat": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZendeskChat.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZendeskChat.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceZendeskChatConfiguration:getSourceZendeskChatConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZendeskSunshine:getSourceZendeskSunshine": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZendeskSunshine.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZendeskSunshine.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceZendeskSunshineConfiguration:getSourceZendeskSunshineConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZendeskSupport:getSourceZendeskSupport": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZendeskSupport.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZendeskSupport.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceZendeskSupportConfiguration:getSourceZendeskSupportConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZendeskTalk:getSourceZendeskTalk": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZendeskTalk.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZendeskTalk.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceZendeskTalkConfiguration:getSourceZendeskTalkConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZenloop:getSourceZenloop": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZenloop.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZenloop.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceZenloopConfiguration:getSourceZenloopConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZohoCrm:getSourceZohoCrm": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZohoCrm.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZohoCrm.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceZohoCrmConfiguration:getSourceZohoCrmConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZoom:getSourceZoom": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZoom.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZoom.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceZoomConfiguration:getSourceZoomConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getSourceZuora:getSourceZuora": {
            "inputs": {
                "description": "A collection of arguments for invoking getSourceZuora.\n",
                "properties": {
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSourceZuora.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/airbyte:index/getSourceZuoraConfiguration:getSourceZuoraConfiguration"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "secretId": {
                        "type": "string"
                    },
                    "sourceId": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configuration",
                    "name",
                    "sourceId",
                    "workspaceId",
                    "id"
                ]
            }
        },
        "airbyte:index/getWorkspace:getWorkspace": {
            "inputs": {
                "description": "A collection of arguments for invoking getWorkspace.\n",
                "properties": {
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "workspaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getWorkspace.\n",
                "properties": {
                    "dataResidency": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "workspaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dataResidency",
                    "name",
                    "workspaceId",
                    "id"
                ]
            }
        }
    }
}