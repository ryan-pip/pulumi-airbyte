{
    "renames": {
        "resources": {
            "airbyte:index/connection:Connection": "airbyte_connection",
            "airbyte:index/destinationAWSDatalake:DestinationAWSDatalake": "airbyte_destination_aws_datalake",
            "airbyte:index/destinationAzureBlobStorage:DestinationAzureBlobStorage": "airbyte_destination_azure_blob_storage",
            "airbyte:index/destinationBigquery:DestinationBigquery": "airbyte_destination_bigquery",
            "airbyte:index/destinationBigqueryDenormalized:DestinationBigqueryDenormalized": "airbyte_destination_bigquery_denormalized",
            "airbyte:index/destinationClickhouse:DestinationClickhouse": "airbyte_destination_clickhouse",
            "airbyte:index/destinationConvex:DestinationConvex": "airbyte_destination_convex",
            "airbyte:index/destinationCumulio:DestinationCumulio": "airbyte_destination_cumulio",
            "airbyte:index/destinationDatabend:DestinationDatabend": "airbyte_destination_databend",
            "airbyte:index/destinationDatabricks:DestinationDatabricks": "airbyte_destination_databricks",
            "airbyte:index/destinationDevNull:DestinationDevNull": "airbyte_destination_dev_null",
            "airbyte:index/destinationDynamodb:DestinationDynamodb": "airbyte_destination_dynamodb",
            "airbyte:index/destinationElasticsearch:DestinationElasticsearch": "airbyte_destination_elasticsearch",
            "airbyte:index/destinationFirebolt:DestinationFirebolt": "airbyte_destination_firebolt",
            "airbyte:index/destinationFirestore:DestinationFirestore": "airbyte_destination_firestore",
            "airbyte:index/destinationGcs:DestinationGcs": "airbyte_destination_gcs",
            "airbyte:index/destinationGoogleSheets:DestinationGoogleSheets": "airbyte_destination_google_sheets",
            "airbyte:index/destinationKeen:DestinationKeen": "airbyte_destination_keen",
            "airbyte:index/destinationKinesis:DestinationKinesis": "airbyte_destination_kinesis",
            "airbyte:index/destinationLangchain:DestinationLangchain": "airbyte_destination_langchain",
            "airbyte:index/destinationMSsql:DestinationMSsql": "airbyte_destination_mssql",
            "airbyte:index/destinationMongodb:DestinationMongodb": "airbyte_destination_mongodb",
            "airbyte:index/destinationMysql:DestinationMysql": "airbyte_destination_mysql",
            "airbyte:index/destinationOracle:DestinationOracle": "airbyte_destination_oracle",
            "airbyte:index/destinationPostgres:DestinationPostgres": "airbyte_destination_postgres",
            "airbyte:index/destinationPubsub:DestinationPubsub": "airbyte_destination_pubsub",
            "airbyte:index/destinationRedis:DestinationRedis": "airbyte_destination_redis",
            "airbyte:index/destinationRedshift:DestinationRedshift": "airbyte_destination_redshift",
            "airbyte:index/destinationS3:DestinationS3": "airbyte_destination_s3",
            "airbyte:index/destinationS3Glue:DestinationS3Glue": "airbyte_destination_s3_glue",
            "airbyte:index/destinationSftpJson:DestinationSftpJson": "airbyte_destination_sftp_json",
            "airbyte:index/destinationSnowflake:DestinationSnowflake": "airbyte_destination_snowflake",
            "airbyte:index/destinationTimeplus:DestinationTimeplus": "airbyte_destination_timeplus",
            "airbyte:index/destinationTypesense:DestinationTypesense": "airbyte_destination_typesense",
            "airbyte:index/destinationVertica:DestinationVertica": "airbyte_destination_vertica",
            "airbyte:index/destinationXata:DestinationXata": "airbyte_destination_xata",
            "airbyte:index/sourceAha:SourceAha": "airbyte_source_aha",
            "airbyte:index/sourceAircall:SourceAircall": "airbyte_source_aircall",
            "airbyte:index/sourceAirtable:SourceAirtable": "airbyte_source_airtable",
            "airbyte:index/sourceAlloydb:SourceAlloydb": "airbyte_source_alloydb",
            "airbyte:index/sourceAmazonAds:SourceAmazonAds": "airbyte_source_amazon_ads",
            "airbyte:index/sourceAmazonSellerPartner:SourceAmazonSellerPartner": "airbyte_source_amazon_seller_partner",
            "airbyte:index/sourceAmazonSqs:SourceAmazonSqs": "airbyte_source_amazon_sqs",
            "airbyte:index/sourceAmplitude:SourceAmplitude": "airbyte_source_amplitude",
            "airbyte:index/sourceApifyDataset:SourceApifyDataset": "airbyte_source_apify_dataset",
            "airbyte:index/sourceAppfollow:SourceAppfollow": "airbyte_source_appfollow",
            "airbyte:index/sourceAsana:SourceAsana": "airbyte_source_asana",
            "airbyte:index/sourceAuth0:SourceAuth0": "airbyte_source_auth0",
            "airbyte:index/sourceAwsCloudtrail:SourceAwsCloudtrail": "airbyte_source_aws_cloudtrail",
            "airbyte:index/sourceAzureBlobStorage:SourceAzureBlobStorage": "airbyte_source_azure_blob_storage",
            "airbyte:index/sourceAzureTable:SourceAzureTable": "airbyte_source_azure_table",
            "airbyte:index/sourceBambooHr:SourceBambooHr": "airbyte_source_bamboo_hr",
            "airbyte:index/sourceBigcommerce:SourceBigcommerce": "airbyte_source_bigcommerce",
            "airbyte:index/sourceBigquery:SourceBigquery": "airbyte_source_bigquery",
            "airbyte:index/sourceBingAds:SourceBingAds": "airbyte_source_bing_ads",
            "airbyte:index/sourceBraintree:SourceBraintree": "airbyte_source_braintree",
            "airbyte:index/sourceBraze:SourceBraze": "airbyte_source_braze",
            "airbyte:index/sourceChargebee:SourceChargebee": "airbyte_source_chargebee",
            "airbyte:index/sourceChartmogul:SourceChartmogul": "airbyte_source_chartmogul",
            "airbyte:index/sourceClickhouse:SourceClickhouse": "airbyte_source_clickhouse",
            "airbyte:index/sourceClickupApi:SourceClickupApi": "airbyte_source_clickup_api",
            "airbyte:index/sourceClockify:SourceClockify": "airbyte_source_clockify",
            "airbyte:index/sourceCloseCom:SourceCloseCom": "airbyte_source_close_com",
            "airbyte:index/sourceCoda:SourceCoda": "airbyte_source_coda",
            "airbyte:index/sourceCoinApi:SourceCoinApi": "airbyte_source_coin_api",
            "airbyte:index/sourceCoinmarketcap:SourceCoinmarketcap": "airbyte_source_coinmarketcap",
            "airbyte:index/sourceConfigcat:SourceConfigcat": "airbyte_source_configcat",
            "airbyte:index/sourceConfluence:SourceConfluence": "airbyte_source_confluence",
            "airbyte:index/sourceConvex:SourceConvex": "airbyte_source_convex",
            "airbyte:index/sourceDatadog:SourceDatadog": "airbyte_source_datadog",
            "airbyte:index/sourceDatascope:SourceDatascope": "airbyte_source_datascope",
            "airbyte:index/sourceDelighted:SourceDelighted": "airbyte_source_delighted",
            "airbyte:index/sourceDixa:SourceDixa": "airbyte_source_dixa",
            "airbyte:index/sourceDockerhub:SourceDockerhub": "airbyte_source_dockerhub",
            "airbyte:index/sourceDremio:SourceDremio": "airbyte_source_dremio",
            "airbyte:index/sourceDynamodb:SourceDynamodb": "airbyte_source_dynamodb",
            "airbyte:index/sourceE2eTestCloud:SourceE2eTestCloud": "airbyte_source_e2e_test_cloud",
            "airbyte:index/sourceEmailoctopus:SourceEmailoctopus": "airbyte_source_emailoctopus",
            "airbyte:index/sourceExchangeRates:SourceExchangeRates": "airbyte_source_exchange_rates",
            "airbyte:index/sourceFacebookMarketing:SourceFacebookMarketing": "airbyte_source_facebook_marketing",
            "airbyte:index/sourceFacebookPages:SourceFacebookPages": "airbyte_source_facebook_pages",
            "airbyte:index/sourceFaker:SourceFaker": "airbyte_source_faker",
            "airbyte:index/sourceFauna:SourceFauna": "airbyte_source_fauna",
            "airbyte:index/sourceFileSecure:SourceFileSecure": "airbyte_source_file_secure",
            "airbyte:index/sourceFirebolt:SourceFirebolt": "airbyte_source_firebolt",
            "airbyte:index/sourceFreshcaller:SourceFreshcaller": "airbyte_source_freshcaller",
            "airbyte:index/sourceFreshdesk:SourceFreshdesk": "airbyte_source_freshdesk",
            "airbyte:index/sourceFreshsales:SourceFreshsales": "airbyte_source_freshsales",
            "airbyte:index/sourceGainsightPx:SourceGainsightPx": "airbyte_source_gainsight_px",
            "airbyte:index/sourceGcs:SourceGcs": "airbyte_source_gcs",
            "airbyte:index/sourceGetlago:SourceGetlago": "airbyte_source_getlago",
            "airbyte:index/sourceGithub:SourceGithub": "airbyte_source_github",
            "airbyte:index/sourceGitlab:SourceGitlab": "airbyte_source_gitlab",
            "airbyte:index/sourceGlassfrog:SourceGlassfrog": "airbyte_source_glassfrog",
            "airbyte:index/sourceGnews:SourceGnews": "airbyte_source_gnews",
            "airbyte:index/sourceGoogleAds:SourceGoogleAds": "airbyte_source_google_ads",
            "airbyte:index/sourceGoogleAnalyticsDataApi:SourceGoogleAnalyticsDataApi": "airbyte_source_google_analytics_data_api",
            "airbyte:index/sourceGoogleAnalyticsV4:SourceGoogleAnalyticsV4": "airbyte_source_google_analytics_v4",
            "airbyte:index/sourceGoogleDirectory:SourceGoogleDirectory": "airbyte_source_google_directory",
            "airbyte:index/sourceGooglePagespeedInsights:SourceGooglePagespeedInsights": "airbyte_source_google_pagespeed_insights",
            "airbyte:index/sourceGoogleSearchConsole:SourceGoogleSearchConsole": "airbyte_source_google_search_console",
            "airbyte:index/sourceGoogleSheets:SourceGoogleSheets": "airbyte_source_google_sheets",
            "airbyte:index/sourceGoogleWebfonts:SourceGoogleWebfonts": "airbyte_source_google_webfonts",
            "airbyte:index/sourceGoogleWorkspaceAdminReports:SourceGoogleWorkspaceAdminReports": "airbyte_source_google_workspace_admin_reports",
            "airbyte:index/sourceGreenhouse:SourceGreenhouse": "airbyte_source_greenhouse",
            "airbyte:index/sourceGridly:SourceGridly": "airbyte_source_gridly",
            "airbyte:index/sourceHarvest:SourceHarvest": "airbyte_source_harvest",
            "airbyte:index/sourceHubplanner:SourceHubplanner": "airbyte_source_hubplanner",
            "airbyte:index/sourceHubspot:SourceHubspot": "airbyte_source_hubspot",
            "airbyte:index/sourceInsightly:SourceInsightly": "airbyte_source_insightly",
            "airbyte:index/sourceInstagram:SourceInstagram": "airbyte_source_instagram",
            "airbyte:index/sourceInstatus:SourceInstatus": "airbyte_source_instatus",
            "airbyte:index/sourceIntercom:SourceIntercom": "airbyte_source_intercom",
            "airbyte:index/sourceIp2whois:SourceIp2whois": "airbyte_source_ip2whois",
            "airbyte:index/sourceIterable:SourceIterable": "airbyte_source_iterable",
            "airbyte:index/sourceJira:SourceJira": "airbyte_source_jira",
            "airbyte:index/sourceK6Cloud:SourceK6Cloud": "airbyte_source_k6_cloud",
            "airbyte:index/sourceKlarna:SourceKlarna": "airbyte_source_klarna",
            "airbyte:index/sourceKlaviyo:SourceKlaviyo": "airbyte_source_klaviyo",
            "airbyte:index/sourceKustomerSinger:SourceKustomerSinger": "airbyte_source_kustomer_singer",
            "airbyte:index/sourceKyve:SourceKyve": "airbyte_source_kyve",
            "airbyte:index/sourceLaunchdarkly:SourceLaunchdarkly": "airbyte_source_launchdarkly",
            "airbyte:index/sourceLemlist:SourceLemlist": "airbyte_source_lemlist",
            "airbyte:index/sourceLeverHiring:SourceLeverHiring": "airbyte_source_lever_hiring",
            "airbyte:index/sourceLinkedinAds:SourceLinkedinAds": "airbyte_source_linkedin_ads",
            "airbyte:index/sourceLinkedinPages:SourceLinkedinPages": "airbyte_source_linkedin_pages",
            "airbyte:index/sourceLinnworks:SourceLinnworks": "airbyte_source_linnworks",
            "airbyte:index/sourceLokalise:SourceLokalise": "airbyte_source_lokalise",
            "airbyte:index/sourceMailchimp:SourceMailchimp": "airbyte_source_mailchimp",
            "airbyte:index/sourceMailgun:SourceMailgun": "airbyte_source_mailgun",
            "airbyte:index/sourceMailjetSms:SourceMailjetSms": "airbyte_source_mailjet_sms",
            "airbyte:index/sourceMarketo:SourceMarketo": "airbyte_source_marketo",
            "airbyte:index/sourceMetabase:SourceMetabase": "airbyte_source_metabase",
            "airbyte:index/sourceMicrosoftTeams:SourceMicrosoftTeams": "airbyte_source_microsoft_teams",
            "airbyte:index/sourceMixpanel:SourceMixpanel": "airbyte_source_mixpanel",
            "airbyte:index/sourceMonday:SourceMonday": "airbyte_source_monday",
            "airbyte:index/sourceMongodb:SourceMongodb": "airbyte_source_mongodb",
            "airbyte:index/sourceMongodbInternalPoc:SourceMongodbInternalPoc": "airbyte_source_mongodb_internal_poc",
            "airbyte:index/sourceMssql:SourceMssql": "airbyte_source_mssql",
            "airbyte:index/sourceMyHours:SourceMyHours": "airbyte_source_my_hours",
            "airbyte:index/sourceMysql:SourceMysql": "airbyte_source_mysql",
            "airbyte:index/sourceNetsuite:SourceNetsuite": "airbyte_source_netsuite",
            "airbyte:index/sourceNotion:SourceNotion": "airbyte_source_notion",
            "airbyte:index/sourceNytimes:SourceNytimes": "airbyte_source_nytimes",
            "airbyte:index/sourceOkta:SourceOkta": "airbyte_source_okta",
            "airbyte:index/sourceOmnisend:SourceOmnisend": "airbyte_source_omnisend",
            "airbyte:index/sourceOnesignal:SourceOnesignal": "airbyte_source_onesignal",
            "airbyte:index/sourceOpenweather:SourceOpenweather": "airbyte_source_openweather",
            "airbyte:index/sourceOracle:SourceOracle": "airbyte_source_oracle",
            "airbyte:index/sourceOrb:SourceOrb": "airbyte_source_orb",
            "airbyte:index/sourceOrbit:SourceOrbit": "airbyte_source_orbit",
            "airbyte:index/sourceOutbrainAmplify:SourceOutbrainAmplify": "airbyte_source_outbrain_amplify",
            "airbyte:index/sourceOutreach:SourceOutreach": "airbyte_source_outreach",
            "airbyte:index/sourcePaypalTransaction:SourcePaypalTransaction": "airbyte_source_paypal_transaction",
            "airbyte:index/sourcePaystack:SourcePaystack": "airbyte_source_paystack",
            "airbyte:index/sourcePendo:SourcePendo": "airbyte_source_pendo",
            "airbyte:index/sourcePersistiq:SourcePersistiq": "airbyte_source_persistiq",
            "airbyte:index/sourcePexelsApi:SourcePexelsApi": "airbyte_source_pexels_api",
            "airbyte:index/sourcePinterest:SourcePinterest": "airbyte_source_pinterest",
            "airbyte:index/sourcePipedrive:SourcePipedrive": "airbyte_source_pipedrive",
            "airbyte:index/sourcePocket:SourcePocket": "airbyte_source_pocket",
            "airbyte:index/sourcePokeapi:SourcePokeapi": "airbyte_source_pokeapi",
            "airbyte:index/sourcePolygonStockApi:SourcePolygonStockApi": "airbyte_source_polygon_stock_api",
            "airbyte:index/sourcePostgres:SourcePostgres": "airbyte_source_postgres",
            "airbyte:index/sourcePosthog:SourcePosthog": "airbyte_source_posthog",
            "airbyte:index/sourcePostmarkapp:SourcePostmarkapp": "airbyte_source_postmarkapp",
            "airbyte:index/sourcePrestashop:SourcePrestashop": "airbyte_source_prestashop",
            "airbyte:index/sourcePublicApis:SourcePublicApis": "airbyte_source_public_apis",
            "airbyte:index/sourcePunkApi:SourcePunkApi": "airbyte_source_punk_api",
            "airbyte:index/sourcePypi:SourcePypi": "airbyte_source_pypi",
            "airbyte:index/sourceQualaroo:SourceQualaroo": "airbyte_source_qualaroo",
            "airbyte:index/sourceQuickbooks:SourceQuickbooks": "airbyte_source_quickbooks",
            "airbyte:index/sourceRailz:SourceRailz": "airbyte_source_railz",
            "airbyte:index/sourceRecharge:SourceRecharge": "airbyte_source_recharge",
            "airbyte:index/sourceRecreation:SourceRecreation": "airbyte_source_recreation",
            "airbyte:index/sourceRecruitee:SourceRecruitee": "airbyte_source_recruitee",
            "airbyte:index/sourceRecurly:SourceRecurly": "airbyte_source_recurly",
            "airbyte:index/sourceRedshift:SourceRedshift": "airbyte_source_redshift",
            "airbyte:index/sourceRetently:SourceRetently": "airbyte_source_retently",
            "airbyte:index/sourceRkiCovid:SourceRkiCovid": "airbyte_source_rki_covid",
            "airbyte:index/sourceRss:SourceRss": "airbyte_source_rss",
            "airbyte:index/sourceS3:SourceS3": "airbyte_source_s3",
            "airbyte:index/sourceSalesforce:SourceSalesforce": "airbyte_source_salesforce",
            "airbyte:index/sourceSalesloft:SourceSalesloft": "airbyte_source_salesloft",
            "airbyte:index/sourceSapFieldglass:SourceSapFieldglass": "airbyte_source_sap_fieldglass",
            "airbyte:index/sourceSecoda:SourceSecoda": "airbyte_source_secoda",
            "airbyte:index/sourceSendgrid:SourceSendgrid": "airbyte_source_sendgrid",
            "airbyte:index/sourceSendinblue:SourceSendinblue": "airbyte_source_sendinblue",
            "airbyte:index/sourceSenseforce:SourceSenseforce": "airbyte_source_senseforce",
            "airbyte:index/sourceSentry:SourceSentry": "airbyte_source_sentry",
            "airbyte:index/sourceSftp:SourceSftp": "airbyte_source_sftp",
            "airbyte:index/sourceSftpBulk:SourceSftpBulk": "airbyte_source_sftp_bulk",
            "airbyte:index/sourceShopify:SourceShopify": "airbyte_source_shopify",
            "airbyte:index/sourceShortio:SourceShortio": "airbyte_source_shortio",
            "airbyte:index/sourceSlack:SourceSlack": "airbyte_source_slack",
            "airbyte:index/sourceSmaily:SourceSmaily": "airbyte_source_smaily",
            "airbyte:index/sourceSmartengage:SourceSmartengage": "airbyte_source_smartengage",
            "airbyte:index/sourceSmartsheets:SourceSmartsheets": "airbyte_source_smartsheets",
            "airbyte:index/sourceSnapchatMarketing:SourceSnapchatMarketing": "airbyte_source_snapchat_marketing",
            "airbyte:index/sourceSnowflake:SourceSnowflake": "airbyte_source_snowflake",
            "airbyte:index/sourceSonarCloud:SourceSonarCloud": "airbyte_source_sonar_cloud",
            "airbyte:index/sourceSpaceXApi:SourceSpaceXApi": "airbyte_source_spacex_api",
            "airbyte:index/sourceSquare:SourceSquare": "airbyte_source_square",
            "airbyte:index/sourceStrava:SourceStrava": "airbyte_source_strava",
            "airbyte:index/sourceStripe:SourceStripe": "airbyte_source_stripe",
            "airbyte:index/sourceSurveySparrow:SourceSurveySparrow": "airbyte_source_survey_sparrow",
            "airbyte:index/sourceSurveymonkey:SourceSurveymonkey": "airbyte_source_surveymonkey",
            "airbyte:index/sourceTempo:SourceTempo": "airbyte_source_tempo",
            "airbyte:index/sourceTheGuardianApi:SourceTheGuardianApi": "airbyte_source_the_guardian_api",
            "airbyte:index/sourceTiktokMarketing:SourceTiktokMarketing": "airbyte_source_tiktok_marketing",
            "airbyte:index/sourceTodoist:SourceTodoist": "airbyte_source_todoist",
            "airbyte:index/sourceTrello:SourceTrello": "airbyte_source_trello",
            "airbyte:index/sourceTrustpilot:SourceTrustpilot": "airbyte_source_trustpilot",
            "airbyte:index/sourceTvmazeSchedule:SourceTvmazeSchedule": "airbyte_source_tvmaze_schedule",
            "airbyte:index/sourceTwilio:SourceTwilio": "airbyte_source_twilio",
            "airbyte:index/sourceTwilioTaskrouter:SourceTwilioTaskrouter": "airbyte_source_twilio_taskrouter",
            "airbyte:index/sourceTwitter:SourceTwitter": "airbyte_source_twitter",
            "airbyte:index/sourceTypeform:SourceTypeform": "airbyte_source_typeform",
            "airbyte:index/sourceUsCensus:SourceUsCensus": "airbyte_source_us_census",
            "airbyte:index/sourceVantage:SourceVantage": "airbyte_source_vantage",
            "airbyte:index/sourceWebflow:SourceWebflow": "airbyte_source_webflow",
            "airbyte:index/sourceWhiskyHunter:SourceWhiskyHunter": "airbyte_source_whisky_hunter",
            "airbyte:index/sourceWikipediaPageviews:SourceWikipediaPageviews": "airbyte_source_wikipedia_pageviews",
            "airbyte:index/sourceWoocommerce:SourceWoocommerce": "airbyte_source_woocommerce",
            "airbyte:index/sourceXero:SourceXero": "airbyte_source_xero",
            "airbyte:index/sourceXkcd:SourceXkcd": "airbyte_source_xkcd",
            "airbyte:index/sourceYandexMetrica:SourceYandexMetrica": "airbyte_source_yandex_metrica",
            "airbyte:index/sourceYotpo:SourceYotpo": "airbyte_source_yotpo",
            "airbyte:index/sourceYounium:SourceYounium": "airbyte_source_younium",
            "airbyte:index/sourceYoutubeAnalytics:SourceYoutubeAnalytics": "airbyte_source_youtube_analytics",
            "airbyte:index/sourceZendeskChat:SourceZendeskChat": "airbyte_source_zendesk_chat",
            "airbyte:index/sourceZendeskSunshine:SourceZendeskSunshine": "airbyte_source_zendesk_sunshine",
            "airbyte:index/sourceZendeskSupport:SourceZendeskSupport": "airbyte_source_zendesk_support",
            "airbyte:index/sourceZendeskTalk:SourceZendeskTalk": "airbyte_source_zendesk_talk",
            "airbyte:index/sourceZenloop:SourceZenloop": "airbyte_source_zenloop",
            "airbyte:index/sourceZohoCrm:SourceZohoCrm": "airbyte_source_zoho_crm",
            "airbyte:index/sourceZoom:SourceZoom": "airbyte_source_zoom",
            "airbyte:index/sourceZuora:SourceZuora": "airbyte_source_zuora",
            "airbyte:index/workspace:Workspace": "airbyte_workspace"
        },
        "functions": {
            "airbyte:index/getConnection:getConnection": "airbyte_connection",
            "airbyte:index/getDestinationAWSDatalake:getDestinationAWSDatalake": "airbyte_destination_aws_datalake",
            "airbyte:index/getDestinationAzureBlobStorage:getDestinationAzureBlobStorage": "airbyte_destination_azure_blob_storage",
            "airbyte:index/getDestinationBigquery:getDestinationBigquery": "airbyte_destination_bigquery",
            "airbyte:index/getDestinationBigqueryDenormalized:getDestinationBigqueryDenormalized": "airbyte_destination_bigquery_denormalized",
            "airbyte:index/getDestinationClickhouse:getDestinationClickhouse": "airbyte_destination_clickhouse",
            "airbyte:index/getDestinationConvex:getDestinationConvex": "airbyte_destination_convex",
            "airbyte:index/getDestinationCumulio:getDestinationCumulio": "airbyte_destination_cumulio",
            "airbyte:index/getDestinationDatabend:getDestinationDatabend": "airbyte_destination_databend",
            "airbyte:index/getDestinationDatabricks:getDestinationDatabricks": "airbyte_destination_databricks",
            "airbyte:index/getDestinationDevNull:getDestinationDevNull": "airbyte_destination_dev_null",
            "airbyte:index/getDestinationDynamodb:getDestinationDynamodb": "airbyte_destination_dynamodb",
            "airbyte:index/getDestinationElasticsearch:getDestinationElasticsearch": "airbyte_destination_elasticsearch",
            "airbyte:index/getDestinationFirebolt:getDestinationFirebolt": "airbyte_destination_firebolt",
            "airbyte:index/getDestinationFirestore:getDestinationFirestore": "airbyte_destination_firestore",
            "airbyte:index/getDestinationGcs:getDestinationGcs": "airbyte_destination_gcs",
            "airbyte:index/getDestinationGoogleSheets:getDestinationGoogleSheets": "airbyte_destination_google_sheets",
            "airbyte:index/getDestinationKeen:getDestinationKeen": "airbyte_destination_keen",
            "airbyte:index/getDestinationKinesis:getDestinationKinesis": "airbyte_destination_kinesis",
            "airbyte:index/getDestinationLangchain:getDestinationLangchain": "airbyte_destination_langchain",
            "airbyte:index/getDestinationMSsql:getDestinationMSsql": "airbyte_destination_mssql",
            "airbyte:index/getDestinationMongodb:getDestinationMongodb": "airbyte_destination_mongodb",
            "airbyte:index/getDestinationMysql:getDestinationMysql": "airbyte_destination_mysql",
            "airbyte:index/getDestinationOracle:getDestinationOracle": "airbyte_destination_oracle",
            "airbyte:index/getDestinationPostgres:getDestinationPostgres": "airbyte_destination_postgres",
            "airbyte:index/getDestinationPubsub:getDestinationPubsub": "airbyte_destination_pubsub",
            "airbyte:index/getDestinationRedis:getDestinationRedis": "airbyte_destination_redis",
            "airbyte:index/getDestinationRedshift:getDestinationRedshift": "airbyte_destination_redshift",
            "airbyte:index/getDestinationS3:getDestinationS3": "airbyte_destination_s3",
            "airbyte:index/getDestinationS3Glue:getDestinationS3Glue": "airbyte_destination_s3_glue",
            "airbyte:index/getDestinationSftpJson:getDestinationSftpJson": "airbyte_destination_sftp_json",
            "airbyte:index/getDestinationSnowflake:getDestinationSnowflake": "airbyte_destination_snowflake",
            "airbyte:index/getDestinationTimeplus:getDestinationTimeplus": "airbyte_destination_timeplus",
            "airbyte:index/getDestinationTypesense:getDestinationTypesense": "airbyte_destination_typesense",
            "airbyte:index/getDestinationVertica:getDestinationVertica": "airbyte_destination_vertica",
            "airbyte:index/getDestinationXata:getDestinationXata": "airbyte_destination_xata",
            "airbyte:index/getSourceAha:getSourceAha": "airbyte_source_aha",
            "airbyte:index/getSourceAircall:getSourceAircall": "airbyte_source_aircall",
            "airbyte:index/getSourceAirtable:getSourceAirtable": "airbyte_source_airtable",
            "airbyte:index/getSourceAlloydb:getSourceAlloydb": "airbyte_source_alloydb",
            "airbyte:index/getSourceAmazonAds:getSourceAmazonAds": "airbyte_source_amazon_ads",
            "airbyte:index/getSourceAmazonSellerPartner:getSourceAmazonSellerPartner": "airbyte_source_amazon_seller_partner",
            "airbyte:index/getSourceAmazonSqs:getSourceAmazonSqs": "airbyte_source_amazon_sqs",
            "airbyte:index/getSourceAmplitude:getSourceAmplitude": "airbyte_source_amplitude",
            "airbyte:index/getSourceApifyDataset:getSourceApifyDataset": "airbyte_source_apify_dataset",
            "airbyte:index/getSourceAppfollow:getSourceAppfollow": "airbyte_source_appfollow",
            "airbyte:index/getSourceAsana:getSourceAsana": "airbyte_source_asana",
            "airbyte:index/getSourceAuth0:getSourceAuth0": "airbyte_source_auth0",
            "airbyte:index/getSourceAwsCloudtrail:getSourceAwsCloudtrail": "airbyte_source_aws_cloudtrail",
            "airbyte:index/getSourceAzureBlobStorage:getSourceAzureBlobStorage": "airbyte_source_azure_blob_storage",
            "airbyte:index/getSourceAzureTable:getSourceAzureTable": "airbyte_source_azure_table",
            "airbyte:index/getSourceBambooHr:getSourceBambooHr": "airbyte_source_bamboo_hr",
            "airbyte:index/getSourceBigcommerce:getSourceBigcommerce": "airbyte_source_bigcommerce",
            "airbyte:index/getSourceBigquery:getSourceBigquery": "airbyte_source_bigquery",
            "airbyte:index/getSourceBingAds:getSourceBingAds": "airbyte_source_bing_ads",
            "airbyte:index/getSourceBraintree:getSourceBraintree": "airbyte_source_braintree",
            "airbyte:index/getSourceBraze:getSourceBraze": "airbyte_source_braze",
            "airbyte:index/getSourceChargebee:getSourceChargebee": "airbyte_source_chargebee",
            "airbyte:index/getSourceChartmogul:getSourceChartmogul": "airbyte_source_chartmogul",
            "airbyte:index/getSourceClickhouse:getSourceClickhouse": "airbyte_source_clickhouse",
            "airbyte:index/getSourceClickupApi:getSourceClickupApi": "airbyte_source_clickup_api",
            "airbyte:index/getSourceClockify:getSourceClockify": "airbyte_source_clockify",
            "airbyte:index/getSourceCloseCom:getSourceCloseCom": "airbyte_source_close_com",
            "airbyte:index/getSourceCoda:getSourceCoda": "airbyte_source_coda",
            "airbyte:index/getSourceCoinApi:getSourceCoinApi": "airbyte_source_coin_api",
            "airbyte:index/getSourceCoinmarketcap:getSourceCoinmarketcap": "airbyte_source_coinmarketcap",
            "airbyte:index/getSourceConfigcat:getSourceConfigcat": "airbyte_source_configcat",
            "airbyte:index/getSourceConfluence:getSourceConfluence": "airbyte_source_confluence",
            "airbyte:index/getSourceConvex:getSourceConvex": "airbyte_source_convex",
            "airbyte:index/getSourceDatadog:getSourceDatadog": "airbyte_source_datadog",
            "airbyte:index/getSourceDatascope:getSourceDatascope": "airbyte_source_datascope",
            "airbyte:index/getSourceDelighted:getSourceDelighted": "airbyte_source_delighted",
            "airbyte:index/getSourceDixa:getSourceDixa": "airbyte_source_dixa",
            "airbyte:index/getSourceDockerhub:getSourceDockerhub": "airbyte_source_dockerhub",
            "airbyte:index/getSourceDremio:getSourceDremio": "airbyte_source_dremio",
            "airbyte:index/getSourceDynamodb:getSourceDynamodb": "airbyte_source_dynamodb",
            "airbyte:index/getSourceE2eTestCloud:getSourceE2eTestCloud": "airbyte_source_e2e_test_cloud",
            "airbyte:index/getSourceEmailoctopus:getSourceEmailoctopus": "airbyte_source_emailoctopus",
            "airbyte:index/getSourceExchangeRates:getSourceExchangeRates": "airbyte_source_exchange_rates",
            "airbyte:index/getSourceFacebookMarketing:getSourceFacebookMarketing": "airbyte_source_facebook_marketing",
            "airbyte:index/getSourceFacebookPages:getSourceFacebookPages": "airbyte_source_facebook_pages",
            "airbyte:index/getSourceFaker:getSourceFaker": "airbyte_source_faker",
            "airbyte:index/getSourceFauna:getSourceFauna": "airbyte_source_fauna",
            "airbyte:index/getSourceFileSecure:getSourceFileSecure": "airbyte_source_file_secure",
            "airbyte:index/getSourceFirebolt:getSourceFirebolt": "airbyte_source_firebolt",
            "airbyte:index/getSourceFreshcaller:getSourceFreshcaller": "airbyte_source_freshcaller",
            "airbyte:index/getSourceFreshdesk:getSourceFreshdesk": "airbyte_source_freshdesk",
            "airbyte:index/getSourceFreshsales:getSourceFreshsales": "airbyte_source_freshsales",
            "airbyte:index/getSourceGainsightPx:getSourceGainsightPx": "airbyte_source_gainsight_px",
            "airbyte:index/getSourceGcs:getSourceGcs": "airbyte_source_gcs",
            "airbyte:index/getSourceGetlago:getSourceGetlago": "airbyte_source_getlago",
            "airbyte:index/getSourceGithub:getSourceGithub": "airbyte_source_github",
            "airbyte:index/getSourceGitlab:getSourceGitlab": "airbyte_source_gitlab",
            "airbyte:index/getSourceGlassfrog:getSourceGlassfrog": "airbyte_source_glassfrog",
            "airbyte:index/getSourceGnews:getSourceGnews": "airbyte_source_gnews",
            "airbyte:index/getSourceGoogleAds:getSourceGoogleAds": "airbyte_source_google_ads",
            "airbyte:index/getSourceGoogleAnalyticsDataApi:getSourceGoogleAnalyticsDataApi": "airbyte_source_google_analytics_data_api",
            "airbyte:index/getSourceGoogleAnalyticsV4:getSourceGoogleAnalyticsV4": "airbyte_source_google_analytics_v4",
            "airbyte:index/getSourceGoogleDirectory:getSourceGoogleDirectory": "airbyte_source_google_directory",
            "airbyte:index/getSourceGooglePagespeedInsights:getSourceGooglePagespeedInsights": "airbyte_source_google_pagespeed_insights",
            "airbyte:index/getSourceGoogleSearchConsole:getSourceGoogleSearchConsole": "airbyte_source_google_search_console",
            "airbyte:index/getSourceGoogleSheets:getSourceGoogleSheets": "airbyte_source_google_sheets",
            "airbyte:index/getSourceGoogleWebfonts:getSourceGoogleWebfonts": "airbyte_source_google_webfonts",
            "airbyte:index/getSourceGoogleWorkspaceAdminReports:getSourceGoogleWorkspaceAdminReports": "airbyte_source_google_workspace_admin_reports",
            "airbyte:index/getSourceGreenhouse:getSourceGreenhouse": "airbyte_source_greenhouse",
            "airbyte:index/getSourceGridly:getSourceGridly": "airbyte_source_gridly",
            "airbyte:index/getSourceHarvest:getSourceHarvest": "airbyte_source_harvest",
            "airbyte:index/getSourceHubplanner:getSourceHubplanner": "airbyte_source_hubplanner",
            "airbyte:index/getSourceHubspot:getSourceHubspot": "airbyte_source_hubspot",
            "airbyte:index/getSourceInsightly:getSourceInsightly": "airbyte_source_insightly",
            "airbyte:index/getSourceInstagram:getSourceInstagram": "airbyte_source_instagram",
            "airbyte:index/getSourceInstatus:getSourceInstatus": "airbyte_source_instatus",
            "airbyte:index/getSourceIntercom:getSourceIntercom": "airbyte_source_intercom",
            "airbyte:index/getSourceIp2whois:getSourceIp2whois": "airbyte_source_ip2whois",
            "airbyte:index/getSourceIterable:getSourceIterable": "airbyte_source_iterable",
            "airbyte:index/getSourceJira:getSourceJira": "airbyte_source_jira",
            "airbyte:index/getSourceK6Cloud:getSourceK6Cloud": "airbyte_source_k6_cloud",
            "airbyte:index/getSourceKlarna:getSourceKlarna": "airbyte_source_klarna",
            "airbyte:index/getSourceKlaviyo:getSourceKlaviyo": "airbyte_source_klaviyo",
            "airbyte:index/getSourceKustomerSinger:getSourceKustomerSinger": "airbyte_source_kustomer_singer",
            "airbyte:index/getSourceKyve:getSourceKyve": "airbyte_source_kyve",
            "airbyte:index/getSourceLaunchdarkly:getSourceLaunchdarkly": "airbyte_source_launchdarkly",
            "airbyte:index/getSourceLemlist:getSourceLemlist": "airbyte_source_lemlist",
            "airbyte:index/getSourceLeverHiring:getSourceLeverHiring": "airbyte_source_lever_hiring",
            "airbyte:index/getSourceLinkedinAds:getSourceLinkedinAds": "airbyte_source_linkedin_ads",
            "airbyte:index/getSourceLinkedinPages:getSourceLinkedinPages": "airbyte_source_linkedin_pages",
            "airbyte:index/getSourceLinnworks:getSourceLinnworks": "airbyte_source_linnworks",
            "airbyte:index/getSourceLokalise:getSourceLokalise": "airbyte_source_lokalise",
            "airbyte:index/getSourceMailchimp:getSourceMailchimp": "airbyte_source_mailchimp",
            "airbyte:index/getSourceMailgun:getSourceMailgun": "airbyte_source_mailgun",
            "airbyte:index/getSourceMailjetSms:getSourceMailjetSms": "airbyte_source_mailjet_sms",
            "airbyte:index/getSourceMarketo:getSourceMarketo": "airbyte_source_marketo",
            "airbyte:index/getSourceMetabase:getSourceMetabase": "airbyte_source_metabase",
            "airbyte:index/getSourceMicrosoftTeams:getSourceMicrosoftTeams": "airbyte_source_microsoft_teams",
            "airbyte:index/getSourceMixpanel:getSourceMixpanel": "airbyte_source_mixpanel",
            "airbyte:index/getSourceMonday:getSourceMonday": "airbyte_source_monday",
            "airbyte:index/getSourceMongodb:getSourceMongodb": "airbyte_source_mongodb",
            "airbyte:index/getSourceMongodbInternalPoc:getSourceMongodbInternalPoc": "airbyte_source_mongodb_internal_poc",
            "airbyte:index/getSourceMssql:getSourceMssql": "airbyte_source_mssql",
            "airbyte:index/getSourceMyHours:getSourceMyHours": "airbyte_source_my_hours",
            "airbyte:index/getSourceMysql:getSourceMysql": "airbyte_source_mysql",
            "airbyte:index/getSourceNetsuite:getSourceNetsuite": "airbyte_source_netsuite",
            "airbyte:index/getSourceNotion:getSourceNotion": "airbyte_source_notion",
            "airbyte:index/getSourceNytimes:getSourceNytimes": "airbyte_source_nytimes",
            "airbyte:index/getSourceOkta:getSourceOkta": "airbyte_source_okta",
            "airbyte:index/getSourceOmnisend:getSourceOmnisend": "airbyte_source_omnisend",
            "airbyte:index/getSourceOnesignal:getSourceOnesignal": "airbyte_source_onesignal",
            "airbyte:index/getSourceOpenweather:getSourceOpenweather": "airbyte_source_openweather",
            "airbyte:index/getSourceOracle:getSourceOracle": "airbyte_source_oracle",
            "airbyte:index/getSourceOrb:getSourceOrb": "airbyte_source_orb",
            "airbyte:index/getSourceOrbit:getSourceOrbit": "airbyte_source_orbit",
            "airbyte:index/getSourceOutbrainAmplify:getSourceOutbrainAmplify": "airbyte_source_outbrain_amplify",
            "airbyte:index/getSourceOutreach:getSourceOutreach": "airbyte_source_outreach",
            "airbyte:index/getSourcePaypalTransaction:getSourcePaypalTransaction": "airbyte_source_paypal_transaction",
            "airbyte:index/getSourcePaystack:getSourcePaystack": "airbyte_source_paystack",
            "airbyte:index/getSourcePendo:getSourcePendo": "airbyte_source_pendo",
            "airbyte:index/getSourcePersistiq:getSourcePersistiq": "airbyte_source_persistiq",
            "airbyte:index/getSourcePexelsApi:getSourcePexelsApi": "airbyte_source_pexels_api",
            "airbyte:index/getSourcePinterest:getSourcePinterest": "airbyte_source_pinterest",
            "airbyte:index/getSourcePipedrive:getSourcePipedrive": "airbyte_source_pipedrive",
            "airbyte:index/getSourcePocket:getSourcePocket": "airbyte_source_pocket",
            "airbyte:index/getSourcePokeapi:getSourcePokeapi": "airbyte_source_pokeapi",
            "airbyte:index/getSourcePolygonStockApi:getSourcePolygonStockApi": "airbyte_source_polygon_stock_api",
            "airbyte:index/getSourcePostgres:getSourcePostgres": "airbyte_source_postgres",
            "airbyte:index/getSourcePosthog:getSourcePosthog": "airbyte_source_posthog",
            "airbyte:index/getSourcePostmarkapp:getSourcePostmarkapp": "airbyte_source_postmarkapp",
            "airbyte:index/getSourcePrestashop:getSourcePrestashop": "airbyte_source_prestashop",
            "airbyte:index/getSourcePublicApis:getSourcePublicApis": "airbyte_source_public_apis",
            "airbyte:index/getSourcePunkApi:getSourcePunkApi": "airbyte_source_punk_api",
            "airbyte:index/getSourcePypi:getSourcePypi": "airbyte_source_pypi",
            "airbyte:index/getSourceQualaroo:getSourceQualaroo": "airbyte_source_qualaroo",
            "airbyte:index/getSourceQuickbooks:getSourceQuickbooks": "airbyte_source_quickbooks",
            "airbyte:index/getSourceRailz:getSourceRailz": "airbyte_source_railz",
            "airbyte:index/getSourceRecharge:getSourceRecharge": "airbyte_source_recharge",
            "airbyte:index/getSourceRecreation:getSourceRecreation": "airbyte_source_recreation",
            "airbyte:index/getSourceRecruitee:getSourceRecruitee": "airbyte_source_recruitee",
            "airbyte:index/getSourceRecurly:getSourceRecurly": "airbyte_source_recurly",
            "airbyte:index/getSourceRedshift:getSourceRedshift": "airbyte_source_redshift",
            "airbyte:index/getSourceRetently:getSourceRetently": "airbyte_source_retently",
            "airbyte:index/getSourceRkiCovid:getSourceRkiCovid": "airbyte_source_rki_covid",
            "airbyte:index/getSourceRss:getSourceRss": "airbyte_source_rss",
            "airbyte:index/getSourceS3:getSourceS3": "airbyte_source_s3",
            "airbyte:index/getSourceSalesforce:getSourceSalesforce": "airbyte_source_salesforce",
            "airbyte:index/getSourceSalesloft:getSourceSalesloft": "airbyte_source_salesloft",
            "airbyte:index/getSourceSapFieldglass:getSourceSapFieldglass": "airbyte_source_sap_fieldglass",
            "airbyte:index/getSourceSecoda:getSourceSecoda": "airbyte_source_secoda",
            "airbyte:index/getSourceSendgrid:getSourceSendgrid": "airbyte_source_sendgrid",
            "airbyte:index/getSourceSendinblue:getSourceSendinblue": "airbyte_source_sendinblue",
            "airbyte:index/getSourceSenseforce:getSourceSenseforce": "airbyte_source_senseforce",
            "airbyte:index/getSourceSentry:getSourceSentry": "airbyte_source_sentry",
            "airbyte:index/getSourceSftp:getSourceSftp": "airbyte_source_sftp",
            "airbyte:index/getSourceSftpBulk:getSourceSftpBulk": "airbyte_source_sftp_bulk",
            "airbyte:index/getSourceShopify:getSourceShopify": "airbyte_source_shopify",
            "airbyte:index/getSourceShortio:getSourceShortio": "airbyte_source_shortio",
            "airbyte:index/getSourceSlack:getSourceSlack": "airbyte_source_slack",
            "airbyte:index/getSourceSmaily:getSourceSmaily": "airbyte_source_smaily",
            "airbyte:index/getSourceSmartengage:getSourceSmartengage": "airbyte_source_smartengage",
            "airbyte:index/getSourceSmartsheets:getSourceSmartsheets": "airbyte_source_smartsheets",
            "airbyte:index/getSourceSnapchatMarketing:getSourceSnapchatMarketing": "airbyte_source_snapchat_marketing",
            "airbyte:index/getSourceSnowflake:getSourceSnowflake": "airbyte_source_snowflake",
            "airbyte:index/getSourceSonarCloud:getSourceSonarCloud": "airbyte_source_sonar_cloud",
            "airbyte:index/getSourceSpaceXApi:getSourceSpaceXApi": "airbyte_source_spacex_api",
            "airbyte:index/getSourceSquare:getSourceSquare": "airbyte_source_square",
            "airbyte:index/getSourceStrava:getSourceStrava": "airbyte_source_strava",
            "airbyte:index/getSourceStripe:getSourceStripe": "airbyte_source_stripe",
            "airbyte:index/getSourceSurveySparrow:getSourceSurveySparrow": "airbyte_source_survey_sparrow",
            "airbyte:index/getSourceSurveymonkey:getSourceSurveymonkey": "airbyte_source_surveymonkey",
            "airbyte:index/getSourceTempo:getSourceTempo": "airbyte_source_tempo",
            "airbyte:index/getSourceTheGuardianApi:getSourceTheGuardianApi": "airbyte_source_the_guardian_api",
            "airbyte:index/getSourceTiktokMarketing:getSourceTiktokMarketing": "airbyte_source_tiktok_marketing",
            "airbyte:index/getSourceTodoist:getSourceTodoist": "airbyte_source_todoist",
            "airbyte:index/getSourceTrello:getSourceTrello": "airbyte_source_trello",
            "airbyte:index/getSourceTrustpilot:getSourceTrustpilot": "airbyte_source_trustpilot",
            "airbyte:index/getSourceTvmazeSchedule:getSourceTvmazeSchedule": "airbyte_source_tvmaze_schedule",
            "airbyte:index/getSourceTwilio:getSourceTwilio": "airbyte_source_twilio",
            "airbyte:index/getSourceTwilioTaskrouter:getSourceTwilioTaskrouter": "airbyte_source_twilio_taskrouter",
            "airbyte:index/getSourceTwitter:getSourceTwitter": "airbyte_source_twitter",
            "airbyte:index/getSourceTypeform:getSourceTypeform": "airbyte_source_typeform",
            "airbyte:index/getSourceUsCensus:getSourceUsCensus": "airbyte_source_us_census",
            "airbyte:index/getSourceVantage:getSourceVantage": "airbyte_source_vantage",
            "airbyte:index/getSourceWebflow:getSourceWebflow": "airbyte_source_webflow",
            "airbyte:index/getSourceWhiskyHunter:getSourceWhiskyHunter": "airbyte_source_whisky_hunter",
            "airbyte:index/getSourceWikipediaPageviews:getSourceWikipediaPageviews": "airbyte_source_wikipedia_pageviews",
            "airbyte:index/getSourceWoocommerce:getSourceWoocommerce": "airbyte_source_woocommerce",
            "airbyte:index/getSourceXero:getSourceXero": "airbyte_source_xero",
            "airbyte:index/getSourceXkcd:getSourceXkcd": "airbyte_source_xkcd",
            "airbyte:index/getSourceYandexMetrica:getSourceYandexMetrica": "airbyte_source_yandex_metrica",
            "airbyte:index/getSourceYotpo:getSourceYotpo": "airbyte_source_yotpo",
            "airbyte:index/getSourceYounium:getSourceYounium": "airbyte_source_younium",
            "airbyte:index/getSourceYoutubeAnalytics:getSourceYoutubeAnalytics": "airbyte_source_youtube_analytics",
            "airbyte:index/getSourceZendeskChat:getSourceZendeskChat": "airbyte_source_zendesk_chat",
            "airbyte:index/getSourceZendeskSunshine:getSourceZendeskSunshine": "airbyte_source_zendesk_sunshine",
            "airbyte:index/getSourceZendeskSupport:getSourceZendeskSupport": "airbyte_source_zendesk_support",
            "airbyte:index/getSourceZendeskTalk:getSourceZendeskTalk": "airbyte_source_zendesk_talk",
            "airbyte:index/getSourceZenloop:getSourceZenloop": "airbyte_source_zenloop",
            "airbyte:index/getSourceZohoCrm:getSourceZohoCrm": "airbyte_source_zoho_crm",
            "airbyte:index/getSourceZoom:getSourceZoom": "airbyte_source_zoom",
            "airbyte:index/getSourceZuora:getSourceZuora": "airbyte_source_zuora",
            "airbyte:index/getWorkspace:getWorkspace": "airbyte_workspace"
        },
        "renamedProperties": {
            "airbyte:index/ConnectionConfigurationsStream:ConnectionConfigurationsStream": {
                "cursorFields": "cursor_field",
                "primaryKeys": "primary_key",
                "syncMode": "sync_mode"
            },
            "airbyte:index/ConnectionSchedule:ConnectionSchedule": {
                "basicTiming": "basic_timing",
                "cronExpression": "cron_expression",
                "scheduleType": "schedule_type"
            },
            "airbyte:index/DestinationAWSDatalakeConfiguration:DestinationAWSDatalakeConfiguration": {
                "awsAccountId": "aws_account_id",
                "bucketName": "bucket_name",
                "bucketPrefix": "bucket_prefix",
                "destinationType": "destination_type",
                "glueCatalogFloatAsDecimal": "glue_catalog_float_as_decimal",
                "lakeformationDatabaseDefaultTagKey": "lakeformation_database_default_tag_key",
                "lakeformationDatabaseDefaultTagValues": "lakeformation_database_default_tag_values",
                "lakeformationDatabaseName": "lakeformation_database_name",
                "lakeformationGovernedTables": "lakeformation_governed_tables"
            },
            "airbyte:index/DestinationAWSDatalakeConfigurationCredentials:DestinationAWSDatalakeConfigurationCredentials": {
                "destinationAwsDatalakeAuthenticationModeIamRole": "destination_aws_datalake_authentication_mode_iam_role",
                "destinationAwsDatalakeAuthenticationModeIamUser": "destination_aws_datalake_authentication_mode_iam_user",
                "destinationAwsDatalakeUpdateAuthenticationModeIamRole": "destination_aws_datalake_update_authentication_mode_iam_role",
                "destinationAwsDatalakeUpdateAuthenticationModeIamUser": "destination_aws_datalake_update_authentication_mode_iam_user"
            },
            "airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole": {
                "credentialsTitle": "credentials_title",
                "roleArn": "role_arn"
            },
            "airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole": {
                "credentialsTitle": "credentials_title",
                "roleArn": "role_arn"
            },
            "airbyte:index/DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser:DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/DestinationAWSDatalakeConfigurationFormat:DestinationAWSDatalakeConfigurationFormat": {
                "destinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson": "destination_aws_datalake_output_format_wildcard_json_lines_newline_delimited_json",
                "destinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage": "destination_aws_datalake_output_format_wildcard_parquet_columnar_storage",
                "destinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson": "destination_aws_datalake_update_output_format_wildcard_json_lines_newline_delimited_json",
                "destinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage": "destination_aws_datalake_update_output_format_wildcard_parquet_columnar_storage"
            },
            "airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage:DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/DestinationAzureBlobStorageConfiguration:DestinationAzureBlobStorageConfiguration": {
                "azureBlobStorageAccountKey": "azure_blob_storage_account_key",
                "azureBlobStorageAccountName": "azure_blob_storage_account_name",
                "azureBlobStorageContainerName": "azure_blob_storage_container_name",
                "azureBlobStorageEndpointDomainName": "azure_blob_storage_endpoint_domain_name",
                "azureBlobStorageOutputBufferSize": "azure_blob_storage_output_buffer_size",
                "azureBlobStorageSpillSize": "azure_blob_storage_spill_size",
                "destinationType": "destination_type"
            },
            "airbyte:index/DestinationAzureBlobStorageConfigurationFormat:DestinationAzureBlobStorageConfigurationFormat": {
                "destinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues": "destination_azure_blob_storage_output_format_csv_comma_separated_values",
                "destinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson": "destination_azure_blob_storage_output_format_json_lines_newline_delimited_json",
                "destinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues": "destination_azure_blob_storage_update_output_format_csv_comma_separated_values",
                "destinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson": "destination_azure_blob_storage_update_output_format_json_lines_newline_delimited_json"
            },
            "airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationBigqueryConfiguration:DestinationBigqueryConfiguration": {
                "bigQueryClientBufferSizeMb": "big_query_client_buffer_size_mb",
                "credentialsJson": "credentials_json",
                "datasetId": "dataset_id",
                "datasetLocation": "dataset_location",
                "destinationType": "destination_type",
                "loadingMethod": "loading_method",
                "projectId": "project_id",
                "rawDataDataset": "raw_data_dataset",
                "transformationPriority": "transformation_priority",
                "use1s1tFormat": "use_1s1t_format"
            },
            "airbyte:index/DestinationBigqueryConfigurationLoadingMethod:DestinationBigqueryConfigurationLoadingMethod": {
                "destinationBigqueryLoadingMethodGcsStaging": "destination_bigquery_loading_method_gcs_staging",
                "destinationBigqueryLoadingMethodStandardInserts": "destination_bigquery_loading_method_standard_inserts",
                "destinationBigqueryUpdateLoadingMethodGcsStaging": "destination_bigquery_update_loading_method_gcs_staging",
                "destinationBigqueryUpdateLoadingMethodStandardInserts": "destination_bigquery_update_loading_method_standard_inserts"
            },
            "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging": {
                "fileBufferCount": "file_buffer_count",
                "gcsBucketName": "gcs_bucket_name",
                "gcsBucketPath": "gcs_bucket_path",
                "keepFilesInGcsBucket": "keep_files_in_gcs_bucket"
            },
            "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential": {
                "destinationBigqueryLoadingMethodGcsStagingCredentialHmacKey": "destination_bigquery_loading_method_gcs_staging_credential_hmac_key"
            },
            "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging": {
                "fileBufferCount": "file_buffer_count",
                "gcsBucketName": "gcs_bucket_name",
                "gcsBucketPath": "gcs_bucket_path",
                "keepFilesInGcsBucket": "keep_files_in_gcs_bucket"
            },
            "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential": {
                "destinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey": "destination_bigquery_update_loading_method_gcs_staging_credential_hmac_key"
            },
            "airbyte:index/DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/DestinationBigqueryDenormalizedConfiguration:DestinationBigqueryDenormalizedConfiguration": {
                "bigQueryClientBufferSizeMb": "big_query_client_buffer_size_mb",
                "credentialsJson": "credentials_json",
                "datasetId": "dataset_id",
                "datasetLocation": "dataset_location",
                "destinationType": "destination_type",
                "loadingMethod": "loading_method",
                "projectId": "project_id"
            },
            "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethod:DestinationBigqueryDenormalizedConfigurationLoadingMethod": {
                "destinationBigqueryDenormalizedLoadingMethodGcsStaging": "destination_bigquery_denormalized_loading_method_gcs_staging",
                "destinationBigqueryDenormalizedLoadingMethodStandardInserts": "destination_bigquery_denormalized_loading_method_standard_inserts",
                "destinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging": "destination_bigquery_denormalized_update_loading_method_gcs_staging",
                "destinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts": "destination_bigquery_denormalized_update_loading_method_standard_inserts"
            },
            "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging": {
                "fileBufferCount": "file_buffer_count",
                "gcsBucketName": "gcs_bucket_name",
                "gcsBucketPath": "gcs_bucket_path",
                "keepFilesInGcsBucket": "keep_files_in_gcs_bucket"
            },
            "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential": {
                "destinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey": "destination_bigquery_denormalized_loading_method_gcs_staging_credential_hmac_key"
            },
            "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging": {
                "fileBufferCount": "file_buffer_count",
                "gcsBucketName": "gcs_bucket_name",
                "gcsBucketPath": "gcs_bucket_path",
                "keepFilesInGcsBucket": "keep_files_in_gcs_bucket"
            },
            "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential": {
                "destinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey": "destination_bigquery_denormalized_update_loading_method_gcs_staging_credential_hmac_key"
            },
            "airbyte:index/DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey:DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/DestinationClickhouseConfiguration:DestinationClickhouseConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationClickhouseConfigurationTunnelMethod:DestinationClickhouseConfigurationTunnelMethod": {
                "destinationClickhouseSshTunnelMethodNoTunnel": "destination_clickhouse_ssh_tunnel_method_no_tunnel",
                "destinationClickhouseSshTunnelMethodPasswordAuthentication": "destination_clickhouse_ssh_tunnel_method_password_authentication",
                "destinationClickhouseSshTunnelMethodSshKeyAuthentication": "destination_clickhouse_ssh_tunnel_method_ssh_key_authentication",
                "destinationClickhouseUpdateSshTunnelMethodNoTunnel": "destination_clickhouse_update_ssh_tunnel_method_no_tunnel",
                "destinationClickhouseUpdateSshTunnelMethodPasswordAuthentication": "destination_clickhouse_update_ssh_tunnel_method_password_authentication",
                "destinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication": "destination_clickhouse_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication:DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationConvexConfiguration:DestinationConvexConfiguration": {
                "accessKey": "access_key",
                "deploymentUrl": "deployment_url",
                "destinationType": "destination_type"
            },
            "airbyte:index/DestinationCumulioConfiguration:DestinationCumulioConfiguration": {
                "apiHost": "api_host",
                "apiKey": "api_key",
                "apiToken": "api_token",
                "destinationType": "destination_type"
            },
            "airbyte:index/DestinationDatabendConfiguration:DestinationDatabendConfiguration": {
                "destinationType": "destination_type"
            },
            "airbyte:index/DestinationDatabricksConfiguration:DestinationDatabricksConfiguration": {
                "acceptTerms": "accept_terms",
                "dataSource": "data_source",
                "databricksHttpPath": "databricks_http_path",
                "databricksPersonalAccessToken": "databricks_personal_access_token",
                "databricksPort": "databricks_port",
                "databricksServerHostname": "databricks_server_hostname",
                "destinationType": "destination_type",
                "enableSchemaEvolution": "enable_schema_evolution",
                "purgeStagingData": "purge_staging_data"
            },
            "airbyte:index/DestinationDatabricksConfigurationDataSource:DestinationDatabricksConfigurationDataSource": {
                "destinationDatabricksDataSourceAmazonS3": "destination_databricks_data_source_amazon_s3",
                "destinationDatabricksDataSourceAzureBlobStorage": "destination_databricks_data_source_azure_blob_storage",
                "destinationDatabricksDataSourceRecommendedManagedTables": "destination_databricks_data_source_recommended_managed_tables",
                "destinationDatabricksUpdateDataSourceAmazonS3": "destination_databricks_update_data_source_amazon_s3",
                "destinationDatabricksUpdateDataSourceAzureBlobStorage": "destination_databricks_update_data_source_azure_blob_storage",
                "destinationDatabricksUpdateDataSourceRecommendedManagedTables": "destination_databricks_update_data_source_recommended_managed_tables"
            },
            "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3:DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3": {
                "dataSourceType": "data_source_type",
                "fileNamePattern": "file_name_pattern",
                "s3AccessKeyId": "s3_access_key_id",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "s3SecretAccessKey": "s3_secret_access_key"
            },
            "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage:DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage": {
                "azureBlobStorageAccountName": "azure_blob_storage_account_name",
                "azureBlobStorageContainerName": "azure_blob_storage_container_name",
                "azureBlobStorageEndpointDomainName": "azure_blob_storage_endpoint_domain_name",
                "azureBlobStorageSasToken": "azure_blob_storage_sas_token",
                "dataSourceType": "data_source_type"
            },
            "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables:DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables": {
                "dataSourceType": "data_source_type"
            },
            "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3:DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3": {
                "dataSourceType": "data_source_type",
                "fileNamePattern": "file_name_pattern",
                "s3AccessKeyId": "s3_access_key_id",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "s3SecretAccessKey": "s3_secret_access_key"
            },
            "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage:DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage": {
                "azureBlobStorageAccountName": "azure_blob_storage_account_name",
                "azureBlobStorageContainerName": "azure_blob_storage_container_name",
                "azureBlobStorageEndpointDomainName": "azure_blob_storage_endpoint_domain_name",
                "azureBlobStorageSasToken": "azure_blob_storage_sas_token",
                "dataSourceType": "data_source_type"
            },
            "airbyte:index/DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables:DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables": {
                "dataSourceType": "data_source_type"
            },
            "airbyte:index/DestinationDevNullConfiguration:DestinationDevNullConfiguration": {
                "destinationType": "destination_type",
                "testDestination": "test_destination"
            },
            "airbyte:index/DestinationDevNullConfigurationTestDestination:DestinationDevNullConfigurationTestDestination": {
                "destinationDevNullTestDestinationSilent": "destination_dev_null_test_destination_silent",
                "destinationDevNullUpdateTestDestinationSilent": "destination_dev_null_update_test_destination_silent"
            },
            "airbyte:index/DestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent:DestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent": {
                "testDestinationType": "test_destination_type"
            },
            "airbyte:index/DestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent:DestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent": {
                "testDestinationType": "test_destination_type"
            },
            "airbyte:index/DestinationDynamodbConfiguration:DestinationDynamodbConfiguration": {
                "accessKeyId": "access_key_id",
                "destinationType": "destination_type",
                "dynamodbEndpoint": "dynamodb_endpoint",
                "dynamodbRegion": "dynamodb_region",
                "dynamodbTableNamePrefix": "dynamodb_table_name_prefix",
                "secretAccessKey": "secret_access_key"
            },
            "airbyte:index/DestinationElasticsearchConfiguration:DestinationElasticsearchConfiguration": {
                "authenticationMethod": "authentication_method",
                "caCertificate": "ca_certificate",
                "destinationType": "destination_type"
            },
            "airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethod:DestinationElasticsearchConfigurationAuthenticationMethod": {
                "destinationElasticsearchAuthenticationMethodApiKeySecret": "destination_elasticsearch_authentication_method_api_key_secret",
                "destinationElasticsearchAuthenticationMethodUsernamePassword": "destination_elasticsearch_authentication_method_username_password",
                "destinationElasticsearchUpdateAuthenticationMethodApiKeySecret": "destination_elasticsearch_update_authentication_method_api_key_secret",
                "destinationElasticsearchUpdateAuthenticationMethodUsernamePassword": "destination_elasticsearch_update_authentication_method_username_password"
            },
            "airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret:DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret": {
                "apiKeyId": "api_key_id",
                "apiKeySecret": "api_key_secret"
            },
            "airbyte:index/DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret:DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret": {
                "apiKeyId": "api_key_id",
                "apiKeySecret": "api_key_secret"
            },
            "airbyte:index/DestinationFireboltConfiguration:DestinationFireboltConfiguration": {
                "destinationType": "destination_type",
                "loadingMethod": "loading_method"
            },
            "airbyte:index/DestinationFireboltConfigurationLoadingMethod:DestinationFireboltConfigurationLoadingMethod": {
                "destinationFireboltLoadingMethodExternalTableViaS3": "destination_firebolt_loading_method_external_table_via_s3",
                "destinationFireboltLoadingMethodSqlInserts": "destination_firebolt_loading_method_sql_inserts",
                "destinationFireboltUpdateLoadingMethodExternalTableViaS3": "destination_firebolt_update_loading_method_external_table_via_s3",
                "destinationFireboltUpdateLoadingMethodSqlInserts": "destination_firebolt_update_loading_method_sql_inserts"
            },
            "airbyte:index/DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3:DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3": {
                "awsKeyId": "aws_key_id",
                "awsKeySecret": "aws_key_secret",
                "s3Bucket": "s3_bucket",
                "s3Region": "s3_region"
            },
            "airbyte:index/DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3:DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3": {
                "awsKeyId": "aws_key_id",
                "awsKeySecret": "aws_key_secret",
                "s3Bucket": "s3_bucket",
                "s3Region": "s3_region"
            },
            "airbyte:index/DestinationFirestoreConfiguration:DestinationFirestoreConfiguration": {
                "credentialsJson": "credentials_json",
                "destinationType": "destination_type",
                "projectId": "project_id"
            },
            "airbyte:index/DestinationGcsConfiguration:DestinationGcsConfiguration": {
                "destinationType": "destination_type",
                "gcsBucketName": "gcs_bucket_name",
                "gcsBucketPath": "gcs_bucket_path",
                "gcsBucketRegion": "gcs_bucket_region"
            },
            "airbyte:index/DestinationGcsConfigurationCredential:DestinationGcsConfigurationCredential": {
                "destinationGcsAuthenticationHmacKey": "destination_gcs_authentication_hmac_key",
                "destinationGcsUpdateAuthenticationHmacKey": "destination_gcs_update_authentication_hmac_key"
            },
            "airbyte:index/DestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey:DestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/DestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey:DestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/DestinationGcsConfigurationFormat:DestinationGcsConfigurationFormat": {
                "destinationGcsOutputFormatAvroApacheAvro": "destination_gcs_output_format_avro_apache_avro",
                "destinationGcsOutputFormatCsvCommaSeparatedValues": "destination_gcs_output_format_csv_comma_separated_values",
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJson": "destination_gcs_output_format_json_lines_newline_delimited_json",
                "destinationGcsOutputFormatParquetColumnarStorage": "destination_gcs_output_format_parquet_columnar_storage",
                "destinationGcsUpdateOutputFormatAvroApacheAvro": "destination_gcs_update_output_format_avro_apache_avro",
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValues": "destination_gcs_update_output_format_csv_comma_separated_values",
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson": "destination_gcs_update_output_format_json_lines_newline_delimited_json",
                "destinationGcsUpdateOutputFormatParquetColumnarStorage": "destination_gcs_update_output_format_parquet_columnar_storage"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec": {
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2": "destination_gcs_output_format_avro_apache_avro_compression_codec_bzip2",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate": "destination_gcs_output_format_avro_apache_avro_compression_codec_deflate",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression": "destination_gcs_output_format_avro_apache_avro_compression_codec_no_compression",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy": "destination_gcs_output_format_avro_apache_avro_compression_codec_snappy",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecXz": "destination_gcs_output_format_avro_apache_avro_compression_codec_xz",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard": "destination_gcs_output_format_avro_apache_avro_compression_codec_zstandard"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                "compressionLevel": "compression_level",
                "includeChecksum": "include_checksum"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression": {
                "destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip": "destination_gcs_output_format_csv_comma_separated_values_compression_gzip",
                "destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": "destination_gcs_output_format_csv_comma_separated_values_compression_no_compression"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_gcs_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_gcs_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage:DestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage": {
                "blockSizeMb": "block_size_mb",
                "compressionCodec": "compression_codec",
                "dictionaryEncoding": "dictionary_encoding",
                "dictionaryPageSizeKb": "dictionary_page_size_kb",
                "formatType": "format_type",
                "maxPaddingSizeMb": "max_padding_size_mb",
                "pageSizeKb": "page_size_kb"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec": {
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_bzip2",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_deflate",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_no_compression",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_snappy",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_xz",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_zstandard"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                "compressionLevel": "compression_level",
                "includeChecksum": "include_checksum"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression": {
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": "destination_gcs_update_output_format_csv_comma_separated_values_compression_gzip",
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": "destination_gcs_update_output_format_csv_comma_separated_values_compression_no_compression"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_gcs_update_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_gcs_update_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage:DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage": {
                "blockSizeMb": "block_size_mb",
                "compressionCodec": "compression_codec",
                "dictionaryEncoding": "dictionary_encoding",
                "dictionaryPageSizeKb": "dictionary_page_size_kb",
                "formatType": "format_type",
                "maxPaddingSizeMb": "max_padding_size_mb",
                "pageSizeKb": "page_size_kb"
            },
            "airbyte:index/DestinationGoogleSheetsConfiguration:DestinationGoogleSheetsConfiguration": {
                "destinationType": "destination_type",
                "spreadsheetId": "spreadsheet_id"
            },
            "airbyte:index/DestinationGoogleSheetsConfigurationCredentials:DestinationGoogleSheetsConfigurationCredentials": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/DestinationKeenConfiguration:DestinationKeenConfiguration": {
                "apiKey": "api_key",
                "destinationType": "destination_type",
                "inferTimestamp": "infer_timestamp",
                "projectId": "project_id"
            },
            "airbyte:index/DestinationKinesisConfiguration:DestinationKinesisConfiguration": {
                "accessKey": "access_key",
                "bufferSize": "buffer_size",
                "destinationType": "destination_type",
                "privateKey": "private_key",
                "shardCount": "shard_count"
            },
            "airbyte:index/DestinationLangchainConfiguration:DestinationLangchainConfiguration": {
                "destinationType": "destination_type"
            },
            "airbyte:index/DestinationLangchainConfigurationEmbedding:DestinationLangchainConfigurationEmbedding": {
                "destinationLangchainEmbeddingFake": "destination_langchain_embedding_fake",
                "destinationLangchainEmbeddingOpenAi": "destination_langchain_embedding_open_ai",
                "destinationLangchainUpdateEmbeddingFake": "destination_langchain_update_embedding_fake",
                "destinationLangchainUpdateEmbeddingOpenAi": "destination_langchain_update_embedding_open_ai"
            },
            "airbyte:index/DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi:DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi": {
                "openaiKey": "openai_key"
            },
            "airbyte:index/DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi:DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi": {
                "openaiKey": "openai_key"
            },
            "airbyte:index/DestinationLangchainConfigurationIndexing:DestinationLangchainConfigurationIndexing": {
                "destinationLangchainIndexingChromaLocalPersistance": "destination_langchain_indexing_chroma_local_persistance",
                "destinationLangchainIndexingDocArrayHnswSearch": "destination_langchain_indexing_doc_array_hnsw_search",
                "destinationLangchainIndexingPinecone": "destination_langchain_indexing_pinecone",
                "destinationLangchainUpdateIndexingChromaLocalPersistance": "destination_langchain_update_indexing_chroma_local_persistance",
                "destinationLangchainUpdateIndexingDocArrayHnswSearch": "destination_langchain_update_indexing_doc_array_hnsw_search",
                "destinationLangchainUpdateIndexingPinecone": "destination_langchain_update_indexing_pinecone"
            },
            "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance:DestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance": {
                "collectionName": "collection_name",
                "destinationPath": "destination_path"
            },
            "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch:DestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch": {
                "destinationPath": "destination_path"
            },
            "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone:DestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone": {
                "pineconeEnvironment": "pinecone_environment",
                "pineconeKey": "pinecone_key"
            },
            "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance:DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance": {
                "collectionName": "collection_name",
                "destinationPath": "destination_path"
            },
            "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch:DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch": {
                "destinationPath": "destination_path"
            },
            "airbyte:index/DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone:DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone": {
                "pineconeEnvironment": "pinecone_environment",
                "pineconeKey": "pinecone_key"
            },
            "airbyte:index/DestinationLangchainConfigurationProcessing:DestinationLangchainConfigurationProcessing": {
                "chunkOverlap": "chunk_overlap",
                "chunkSize": "chunk_size",
                "textFields": "text_fields"
            },
            "airbyte:index/DestinationMSsqlConfiguration:DestinationMSsqlConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "sslMethod": "ssl_method",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationMSsqlConfigurationSslMethod:DestinationMSsqlConfigurationSslMethod": {
                "destinationMssqlSslMethodEncryptedTrustServerCertificate": "destination_mssql_ssl_method_encrypted_trust_server_certificate",
                "destinationMssqlSslMethodEncryptedVerifyCertificate": "destination_mssql_ssl_method_encrypted_verify_certificate",
                "destinationMssqlUpdateSslMethodEncryptedTrustServerCertificate": "destination_mssql_update_ssl_method_encrypted_trust_server_certificate",
                "destinationMssqlUpdateSslMethodEncryptedVerifyCertificate": "destination_mssql_update_ssl_method_encrypted_verify_certificate"
            },
            "airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate": {
                "sslMethod": "ssl_method"
            },
            "airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate": {
                "hostNameInCertificate": "host_name_in_certificate",
                "sslMethod": "ssl_method"
            },
            "airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
                "sslMethod": "ssl_method"
            },
            "airbyte:index/DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate:DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate": {
                "hostNameInCertificate": "host_name_in_certificate",
                "sslMethod": "ssl_method"
            },
            "airbyte:index/DestinationMSsqlConfigurationTunnelMethod:DestinationMSsqlConfigurationTunnelMethod": {
                "destinationMssqlSshTunnelMethodNoTunnel": "destination_mssql_ssh_tunnel_method_no_tunnel",
                "destinationMssqlSshTunnelMethodPasswordAuthentication": "destination_mssql_ssh_tunnel_method_password_authentication",
                "destinationMssqlSshTunnelMethodSshKeyAuthentication": "destination_mssql_ssh_tunnel_method_ssh_key_authentication",
                "destinationMssqlUpdateSshTunnelMethodNoTunnel": "destination_mssql_update_ssh_tunnel_method_no_tunnel",
                "destinationMssqlUpdateSshTunnelMethodPasswordAuthentication": "destination_mssql_update_ssh_tunnel_method_password_authentication",
                "destinationMssqlUpdateSshTunnelMethodSshKeyAuthentication": "destination_mssql_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication:DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationMongodbConfiguration:DestinationMongodbConfiguration": {
                "authType": "auth_type",
                "destinationType": "destination_type",
                "instanceType": "instance_type",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationMongodbConfigurationAuthType:DestinationMongodbConfigurationAuthType": {
                "destinationMongodbAuthorizationTypeLoginPassword": "destination_mongodb_authorization_type_login_password",
                "destinationMongodbAuthorizationTypeNone": "destination_mongodb_authorization_type_none",
                "destinationMongodbUpdateAuthorizationTypeLoginPassword": "destination_mongodb_update_authorization_type_login_password",
                "destinationMongodbUpdateAuthorizationTypeNone": "destination_mongodb_update_authorization_type_none"
            },
            "airbyte:index/DestinationMongodbConfigurationInstanceType:DestinationMongodbConfigurationInstanceType": {
                "destinationMongodbMongoDbInstanceTypeMongoDbAtlas": "destination_mongodb_mongo_db_instance_type_mongo_db_atlas",
                "destinationMongodbMongoDbInstanceTypeReplicaSet": "destination_mongodb_mongo_db_instance_type_replica_set",
                "destinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": "destination_mongodb_mongo_db_instance_type_standalone_mongo_db_instance",
                "destinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": "destination_mongodb_update_mongo_db_instance_type_mongo_db_atlas",
                "destinationMongodbUpdateMongoDbInstanceTypeReplicaSet": "destination_mongodb_update_mongo_db_instance_type_replica_set",
                "destinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": "destination_mongodb_update_mongo_db_instance_type_standalone_mongo_db_instance"
            },
            "airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas:DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas": {
                "clusterUrl": "cluster_url"
            },
            "airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet:DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet": {
                "replicaSet": "replica_set",
                "serverAddresses": "server_addresses"
            },
            "airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
                "clusterUrl": "cluster_url"
            },
            "airbyte:index/DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet:DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet": {
                "replicaSet": "replica_set",
                "serverAddresses": "server_addresses"
            },
            "airbyte:index/DestinationMongodbConfigurationTunnelMethod:DestinationMongodbConfigurationTunnelMethod": {
                "destinationMongodbSshTunnelMethodNoTunnel": "destination_mongodb_ssh_tunnel_method_no_tunnel",
                "destinationMongodbSshTunnelMethodPasswordAuthentication": "destination_mongodb_ssh_tunnel_method_password_authentication",
                "destinationMongodbSshTunnelMethodSshKeyAuthentication": "destination_mongodb_ssh_tunnel_method_ssh_key_authentication",
                "destinationMongodbUpdateSshTunnelMethodNoTunnel": "destination_mongodb_update_ssh_tunnel_method_no_tunnel",
                "destinationMongodbUpdateSshTunnelMethodPasswordAuthentication": "destination_mongodb_update_ssh_tunnel_method_password_authentication",
                "destinationMongodbUpdateSshTunnelMethodSshKeyAuthentication": "destination_mongodb_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel:DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel:DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication:DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationMysqlConfiguration:DestinationMysqlConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationMysqlConfigurationTunnelMethod:DestinationMysqlConfigurationTunnelMethod": {
                "destinationMysqlSshTunnelMethodNoTunnel": "destination_mysql_ssh_tunnel_method_no_tunnel",
                "destinationMysqlSshTunnelMethodPasswordAuthentication": "destination_mysql_ssh_tunnel_method_password_authentication",
                "destinationMysqlSshTunnelMethodSshKeyAuthentication": "destination_mysql_ssh_tunnel_method_ssh_key_authentication",
                "destinationMysqlUpdateSshTunnelMethodNoTunnel": "destination_mysql_update_ssh_tunnel_method_no_tunnel",
                "destinationMysqlUpdateSshTunnelMethodPasswordAuthentication": "destination_mysql_update_ssh_tunnel_method_password_authentication",
                "destinationMysqlUpdateSshTunnelMethodSshKeyAuthentication": "destination_mysql_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel:DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel:DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication:DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationOracleConfiguration:DestinationOracleConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationOracleConfigurationTunnelMethod:DestinationOracleConfigurationTunnelMethod": {
                "destinationOracleSshTunnelMethodNoTunnel": "destination_oracle_ssh_tunnel_method_no_tunnel",
                "destinationOracleSshTunnelMethodPasswordAuthentication": "destination_oracle_ssh_tunnel_method_password_authentication",
                "destinationOracleSshTunnelMethodSshKeyAuthentication": "destination_oracle_ssh_tunnel_method_ssh_key_authentication",
                "destinationOracleUpdateSshTunnelMethodNoTunnel": "destination_oracle_update_ssh_tunnel_method_no_tunnel",
                "destinationOracleUpdateSshTunnelMethodPasswordAuthentication": "destination_oracle_update_ssh_tunnel_method_password_authentication",
                "destinationOracleUpdateSshTunnelMethodSshKeyAuthentication": "destination_oracle_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel:DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel:DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication:DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationPostgresConfiguration:DestinationPostgresConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "sslMode": "ssl_mode",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationPostgresConfigurationSslMode:DestinationPostgresConfigurationSslMode": {
                "destinationPostgresSslModesAllow": "destination_postgres_ssl_modes_allow",
                "destinationPostgresSslModesDisable": "destination_postgres_ssl_modes_disable",
                "destinationPostgresSslModesPrefer": "destination_postgres_ssl_modes_prefer",
                "destinationPostgresSslModesRequire": "destination_postgres_ssl_modes_require",
                "destinationPostgresSslModesVerifyCa": "destination_postgres_ssl_modes_verify_ca",
                "destinationPostgresSslModesVerifyFull": "destination_postgres_ssl_modes_verify_full",
                "destinationPostgresUpdateSslModesAllow": "destination_postgres_update_ssl_modes_allow",
                "destinationPostgresUpdateSslModesDisable": "destination_postgres_update_ssl_modes_disable",
                "destinationPostgresUpdateSslModesPrefer": "destination_postgres_update_ssl_modes_prefer",
                "destinationPostgresUpdateSslModesRequire": "destination_postgres_update_ssl_modes_require",
                "destinationPostgresUpdateSslModesVerifyCa": "destination_postgres_update_ssl_modes_verify_ca",
                "destinationPostgresUpdateSslModesVerifyFull": "destination_postgres_update_ssl_modes_verify_full"
            },
            "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa": {
                "caCertificate": "ca_certificate",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull:DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa": {
                "caCertificate": "ca_certificate",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull:DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/DestinationPostgresConfigurationTunnelMethod:DestinationPostgresConfigurationTunnelMethod": {
                "destinationPostgresSshTunnelMethodNoTunnel": "destination_postgres_ssh_tunnel_method_no_tunnel",
                "destinationPostgresSshTunnelMethodPasswordAuthentication": "destination_postgres_ssh_tunnel_method_password_authentication",
                "destinationPostgresSshTunnelMethodSshKeyAuthentication": "destination_postgres_ssh_tunnel_method_ssh_key_authentication",
                "destinationPostgresUpdateSshTunnelMethodNoTunnel": "destination_postgres_update_ssh_tunnel_method_no_tunnel",
                "destinationPostgresUpdateSshTunnelMethodPasswordAuthentication": "destination_postgres_update_ssh_tunnel_method_password_authentication",
                "destinationPostgresUpdateSshTunnelMethodSshKeyAuthentication": "destination_postgres_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel:DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel:DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication:DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationPubsubConfiguration:DestinationPubsubConfiguration": {
                "batchingDelayThreshold": "batching_delay_threshold",
                "batchingElementCountThreshold": "batching_element_count_threshold",
                "batchingEnabled": "batching_enabled",
                "batchingRequestBytesThreshold": "batching_request_bytes_threshold",
                "credentialsJson": "credentials_json",
                "destinationType": "destination_type",
                "orderingEnabled": "ordering_enabled",
                "projectId": "project_id",
                "topicId": "topic_id"
            },
            "airbyte:index/DestinationRedisConfiguration:DestinationRedisConfiguration": {
                "cacheType": "cache_type",
                "destinationType": "destination_type",
                "sslMode": "ssl_mode",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationRedisConfigurationSslMode:DestinationRedisConfigurationSslMode": {
                "destinationRedisSslModesDisable": "destination_redis_ssl_modes_disable",
                "destinationRedisSslModesVerifyFull": "destination_redis_ssl_modes_verify_full",
                "destinationRedisUpdateSslModesDisable": "destination_redis_update_ssl_modes_disable",
                "destinationRedisUpdateSslModesVerifyFull": "destination_redis_update_ssl_modes_verify_full"
            },
            "airbyte:index/DestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull:DestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull:DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/DestinationRedisConfigurationTunnelMethod:DestinationRedisConfigurationTunnelMethod": {
                "destinationRedisSshTunnelMethodNoTunnel": "destination_redis_ssh_tunnel_method_no_tunnel",
                "destinationRedisSshTunnelMethodPasswordAuthentication": "destination_redis_ssh_tunnel_method_password_authentication",
                "destinationRedisSshTunnelMethodSshKeyAuthentication": "destination_redis_ssh_tunnel_method_ssh_key_authentication",
                "destinationRedisUpdateSshTunnelMethodNoTunnel": "destination_redis_update_ssh_tunnel_method_no_tunnel",
                "destinationRedisUpdateSshTunnelMethodPasswordAuthentication": "destination_redis_update_ssh_tunnel_method_password_authentication",
                "destinationRedisUpdateSshTunnelMethodSshKeyAuthentication": "destination_redis_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel:DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel:DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication:DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationRedshiftConfiguration:DestinationRedshiftConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "tunnelMethod": "tunnel_method",
                "uploadingMethod": "uploading_method"
            },
            "airbyte:index/DestinationRedshiftConfigurationTunnelMethod:DestinationRedshiftConfigurationTunnelMethod": {
                "destinationRedshiftSshTunnelMethodNoTunnel": "destination_redshift_ssh_tunnel_method_no_tunnel",
                "destinationRedshiftSshTunnelMethodPasswordAuthentication": "destination_redshift_ssh_tunnel_method_password_authentication",
                "destinationRedshiftSshTunnelMethodSshKeyAuthentication": "destination_redshift_ssh_tunnel_method_ssh_key_authentication",
                "destinationRedshiftUpdateSshTunnelMethodNoTunnel": "destination_redshift_update_ssh_tunnel_method_no_tunnel",
                "destinationRedshiftUpdateSshTunnelMethodPasswordAuthentication": "destination_redshift_update_ssh_tunnel_method_password_authentication",
                "destinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication": "destination_redshift_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication:DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationRedshiftConfigurationUploadingMethod:DestinationRedshiftConfigurationUploadingMethod": {
                "destinationRedshiftUpdateUploadingMethodS3Staging": "destination_redshift_update_uploading_method_s3_staging",
                "destinationRedshiftUpdateUploadingMethodStandard": "destination_redshift_update_uploading_method_standard",
                "destinationRedshiftUploadingMethodS3Staging": "destination_redshift_uploading_method_s3_staging",
                "destinationRedshiftUploadingMethodStandard": "destination_redshift_uploading_method_standard"
            },
            "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging": {
                "accessKeyId": "access_key_id",
                "fileBufferCount": "file_buffer_count",
                "fileNamePattern": "file_name_pattern",
                "purgeStagingData": "purge_staging_data",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "secretAccessKey": "secret_access_key"
            },
            "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption": {
                "destinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": "destination_redshift_update_uploading_method_s3_staging_encryption_aes_cbc_envelope_encryption",
                "destinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption": "destination_redshift_update_uploading_method_s3_staging_encryption_no_encryption"
            },
            "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
                "encryptionType": "encryption_type",
                "keyEncryptingKey": "key_encrypting_key"
            },
            "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption": {
                "encryptionType": "encryption_type"
            },
            "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging": {
                "accessKeyId": "access_key_id",
                "fileBufferCount": "file_buffer_count",
                "fileNamePattern": "file_name_pattern",
                "purgeStagingData": "purge_staging_data",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "secretAccessKey": "secret_access_key"
            },
            "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption": {
                "destinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": "destination_redshift_uploading_method_s3_staging_encryption_aes_cbc_envelope_encryption",
                "destinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption": "destination_redshift_uploading_method_s3_staging_encryption_no_encryption"
            },
            "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
                "encryptionType": "encryption_type",
                "keyEncryptingKey": "key_encrypting_key"
            },
            "airbyte:index/DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption:DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption": {
                "encryptionType": "encryption_type"
            },
            "airbyte:index/DestinationS3Configuration:DestinationS3Configuration": {
                "accessKeyId": "access_key_id",
                "destinationType": "destination_type",
                "fileNamePattern": "file_name_pattern",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "s3Endpoint": "s3_endpoint",
                "s3PathFormat": "s3_path_format",
                "secretAccessKey": "secret_access_key"
            },
            "airbyte:index/DestinationS3ConfigurationFormat:DestinationS3ConfigurationFormat": {
                "destinationS3OutputFormatAvroApacheAvro": "destination_s3_output_format_avro_apache_avro",
                "destinationS3OutputFormatCsvCommaSeparatedValues": "destination_s3_output_format_csv_comma_separated_values",
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJson": "destination_s3_output_format_json_lines_newline_delimited_json",
                "destinationS3OutputFormatParquetColumnarStorage": "destination_s3_output_format_parquet_columnar_storage",
                "destinationS3UpdateOutputFormatAvroApacheAvro": "destination_s3_update_output_format_avro_apache_avro",
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValues": "destination_s3_update_output_format_csv_comma_separated_values",
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson": "destination_s3_update_output_format_json_lines_newline_delimited_json",
                "destinationS3UpdateOutputFormatParquetColumnarStorage": "destination_s3_update_output_format_parquet_columnar_storage"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec": {
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2": "destination_s3_output_format_avro_apache_avro_compression_codec_bzip2",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate": "destination_s3_output_format_avro_apache_avro_compression_codec_deflate",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression": "destination_s3_output_format_avro_apache_avro_compression_codec_no_compression",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy": "destination_s3_output_format_avro_apache_avro_compression_codec_snappy",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecXz": "destination_s3_output_format_avro_apache_avro_compression_codec_xz",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard": "destination_s3_output_format_avro_apache_avro_compression_codec_zstandard"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard": {
                "compressionLevel": "compression_level",
                "includeChecksum": "include_checksum"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression": {
                "destinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip": "destination_s3_output_format_csv_comma_separated_values_compression_gzip",
                "destinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression": "destination_s3_output_format_csv_comma_separated_values_compression_no_compression"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_s3_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_s3_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage:DestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage": {
                "blockSizeMb": "block_size_mb",
                "compressionCodec": "compression_codec",
                "dictionaryEncoding": "dictionary_encoding",
                "dictionaryPageSizeKb": "dictionary_page_size_kb",
                "formatType": "format_type",
                "maxPaddingSizeMb": "max_padding_size_mb",
                "pageSizeKb": "page_size_kb"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec": {
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": "destination_s3_update_output_format_avro_apache_avro_compression_codec_bzip2",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": "destination_s3_update_output_format_avro_apache_avro_compression_codec_deflate",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": "destination_s3_update_output_format_avro_apache_avro_compression_codec_no_compression",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": "destination_s3_update_output_format_avro_apache_avro_compression_codec_snappy",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz": "destination_s3_update_output_format_avro_apache_avro_compression_codec_xz",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": "destination_s3_update_output_format_avro_apache_avro_compression_codec_zstandard"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                "compressionLevel": "compression_level",
                "includeChecksum": "include_checksum"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression": {
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": "destination_s3_update_output_format_csv_comma_separated_values_compression_gzip",
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": "destination_s3_update_output_format_csv_comma_separated_values_compression_no_compression"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_s3_update_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_s3_update_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage:DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage": {
                "blockSizeMb": "block_size_mb",
                "compressionCodec": "compression_codec",
                "dictionaryEncoding": "dictionary_encoding",
                "dictionaryPageSizeKb": "dictionary_page_size_kb",
                "formatType": "format_type",
                "maxPaddingSizeMb": "max_padding_size_mb",
                "pageSizeKb": "page_size_kb"
            },
            "airbyte:index/DestinationS3GlueConfiguration:DestinationS3GlueConfiguration": {
                "accessKeyId": "access_key_id",
                "destinationType": "destination_type",
                "fileNamePattern": "file_name_pattern",
                "glueDatabase": "glue_database",
                "glueSerializationLibrary": "glue_serialization_library",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "s3Endpoint": "s3_endpoint",
                "s3PathFormat": "s3_path_format",
                "secretAccessKey": "secret_access_key"
            },
            "airbyte:index/DestinationS3GlueConfigurationFormat:DestinationS3GlueConfigurationFormat": {
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson": "destination_s3_glue_output_format_json_lines_newline_delimited_json",
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson": "destination_s3_glue_update_output_format_json_lines_newline_delimited_json"
            },
            "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_s3_glue_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_s3_glue_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_s3_glue_update_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_s3_glue_update_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/DestinationSftpJsonConfiguration:DestinationSftpJsonConfiguration": {
                "destinationPath": "destination_path",
                "destinationType": "destination_type"
            },
            "airbyte:index/DestinationSnowflakeConfiguration:DestinationSnowflakeConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "rawDataSchema": "raw_data_schema",
                "use1s1tFormat": "use_1s1t_format"
            },
            "airbyte:index/DestinationSnowflakeConfigurationCredentials:DestinationSnowflakeConfigurationCredentials": {
                "destinationSnowflakeAuthorizationMethodKeyPairAuthentication": "destination_snowflake_authorization_method_key_pair_authentication",
                "destinationSnowflakeAuthorizationMethodOAuth20": "destination_snowflake_authorization_method_o_auth2_0",
                "destinationSnowflakeAuthorizationMethodUsernameAndPassword": "destination_snowflake_authorization_method_username_and_password",
                "destinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication": "destination_snowflake_update_authorization_method_key_pair_authentication",
                "destinationSnowflakeUpdateAuthorizationMethodOAuth20": "destination_snowflake_update_authorization_method_o_auth2_0",
                "destinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword": "destination_snowflake_update_authorization_method_username_and_password"
            },
            "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication": {
                "authType": "auth_type",
                "privateKey": "private_key",
                "privateKeyPassword": "private_key_password"
            },
            "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword": {
                "authType": "auth_type"
            },
            "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication": {
                "authType": "auth_type",
                "privateKey": "private_key",
                "privateKeyPassword": "private_key_password"
            },
            "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword:DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
                "authType": "auth_type"
            },
            "airbyte:index/DestinationTimeplusConfiguration:DestinationTimeplusConfiguration": {
                "destinationType": "destination_type"
            },
            "airbyte:index/DestinationTypesenseConfiguration:DestinationTypesenseConfiguration": {
                "apiKey": "api_key",
                "batchSize": "batch_size",
                "destinationType": "destination_type"
            },
            "airbyte:index/DestinationVerticaConfiguration:DestinationVerticaConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationVerticaConfigurationTunnelMethod:DestinationVerticaConfigurationTunnelMethod": {
                "destinationVerticaSshTunnelMethodNoTunnel": "destination_vertica_ssh_tunnel_method_no_tunnel",
                "destinationVerticaSshTunnelMethodPasswordAuthentication": "destination_vertica_ssh_tunnel_method_password_authentication",
                "destinationVerticaSshTunnelMethodSshKeyAuthentication": "destination_vertica_ssh_tunnel_method_ssh_key_authentication",
                "destinationVerticaUpdateSshTunnelMethodNoTunnel": "destination_vertica_update_ssh_tunnel_method_no_tunnel",
                "destinationVerticaUpdateSshTunnelMethodPasswordAuthentication": "destination_vertica_update_ssh_tunnel_method_password_authentication",
                "destinationVerticaUpdateSshTunnelMethodSshKeyAuthentication": "destination_vertica_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel:DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel:DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication:DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/DestinationXataConfiguration:DestinationXataConfiguration": {
                "apiKey": "api_key",
                "dbUrl": "db_url",
                "destinationType": "destination_type"
            },
            "airbyte:index/SourceAhaConfiguration:SourceAhaConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceAircallConfiguration:SourceAircallConfiguration": {
                "apiId": "api_id",
                "apiToken": "api_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceAirtableConfiguration:SourceAirtableConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceAirtableConfigurationCredentials:SourceAirtableConfigurationCredentials": {
                "sourceAirtableAuthenticationOAuth20": "source_airtable_authentication_o_auth2_0",
                "sourceAirtableAuthenticationPersonalAccessToken": "source_airtable_authentication_personal_access_token",
                "sourceAirtableUpdateAuthenticationOAuth20": "source_airtable_update_authentication_o_auth2_0",
                "sourceAirtableUpdateAuthenticationPersonalAccessToken": "source_airtable_update_authentication_personal_access_token"
            },
            "airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20:SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20": {
                "accessToken": "access_token",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken:SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken": {
                "apiKey": "api_key",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20:SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20": {
                "accessToken": "access_token",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken:SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken": {
                "apiKey": "api_key",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourceAlloydbConfiguration:SourceAlloydbConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "replicationMethod": "replication_method",
                "sourceType": "source_type",
                "sslMode": "ssl_mode",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceAlloydbConfigurationReplicationMethod:SourceAlloydbConfigurationReplicationMethod": {
                "sourceAlloydbReplicationMethodLogicalReplicationCdc": "source_alloydb_replication_method_logical_replication_cdc",
                "sourceAlloydbReplicationMethodStandard": "source_alloydb_replication_method_standard",
                "sourceAlloydbReplicationMethodStandardXmin": "source_alloydb_replication_method_standard_xmin",
                "sourceAlloydbUpdateReplicationMethodLogicalReplicationCdc": "source_alloydb_update_replication_method_logical_replication_cdc",
                "sourceAlloydbUpdateReplicationMethodStandard": "source_alloydb_update_replication_method_standard",
                "sourceAlloydbUpdateReplicationMethodStandardXmin": "source_alloydb_update_replication_method_standard_xmin"
            },
            "airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc:SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc": {
                "additionalProperties": "additional_properties",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "lsnCommitBehaviour": "lsn_commit_behaviour",
                "queueSize": "queue_size",
                "replicationSlot": "replication_slot"
            },
            "airbyte:index/SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc:SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc": {
                "additionalProperties": "additional_properties",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "lsnCommitBehaviour": "lsn_commit_behaviour",
                "queueSize": "queue_size",
                "replicationSlot": "replication_slot"
            },
            "airbyte:index/SourceAlloydbConfigurationSslMode:SourceAlloydbConfigurationSslMode": {
                "sourceAlloydbSslModesAllow": "source_alloydb_ssl_modes_allow",
                "sourceAlloydbSslModesDisable": "source_alloydb_ssl_modes_disable",
                "sourceAlloydbSslModesPrefer": "source_alloydb_ssl_modes_prefer",
                "sourceAlloydbSslModesRequire": "source_alloydb_ssl_modes_require",
                "sourceAlloydbSslModesVerifyCa": "source_alloydb_ssl_modes_verify_ca",
                "sourceAlloydbSslModesVerifyFull": "source_alloydb_ssl_modes_verify_full",
                "sourceAlloydbUpdateSslModesAllow": "source_alloydb_update_ssl_modes_allow",
                "sourceAlloydbUpdateSslModesDisable": "source_alloydb_update_ssl_modes_disable",
                "sourceAlloydbUpdateSslModesPrefer": "source_alloydb_update_ssl_modes_prefer",
                "sourceAlloydbUpdateSslModesRequire": "source_alloydb_update_ssl_modes_require",
                "sourceAlloydbUpdateSslModesVerifyCa": "source_alloydb_update_ssl_modes_verify_ca",
                "sourceAlloydbUpdateSslModesVerifyFull": "source_alloydb_update_ssl_modes_verify_full"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull:SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull:SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourceAlloydbConfigurationTunnelMethod:SourceAlloydbConfigurationTunnelMethod": {
                "sourceAlloydbSshTunnelMethodNoTunnel": "source_alloydb_ssh_tunnel_method_no_tunnel",
                "sourceAlloydbSshTunnelMethodPasswordAuthentication": "source_alloydb_ssh_tunnel_method_password_authentication",
                "sourceAlloydbSshTunnelMethodSshKeyAuthentication": "source_alloydb_ssh_tunnel_method_ssh_key_authentication",
                "sourceAlloydbUpdateSshTunnelMethodNoTunnel": "source_alloydb_update_ssh_tunnel_method_no_tunnel",
                "sourceAlloydbUpdateSshTunnelMethodPasswordAuthentication": "source_alloydb_update_ssh_tunnel_method_password_authentication",
                "sourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication": "source_alloydb_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel:SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel:SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication:SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourceAmazonAdsConfiguration:SourceAmazonAdsConfiguration": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "lookBackWindow": "look_back_window",
                "refreshToken": "refresh_token",
                "reportRecordTypes": "report_record_types",
                "sourceType": "source_type",
                "startDate": "start_date",
                "stateFilters": "state_filter"
            },
            "airbyte:index/SourceAmazonSellerPartnerConfiguration:SourceAmazonSellerPartnerConfiguration": {
                "advancedStreamOptions": "advanced_stream_options",
                "authType": "auth_type",
                "awsAccessKey": "aws_access_key",
                "awsEnvironment": "aws_environment",
                "awsSecretKey": "aws_secret_key",
                "lwaAppId": "lwa_app_id",
                "lwaClientSecret": "lwa_client_secret",
                "maxWaitSeconds": "max_wait_seconds",
                "periodInDays": "period_in_days",
                "refreshToken": "refresh_token",
                "replicationEndDate": "replication_end_date",
                "replicationStartDate": "replication_start_date",
                "reportOptions": "report_options",
                "roleArn": "role_arn",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceAmazonSqsConfiguration:SourceAmazonSqsConfiguration": {
                "accessKey": "access_key",
                "attributesToReturn": "attributes_to_return",
                "deleteMessages": "delete_messages",
                "maxBatchSize": "max_batch_size",
                "maxWaitTime": "max_wait_time",
                "queueUrl": "queue_url",
                "secretKey": "secret_key",
                "sourceType": "source_type",
                "visibilityTimeout": "visibility_timeout"
            },
            "airbyte:index/SourceAmplitudeConfiguration:SourceAmplitudeConfiguration": {
                "apiKey": "api_key",
                "dataRegion": "data_region",
                "requestTimeRange": "request_time_range",
                "secretKey": "secret_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceApifyDatasetConfiguration:SourceApifyDatasetConfiguration": {
                "datasetId": "dataset_id",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceAppfollowConfiguration:SourceAppfollowConfiguration": {
                "apiSecret": "api_secret",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceAsanaConfiguration:SourceAsanaConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceAsanaConfigurationCredentials:SourceAsanaConfigurationCredentials": {
                "sourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth": "source_asana_authentication_mechanism_authenticate_via_asana_oauth",
                "sourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken": "source_asana_authentication_mechanism_authenticate_with_personal_access_token",
                "sourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth": "source_asana_update_authentication_mechanism_authenticate_via_asana_oauth",
                "sourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": "source_asana_update_authentication_mechanism_authenticate_with_personal_access_token"
            },
            "airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth:SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                "optionTitle": "option_title",
                "personalAccessToken": "personal_access_token"
            },
            "airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth:SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                "optionTitle": "option_title",
                "personalAccessToken": "personal_access_token"
            },
            "airbyte:index/SourceAuth0Configuration:SourceAuth0Configuration": {
                "baseUrl": "base_url",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceAuth0ConfigurationCredentials:SourceAuth0ConfigurationCredentials": {
                "sourceAuth0AuthenticationMethodOAuth2AccessToken": "source_auth0_authentication_method_o_auth2_access_token",
                "sourceAuth0AuthenticationMethodOAuth2ConfidentialApplication": "source_auth0_authentication_method_o_auth2_confidential_application",
                "sourceAuth0UpdateAuthenticationMethodOAuth2AccessToken": "source_auth0_update_authentication_method_o_auth2_access_token",
                "sourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication": "source_auth0_update_authentication_method_o_auth2_confidential_application"
            },
            "airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken:SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication:SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken:SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication:SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceAwsCloudtrailConfiguration:SourceAwsCloudtrailConfiguration": {
                "awsKeyId": "aws_key_id",
                "awsRegionName": "aws_region_name",
                "awsSecretKey": "aws_secret_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceAzureBlobStorageConfiguration:SourceAzureBlobStorageConfiguration": {
                "azureBlobStorageAccountKey": "azure_blob_storage_account_key",
                "azureBlobStorageAccountName": "azure_blob_storage_account_name",
                "azureBlobStorageBlobsPrefix": "azure_blob_storage_blobs_prefix",
                "azureBlobStorageContainerName": "azure_blob_storage_container_name",
                "azureBlobStorageEndpoint": "azure_blob_storage_endpoint",
                "azureBlobStorageSchemaInferenceLimit": "azure_blob_storage_schema_inference_limit",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceAzureBlobStorageConfigurationFormat:SourceAzureBlobStorageConfigurationFormat": {
                "sourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson": "source_azure_blob_storage_input_format_json_lines_newline_delimited_json",
                "sourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson": "source_azure_blob_storage_update_input_format_json_lines_newline_delimited_json"
            },
            "airbyte:index/SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson:SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson:SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/SourceAzureTableConfiguration:SourceAzureTableConfiguration": {
                "sourceType": "source_type",
                "storageAccessKey": "storage_access_key",
                "storageAccountName": "storage_account_name",
                "storageEndpointSuffix": "storage_endpoint_suffix"
            },
            "airbyte:index/SourceBambooHrConfiguration:SourceBambooHrConfiguration": {
                "apiKey": "api_key",
                "customReportsFields": "custom_reports_fields",
                "customReportsIncludeDefaultFields": "custom_reports_include_default_fields",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceBigcommerceConfiguration:SourceBigcommerceConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type",
                "startDate": "start_date",
                "storeHash": "store_hash"
            },
            "airbyte:index/SourceBigqueryConfiguration:SourceBigqueryConfiguration": {
                "credentialsJson": "credentials_json",
                "datasetId": "dataset_id",
                "projectId": "project_id",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceBingAdsConfiguration:SourceBingAdsConfiguration": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "developerToken": "developer_token",
                "lookbackWindow": "lookback_window",
                "refreshToken": "refresh_token",
                "reportsStartDate": "reports_start_date",
                "sourceType": "source_type",
                "tenantId": "tenant_id"
            },
            "airbyte:index/SourceBraintreeConfiguration:SourceBraintreeConfiguration": {
                "merchantId": "merchant_id",
                "privateKey": "private_key",
                "publicKey": "public_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceBrazeConfiguration:SourceBrazeConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceChargebeeConfiguration:SourceChargebeeConfiguration": {
                "productCatalog": "product_catalog",
                "siteApiKey": "site_api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceChartmogulConfiguration:SourceChartmogulConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceClickhouseConfiguration:SourceClickhouseConfiguration": {
                "sourceType": "source_type",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceClickhouseConfigurationTunnelMethod:SourceClickhouseConfigurationTunnelMethod": {
                "sourceClickhouseSshTunnelMethodNoTunnel": "source_clickhouse_ssh_tunnel_method_no_tunnel",
                "sourceClickhouseSshTunnelMethodPasswordAuthentication": "source_clickhouse_ssh_tunnel_method_password_authentication",
                "sourceClickhouseSshTunnelMethodSshKeyAuthentication": "source_clickhouse_ssh_tunnel_method_ssh_key_authentication",
                "sourceClickhouseUpdateSshTunnelMethodNoTunnel": "source_clickhouse_update_ssh_tunnel_method_no_tunnel",
                "sourceClickhouseUpdateSshTunnelMethodPasswordAuthentication": "source_clickhouse_update_ssh_tunnel_method_password_authentication",
                "sourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication": "source_clickhouse_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel:SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel:SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication:SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourceClickupApiConfiguration:SourceClickupApiConfiguration": {
                "apiToken": "api_token",
                "folderId": "folder_id",
                "includeClosedTasks": "include_closed_tasks",
                "listId": "list_id",
                "sourceType": "source_type",
                "spaceId": "space_id",
                "teamId": "team_id"
            },
            "airbyte:index/SourceClockifyConfiguration:SourceClockifyConfiguration": {
                "apiKey": "api_key",
                "apiUrl": "api_url",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/SourceCloseComConfiguration:SourceCloseComConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceCodaConfiguration:SourceCodaConfiguration": {
                "authToken": "auth_token",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceCoinApiConfiguration:SourceCoinApiConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date",
                "symbolId": "symbol_id"
            },
            "airbyte:index/SourceCoinmarketcapConfiguration:SourceCoinmarketcapConfiguration": {
                "apiKey": "api_key",
                "dataType": "data_type",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceConfigcatConfiguration:SourceConfigcatConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceConfluenceConfiguration:SourceConfluenceConfiguration": {
                "apiToken": "api_token",
                "domainName": "domain_name",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceConvexConfiguration:SourceConvexConfiguration": {
                "accessKey": "access_key",
                "deploymentUrl": "deployment_url",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceDatadogConfiguration:SourceDatadogConfiguration": {
                "apiKey": "api_key",
                "applicationKey": "application_key",
                "endDate": "end_date",
                "maxRecordsPerRequest": "max_records_per_request",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceDatadogConfigurationQuery:SourceDatadogConfigurationQuery": {
                "dataSource": "data_source"
            },
            "airbyte:index/SourceDatascopeConfiguration:SourceDatascopeConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceDelightedConfiguration:SourceDelightedConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceDixaConfiguration:SourceDixaConfiguration": {
                "apiToken": "api_token",
                "batchSize": "batch_size",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceDockerhubConfiguration:SourceDockerhubConfiguration": {
                "dockerUsername": "docker_username",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceDremioConfiguration:SourceDremioConfiguration": {
                "apiKey": "api_key",
                "baseUrl": "base_url",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceDynamodbConfiguration:SourceDynamodbConfiguration": {
                "accessKeyId": "access_key_id",
                "reservedAttributeNames": "reserved_attribute_names",
                "secretAccessKey": "secret_access_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceE2eTestCloudConfiguration:SourceE2eTestCloudConfiguration": {
                "maxMessages": "max_messages",
                "messageIntervalMs": "message_interval_ms",
                "mockCatalog": "mock_catalog",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceE2eTestCloudConfigurationMockCatalog:SourceE2eTestCloudConfigurationMockCatalog": {
                "sourceE2eTestCloudMockCatalogMultiSchema": "source_e2e_test_cloud_mock_catalog_multi_schema",
                "sourceE2eTestCloudMockCatalogSingleSchema": "source_e2e_test_cloud_mock_catalog_single_schema",
                "sourceE2eTestCloudUpdateMockCatalogMultiSchema": "source_e2e_test_cloud_update_mock_catalog_multi_schema",
                "sourceE2eTestCloudUpdateMockCatalogSingleSchema": "source_e2e_test_cloud_update_mock_catalog_single_schema"
            },
            "airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema": {
                "streamSchemas": "stream_schemas"
            },
            "airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema": {
                "streamDuplication": "stream_duplication",
                "streamName": "stream_name",
                "streamSchema": "stream_schema"
            },
            "airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema": {
                "streamSchemas": "stream_schemas"
            },
            "airbyte:index/SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema:SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema": {
                "streamDuplication": "stream_duplication",
                "streamName": "stream_name",
                "streamSchema": "stream_schema"
            },
            "airbyte:index/SourceEmailoctopusConfiguration:SourceEmailoctopusConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceExchangeRatesConfiguration:SourceExchangeRatesConfiguration": {
                "accessKey": "access_key",
                "ignoreWeekends": "ignore_weekends",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceFacebookMarketingConfiguration:SourceFacebookMarketingConfiguration": {
                "accessToken": "access_token",
                "accountId": "account_id",
                "actionBreakdownsAllowEmpty": "action_breakdowns_allow_empty",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "customInsights": "custom_insights",
                "endDate": "end_date",
                "fetchThumbnailImages": "fetch_thumbnail_images",
                "includeDeleted": "include_deleted",
                "insightsLookbackWindow": "insights_lookback_window",
                "maxBatchSize": "max_batch_size",
                "pageSize": "page_size",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceFacebookMarketingConfigurationCustomInsight:SourceFacebookMarketingConfigurationCustomInsight": {
                "actionBreakdowns": "action_breakdowns",
                "actionReportTime": "action_report_time",
                "endDate": "end_date",
                "insightsLookbackWindow": "insights_lookback_window",
                "startDate": "start_date",
                "timeIncrement": "time_increment"
            },
            "airbyte:index/SourceFacebookPagesConfiguration:SourceFacebookPagesConfiguration": {
                "accessToken": "access_token",
                "pageId": "page_id",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceFakerConfiguration:SourceFakerConfiguration": {
                "alwaysUpdated": "always_updated",
                "recordsPerSlice": "records_per_slice",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceFaunaConfiguration:SourceFaunaConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceFaunaConfigurationCollection:SourceFaunaConfigurationCollection": {
                "pageSize": "page_size"
            },
            "airbyte:index/SourceFaunaConfigurationCollectionDeletions:SourceFaunaConfigurationCollectionDeletions": {
                "sourceFaunaCollectionDeletionModeDisabled": "source_fauna_collection_deletion_mode_disabled",
                "sourceFaunaCollectionDeletionModeEnabled": "source_fauna_collection_deletion_mode_enabled",
                "sourceFaunaUpdateCollectionDeletionModeDisabled": "source_fauna_update_collection_deletion_mode_disabled",
                "sourceFaunaUpdateCollectionDeletionModeEnabled": "source_fauna_update_collection_deletion_mode_enabled"
            },
            "airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled": {
                "deletionMode": "deletion_mode"
            },
            "airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled": {
                "deletionMode": "deletion_mode"
            },
            "airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled": {
                "deletionMode": "deletion_mode"
            },
            "airbyte:index/SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled:SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled": {
                "deletionMode": "deletion_mode"
            },
            "airbyte:index/SourceFileSecureConfiguration:SourceFileSecureConfiguration": {
                "datasetName": "dataset_name",
                "readerOptions": "reader_options",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceFileSecureConfigurationProvider:SourceFileSecureConfigurationProvider": {
                "sourceFileSecureStorageProviderAzBlobAzureBlobStorage": "source_file_secure_storage_provider_az_blob_azure_blob_storage",
                "sourceFileSecureStorageProviderGcsGoogleCloudStorage": "source_file_secure_storage_provider_gcs_google_cloud_storage",
                "sourceFileSecureStorageProviderHttpsPublicWeb": "source_file_secure_storage_provider_https_public_web",
                "sourceFileSecureStorageProviderS3AmazonWebServices": "source_file_secure_storage_provider_s3_amazon_web_services",
                "sourceFileSecureStorageProviderScpSecureCopyProtocol": "source_file_secure_storage_provider_scp_secure_copy_protocol",
                "sourceFileSecureStorageProviderSftpSecureFileTransferProtocol": "source_file_secure_storage_provider_sftp_secure_file_transfer_protocol",
                "sourceFileSecureStorageProviderSshSecureShell": "source_file_secure_storage_provider_ssh_secure_shell",
                "sourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage": "source_file_secure_update_storage_provider_az_blob_azure_blob_storage",
                "sourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage": "source_file_secure_update_storage_provider_gcs_google_cloud_storage",
                "sourceFileSecureUpdateStorageProviderHttpsPublicWeb": "source_file_secure_update_storage_provider_https_public_web",
                "sourceFileSecureUpdateStorageProviderS3AmazonWebServices": "source_file_secure_update_storage_provider_s3_amazon_web_services",
                "sourceFileSecureUpdateStorageProviderScpSecureCopyProtocol": "source_file_secure_update_storage_provider_scp_secure_copy_protocol",
                "sourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol": "source_file_secure_update_storage_provider_sftp_secure_file_transfer_protocol",
                "sourceFileSecureUpdateStorageProviderSshSecureShell": "source_file_secure_update_storage_provider_ssh_secure_shell"
            },
            "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage": {
                "sasToken": "sas_token",
                "sharedKey": "shared_key",
                "storageAccount": "storage_account"
            },
            "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage": {
                "serviceAccountJson": "service_account_json"
            },
            "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb": {
                "userAgent": "user_agent"
            },
            "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices:SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key"
            },
            "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage": {
                "sasToken": "sas_token",
                "sharedKey": "shared_key",
                "storageAccount": "storage_account"
            },
            "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage": {
                "serviceAccountJson": "service_account_json"
            },
            "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb": {
                "userAgent": "user_agent"
            },
            "airbyte:index/SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices:SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key"
            },
            "airbyte:index/SourceFireboltConfiguration:SourceFireboltConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceFreshcallerConfiguration:SourceFreshcallerConfiguration": {
                "apiKey": "api_key",
                "requestsPerMinute": "requests_per_minute",
                "sourceType": "source_type",
                "startDate": "start_date",
                "syncLagMinutes": "sync_lag_minutes"
            },
            "airbyte:index/SourceFreshdeskConfiguration:SourceFreshdeskConfiguration": {
                "apiKey": "api_key",
                "requestsPerMinute": "requests_per_minute",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceFreshsalesConfiguration:SourceFreshsalesConfiguration": {
                "apiKey": "api_key",
                "domainName": "domain_name",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceGainsightPxConfiguration:SourceGainsightPxConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceGcsConfiguration:SourceGcsConfiguration": {
                "gcsBucket": "gcs_bucket",
                "gcsPath": "gcs_path",
                "serviceAccount": "service_account",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceGetlagoConfiguration:SourceGetlagoConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceGithubConfiguration:SourceGithubConfiguration": {
                "requestsPerHour": "requests_per_hour",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceGithubConfigurationCredentials:SourceGithubConfigurationCredentials": {
                "sourceGithubAuthenticationOAuth": "source_github_authentication_o_auth",
                "sourceGithubAuthenticationPersonalAccessToken": "source_github_authentication_personal_access_token",
                "sourceGithubUpdateAuthenticationOAuth": "source_github_update_authentication_o_auth",
                "sourceGithubUpdateAuthenticationPersonalAccessToken": "source_github_update_authentication_personal_access_token"
            },
            "airbyte:index/SourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth:SourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/SourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken:SourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken": {
                "optionTitle": "option_title",
                "personalAccessToken": "personal_access_token"
            },
            "airbyte:index/SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth:SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken:SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken": {
                "optionTitle": "option_title",
                "personalAccessToken": "personal_access_token"
            },
            "airbyte:index/SourceGitlabConfiguration:SourceGitlabConfiguration": {
                "apiUrl": "api_url",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceGitlabConfigurationCredentials:SourceGitlabConfigurationCredentials": {
                "sourceGitlabAuthorizationMethodOAuth20": "source_gitlab_authorization_method_o_auth2_0",
                "sourceGitlabAuthorizationMethodPrivateToken": "source_gitlab_authorization_method_private_token",
                "sourceGitlabUpdateAuthorizationMethodOAuth20": "source_gitlab_update_authorization_method_o_auth2_0",
                "sourceGitlabUpdateAuthorizationMethodPrivateToken": "source_gitlab_update_authorization_method_private_token"
            },
            "airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20:SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken:SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20:SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken:SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceGlassfrogConfiguration:SourceGlassfrogConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceGnewsConfiguration:SourceGnewsConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "ins": "in",
                "nullables": "nullable",
                "sourceType": "source_type",
                "startDate": "start_date",
                "topHeadlinesQuery": "top_headlines_query",
                "topHeadlinesTopic": "top_headlines_topic"
            },
            "airbyte:index/SourceGoogleAdsConfiguration:SourceGoogleAdsConfiguration": {
                "conversionWindowDays": "conversion_window_days",
                "customQueries": "custom_queries",
                "customerId": "customer_id",
                "endDate": "end_date",
                "loginCustomerId": "login_customer_id",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceGoogleAdsConfigurationCredentials:SourceGoogleAdsConfigurationCredentials": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "developerToken": "developer_token",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceGoogleAdsConfigurationCustomQuery:SourceGoogleAdsConfigurationCustomQuery": {
                "tableName": "table_name"
            },
            "airbyte:index/SourceGoogleAnalyticsDataApiConfiguration:SourceGoogleAnalyticsDataApiConfiguration": {
                "customReports": "custom_reports",
                "dateRangesStartDate": "date_ranges_start_date",
                "propertyId": "property_id",
                "sourceType": "source_type",
                "windowInDays": "window_in_days"
            },
            "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentials:SourceGoogleAnalyticsDataApiConfigurationCredentials": {
                "sourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth": "source_google_analytics_data_api_credentials_authenticate_via_google_oauth",
                "sourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication": "source_google_analytics_data_api_credentials_service_account_key_authentication",
                "sourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth": "source_google_analytics_data_api_update_credentials_authenticate_via_google_oauth",
                "sourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication": "source_google_analytics_data_api_update_credentials_service_account_key_authentication"
            },
            "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "credentialsJson": "credentials_json"
            },
            "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "credentialsJson": "credentials_json"
            },
            "airbyte:index/SourceGoogleAnalyticsV4Configuration:SourceGoogleAnalyticsV4Configuration": {
                "customReports": "custom_reports",
                "sourceType": "source_type",
                "startDate": "start_date",
                "viewId": "view_id",
                "windowInDays": "window_in_days"
            },
            "airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentials:SourceGoogleAnalyticsV4ConfigurationCredentials": {
                "sourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth": "source_google_analytics_v4_credentials_authenticate_via_google_oauth",
                "sourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication": "source_google_analytics_v4_credentials_service_account_key_authentication",
                "sourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth": "source_google_analytics_v4_update_credentials_authenticate_via_google_oauth",
                "sourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication": "source_google_analytics_v4_update_credentials_service_account_key_authentication"
            },
            "airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "credentialsJson": "credentials_json"
            },
            "airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication:SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "credentialsJson": "credentials_json"
            },
            "airbyte:index/SourceGoogleDirectoryConfiguration:SourceGoogleDirectoryConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceGoogleDirectoryConfigurationCredentials:SourceGoogleDirectoryConfigurationCredentials": {
                "sourceGoogleDirectoryGoogleCredentialsServiceAccountKey": "source_google_directory_google_credentials_service_account_key",
                "sourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth": "source_google_directory_google_credentials_sign_in_via_google_o_auth",
                "sourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey": "source_google_directory_update_google_credentials_service_account_key",
                "sourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth": "source_google_directory_update_google_credentials_sign_in_via_google_o_auth"
            },
            "airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey": {
                "credentialsJson": "credentials_json",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "credentialsTitle": "credentials_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey": {
                "credentialsJson": "credentials_json",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth:SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "credentialsTitle": "credentials_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceGooglePagespeedInsightsConfiguration:SourceGooglePagespeedInsightsConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceGoogleSearchConsoleConfiguration:SourceGoogleSearchConsoleConfiguration": {
                "customReports": "custom_reports",
                "dataState": "data_state",
                "endDate": "end_date",
                "siteUrls": "site_urls",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorization:SourceGoogleSearchConsoleConfigurationAuthorization": {
                "sourceGoogleSearchConsoleAuthenticationTypeOAuth": "source_google_search_console_authentication_type_o_auth",
                "sourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication": "source_google_search_console_authentication_type_service_account_key_authentication",
                "sourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth": "source_google_search_console_update_authentication_type_o_auth",
                "sourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication": "source_google_search_console_update_authentication_type_service_account_key_authentication"
            },
            "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "serviceAccountInfo": "service_account_info"
            },
            "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication:SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "serviceAccountInfo": "service_account_info"
            },
            "airbyte:index/SourceGoogleSheetsConfiguration:SourceGoogleSheetsConfiguration": {
                "namesConversion": "names_conversion",
                "rowBatchSize": "row_batch_size",
                "sourceType": "source_type",
                "spreadsheetId": "spreadsheet_id"
            },
            "airbyte:index/SourceGoogleSheetsConfigurationCredentials:SourceGoogleSheetsConfigurationCredentials": {
                "sourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth": "source_google_sheets_authentication_authenticate_via_google_o_auth",
                "sourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication": "source_google_sheets_authentication_service_account_key_authentication",
                "sourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth": "source_google_sheets_update_authentication_authenticate_via_google_o_auth",
                "sourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication": "source_google_sheets_update_authentication_service_account_key_authentication"
            },
            "airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "serviceAccountInfo": "service_account_info"
            },
            "airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication:SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "serviceAccountInfo": "service_account_info"
            },
            "airbyte:index/SourceGoogleWebfontsConfiguration:SourceGoogleWebfontsConfiguration": {
                "apiKey": "api_key",
                "prettyPrint": "pretty_print",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceGoogleWorkspaceAdminReportsConfiguration:SourceGoogleWorkspaceAdminReportsConfiguration": {
                "credentialsJson": "credentials_json",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceGreenhouseConfiguration:SourceGreenhouseConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceGridlyConfiguration:SourceGridlyConfiguration": {
                "apiKey": "api_key",
                "gridId": "grid_id",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceHarvestConfiguration:SourceHarvestConfiguration": {
                "accountId": "account_id",
                "replicationEndDate": "replication_end_date",
                "replicationStartDate": "replication_start_date",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceHarvestConfigurationCredentials:SourceHarvestConfigurationCredentials": {
                "sourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth": "source_harvest_authentication_mechanism_authenticate_via_harvest_o_auth",
                "sourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken": "source_harvest_authentication_mechanism_authenticate_with_personal_access_token",
                "sourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth": "source_harvest_update_authentication_mechanism_authenticate_via_harvest_o_auth",
                "sourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": "source_harvest_update_authentication_mechanism_authenticate_with_personal_access_token"
            },
            "airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth:SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth": {
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth:SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth": {
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceHubplannerConfiguration:SourceHubplannerConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceHubspotConfiguration:SourceHubspotConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceHubspotConfigurationCredentials:SourceHubspotConfigurationCredentials": {
                "sourceHubspotAuthenticationOAuth": "source_hubspot_authentication_o_auth",
                "sourceHubspotAuthenticationPrivateApp": "source_hubspot_authentication_private_app",
                "sourceHubspotUpdateAuthenticationOAuth": "source_hubspot_update_authentication_o_auth",
                "sourceHubspotUpdateAuthenticationPrivateApp": "source_hubspot_update_authentication_private_app"
            },
            "airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth:SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "credentialsTitle": "credentials_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp:SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp": {
                "accessToken": "access_token",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth:SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "credentialsTitle": "credentials_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp:SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp": {
                "accessToken": "access_token",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/SourceInsightlyConfiguration:SourceInsightlyConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceInstagramConfiguration:SourceInstagramConfiguration": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceInstatusConfiguration:SourceInstatusConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceIntercomConfiguration:SourceIntercomConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceIp2whoisConfiguration:SourceIp2whoisConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceIterableConfiguration:SourceIterableConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceJiraConfiguration:SourceJiraConfiguration": {
                "apiToken": "api_token",
                "enableExperimentalStreams": "enable_experimental_streams",
                "expandIssueChangelog": "expand_issue_changelog",
                "renderFields": "render_fields",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceK6CloudConfiguration:SourceK6CloudConfiguration": {
                "apiToken": "api_token",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceKlarnaConfiguration:SourceKlarnaConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceKlaviyoConfiguration:SourceKlaviyoConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceKustomerSingerConfiguration:SourceKustomerSingerConfiguration": {
                "apiToken": "api_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceKyveConfiguration:SourceKyveConfiguration": {
                "maxPages": "max_pages",
                "pageSize": "page_size",
                "poolIds": "pool_ids",
                "sourceType": "source_type",
                "startIds": "start_ids",
                "urlBase": "url_base"
            },
            "airbyte:index/SourceLaunchdarklyConfiguration:SourceLaunchdarklyConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceLemlistConfiguration:SourceLemlistConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceLeverHiringConfiguration:SourceLeverHiringConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceLeverHiringConfigurationCredentials:SourceLeverHiringConfigurationCredentials": {
                "sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey": "source_lever_hiring_authentication_mechanism_authenticate_via_lever_api_key",
                "sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth": "source_lever_hiring_authentication_mechanism_authenticate_via_lever_o_auth",
                "sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey": "source_lever_hiring_update_authentication_mechanism_authenticate_via_lever_api_key",
                "sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth": "source_lever_hiring_update_authentication_mechanism_authenticate_via_lever_o_auth"
            },
            "airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey:SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth:SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey:SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth:SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceLinkedinAdsConfiguration:SourceLinkedinAdsConfiguration": {
                "accountIds": "account_ids",
                "adAnalyticsReports": "ad_analytics_reports",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceLinkedinAdsConfigurationAdAnalyticsReport:SourceLinkedinAdsConfigurationAdAnalyticsReport": {
                "pivotBy": "pivot_by",
                "timeGranularity": "time_granularity"
            },
            "airbyte:index/SourceLinkedinAdsConfigurationCredentials:SourceLinkedinAdsConfigurationCredentials": {
                "sourceLinkedinAdsAuthenticationAccessToken": "source_linkedin_ads_authentication_access_token",
                "sourceLinkedinAdsAuthenticationOAuth20": "source_linkedin_ads_authentication_o_auth2_0",
                "sourceLinkedinAdsUpdateAuthenticationAccessToken": "source_linkedin_ads_update_authentication_access_token",
                "sourceLinkedinAdsUpdateAuthenticationOAuth20": "source_linkedin_ads_update_authentication_o_auth2_0"
            },
            "airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20:SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceLinkedinPagesConfiguration:SourceLinkedinPagesConfiguration": {
                "orgId": "org_id",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceLinkedinPagesConfigurationCredentials:SourceLinkedinPagesConfigurationCredentials": {
                "sourceLinkedinPagesAuthenticationAccessToken": "source_linkedin_pages_authentication_access_token",
                "sourceLinkedinPagesAuthenticationOAuth20": "source_linkedin_pages_authentication_o_auth2_0",
                "sourceLinkedinPagesUpdateAuthenticationAccessToken": "source_linkedin_pages_update_authentication_access_token",
                "sourceLinkedinPagesUpdateAuthenticationOAuth20": "source_linkedin_pages_update_authentication_o_auth2_0"
            },
            "airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20:SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceLinnworksConfiguration:SourceLinnworksConfiguration": {
                "applicationId": "application_id",
                "applicationSecret": "application_secret",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceLokaliseConfiguration:SourceLokaliseConfiguration": {
                "apiKey": "api_key",
                "projectId": "project_id",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceMailchimpConfiguration:SourceMailchimpConfiguration": {
                "campaignId": "campaign_id",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceMailchimpConfigurationCredentials:SourceMailchimpConfigurationCredentials": {
                "sourceMailchimpAuthenticationApiKey": "source_mailchimp_authentication_api_key",
                "sourceMailchimpAuthenticationOAuth20": "source_mailchimp_authentication_o_auth2_0",
                "sourceMailchimpUpdateAuthenticationApiKey": "source_mailchimp_update_authentication_api_key",
                "sourceMailchimpUpdateAuthenticationOAuth20": "source_mailchimp_update_authentication_o_auth2_0"
            },
            "airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey:SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey": {
                "authType": "auth_type"
            },
            "airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20:SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey:SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey": {
                "authType": "auth_type"
            },
            "airbyte:index/SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20:SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceMailgunConfiguration:SourceMailgunConfiguration": {
                "domainRegion": "domain_region",
                "privateKey": "private_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceMailjetSmsConfiguration:SourceMailjetSmsConfiguration": {
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceMarketoConfiguration:SourceMarketoConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "domainUrl": "domain_url",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceMetabaseConfiguration:SourceMetabaseConfiguration": {
                "instanceApiUrl": "instance_api_url",
                "sessionToken": "session_token",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceMicrosoftTeamsConfiguration:SourceMicrosoftTeamsConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceMicrosoftTeamsConfigurationCredentials:SourceMicrosoftTeamsConfigurationCredentials": {
                "sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft": "source_microsoft_teams_authentication_mechanism_authenticate_via_microsoft",
                "sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": "source_microsoft_teams_authentication_mechanism_authenticate_via_microsoft_o_auth_2_0",
                "sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft": "source_microsoft_teams_update_authentication_mechanism_authenticate_via_microsoft",
                "sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": "source_microsoft_teams_update_authentication_mechanism_authenticate_via_microsoft_o_auth_2_0"
            },
            "airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tenantId": "tenant_id"
            },
            "airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tenantId": "tenant_id"
            },
            "airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tenantId": "tenant_id"
            },
            "airbyte:index/SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tenantId": "tenant_id"
            },
            "airbyte:index/SourceMixpanelConfiguration:SourceMixpanelConfiguration": {
                "attributionWindow": "attribution_window",
                "dateWindowSize": "date_window_size",
                "endDate": "end_date",
                "projectId": "project_id",
                "projectTimezone": "project_timezone",
                "selectPropertiesByDefault": "select_properties_by_default",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceMixpanelConfigurationCredentials:SourceMixpanelConfigurationCredentials": {
                "sourceMixpanelAuthenticationWildcardProjectSecret": "source_mixpanel_authentication_wildcard_project_secret",
                "sourceMixpanelAuthenticationWildcardServiceAccount": "source_mixpanel_authentication_wildcard_service_account",
                "sourceMixpanelUpdateAuthenticationWildcardProjectSecret": "source_mixpanel_update_authentication_wildcard_project_secret",
                "sourceMixpanelUpdateAuthenticationWildcardServiceAccount": "source_mixpanel_update_authentication_wildcard_service_account"
            },
            "airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret:SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret": {
                "apiSecret": "api_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount:SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount": {
                "optionTitle": "option_title"
            },
            "airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret:SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret": {
                "apiSecret": "api_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount:SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount": {
                "optionTitle": "option_title"
            },
            "airbyte:index/SourceMondayConfiguration:SourceMondayConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceMondayConfigurationCredentials:SourceMondayConfigurationCredentials": {
                "sourceMondayAuthorizationMethodApiToken": "source_monday_authorization_method_api_token",
                "sourceMondayAuthorizationMethodOAuth20": "source_monday_authorization_method_o_auth2_0",
                "sourceMondayUpdateAuthorizationMethodApiToken": "source_monday_update_authorization_method_api_token",
                "sourceMondayUpdateAuthorizationMethodOAuth20": "source_monday_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken:SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken": {
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20:SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken:SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken": {
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20:SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceMongodbConfiguration:SourceMongodbConfiguration": {
                "authSource": "auth_source",
                "instanceType": "instance_type",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceMongodbConfigurationInstanceType:SourceMongodbConfigurationInstanceType": {
                "sourceMongodbMongoDbInstanceTypeMongoDbAtlas": "source_mongodb_mongo_db_instance_type_mongo_db_atlas",
                "sourceMongodbMongoDbInstanceTypeReplicaSet": "source_mongodb_mongo_db_instance_type_replica_set",
                "sourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": "source_mongodb_mongo_db_instance_type_standalone_mongo_db_instance",
                "sourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": "source_mongodb_update_mongo_db_instance_type_mongo_db_atlas",
                "sourceMongodbUpdateMongoDbInstanceTypeReplicaSet": "source_mongodb_update_mongo_db_instance_type_replica_set",
                "sourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": "source_mongodb_update_mongo_db_instance_type_standalone_mongo_db_instance"
            },
            "airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas:SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas": {
                "additionalProperties": "additional_properties",
                "clusterUrl": "cluster_url"
            },
            "airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet:SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet": {
                "replicaSet": "replica_set",
                "serverAddresses": "server_addresses"
            },
            "airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
                "additionalProperties": "additional_properties",
                "clusterUrl": "cluster_url"
            },
            "airbyte:index/SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet:SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet": {
                "replicaSet": "replica_set",
                "serverAddresses": "server_addresses"
            },
            "airbyte:index/SourceMongodbInternalPocConfiguration:SourceMongodbInternalPocConfiguration": {
                "authSource": "auth_source",
                "connectionString": "connection_string",
                "replicaSet": "replica_set",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceMssqlConfiguration:SourceMssqlConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "replicationMethod": "replication_method",
                "sourceType": "source_type",
                "sslMethod": "ssl_method",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceMssqlConfigurationReplicationMethod:SourceMssqlConfigurationReplicationMethod": {
                "sourceMssqlReplicationMethodLogicalReplicationCdc": "source_mssql_replication_method_logical_replication_cdc",
                "sourceMssqlReplicationMethodStandard": "source_mssql_replication_method_standard",
                "sourceMssqlUpdateReplicationMethodLogicalReplicationCdc": "source_mssql_update_replication_method_logical_replication_cdc",
                "sourceMssqlUpdateReplicationMethodStandard": "source_mssql_update_replication_method_standard"
            },
            "airbyte:index/SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc:SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc": {
                "dataToSync": "data_to_sync",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "snapshotIsolation": "snapshot_isolation"
            },
            "airbyte:index/SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc:SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc": {
                "dataToSync": "data_to_sync",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "snapshotIsolation": "snapshot_isolation"
            },
            "airbyte:index/SourceMssqlConfigurationSslMethod:SourceMssqlConfigurationSslMethod": {
                "sourceMssqlSslMethodEncryptedTrustServerCertificate": "source_mssql_ssl_method_encrypted_trust_server_certificate",
                "sourceMssqlSslMethodEncryptedVerifyCertificate": "source_mssql_ssl_method_encrypted_verify_certificate",
                "sourceMssqlUpdateSslMethodEncryptedTrustServerCertificate": "source_mssql_update_ssl_method_encrypted_trust_server_certificate",
                "sourceMssqlUpdateSslMethodEncryptedVerifyCertificate": "source_mssql_update_ssl_method_encrypted_verify_certificate"
            },
            "airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate:SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate": {
                "sslMethod": "ssl_method"
            },
            "airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate:SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate": {
                "hostNameInCertificate": "host_name_in_certificate",
                "sslMethod": "ssl_method"
            },
            "airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate:SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
                "sslMethod": "ssl_method"
            },
            "airbyte:index/SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate:SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate": {
                "hostNameInCertificate": "host_name_in_certificate",
                "sslMethod": "ssl_method"
            },
            "airbyte:index/SourceMssqlConfigurationTunnelMethod:SourceMssqlConfigurationTunnelMethod": {
                "sourceMssqlSshTunnelMethodNoTunnel": "source_mssql_ssh_tunnel_method_no_tunnel",
                "sourceMssqlSshTunnelMethodPasswordAuthentication": "source_mssql_ssh_tunnel_method_password_authentication",
                "sourceMssqlSshTunnelMethodSshKeyAuthentication": "source_mssql_ssh_tunnel_method_ssh_key_authentication",
                "sourceMssqlUpdateSshTunnelMethodNoTunnel": "source_mssql_update_ssh_tunnel_method_no_tunnel",
                "sourceMssqlUpdateSshTunnelMethodPasswordAuthentication": "source_mssql_update_ssh_tunnel_method_password_authentication",
                "sourceMssqlUpdateSshTunnelMethodSshKeyAuthentication": "source_mssql_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel:SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel:SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication:SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourceMyHoursConfiguration:SourceMyHoursConfiguration": {
                "logsBatchSize": "logs_batch_size",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceMysqlConfiguration:SourceMysqlConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "replicationMethod": "replication_method",
                "sourceType": "source_type",
                "sslMode": "ssl_mode",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceMysqlConfigurationReplicationMethod:SourceMysqlConfigurationReplicationMethod": {
                "sourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc": "source_mysql_update_method_read_changes_using_binary_log_cdc",
                "sourceMysqlUpdateMethodScanChangesWithUserDefinedCursor": "source_mysql_update_method_scan_changes_with_user_defined_cursor",
                "sourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc": "source_mysql_update_update_method_read_changes_using_binary_log_cdc",
                "sourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor": "source_mysql_update_update_method_scan_changes_with_user_defined_cursor"
            },
            "airbyte:index/SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc:SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc": {
                "initialWaitingSeconds": "initial_waiting_seconds",
                "serverTimeZone": "server_time_zone"
            },
            "airbyte:index/SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc:SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc": {
                "initialWaitingSeconds": "initial_waiting_seconds",
                "serverTimeZone": "server_time_zone"
            },
            "airbyte:index/SourceMysqlConfigurationSslMode:SourceMysqlConfigurationSslMode": {
                "sourceMysqlSslModesPreferred": "source_mysql_ssl_modes_preferred",
                "sourceMysqlSslModesRequired": "source_mysql_ssl_modes_required",
                "sourceMysqlSslModesVerifyCa": "source_mysql_ssl_modes_verify_ca",
                "sourceMysqlSslModesVerifyIdentity": "source_mysql_ssl_modes_verify_identity",
                "sourceMysqlUpdateSslModesPreferred": "source_mysql_update_ssl_modes_preferred",
                "sourceMysqlUpdateSslModesRequired": "source_mysql_update_ssl_modes_required",
                "sourceMysqlUpdateSslModesVerifyCa": "source_mysql_update_ssl_modes_verify_ca",
                "sourceMysqlUpdateSslModesVerifyIdentity": "source_mysql_update_ssl_modes_verify_identity"
            },
            "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa:SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity:SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa:SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity:SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourceMysqlConfigurationTunnelMethod:SourceMysqlConfigurationTunnelMethod": {
                "sourceMysqlSshTunnelMethodNoTunnel": "source_mysql_ssh_tunnel_method_no_tunnel",
                "sourceMysqlSshTunnelMethodPasswordAuthentication": "source_mysql_ssh_tunnel_method_password_authentication",
                "sourceMysqlSshTunnelMethodSshKeyAuthentication": "source_mysql_ssh_tunnel_method_ssh_key_authentication",
                "sourceMysqlUpdateSshTunnelMethodNoTunnel": "source_mysql_update_ssh_tunnel_method_no_tunnel",
                "sourceMysqlUpdateSshTunnelMethodPasswordAuthentication": "source_mysql_update_ssh_tunnel_method_password_authentication",
                "sourceMysqlUpdateSshTunnelMethodSshKeyAuthentication": "source_mysql_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel:SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel:SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication:SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourceNetsuiteConfiguration:SourceNetsuiteConfiguration": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "objectTypes": "object_types",
                "sourceType": "source_type",
                "startDatetime": "start_datetime",
                "tokenKey": "token_key",
                "tokenSecret": "token_secret",
                "windowInDays": "window_in_days"
            },
            "airbyte:index/SourceNotionConfiguration:SourceNotionConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceNotionConfigurationCredentials:SourceNotionConfigurationCredentials": {
                "sourceNotionAuthenticateUsingAccessToken": "source_notion_authenticate_using_access_token",
                "sourceNotionAuthenticateUsingOAuth20": "source_notion_authenticate_using_o_auth2_0",
                "sourceNotionUpdateAuthenticateUsingAccessToken": "source_notion_update_authenticate_using_access_token",
                "sourceNotionUpdateAuthenticateUsingOAuth20": "source_notion_update_authenticate_using_o_auth2_0"
            },
            "airbyte:index/SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken:SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken": {
                "authType": "auth_type"
            },
            "airbyte:index/SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20:SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken:SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken": {
                "authType": "auth_type"
            },
            "airbyte:index/SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20:SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceNytimesConfiguration:SourceNytimesConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "shareType": "share_type",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceOktaConfiguration:SourceOktaConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceOktaConfigurationCredentials:SourceOktaConfigurationCredentials": {
                "sourceOktaAuthorizationMethodApiToken": "source_okta_authorization_method_api_token",
                "sourceOktaAuthorizationMethodOAuth20": "source_okta_authorization_method_o_auth2_0",
                "sourceOktaUpdateAuthorizationMethodApiToken": "source_okta_update_authorization_method_api_token",
                "sourceOktaUpdateAuthorizationMethodOAuth20": "source_okta_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken:SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken": {
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20:SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken:SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken": {
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20:SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceOmnisendConfiguration:SourceOmnisendConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceOnesignalConfiguration:SourceOnesignalConfiguration": {
                "outcomeNames": "outcome_names",
                "sourceType": "source_type",
                "startDate": "start_date",
                "userAuthKey": "user_auth_key"
            },
            "airbyte:index/SourceOnesignalConfigurationApplication:SourceOnesignalConfigurationApplication": {
                "appApiKey": "app_api_key",
                "appId": "app_id",
                "appName": "app_name"
            },
            "airbyte:index/SourceOpenweatherConfiguration:SourceOpenweatherConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceOracleConfiguration:SourceOracleConfiguration": {
                "connectionData": "connection_data",
                "jdbcUrlParams": "jdbc_url_params",
                "sourceType": "source_type",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceOracleConfigurationConnectionData:SourceOracleConfigurationConnectionData": {
                "sourceOracleConnectByServiceName": "source_oracle_connect_by_service_name",
                "sourceOracleConnectBySystemIdSid": "source_oracle_connect_by_system_id_sid",
                "sourceOracleUpdateConnectByServiceName": "source_oracle_update_connect_by_service_name",
                "sourceOracleUpdateConnectBySystemIdSid": "source_oracle_update_connect_by_system_id_sid"
            },
            "airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName:SourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName": {
                "connectionType": "connection_type",
                "serviceName": "service_name"
            },
            "airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid:SourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid": {
                "connectionType": "connection_type"
            },
            "airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName:SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName": {
                "connectionType": "connection_type",
                "serviceName": "service_name"
            },
            "airbyte:index/SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid:SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid": {
                "connectionType": "connection_type"
            },
            "airbyte:index/SourceOracleConfigurationEncryption:SourceOracleConfigurationEncryption": {
                "sourceOracleEncryptionNativeNetworkEncryptionNne": "source_oracle_encryption_native_network_encryption_nne",
                "sourceOracleEncryptionTlsEncryptedVerifyCertificate": "source_oracle_encryption_tls_encrypted_verify_certificate",
                "sourceOracleUpdateEncryptionNativeNetworkEncryptionNne": "source_oracle_update_encryption_native_network_encryption_nne",
                "sourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate": "source_oracle_update_encryption_tls_encrypted_verify_certificate"
            },
            "airbyte:index/SourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne:SourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne": {
                "encryptionAlgorithm": "encryption_algorithm",
                "encryptionMethod": "encryption_method"
            },
            "airbyte:index/SourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate:SourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate": {
                "encryptionMethod": "encryption_method",
                "sslCertificate": "ssl_certificate"
            },
            "airbyte:index/SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne:SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne": {
                "encryptionAlgorithm": "encryption_algorithm",
                "encryptionMethod": "encryption_method"
            },
            "airbyte:index/SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate:SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate": {
                "encryptionMethod": "encryption_method",
                "sslCertificate": "ssl_certificate"
            },
            "airbyte:index/SourceOracleConfigurationTunnelMethod:SourceOracleConfigurationTunnelMethod": {
                "sourceOracleSshTunnelMethodNoTunnel": "source_oracle_ssh_tunnel_method_no_tunnel",
                "sourceOracleSshTunnelMethodPasswordAuthentication": "source_oracle_ssh_tunnel_method_password_authentication",
                "sourceOracleSshTunnelMethodSshKeyAuthentication": "source_oracle_ssh_tunnel_method_ssh_key_authentication",
                "sourceOracleUpdateSshTunnelMethodNoTunnel": "source_oracle_update_ssh_tunnel_method_no_tunnel",
                "sourceOracleUpdateSshTunnelMethodPasswordAuthentication": "source_oracle_update_ssh_tunnel_method_password_authentication",
                "sourceOracleUpdateSshTunnelMethodSshKeyAuthentication": "source_oracle_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel:SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel:SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication:SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourceOrbConfiguration:SourceOrbConfiguration": {
                "apiKey": "api_key",
                "lookbackWindowDays": "lookback_window_days",
                "numericEventPropertiesKeys": "numeric_event_properties_keys",
                "planId": "plan_id",
                "sourceType": "source_type",
                "startDate": "start_date",
                "stringEventPropertiesKeys": "string_event_properties_keys",
                "subscriptionUsageGroupingKey": "subscription_usage_grouping_key"
            },
            "airbyte:index/SourceOrbitConfiguration:SourceOrbitConfiguration": {
                "apiToken": "api_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceOutbrainAmplifyConfiguration:SourceOutbrainAmplifyConfiguration": {
                "endDate": "end_date",
                "geoLocationBreakdown": "geo_location_breakdown",
                "reportGranularity": "report_granularity",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceOutbrainAmplifyConfigurationCredentials:SourceOutbrainAmplifyConfigurationCredentials": {
                "sourceOutbrainAmplifyAuthenticationMethodAccessToken": "source_outbrain_amplify_authentication_method_access_token",
                "sourceOutbrainAmplifyAuthenticationMethodUsernamePassword": "source_outbrain_amplify_authentication_method_username_password",
                "sourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken": "source_outbrain_amplify_update_authentication_method_access_token",
                "sourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword": "source_outbrain_amplify_update_authentication_method_username_password"
            },
            "airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken:SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken": {
                "accessToken": "access_token"
            },
            "airbyte:index/SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken:SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken": {
                "accessToken": "access_token"
            },
            "airbyte:index/SourceOutreachConfiguration:SourceOutreachConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "redirectUri": "redirect_uri",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourcePaypalTransactionConfiguration:SourcePaypalTransactionConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "isSandbox": "is_sandbox",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourcePaystackConfiguration:SourcePaystackConfiguration": {
                "lookbackWindowDays": "lookback_window_days",
                "secretKey": "secret_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourcePendoConfiguration:SourcePendoConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourcePersistiqConfiguration:SourcePersistiqConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourcePexelsApiConfiguration:SourcePexelsApiConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourcePinterestConfiguration:SourcePinterestConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date",
                "statuses": "status"
            },
            "airbyte:index/SourcePinterestConfigurationCredentials:SourcePinterestConfigurationCredentials": {
                "sourcePinterestAuthorizationMethodAccessToken": "source_pinterest_authorization_method_access_token",
                "sourcePinterestAuthorizationMethodOAuth20": "source_pinterest_authorization_method_o_auth2_0",
                "sourcePinterestUpdateAuthorizationMethodAccessToken": "source_pinterest_update_authorization_method_access_token",
                "sourcePinterestUpdateAuthorizationMethodOAuth20": "source_pinterest_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken:SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20:SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken:SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20:SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourcePipedriveConfiguration:SourcePipedriveConfiguration": {
                "replicationStartDate": "replication_start_date",
                "sourceType": "source_type"
            },
            "airbyte:index/SourcePipedriveConfigurationAuthorization:SourcePipedriveConfigurationAuthorization": {
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourcePocketConfiguration:SourcePocketConfiguration": {
                "accessToken": "access_token",
                "consumerKey": "consumer_key",
                "contentType": "content_type",
                "detailType": "detail_type",
                "sourceType": "source_type"
            },
            "airbyte:index/SourcePokeapiConfiguration:SourcePokeapiConfiguration": {
                "pokemonName": "pokemon_name",
                "sourceType": "source_type"
            },
            "airbyte:index/SourcePolygonStockApiConfiguration:SourcePolygonStockApiConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date",
                "stocksTicker": "stocks_ticker"
            },
            "airbyte:index/SourcePostgresConfiguration:SourcePostgresConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "replicationMethod": "replication_method",
                "sourceType": "source_type",
                "sslMode": "ssl_mode",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourcePostgresConfigurationReplicationMethod:SourcePostgresConfigurationReplicationMethod": {
                "sourcePostgresReplicationMethodLogicalReplicationCdc": "source_postgres_replication_method_logical_replication_cdc",
                "sourcePostgresReplicationMethodStandard": "source_postgres_replication_method_standard",
                "sourcePostgresReplicationMethodStandardXmin": "source_postgres_replication_method_standard_xmin",
                "sourcePostgresUpdateReplicationMethodLogicalReplicationCdc": "source_postgres_update_replication_method_logical_replication_cdc",
                "sourcePostgresUpdateReplicationMethodStandard": "source_postgres_update_replication_method_standard",
                "sourcePostgresUpdateReplicationMethodStandardXmin": "source_postgres_update_replication_method_standard_xmin"
            },
            "airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc:SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc": {
                "additionalProperties": "additional_properties",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "lsnCommitBehaviour": "lsn_commit_behaviour",
                "queueSize": "queue_size",
                "replicationSlot": "replication_slot"
            },
            "airbyte:index/SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc:SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc": {
                "additionalProperties": "additional_properties",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "lsnCommitBehaviour": "lsn_commit_behaviour",
                "queueSize": "queue_size",
                "replicationSlot": "replication_slot"
            },
            "airbyte:index/SourcePostgresConfigurationSslMode:SourcePostgresConfigurationSslMode": {
                "sourcePostgresSslModesAllow": "source_postgres_ssl_modes_allow",
                "sourcePostgresSslModesDisable": "source_postgres_ssl_modes_disable",
                "sourcePostgresSslModesPrefer": "source_postgres_ssl_modes_prefer",
                "sourcePostgresSslModesRequire": "source_postgres_ssl_modes_require",
                "sourcePostgresSslModesVerifyCa": "source_postgres_ssl_modes_verify_ca",
                "sourcePostgresSslModesVerifyFull": "source_postgres_ssl_modes_verify_full",
                "sourcePostgresUpdateSslModesAllow": "source_postgres_update_ssl_modes_allow",
                "sourcePostgresUpdateSslModesDisable": "source_postgres_update_ssl_modes_disable",
                "sourcePostgresUpdateSslModesPrefer": "source_postgres_update_ssl_modes_prefer",
                "sourcePostgresUpdateSslModesRequire": "source_postgres_update_ssl_modes_require",
                "sourcePostgresUpdateSslModesVerifyCa": "source_postgres_update_ssl_modes_verify_ca",
                "sourcePostgresUpdateSslModesVerifyFull": "source_postgres_update_ssl_modes_verify_full"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesAllow:SourcePostgresConfigurationSslModeSourcePostgresSslModesAllow": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesDisable:SourcePostgresConfigurationSslModeSourcePostgresSslModesDisable": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer:SourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesRequire:SourcePostgresConfigurationSslModeSourcePostgresSslModesRequire": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa:SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull:SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull:SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/SourcePostgresConfigurationTunnelMethod:SourcePostgresConfigurationTunnelMethod": {
                "sourcePostgresSshTunnelMethodNoTunnel": "source_postgres_ssh_tunnel_method_no_tunnel",
                "sourcePostgresSshTunnelMethodPasswordAuthentication": "source_postgres_ssh_tunnel_method_password_authentication",
                "sourcePostgresSshTunnelMethodSshKeyAuthentication": "source_postgres_ssh_tunnel_method_ssh_key_authentication",
                "sourcePostgresUpdateSshTunnelMethodNoTunnel": "source_postgres_update_ssh_tunnel_method_no_tunnel",
                "sourcePostgresUpdateSshTunnelMethodPasswordAuthentication": "source_postgres_update_ssh_tunnel_method_password_authentication",
                "sourcePostgresUpdateSshTunnelMethodSshKeyAuthentication": "source_postgres_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel:SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel:SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication:SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/SourcePosthogConfiguration:SourcePosthogConfiguration": {
                "apiKey": "api_key",
                "baseUrl": "base_url",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourcePostmarkappConfiguration:SourcePostmarkappConfiguration": {
                "sourceType": "source_type",
                "xPostmarkAccountToken": "x_postmark_account_token",
                "xPostmarkServerToken": "x_postmark_server_token"
            },
            "airbyte:index/SourcePrestashopConfiguration:SourcePrestashopConfiguration": {
                "accessKey": "access_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourcePublicApisConfiguration:SourcePublicApisConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourcePunkApiConfiguration:SourcePunkApiConfiguration": {
                "brewedAfter": "brewed_after",
                "brewedBefore": "brewed_before",
                "sourceType": "source_type"
            },
            "airbyte:index/SourcePypiConfiguration:SourcePypiConfiguration": {
                "projectName": "project_name",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceQualarooConfiguration:SourceQualarooConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date",
                "surveyIds": "survey_ids"
            },
            "airbyte:index/SourceQuickbooksConfiguration:SourceQuickbooksConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceQuickbooksConfigurationCredentials:SourceQuickbooksConfigurationCredentials": {
                "sourceQuickbooksAuthorizationMethodOAuth20": "source_quickbooks_authorization_method_o_auth2_0",
                "sourceQuickbooksUpdateAuthorizationMethodOAuth20": "source_quickbooks_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/SourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20:SourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "realmId": "realm_id",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20:SourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "realmId": "realm_id",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceRailzConfiguration:SourceRailzConfiguration": {
                "clientId": "client_id",
                "secretKey": "secret_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceRechargeConfiguration:SourceRechargeConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceRecreationConfiguration:SourceRecreationConfiguration": {
                "queryCampsites": "query_campsites",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceRecruiteeConfiguration:SourceRecruiteeConfiguration": {
                "apiKey": "api_key",
                "companyId": "company_id",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceRecurlyConfiguration:SourceRecurlyConfiguration": {
                "apiKey": "api_key",
                "beginTime": "begin_time",
                "endTime": "end_time",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceRedshiftConfiguration:SourceRedshiftConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceRetentlyConfiguration:SourceRetentlyConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceRetentlyConfigurationCredentials:SourceRetentlyConfigurationCredentials": {
                "sourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth": "source_retently_authentication_mechanism_authenticate_via_retently_o_auth",
                "sourceRetentlyAuthenticationMechanismAuthenticateWithApiToken": "source_retently_authentication_mechanism_authenticate_with_api_token",
                "sourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth": "source_retently_update_authentication_mechanism_authenticate_via_retently_o_auth",
                "sourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken": "source_retently_update_authentication_mechanism_authenticate_with_api_token"
            },
            "airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth:SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken:SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken": {
                "additionalProperties": "additional_properties",
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth:SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken:SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken": {
                "additionalProperties": "additional_properties",
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/SourceRkiCovidConfiguration:SourceRkiCovidConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceRssConfiguration:SourceRssConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceS3Configuration:SourceS3Configuration": {
                "pathPattern": "path_pattern",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceS3ConfigurationFormat:SourceS3ConfigurationFormat": {
                "sourceS3FileFormatAvro": "source_s3_file_format_avro",
                "sourceS3FileFormatCsv": "source_s3_file_format_csv",
                "sourceS3FileFormatJsonl": "source_s3_file_format_jsonl",
                "sourceS3FileFormatParquet": "source_s3_file_format_parquet",
                "sourceS3UpdateFileFormatAvro": "source_s3_update_file_format_avro",
                "sourceS3UpdateFileFormatCsv": "source_s3_update_file_format_csv",
                "sourceS3UpdateFileFormatJsonl": "source_s3_update_file_format_jsonl",
                "sourceS3UpdateFileFormatParquet": "source_s3_update_file_format_parquet"
            },
            "airbyte:index/SourceS3ConfigurationFormatSourceS3FileFormatCsv:SourceS3ConfigurationFormatSourceS3FileFormatCsv": {
                "additionalReaderOptions": "additional_reader_options",
                "advancedOptions": "advanced_options",
                "blockSize": "block_size",
                "doubleQuote": "double_quote",
                "escapeChar": "escape_char",
                "inferDatatypes": "infer_datatypes",
                "newlinesInValues": "newlines_in_values",
                "quoteChar": "quote_char"
            },
            "airbyte:index/SourceS3ConfigurationFormatSourceS3FileFormatJsonl:SourceS3ConfigurationFormatSourceS3FileFormatJsonl": {
                "blockSize": "block_size",
                "newlinesInValues": "newlines_in_values",
                "unexpectedFieldBehavior": "unexpected_field_behavior"
            },
            "airbyte:index/SourceS3ConfigurationFormatSourceS3FileFormatParquet:SourceS3ConfigurationFormatSourceS3FileFormatParquet": {
                "batchSize": "batch_size",
                "bufferSize": "buffer_size"
            },
            "airbyte:index/SourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv:SourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv": {
                "additionalReaderOptions": "additional_reader_options",
                "advancedOptions": "advanced_options",
                "blockSize": "block_size",
                "doubleQuote": "double_quote",
                "escapeChar": "escape_char",
                "inferDatatypes": "infer_datatypes",
                "newlinesInValues": "newlines_in_values",
                "quoteChar": "quote_char"
            },
            "airbyte:index/SourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl:SourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl": {
                "blockSize": "block_size",
                "newlinesInValues": "newlines_in_values",
                "unexpectedFieldBehavior": "unexpected_field_behavior"
            },
            "airbyte:index/SourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet:SourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet": {
                "batchSize": "batch_size",
                "bufferSize": "buffer_size"
            },
            "airbyte:index/SourceS3ConfigurationProvider:SourceS3ConfigurationProvider": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key",
                "pathPrefix": "path_prefix",
                "startDate": "start_date"
            },
            "airbyte:index/SourceSalesforceConfiguration:SourceSalesforceConfiguration": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "forceUseBulkApi": "force_use_bulk_api",
                "isSandbox": "is_sandbox",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDate": "start_date",
                "streamsCriterias": "streams_criteria"
            },
            "airbyte:index/SourceSalesloftConfiguration:SourceSalesloftConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceSalesloftConfigurationCredentials:SourceSalesloftConfigurationCredentials": {
                "sourceSalesloftCredentialsAuthenticateViaApiKey": "source_salesloft_credentials_authenticate_via_api_key",
                "sourceSalesloftCredentialsAuthenticateViaOAuth": "source_salesloft_credentials_authenticate_via_o_auth",
                "sourceSalesloftUpdateCredentialsAuthenticateViaApiKey": "source_salesloft_update_credentials_authenticate_via_api_key",
                "sourceSalesloftUpdateCredentialsAuthenticateViaOAuth": "source_salesloft_update_credentials_authenticate_via_o_auth"
            },
            "airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey:SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth:SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey:SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth:SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceSapFieldglassConfiguration:SourceSapFieldglassConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceSecodaConfiguration:SourceSecodaConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceSendgridConfiguration:SourceSendgridConfiguration": {
                "sourceType": "source_type",
                "startTime": "start_time"
            },
            "airbyte:index/SourceSendinblueConfiguration:SourceSendinblueConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceSenseforceConfiguration:SourceSenseforceConfiguration": {
                "accessToken": "access_token",
                "backendUrl": "backend_url",
                "datasetId": "dataset_id",
                "sliceRange": "slice_range",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceSentryConfiguration:SourceSentryConfiguration": {
                "authToken": "auth_token",
                "discoverFields": "discover_fields",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceSftpBulkConfiguration:SourceSftpBulkConfiguration": {
                "fileMostRecent": "file_most_recent",
                "filePattern": "file_pattern",
                "fileType": "file_type",
                "folderPath": "folder_path",
                "privateKey": "private_key",
                "sourceType": "source_type",
                "startDate": "start_date",
                "streamName": "stream_name"
            },
            "airbyte:index/SourceSftpConfiguration:SourceSftpConfiguration": {
                "filePattern": "file_pattern",
                "fileTypes": "file_types",
                "folderPath": "folder_path",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceSftpConfigurationCredentials:SourceSftpConfigurationCredentials": {
                "sourceSftpAuthenticationWildcardPasswordAuthentication": "source_sftp_authentication_wildcard_password_authentication",
                "sourceSftpAuthenticationWildcardSshKeyAuthentication": "source_sftp_authentication_wildcard_ssh_key_authentication",
                "sourceSftpUpdateAuthenticationWildcardPasswordAuthentication": "source_sftp_update_authentication_wildcard_password_authentication",
                "sourceSftpUpdateAuthenticationWildcardSshKeyAuthentication": "source_sftp_update_authentication_wildcard_ssh_key_authentication"
            },
            "airbyte:index/SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication:SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication": {
                "authMethod": "auth_method",
                "authUserPassword": "auth_user_password"
            },
            "airbyte:index/SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication:SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication": {
                "authMethod": "auth_method",
                "authSshKey": "auth_ssh_key"
            },
            "airbyte:index/SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication:SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication": {
                "authMethod": "auth_method",
                "authUserPassword": "auth_user_password"
            },
            "airbyte:index/SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication:SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication": {
                "authMethod": "auth_method",
                "authSshKey": "auth_ssh_key"
            },
            "airbyte:index/SourceShopifyConfiguration:SourceShopifyConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceShopifyConfigurationCredentials:SourceShopifyConfigurationCredentials": {
                "sourceShopifyShopifyAuthorizationMethodApiPassword": "source_shopify_shopify_authorization_method_api_password",
                "sourceShopifyShopifyAuthorizationMethodOAuth20": "source_shopify_shopify_authorization_method_o_auth2_0",
                "sourceShopifyUpdateShopifyAuthorizationMethodApiPassword": "source_shopify_update_shopify_authorization_method_api_password",
                "sourceShopifyUpdateShopifyAuthorizationMethodOAuth20": "source_shopify_update_shopify_authorization_method_o_auth2_0"
            },
            "airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword:SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword": {
                "apiPassword": "api_password",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20:SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword:SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword": {
                "apiPassword": "api_password",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20:SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceShortioConfiguration:SourceShortioConfiguration": {
                "domainId": "domain_id",
                "secretKey": "secret_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceSlackConfiguration:SourceSlackConfiguration": {
                "channelFilters": "channel_filter",
                "joinChannels": "join_channels",
                "lookbackWindow": "lookback_window",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceSlackConfigurationCredentials:SourceSlackConfigurationCredentials": {
                "sourceSlackAuthenticationMechanismApiToken": "source_slack_authentication_mechanism_api_token",
                "sourceSlackAuthenticationMechanismSignInViaSlackOAuth": "source_slack_authentication_mechanism_sign_in_via_slack_o_auth",
                "sourceSlackUpdateAuthenticationMechanismApiToken": "source_slack_update_authentication_mechanism_api_token",
                "sourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth": "source_slack_update_authentication_mechanism_sign_in_via_slack_o_auth"
            },
            "airbyte:index/SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken:SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken": {
                "apiToken": "api_token",
                "optionTitle": "option_title"
            },
            "airbyte:index/SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth:SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken:SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken": {
                "apiToken": "api_token",
                "optionTitle": "option_title"
            },
            "airbyte:index/SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth:SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/SourceSmailyConfiguration:SourceSmailyConfiguration": {
                "apiPassword": "api_password",
                "apiSubdomain": "api_subdomain",
                "apiUsername": "api_username",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceSmartengageConfiguration:SourceSmartengageConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceSmartsheetsConfiguration:SourceSmartsheetsConfiguration": {
                "metadataFields": "metadata_fields",
                "sourceType": "source_type",
                "spreadsheetId": "spreadsheet_id",
                "startDatetime": "start_datetime"
            },
            "airbyte:index/SourceSmartsheetsConfigurationCredentials:SourceSmartsheetsConfigurationCredentials": {
                "sourceSmartsheetsAuthorizationMethodApiAccessToken": "source_smartsheets_authorization_method_api_access_token",
                "sourceSmartsheetsAuthorizationMethodOAuth20": "source_smartsheets_authorization_method_o_auth2_0",
                "sourceSmartsheetsUpdateAuthorizationMethodApiAccessToken": "source_smartsheets_update_authorization_method_api_access_token",
                "sourceSmartsheetsUpdateAuthorizationMethodOAuth20": "source_smartsheets_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20:SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceSnapchatMarketingConfiguration:SourceSnapchatMarketingConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "endDate": "end_date",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceSnowflakeConfiguration:SourceSnowflakeConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceSnowflakeConfigurationCredentials:SourceSnowflakeConfigurationCredentials": {
                "sourceSnowflakeAuthorizationMethodOAuth20": "source_snowflake_authorization_method_o_auth2_0",
                "sourceSnowflakeAuthorizationMethodUsernameAndPassword": "source_snowflake_authorization_method_username_and_password",
                "sourceSnowflakeUpdateAuthorizationMethodOAuth20": "source_snowflake_update_authorization_method_o_auth2_0",
                "sourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword": "source_snowflake_update_authorization_method_username_and_password"
            },
            "airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20:SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword:SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword": {
                "authType": "auth_type"
            },
            "airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20:SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword:SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
                "authType": "auth_type"
            },
            "airbyte:index/SourceSonarCloudConfiguration:SourceSonarCloudConfiguration": {
                "componentKeys": "component_keys",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date",
                "userToken": "user_token"
            },
            "airbyte:index/SourceSpaceXApiConfiguration:SourceSpaceXApiConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceSquareConfiguration:SourceSquareConfiguration": {
                "includeDeletedObjects": "include_deleted_objects",
                "isSandbox": "is_sandbox",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceSquareConfigurationCredentials:SourceSquareConfigurationCredentials": {
                "sourceSquareAuthenticationApiKey": "source_square_authentication_api_key",
                "sourceSquareAuthenticationOauthAuthentication": "source_square_authentication_oauth_authentication",
                "sourceSquareUpdateAuthenticationApiKey": "source_square_update_authentication_api_key",
                "sourceSquareUpdateAuthenticationOauthAuthentication": "source_square_update_authentication_oauth_authentication"
            },
            "airbyte:index/SourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey:SourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/SourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication:SourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey:SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication:SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceStravaConfiguration:SourceStravaConfiguration": {
                "athleteId": "athlete_id",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceStripeConfiguration:SourceStripeConfiguration": {
                "accountId": "account_id",
                "clientSecret": "client_secret",
                "lookbackWindowDays": "lookback_window_days",
                "sliceRange": "slice_range",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceSurveySparrowConfiguration:SourceSurveySparrowConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type",
                "surveyIds": "survey_id"
            },
            "airbyte:index/SourceSurveySparrowConfigurationRegion:SourceSurveySparrowConfigurationRegion": {
                "sourceSurveySparrowBaseUrlEuBasedAccount": "source_survey_sparrow_base_url_eu_based_account",
                "sourceSurveySparrowBaseUrlGlobalAccount": "source_survey_sparrow_base_url_global_account",
                "sourceSurveySparrowUpdateBaseUrlEuBasedAccount": "source_survey_sparrow_update_base_url_eu_based_account",
                "sourceSurveySparrowUpdateBaseUrlGlobalAccount": "source_survey_sparrow_update_base_url_global_account"
            },
            "airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount": {
                "urlBase": "url_base"
            },
            "airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount": {
                "urlBase": "url_base"
            },
            "airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount": {
                "urlBase": "url_base"
            },
            "airbyte:index/SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount:SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount": {
                "urlBase": "url_base"
            },
            "airbyte:index/SourceSurveymonkeyConfiguration:SourceSurveymonkeyConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date",
                "surveyIds": "survey_ids"
            },
            "airbyte:index/SourceSurveymonkeyConfigurationCredentials:SourceSurveymonkeyConfigurationCredentials": {
                "accessToken": "access_token",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceTempoConfiguration:SourceTempoConfiguration": {
                "apiToken": "api_token",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceTheGuardianApiConfiguration:SourceTheGuardianApiConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceTiktokMarketingConfiguration:SourceTiktokMarketingConfiguration": {
                "attributionWindow": "attribution_window",
                "endDate": "end_date",
                "includeDeleted": "include_deleted",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceTiktokMarketingConfigurationCredentials:SourceTiktokMarketingConfigurationCredentials": {
                "sourceTiktokMarketingAuthenticationMethodOAuth20": "source_tiktok_marketing_authentication_method_o_auth2_0",
                "sourceTiktokMarketingAuthenticationMethodSandboxAccessToken": "source_tiktok_marketing_authentication_method_sandbox_access_token",
                "sourceTiktokMarketingUpdateAuthenticationMethodOAuth20": "source_tiktok_marketing_update_authentication_method_o_auth2_0",
                "sourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken": "source_tiktok_marketing_update_authentication_method_sandbox_access_token"
            },
            "airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20": {
                "accessToken": "access_token",
                "advertiserId": "advertiser_id",
                "appId": "app_id",
                "authType": "auth_type"
            },
            "airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken": {
                "accessToken": "access_token",
                "advertiserId": "advertiser_id",
                "authType": "auth_type"
            },
            "airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20": {
                "accessToken": "access_token",
                "advertiserId": "advertiser_id",
                "appId": "app_id",
                "authType": "auth_type"
            },
            "airbyte:index/SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken:SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken": {
                "accessToken": "access_token",
                "advertiserId": "advertiser_id",
                "authType": "auth_type"
            },
            "airbyte:index/SourceTodoistConfiguration:SourceTodoistConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceTrelloConfiguration:SourceTrelloConfiguration": {
                "boardIds": "board_ids",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceTrustpilotConfiguration:SourceTrustpilotConfiguration": {
                "businessUnits": "business_units",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceTrustpilotConfigurationCredentials:SourceTrustpilotConfigurationCredentials": {
                "sourceTrustpilotAuthorizationMethodApiKey": "source_trustpilot_authorization_method_api_key",
                "sourceTrustpilotAuthorizationMethodOAuth20": "source_trustpilot_authorization_method_o_auth_2_0",
                "sourceTrustpilotUpdateAuthorizationMethodApiKey": "source_trustpilot_update_authorization_method_api_key",
                "sourceTrustpilotUpdateAuthorizationMethodOAuth20": "source_trustpilot_update_authorization_method_o_auth_2_0"
            },
            "airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey:SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey": {
                "authType": "auth_type",
                "clientId": "client_id"
            },
            "airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20:SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey:SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey": {
                "authType": "auth_type",
                "clientId": "client_id"
            },
            "airbyte:index/SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20:SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceTvmazeScheduleConfiguration:SourceTvmazeScheduleConfiguration": {
                "domesticScheduleCountryCode": "domestic_schedule_country_code",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date",
                "webScheduleCountryCode": "web_schedule_country_code"
            },
            "airbyte:index/SourceTwilioConfiguration:SourceTwilioConfiguration": {
                "accountSid": "account_sid",
                "authToken": "auth_token",
                "lookbackWindow": "lookback_window",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceTwilioTaskrouterConfiguration:SourceTwilioTaskrouterConfiguration": {
                "accountSid": "account_sid",
                "authToken": "auth_token",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceTwitterConfiguration:SourceTwitterConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceTypeformConfiguration:SourceTypeformConfiguration": {
                "formIds": "form_ids",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceTypeformConfigurationCredentials:SourceTypeformConfigurationCredentials": {
                "sourceTypeformAuthorizationMethodOAuth20": "source_typeform_authorization_method_o_auth2_0",
                "sourceTypeformAuthorizationMethodPrivateToken": "source_typeform_authorization_method_private_token",
                "sourceTypeformUpdateAuthorizationMethodOAuth20": "source_typeform_update_authorization_method_o_auth2_0",
                "sourceTypeformUpdateAuthorizationMethodPrivateToken": "source_typeform_update_authorization_method_private_token"
            },
            "airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20:SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken:SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20:SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken:SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceUsCensusConfiguration:SourceUsCensusConfiguration": {
                "apiKey": "api_key",
                "queryParams": "query_params",
                "queryPath": "query_path",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceVantageConfiguration:SourceVantageConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceWebflowConfiguration:SourceWebflowConfiguration": {
                "apiKey": "api_key",
                "siteId": "site_id",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceWhiskyHunterConfiguration:SourceWhiskyHunterConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceWikipediaPageviewsConfiguration:SourceWikipediaPageviewsConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceWoocommerceConfiguration:SourceWoocommerceConfiguration": {
                "apiKey": "api_key",
                "apiSecret": "api_secret",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceXeroConfiguration:SourceXeroConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date",
                "tenantId": "tenant_id"
            },
            "airbyte:index/SourceXeroConfigurationAuthentication:SourceXeroConfigurationAuthentication": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/SourceXkcdConfiguration:SourceXkcdConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceYandexMetricaConfiguration:SourceYandexMetricaConfiguration": {
                "authToken": "auth_token",
                "counterId": "counter_id",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceYotpoConfiguration:SourceYotpoConfiguration": {
                "accessToken": "access_token",
                "appKey": "app_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceYouniumConfiguration:SourceYouniumConfiguration": {
                "legalEntity": "legal_entity",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceYoutubeAnalyticsConfiguration:SourceYoutubeAnalyticsConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/SourceYoutubeAnalyticsConfigurationCredentials:SourceYoutubeAnalyticsConfigurationCredentials": {
                "additionalProperties": "additional_properties",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceZendeskChatConfiguration:SourceZendeskChatConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceZendeskChatConfigurationCredentials:SourceZendeskChatConfigurationCredentials": {
                "sourceZendeskChatAuthorizationMethodAccessToken": "source_zendesk_chat_authorization_method_access_token",
                "sourceZendeskChatAuthorizationMethodOAuth20": "source_zendesk_chat_authorization_method_o_auth2_0",
                "sourceZendeskChatUpdateAuthorizationMethodAccessToken": "source_zendesk_chat_update_authorization_method_access_token",
                "sourceZendeskChatUpdateAuthorizationMethodOAuth20": "source_zendesk_chat_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken:SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken": {
                "accessToken": "access_token"
            },
            "airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20:SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken:SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken": {
                "accessToken": "access_token"
            },
            "airbyte:index/SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20:SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/SourceZendeskSunshineConfiguration:SourceZendeskSunshineConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceZendeskSunshineConfigurationCredentials:SourceZendeskSunshineConfigurationCredentials": {
                "sourceZendeskSunshineAuthorizationMethodApiToken": "source_zendesk_sunshine_authorization_method_api_token",
                "sourceZendeskSunshineAuthorizationMethodOAuth20": "source_zendesk_sunshine_authorization_method_o_auth2_0",
                "sourceZendeskSunshineUpdateAuthorizationMethodApiToken": "source_zendesk_sunshine_update_authorization_method_api_token",
                "sourceZendeskSunshineUpdateAuthorizationMethodOAuth20": "source_zendesk_sunshine_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20:SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceZendeskSupportConfiguration:SourceZendeskSupportConfiguration": {
                "ignorePagination": "ignore_pagination",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceZendeskSupportConfigurationCredentials:SourceZendeskSupportConfigurationCredentials": {
                "sourceZendeskSupportAuthenticationApiToken": "source_zendesk_support_authentication_api_token",
                "sourceZendeskSupportAuthenticationOAuth20": "source_zendesk_support_authentication_o_auth2_0",
                "sourceZendeskSupportUpdateAuthenticationApiToken": "source_zendesk_support_update_authentication_api_token",
                "sourceZendeskSupportUpdateAuthenticationOAuth20": "source_zendesk_support_update_authentication_o_auth2_0"
            },
            "airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token"
            },
            "airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token"
            },
            "airbyte:index/SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20:SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceZendeskTalkConfiguration:SourceZendeskTalkConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/SourceZendeskTalkConfigurationCredentials:SourceZendeskTalkConfigurationCredentials": {
                "sourceZendeskTalkAuthenticationApiToken": "source_zendesk_talk_authentication_api_token",
                "sourceZendeskTalkAuthenticationOAuth20": "source_zendesk_talk_authentication_o_auth2_0",
                "sourceZendeskTalkUpdateAuthenticationApiToken": "source_zendesk_talk_update_authentication_api_token",
                "sourceZendeskTalkUpdateAuthenticationOAuth20": "source_zendesk_talk_update_authentication_o_auth2_0"
            },
            "airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20:SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/SourceZenloopConfiguration:SourceZenloopConfiguration": {
                "apiToken": "api_token",
                "dateFrom": "date_from",
                "sourceType": "source_type",
                "surveyGroupId": "survey_group_id",
                "surveyId": "survey_id"
            },
            "airbyte:index/SourceZohoCrmConfiguration:SourceZohoCrmConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "dcRegion": "dc_region",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDatetime": "start_datetime"
            },
            "airbyte:index/SourceZoomConfiguration:SourceZoomConfiguration": {
                "jwtToken": "jwt_token",
                "sourceType": "source_type"
            },
            "airbyte:index/SourceZuoraConfiguration:SourceZuoraConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "dataQuery": "data_query",
                "sourceType": "source_type",
                "startDate": "start_date",
                "tenantEndpoint": "tenant_endpoint",
                "windowInDays": "window_in_days"
            },
            "airbyte:index/connection:Connection": {
                "connectionId": "connection_id",
                "dataResidency": "data_residency",
                "destinationId": "destination_id",
                "namespaceDefinition": "namespace_definition",
                "namespaceFormat": "namespace_format",
                "nonBreakingSchemaUpdatesBehavior": "non_breaking_schema_updates_behavior",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationAWSDatalake:DestinationAWSDatalake": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationAzureBlobStorage:DestinationAzureBlobStorage": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationBigquery:DestinationBigquery": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationBigqueryDenormalized:DestinationBigqueryDenormalized": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationClickhouse:DestinationClickhouse": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationConvex:DestinationConvex": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationCumulio:DestinationCumulio": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationDatabend:DestinationDatabend": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationDatabricks:DestinationDatabricks": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationDevNull:DestinationDevNull": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationDynamodb:DestinationDynamodb": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationElasticsearch:DestinationElasticsearch": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationFirebolt:DestinationFirebolt": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationFirestore:DestinationFirestore": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationGcs:DestinationGcs": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationGoogleSheets:DestinationGoogleSheets": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationKeen:DestinationKeen": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationKinesis:DestinationKinesis": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationLangchain:DestinationLangchain": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationMSsql:DestinationMSsql": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationMongodb:DestinationMongodb": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationMysql:DestinationMysql": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationOracle:DestinationOracle": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationPostgres:DestinationPostgres": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationPubsub:DestinationPubsub": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationRedis:DestinationRedis": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationRedshift:DestinationRedshift": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationS3:DestinationS3": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationS3Glue:DestinationS3Glue": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationSftpJson:DestinationSftpJson": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationSnowflake:DestinationSnowflake": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationTimeplus:DestinationTimeplus": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationTypesense:DestinationTypesense": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationVertica:DestinationVertica": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/destinationXata:DestinationXata": {
                "destinationId": "destination_id",
                "destinationType": "destination_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getConnection:getConnection": {
                "connectionId": "connection_id",
                "dataResidency": "data_residency",
                "destinationId": "destination_id",
                "namespaceDefinition": "namespace_definition",
                "namespaceFormat": "namespace_format",
                "nonBreakingSchemaUpdatesBehavior": "non_breaking_schema_updates_behavior",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getConnectionConfigurationsStream:getConnectionConfigurationsStream": {
                "cursorFields": "cursor_field",
                "primaryKeys": "primary_key",
                "syncMode": "sync_mode"
            },
            "airbyte:index/getConnectionSchedule:getConnectionSchedule": {
                "basicTiming": "basic_timing",
                "cronExpression": "cron_expression",
                "scheduleType": "schedule_type"
            },
            "airbyte:index/getDestinationAWSDatalake:getDestinationAWSDatalake": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationAWSDatalakeConfiguration:getDestinationAWSDatalakeConfiguration": {
                "awsAccountId": "aws_account_id",
                "bucketName": "bucket_name",
                "bucketPrefix": "bucket_prefix",
                "destinationType": "destination_type",
                "glueCatalogFloatAsDecimal": "glue_catalog_float_as_decimal",
                "lakeformationDatabaseDefaultTagKey": "lakeformation_database_default_tag_key",
                "lakeformationDatabaseDefaultTagValues": "lakeformation_database_default_tag_values",
                "lakeformationDatabaseName": "lakeformation_database_name",
                "lakeformationGovernedTables": "lakeformation_governed_tables"
            },
            "airbyte:index/getDestinationAWSDatalakeConfigurationCredentials:getDestinationAWSDatalakeConfigurationCredentials": {
                "destinationAwsDatalakeAuthenticationModeIamRole": "destination_aws_datalake_authentication_mode_iam_role",
                "destinationAwsDatalakeAuthenticationModeIamUser": "destination_aws_datalake_authentication_mode_iam_user",
                "destinationAwsDatalakeUpdateAuthenticationModeIamRole": "destination_aws_datalake_update_authentication_mode_iam_role",
                "destinationAwsDatalakeUpdateAuthenticationModeIamUser": "destination_aws_datalake_update_authentication_mode_iam_user"
            },
            "airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole": {
                "credentialsTitle": "credentials_title",
                "roleArn": "role_arn"
            },
            "airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole": {
                "credentialsTitle": "credentials_title",
                "roleArn": "role_arn"
            },
            "airbyte:index/getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser:getDestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/getDestinationAWSDatalakeConfigurationFormat:getDestinationAWSDatalakeConfigurationFormat": {
                "destinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson": "destination_aws_datalake_output_format_wildcard_json_lines_newline_delimited_json",
                "destinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage": "destination_aws_datalake_output_format_wildcard_parquet_columnar_storage",
                "destinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson": "destination_aws_datalake_update_output_format_wildcard_json_lines_newline_delimited_json",
                "destinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage": "destination_aws_datalake_update_output_format_wildcard_parquet_columnar_storage"
            },
            "airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage:getDestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationAzureBlobStorage:getDestinationAzureBlobStorage": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationAzureBlobStorageConfiguration:getDestinationAzureBlobStorageConfiguration": {
                "azureBlobStorageAccountKey": "azure_blob_storage_account_key",
                "azureBlobStorageAccountName": "azure_blob_storage_account_name",
                "azureBlobStorageContainerName": "azure_blob_storage_container_name",
                "azureBlobStorageEndpointDomainName": "azure_blob_storage_endpoint_domain_name",
                "azureBlobStorageOutputBufferSize": "azure_blob_storage_output_buffer_size",
                "azureBlobStorageSpillSize": "azure_blob_storage_spill_size",
                "destinationType": "destination_type"
            },
            "airbyte:index/getDestinationAzureBlobStorageConfigurationFormat:getDestinationAzureBlobStorageConfigurationFormat": {
                "destinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues": "destination_azure_blob_storage_output_format_csv_comma_separated_values",
                "destinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson": "destination_azure_blob_storage_output_format_json_lines_newline_delimited_json",
                "destinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues": "destination_azure_blob_storage_update_output_format_csv_comma_separated_values",
                "destinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson": "destination_azure_blob_storage_update_output_format_json_lines_newline_delimited_json"
            },
            "airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationBigquery:getDestinationBigquery": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationBigqueryConfiguration:getDestinationBigqueryConfiguration": {
                "bigQueryClientBufferSizeMb": "big_query_client_buffer_size_mb",
                "credentialsJson": "credentials_json",
                "datasetId": "dataset_id",
                "datasetLocation": "dataset_location",
                "destinationType": "destination_type",
                "loadingMethod": "loading_method",
                "projectId": "project_id",
                "rawDataDataset": "raw_data_dataset",
                "transformationPriority": "transformation_priority",
                "use1s1tFormat": "use_1s1t_format"
            },
            "airbyte:index/getDestinationBigqueryConfigurationLoadingMethod:getDestinationBigqueryConfigurationLoadingMethod": {
                "destinationBigqueryLoadingMethodGcsStaging": "destination_bigquery_loading_method_gcs_staging",
                "destinationBigqueryLoadingMethodStandardInserts": "destination_bigquery_loading_method_standard_inserts",
                "destinationBigqueryUpdateLoadingMethodGcsStaging": "destination_bigquery_update_loading_method_gcs_staging",
                "destinationBigqueryUpdateLoadingMethodStandardInserts": "destination_bigquery_update_loading_method_standard_inserts"
            },
            "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging": {
                "fileBufferCount": "file_buffer_count",
                "gcsBucketName": "gcs_bucket_name",
                "gcsBucketPath": "gcs_bucket_path",
                "keepFilesInGcsBucket": "keep_files_in_gcs_bucket"
            },
            "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential": {
                "destinationBigqueryLoadingMethodGcsStagingCredentialHmacKey": "destination_bigquery_loading_method_gcs_staging_credential_hmac_key"
            },
            "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging": {
                "fileBufferCount": "file_buffer_count",
                "gcsBucketName": "gcs_bucket_name",
                "gcsBucketPath": "gcs_bucket_path",
                "keepFilesInGcsBucket": "keep_files_in_gcs_bucket"
            },
            "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential": {
                "destinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey": "destination_bigquery_update_loading_method_gcs_staging_credential_hmac_key"
            },
            "airbyte:index/getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/getDestinationBigqueryDenormalized:getDestinationBigqueryDenormalized": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationBigqueryDenormalizedConfiguration:getDestinationBigqueryDenormalizedConfiguration": {
                "bigQueryClientBufferSizeMb": "big_query_client_buffer_size_mb",
                "credentialsJson": "credentials_json",
                "datasetId": "dataset_id",
                "datasetLocation": "dataset_location",
                "destinationType": "destination_type",
                "loadingMethod": "loading_method",
                "projectId": "project_id"
            },
            "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethod:getDestinationBigqueryDenormalizedConfigurationLoadingMethod": {
                "destinationBigqueryDenormalizedLoadingMethodGcsStaging": "destination_bigquery_denormalized_loading_method_gcs_staging",
                "destinationBigqueryDenormalizedLoadingMethodStandardInserts": "destination_bigquery_denormalized_loading_method_standard_inserts",
                "destinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging": "destination_bigquery_denormalized_update_loading_method_gcs_staging",
                "destinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts": "destination_bigquery_denormalized_update_loading_method_standard_inserts"
            },
            "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging": {
                "fileBufferCount": "file_buffer_count",
                "gcsBucketName": "gcs_bucket_name",
                "gcsBucketPath": "gcs_bucket_path",
                "keepFilesInGcsBucket": "keep_files_in_gcs_bucket"
            },
            "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential": {
                "destinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey": "destination_bigquery_denormalized_loading_method_gcs_staging_credential_hmac_key"
            },
            "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging": {
                "fileBufferCount": "file_buffer_count",
                "gcsBucketName": "gcs_bucket_name",
                "gcsBucketPath": "gcs_bucket_path",
                "keepFilesInGcsBucket": "keep_files_in_gcs_bucket"
            },
            "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential": {
                "destinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey": "destination_bigquery_denormalized_update_loading_method_gcs_staging_credential_hmac_key"
            },
            "airbyte:index/getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey:getDestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/getDestinationClickhouse:getDestinationClickhouse": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationClickhouseConfiguration:getDestinationClickhouseConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationClickhouseConfigurationTunnelMethod:getDestinationClickhouseConfigurationTunnelMethod": {
                "destinationClickhouseSshTunnelMethodNoTunnel": "destination_clickhouse_ssh_tunnel_method_no_tunnel",
                "destinationClickhouseSshTunnelMethodPasswordAuthentication": "destination_clickhouse_ssh_tunnel_method_password_authentication",
                "destinationClickhouseSshTunnelMethodSshKeyAuthentication": "destination_clickhouse_ssh_tunnel_method_ssh_key_authentication",
                "destinationClickhouseUpdateSshTunnelMethodNoTunnel": "destination_clickhouse_update_ssh_tunnel_method_no_tunnel",
                "destinationClickhouseUpdateSshTunnelMethodPasswordAuthentication": "destination_clickhouse_update_ssh_tunnel_method_password_authentication",
                "destinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication": "destination_clickhouse_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication:getDestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationConvex:getDestinationConvex": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationConvexConfiguration:getDestinationConvexConfiguration": {
                "accessKey": "access_key",
                "deploymentUrl": "deployment_url",
                "destinationType": "destination_type"
            },
            "airbyte:index/getDestinationCumulio:getDestinationCumulio": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationCumulioConfiguration:getDestinationCumulioConfiguration": {
                "apiHost": "api_host",
                "apiKey": "api_key",
                "apiToken": "api_token",
                "destinationType": "destination_type"
            },
            "airbyte:index/getDestinationDatabend:getDestinationDatabend": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationDatabendConfiguration:getDestinationDatabendConfiguration": {
                "destinationType": "destination_type"
            },
            "airbyte:index/getDestinationDatabricks:getDestinationDatabricks": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationDatabricksConfiguration:getDestinationDatabricksConfiguration": {
                "acceptTerms": "accept_terms",
                "dataSource": "data_source",
                "databricksHttpPath": "databricks_http_path",
                "databricksPersonalAccessToken": "databricks_personal_access_token",
                "databricksPort": "databricks_port",
                "databricksServerHostname": "databricks_server_hostname",
                "destinationType": "destination_type",
                "enableSchemaEvolution": "enable_schema_evolution",
                "purgeStagingData": "purge_staging_data"
            },
            "airbyte:index/getDestinationDatabricksConfigurationDataSource:getDestinationDatabricksConfigurationDataSource": {
                "destinationDatabricksDataSourceAmazonS3": "destination_databricks_data_source_amazon_s3",
                "destinationDatabricksDataSourceAzureBlobStorage": "destination_databricks_data_source_azure_blob_storage",
                "destinationDatabricksDataSourceRecommendedManagedTables": "destination_databricks_data_source_recommended_managed_tables",
                "destinationDatabricksUpdateDataSourceAmazonS3": "destination_databricks_update_data_source_amazon_s3",
                "destinationDatabricksUpdateDataSourceAzureBlobStorage": "destination_databricks_update_data_source_azure_blob_storage",
                "destinationDatabricksUpdateDataSourceRecommendedManagedTables": "destination_databricks_update_data_source_recommended_managed_tables"
            },
            "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3": {
                "dataSourceType": "data_source_type",
                "fileNamePattern": "file_name_pattern",
                "s3AccessKeyId": "s3_access_key_id",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "s3SecretAccessKey": "s3_secret_access_key"
            },
            "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage": {
                "azureBlobStorageAccountName": "azure_blob_storage_account_name",
                "azureBlobStorageContainerName": "azure_blob_storage_container_name",
                "azureBlobStorageEndpointDomainName": "azure_blob_storage_endpoint_domain_name",
                "azureBlobStorageSasToken": "azure_blob_storage_sas_token",
                "dataSourceType": "data_source_type"
            },
            "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables": {
                "dataSourceType": "data_source_type"
            },
            "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3": {
                "dataSourceType": "data_source_type",
                "fileNamePattern": "file_name_pattern",
                "s3AccessKeyId": "s3_access_key_id",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "s3SecretAccessKey": "s3_secret_access_key"
            },
            "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage": {
                "azureBlobStorageAccountName": "azure_blob_storage_account_name",
                "azureBlobStorageContainerName": "azure_blob_storage_container_name",
                "azureBlobStorageEndpointDomainName": "azure_blob_storage_endpoint_domain_name",
                "azureBlobStorageSasToken": "azure_blob_storage_sas_token",
                "dataSourceType": "data_source_type"
            },
            "airbyte:index/getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables:getDestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables": {
                "dataSourceType": "data_source_type"
            },
            "airbyte:index/getDestinationDevNull:getDestinationDevNull": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationDevNullConfiguration:getDestinationDevNullConfiguration": {
                "destinationType": "destination_type",
                "testDestination": "test_destination"
            },
            "airbyte:index/getDestinationDevNullConfigurationTestDestination:getDestinationDevNullConfigurationTestDestination": {
                "destinationDevNullTestDestinationSilent": "destination_dev_null_test_destination_silent",
                "destinationDevNullUpdateTestDestinationSilent": "destination_dev_null_update_test_destination_silent"
            },
            "airbyte:index/getDestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent:getDestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent": {
                "testDestinationType": "test_destination_type"
            },
            "airbyte:index/getDestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent:getDestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent": {
                "testDestinationType": "test_destination_type"
            },
            "airbyte:index/getDestinationDynamodb:getDestinationDynamodb": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationDynamodbConfiguration:getDestinationDynamodbConfiguration": {
                "accessKeyId": "access_key_id",
                "destinationType": "destination_type",
                "dynamodbEndpoint": "dynamodb_endpoint",
                "dynamodbRegion": "dynamodb_region",
                "dynamodbTableNamePrefix": "dynamodb_table_name_prefix",
                "secretAccessKey": "secret_access_key"
            },
            "airbyte:index/getDestinationElasticsearch:getDestinationElasticsearch": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationElasticsearchConfiguration:getDestinationElasticsearchConfiguration": {
                "authenticationMethod": "authentication_method",
                "caCertificate": "ca_certificate",
                "destinationType": "destination_type"
            },
            "airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethod:getDestinationElasticsearchConfigurationAuthenticationMethod": {
                "destinationElasticsearchAuthenticationMethodApiKeySecret": "destination_elasticsearch_authentication_method_api_key_secret",
                "destinationElasticsearchAuthenticationMethodUsernamePassword": "destination_elasticsearch_authentication_method_username_password",
                "destinationElasticsearchUpdateAuthenticationMethodApiKeySecret": "destination_elasticsearch_update_authentication_method_api_key_secret",
                "destinationElasticsearchUpdateAuthenticationMethodUsernamePassword": "destination_elasticsearch_update_authentication_method_username_password"
            },
            "airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret:getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret": {
                "apiKeyId": "api_key_id",
                "apiKeySecret": "api_key_secret"
            },
            "airbyte:index/getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret:getDestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret": {
                "apiKeyId": "api_key_id",
                "apiKeySecret": "api_key_secret"
            },
            "airbyte:index/getDestinationFirebolt:getDestinationFirebolt": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationFireboltConfiguration:getDestinationFireboltConfiguration": {
                "destinationType": "destination_type",
                "loadingMethod": "loading_method"
            },
            "airbyte:index/getDestinationFireboltConfigurationLoadingMethod:getDestinationFireboltConfigurationLoadingMethod": {
                "destinationFireboltLoadingMethodExternalTableViaS3": "destination_firebolt_loading_method_external_table_via_s3",
                "destinationFireboltLoadingMethodSqlInserts": "destination_firebolt_loading_method_sql_inserts",
                "destinationFireboltUpdateLoadingMethodExternalTableViaS3": "destination_firebolt_update_loading_method_external_table_via_s3",
                "destinationFireboltUpdateLoadingMethodSqlInserts": "destination_firebolt_update_loading_method_sql_inserts"
            },
            "airbyte:index/getDestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3:getDestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3": {
                "awsKeyId": "aws_key_id",
                "awsKeySecret": "aws_key_secret",
                "s3Bucket": "s3_bucket",
                "s3Region": "s3_region"
            },
            "airbyte:index/getDestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3:getDestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3": {
                "awsKeyId": "aws_key_id",
                "awsKeySecret": "aws_key_secret",
                "s3Bucket": "s3_bucket",
                "s3Region": "s3_region"
            },
            "airbyte:index/getDestinationFirestore:getDestinationFirestore": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationFirestoreConfiguration:getDestinationFirestoreConfiguration": {
                "credentialsJson": "credentials_json",
                "destinationType": "destination_type",
                "projectId": "project_id"
            },
            "airbyte:index/getDestinationGcs:getDestinationGcs": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationGcsConfiguration:getDestinationGcsConfiguration": {
                "destinationType": "destination_type",
                "gcsBucketName": "gcs_bucket_name",
                "gcsBucketPath": "gcs_bucket_path",
                "gcsBucketRegion": "gcs_bucket_region"
            },
            "airbyte:index/getDestinationGcsConfigurationCredential:getDestinationGcsConfigurationCredential": {
                "destinationGcsAuthenticationHmacKey": "destination_gcs_authentication_hmac_key",
                "destinationGcsUpdateAuthenticationHmacKey": "destination_gcs_update_authentication_hmac_key"
            },
            "airbyte:index/getDestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey:getDestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/getDestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey:getDestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey": {
                "credentialType": "credential_type",
                "hmacKeyAccessId": "hmac_key_access_id",
                "hmacKeySecret": "hmac_key_secret"
            },
            "airbyte:index/getDestinationGcsConfigurationFormat:getDestinationGcsConfigurationFormat": {
                "destinationGcsOutputFormatAvroApacheAvro": "destination_gcs_output_format_avro_apache_avro",
                "destinationGcsOutputFormatCsvCommaSeparatedValues": "destination_gcs_output_format_csv_comma_separated_values",
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJson": "destination_gcs_output_format_json_lines_newline_delimited_json",
                "destinationGcsOutputFormatParquetColumnarStorage": "destination_gcs_output_format_parquet_columnar_storage",
                "destinationGcsUpdateOutputFormatAvroApacheAvro": "destination_gcs_update_output_format_avro_apache_avro",
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValues": "destination_gcs_update_output_format_csv_comma_separated_values",
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson": "destination_gcs_update_output_format_json_lines_newline_delimited_json",
                "destinationGcsUpdateOutputFormatParquetColumnarStorage": "destination_gcs_update_output_format_parquet_columnar_storage"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec": {
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2": "destination_gcs_output_format_avro_apache_avro_compression_codec_bzip2",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate": "destination_gcs_output_format_avro_apache_avro_compression_codec_deflate",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression": "destination_gcs_output_format_avro_apache_avro_compression_codec_no_compression",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy": "destination_gcs_output_format_avro_apache_avro_compression_codec_snappy",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecXz": "destination_gcs_output_format_avro_apache_avro_compression_codec_xz",
                "destinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard": "destination_gcs_output_format_avro_apache_avro_compression_codec_zstandard"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                "compressionLevel": "compression_level",
                "includeChecksum": "include_checksum"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression": {
                "destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip": "destination_gcs_output_format_csv_comma_separated_values_compression_gzip",
                "destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": "destination_gcs_output_format_csv_comma_separated_values_compression_no_compression"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_gcs_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_gcs_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage:getDestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage": {
                "blockSizeMb": "block_size_mb",
                "compressionCodec": "compression_codec",
                "dictionaryEncoding": "dictionary_encoding",
                "dictionaryPageSizeKb": "dictionary_page_size_kb",
                "formatType": "format_type",
                "maxPaddingSizeMb": "max_padding_size_mb",
                "pageSizeKb": "page_size_kb"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec": {
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_bzip2",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_deflate",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_no_compression",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_snappy",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_xz",
                "destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": "destination_gcs_update_output_format_avro_apache_avro_compression_codec_zstandard"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                "compressionLevel": "compression_level",
                "includeChecksum": "include_checksum"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression": {
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": "destination_gcs_update_output_format_csv_comma_separated_values_compression_gzip",
                "destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": "destination_gcs_update_output_format_csv_comma_separated_values_compression_no_compression"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_gcs_update_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_gcs_update_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage:getDestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage": {
                "blockSizeMb": "block_size_mb",
                "compressionCodec": "compression_codec",
                "dictionaryEncoding": "dictionary_encoding",
                "dictionaryPageSizeKb": "dictionary_page_size_kb",
                "formatType": "format_type",
                "maxPaddingSizeMb": "max_padding_size_mb",
                "pageSizeKb": "page_size_kb"
            },
            "airbyte:index/getDestinationGoogleSheets:getDestinationGoogleSheets": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationGoogleSheetsConfiguration:getDestinationGoogleSheetsConfiguration": {
                "destinationType": "destination_type",
                "spreadsheetId": "spreadsheet_id"
            },
            "airbyte:index/getDestinationGoogleSheetsConfigurationCredentials:getDestinationGoogleSheetsConfigurationCredentials": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getDestinationKeen:getDestinationKeen": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationKeenConfiguration:getDestinationKeenConfiguration": {
                "apiKey": "api_key",
                "destinationType": "destination_type",
                "inferTimestamp": "infer_timestamp",
                "projectId": "project_id"
            },
            "airbyte:index/getDestinationKinesis:getDestinationKinesis": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationKinesisConfiguration:getDestinationKinesisConfiguration": {
                "accessKey": "access_key",
                "bufferSize": "buffer_size",
                "destinationType": "destination_type",
                "privateKey": "private_key",
                "shardCount": "shard_count"
            },
            "airbyte:index/getDestinationLangchain:getDestinationLangchain": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationLangchainConfiguration:getDestinationLangchainConfiguration": {
                "destinationType": "destination_type"
            },
            "airbyte:index/getDestinationLangchainConfigurationEmbedding:getDestinationLangchainConfigurationEmbedding": {
                "destinationLangchainEmbeddingFake": "destination_langchain_embedding_fake",
                "destinationLangchainEmbeddingOpenAi": "destination_langchain_embedding_open_ai",
                "destinationLangchainUpdateEmbeddingFake": "destination_langchain_update_embedding_fake",
                "destinationLangchainUpdateEmbeddingOpenAi": "destination_langchain_update_embedding_open_ai"
            },
            "airbyte:index/getDestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi:getDestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi": {
                "openaiKey": "openai_key"
            },
            "airbyte:index/getDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi:getDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi": {
                "openaiKey": "openai_key"
            },
            "airbyte:index/getDestinationLangchainConfigurationIndexing:getDestinationLangchainConfigurationIndexing": {
                "destinationLangchainIndexingChromaLocalPersistance": "destination_langchain_indexing_chroma_local_persistance",
                "destinationLangchainIndexingDocArrayHnswSearch": "destination_langchain_indexing_doc_array_hnsw_search",
                "destinationLangchainIndexingPinecone": "destination_langchain_indexing_pinecone",
                "destinationLangchainUpdateIndexingChromaLocalPersistance": "destination_langchain_update_indexing_chroma_local_persistance",
                "destinationLangchainUpdateIndexingDocArrayHnswSearch": "destination_langchain_update_indexing_doc_array_hnsw_search",
                "destinationLangchainUpdateIndexingPinecone": "destination_langchain_update_indexing_pinecone"
            },
            "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance:getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance": {
                "collectionName": "collection_name",
                "destinationPath": "destination_path"
            },
            "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch:getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch": {
                "destinationPath": "destination_path"
            },
            "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone:getDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone": {
                "pineconeEnvironment": "pinecone_environment",
                "pineconeKey": "pinecone_key"
            },
            "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance:getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance": {
                "collectionName": "collection_name",
                "destinationPath": "destination_path"
            },
            "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch:getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch": {
                "destinationPath": "destination_path"
            },
            "airbyte:index/getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone:getDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone": {
                "pineconeEnvironment": "pinecone_environment",
                "pineconeKey": "pinecone_key"
            },
            "airbyte:index/getDestinationLangchainConfigurationProcessing:getDestinationLangchainConfigurationProcessing": {
                "chunkOverlap": "chunk_overlap",
                "chunkSize": "chunk_size",
                "textFields": "text_fields"
            },
            "airbyte:index/getDestinationMSsql:getDestinationMSsql": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationMSsqlConfiguration:getDestinationMSsqlConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "sslMethod": "ssl_method",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationMSsqlConfigurationSslMethod:getDestinationMSsqlConfigurationSslMethod": {
                "destinationMssqlSslMethodEncryptedTrustServerCertificate": "destination_mssql_ssl_method_encrypted_trust_server_certificate",
                "destinationMssqlSslMethodEncryptedVerifyCertificate": "destination_mssql_ssl_method_encrypted_verify_certificate",
                "destinationMssqlUpdateSslMethodEncryptedTrustServerCertificate": "destination_mssql_update_ssl_method_encrypted_trust_server_certificate",
                "destinationMssqlUpdateSslMethodEncryptedVerifyCertificate": "destination_mssql_update_ssl_method_encrypted_verify_certificate"
            },
            "airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate": {
                "sslMethod": "ssl_method"
            },
            "airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate": {
                "hostNameInCertificate": "host_name_in_certificate",
                "sslMethod": "ssl_method"
            },
            "airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
                "sslMethod": "ssl_method"
            },
            "airbyte:index/getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate:getDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate": {
                "hostNameInCertificate": "host_name_in_certificate",
                "sslMethod": "ssl_method"
            },
            "airbyte:index/getDestinationMSsqlConfigurationTunnelMethod:getDestinationMSsqlConfigurationTunnelMethod": {
                "destinationMssqlSshTunnelMethodNoTunnel": "destination_mssql_ssh_tunnel_method_no_tunnel",
                "destinationMssqlSshTunnelMethodPasswordAuthentication": "destination_mssql_ssh_tunnel_method_password_authentication",
                "destinationMssqlSshTunnelMethodSshKeyAuthentication": "destination_mssql_ssh_tunnel_method_ssh_key_authentication",
                "destinationMssqlUpdateSshTunnelMethodNoTunnel": "destination_mssql_update_ssh_tunnel_method_no_tunnel",
                "destinationMssqlUpdateSshTunnelMethodPasswordAuthentication": "destination_mssql_update_ssh_tunnel_method_password_authentication",
                "destinationMssqlUpdateSshTunnelMethodSshKeyAuthentication": "destination_mssql_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication:getDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationMongodb:getDestinationMongodb": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationMongodbConfiguration:getDestinationMongodbConfiguration": {
                "authType": "auth_type",
                "destinationType": "destination_type",
                "instanceType": "instance_type",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationMongodbConfigurationAuthType:getDestinationMongodbConfigurationAuthType": {
                "destinationMongodbAuthorizationTypeLoginPassword": "destination_mongodb_authorization_type_login_password",
                "destinationMongodbAuthorizationTypeNone": "destination_mongodb_authorization_type_none",
                "destinationMongodbUpdateAuthorizationTypeLoginPassword": "destination_mongodb_update_authorization_type_login_password",
                "destinationMongodbUpdateAuthorizationTypeNone": "destination_mongodb_update_authorization_type_none"
            },
            "airbyte:index/getDestinationMongodbConfigurationInstanceType:getDestinationMongodbConfigurationInstanceType": {
                "destinationMongodbMongoDbInstanceTypeMongoDbAtlas": "destination_mongodb_mongo_db_instance_type_mongo_db_atlas",
                "destinationMongodbMongoDbInstanceTypeReplicaSet": "destination_mongodb_mongo_db_instance_type_replica_set",
                "destinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": "destination_mongodb_mongo_db_instance_type_standalone_mongo_db_instance",
                "destinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": "destination_mongodb_update_mongo_db_instance_type_mongo_db_atlas",
                "destinationMongodbUpdateMongoDbInstanceTypeReplicaSet": "destination_mongodb_update_mongo_db_instance_type_replica_set",
                "destinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": "destination_mongodb_update_mongo_db_instance_type_standalone_mongo_db_instance"
            },
            "airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas": {
                "clusterUrl": "cluster_url"
            },
            "airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet": {
                "replicaSet": "replica_set",
                "serverAddresses": "server_addresses"
            },
            "airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
                "clusterUrl": "cluster_url"
            },
            "airbyte:index/getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet:getDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet": {
                "replicaSet": "replica_set",
                "serverAddresses": "server_addresses"
            },
            "airbyte:index/getDestinationMongodbConfigurationTunnelMethod:getDestinationMongodbConfigurationTunnelMethod": {
                "destinationMongodbSshTunnelMethodNoTunnel": "destination_mongodb_ssh_tunnel_method_no_tunnel",
                "destinationMongodbSshTunnelMethodPasswordAuthentication": "destination_mongodb_ssh_tunnel_method_password_authentication",
                "destinationMongodbSshTunnelMethodSshKeyAuthentication": "destination_mongodb_ssh_tunnel_method_ssh_key_authentication",
                "destinationMongodbUpdateSshTunnelMethodNoTunnel": "destination_mongodb_update_ssh_tunnel_method_no_tunnel",
                "destinationMongodbUpdateSshTunnelMethodPasswordAuthentication": "destination_mongodb_update_ssh_tunnel_method_password_authentication",
                "destinationMongodbUpdateSshTunnelMethodSshKeyAuthentication": "destination_mongodb_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication:getDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationMysql:getDestinationMysql": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationMysqlConfiguration:getDestinationMysqlConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationMysqlConfigurationTunnelMethod:getDestinationMysqlConfigurationTunnelMethod": {
                "destinationMysqlSshTunnelMethodNoTunnel": "destination_mysql_ssh_tunnel_method_no_tunnel",
                "destinationMysqlSshTunnelMethodPasswordAuthentication": "destination_mysql_ssh_tunnel_method_password_authentication",
                "destinationMysqlSshTunnelMethodSshKeyAuthentication": "destination_mysql_ssh_tunnel_method_ssh_key_authentication",
                "destinationMysqlUpdateSshTunnelMethodNoTunnel": "destination_mysql_update_ssh_tunnel_method_no_tunnel",
                "destinationMysqlUpdateSshTunnelMethodPasswordAuthentication": "destination_mysql_update_ssh_tunnel_method_password_authentication",
                "destinationMysqlUpdateSshTunnelMethodSshKeyAuthentication": "destination_mysql_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication:getDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationOracle:getDestinationOracle": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationOracleConfiguration:getDestinationOracleConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationOracleConfigurationTunnelMethod:getDestinationOracleConfigurationTunnelMethod": {
                "destinationOracleSshTunnelMethodNoTunnel": "destination_oracle_ssh_tunnel_method_no_tunnel",
                "destinationOracleSshTunnelMethodPasswordAuthentication": "destination_oracle_ssh_tunnel_method_password_authentication",
                "destinationOracleSshTunnelMethodSshKeyAuthentication": "destination_oracle_ssh_tunnel_method_ssh_key_authentication",
                "destinationOracleUpdateSshTunnelMethodNoTunnel": "destination_oracle_update_ssh_tunnel_method_no_tunnel",
                "destinationOracleUpdateSshTunnelMethodPasswordAuthentication": "destination_oracle_update_ssh_tunnel_method_password_authentication",
                "destinationOracleUpdateSshTunnelMethodSshKeyAuthentication": "destination_oracle_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel:getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel:getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication:getDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationPostgres:getDestinationPostgres": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationPostgresConfiguration:getDestinationPostgresConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "sslMode": "ssl_mode",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationPostgresConfigurationSslMode:getDestinationPostgresConfigurationSslMode": {
                "destinationPostgresSslModesAllow": "destination_postgres_ssl_modes_allow",
                "destinationPostgresSslModesDisable": "destination_postgres_ssl_modes_disable",
                "destinationPostgresSslModesPrefer": "destination_postgres_ssl_modes_prefer",
                "destinationPostgresSslModesRequire": "destination_postgres_ssl_modes_require",
                "destinationPostgresSslModesVerifyCa": "destination_postgres_ssl_modes_verify_ca",
                "destinationPostgresSslModesVerifyFull": "destination_postgres_ssl_modes_verify_full",
                "destinationPostgresUpdateSslModesAllow": "destination_postgres_update_ssl_modes_allow",
                "destinationPostgresUpdateSslModesDisable": "destination_postgres_update_ssl_modes_disable",
                "destinationPostgresUpdateSslModesPrefer": "destination_postgres_update_ssl_modes_prefer",
                "destinationPostgresUpdateSslModesRequire": "destination_postgres_update_ssl_modes_require",
                "destinationPostgresUpdateSslModesVerifyCa": "destination_postgres_update_ssl_modes_verify_ca",
                "destinationPostgresUpdateSslModesVerifyFull": "destination_postgres_update_ssl_modes_verify_full"
            },
            "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa": {
                "caCertificate": "ca_certificate",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull:getDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa": {
                "caCertificate": "ca_certificate",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull:getDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getDestinationPostgresConfigurationTunnelMethod:getDestinationPostgresConfigurationTunnelMethod": {
                "destinationPostgresSshTunnelMethodNoTunnel": "destination_postgres_ssh_tunnel_method_no_tunnel",
                "destinationPostgresSshTunnelMethodPasswordAuthentication": "destination_postgres_ssh_tunnel_method_password_authentication",
                "destinationPostgresSshTunnelMethodSshKeyAuthentication": "destination_postgres_ssh_tunnel_method_ssh_key_authentication",
                "destinationPostgresUpdateSshTunnelMethodNoTunnel": "destination_postgres_update_ssh_tunnel_method_no_tunnel",
                "destinationPostgresUpdateSshTunnelMethodPasswordAuthentication": "destination_postgres_update_ssh_tunnel_method_password_authentication",
                "destinationPostgresUpdateSshTunnelMethodSshKeyAuthentication": "destination_postgres_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication:getDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationPubsub:getDestinationPubsub": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationPubsubConfiguration:getDestinationPubsubConfiguration": {
                "batchingDelayThreshold": "batching_delay_threshold",
                "batchingElementCountThreshold": "batching_element_count_threshold",
                "batchingEnabled": "batching_enabled",
                "batchingRequestBytesThreshold": "batching_request_bytes_threshold",
                "credentialsJson": "credentials_json",
                "destinationType": "destination_type",
                "orderingEnabled": "ordering_enabled",
                "projectId": "project_id",
                "topicId": "topic_id"
            },
            "airbyte:index/getDestinationRedis:getDestinationRedis": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationRedisConfiguration:getDestinationRedisConfiguration": {
                "cacheType": "cache_type",
                "destinationType": "destination_type",
                "sslMode": "ssl_mode",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationRedisConfigurationSslMode:getDestinationRedisConfigurationSslMode": {
                "destinationRedisSslModesDisable": "destination_redis_ssl_modes_disable",
                "destinationRedisSslModesVerifyFull": "destination_redis_ssl_modes_verify_full",
                "destinationRedisUpdateSslModesDisable": "destination_redis_update_ssl_modes_disable",
                "destinationRedisUpdateSslModesVerifyFull": "destination_redis_update_ssl_modes_verify_full"
            },
            "airbyte:index/getDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull:getDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull:getDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getDestinationRedisConfigurationTunnelMethod:getDestinationRedisConfigurationTunnelMethod": {
                "destinationRedisSshTunnelMethodNoTunnel": "destination_redis_ssh_tunnel_method_no_tunnel",
                "destinationRedisSshTunnelMethodPasswordAuthentication": "destination_redis_ssh_tunnel_method_password_authentication",
                "destinationRedisSshTunnelMethodSshKeyAuthentication": "destination_redis_ssh_tunnel_method_ssh_key_authentication",
                "destinationRedisUpdateSshTunnelMethodNoTunnel": "destination_redis_update_ssh_tunnel_method_no_tunnel",
                "destinationRedisUpdateSshTunnelMethodPasswordAuthentication": "destination_redis_update_ssh_tunnel_method_password_authentication",
                "destinationRedisUpdateSshTunnelMethodSshKeyAuthentication": "destination_redis_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel:getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel:getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication:getDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationRedshift:getDestinationRedshift": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationRedshiftConfiguration:getDestinationRedshiftConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "tunnelMethod": "tunnel_method",
                "uploadingMethod": "uploading_method"
            },
            "airbyte:index/getDestinationRedshiftConfigurationTunnelMethod:getDestinationRedshiftConfigurationTunnelMethod": {
                "destinationRedshiftSshTunnelMethodNoTunnel": "destination_redshift_ssh_tunnel_method_no_tunnel",
                "destinationRedshiftSshTunnelMethodPasswordAuthentication": "destination_redshift_ssh_tunnel_method_password_authentication",
                "destinationRedshiftSshTunnelMethodSshKeyAuthentication": "destination_redshift_ssh_tunnel_method_ssh_key_authentication",
                "destinationRedshiftUpdateSshTunnelMethodNoTunnel": "destination_redshift_update_ssh_tunnel_method_no_tunnel",
                "destinationRedshiftUpdateSshTunnelMethodPasswordAuthentication": "destination_redshift_update_ssh_tunnel_method_password_authentication",
                "destinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication": "destination_redshift_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication:getDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationRedshiftConfigurationUploadingMethod:getDestinationRedshiftConfigurationUploadingMethod": {
                "destinationRedshiftUpdateUploadingMethodS3Staging": "destination_redshift_update_uploading_method_s3_staging",
                "destinationRedshiftUpdateUploadingMethodStandard": "destination_redshift_update_uploading_method_standard",
                "destinationRedshiftUploadingMethodS3Staging": "destination_redshift_uploading_method_s3_staging",
                "destinationRedshiftUploadingMethodStandard": "destination_redshift_uploading_method_standard"
            },
            "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging": {
                "accessKeyId": "access_key_id",
                "fileBufferCount": "file_buffer_count",
                "fileNamePattern": "file_name_pattern",
                "purgeStagingData": "purge_staging_data",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "secretAccessKey": "secret_access_key"
            },
            "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption": {
                "destinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": "destination_redshift_update_uploading_method_s3_staging_encryption_aes_cbc_envelope_encryption",
                "destinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption": "destination_redshift_update_uploading_method_s3_staging_encryption_no_encryption"
            },
            "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
                "encryptionType": "encryption_type",
                "keyEncryptingKey": "key_encrypting_key"
            },
            "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption": {
                "encryptionType": "encryption_type"
            },
            "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging": {
                "accessKeyId": "access_key_id",
                "fileBufferCount": "file_buffer_count",
                "fileNamePattern": "file_name_pattern",
                "purgeStagingData": "purge_staging_data",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "secretAccessKey": "secret_access_key"
            },
            "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption": {
                "destinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": "destination_redshift_uploading_method_s3_staging_encryption_aes_cbc_envelope_encryption",
                "destinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption": "destination_redshift_uploading_method_s3_staging_encryption_no_encryption"
            },
            "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption": {
                "encryptionType": "encryption_type",
                "keyEncryptingKey": "key_encrypting_key"
            },
            "airbyte:index/getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption:getDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption": {
                "encryptionType": "encryption_type"
            },
            "airbyte:index/getDestinationS3:getDestinationS3": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationS3Configuration:getDestinationS3Configuration": {
                "accessKeyId": "access_key_id",
                "destinationType": "destination_type",
                "fileNamePattern": "file_name_pattern",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "s3Endpoint": "s3_endpoint",
                "s3PathFormat": "s3_path_format",
                "secretAccessKey": "secret_access_key"
            },
            "airbyte:index/getDestinationS3ConfigurationFormat:getDestinationS3ConfigurationFormat": {
                "destinationS3OutputFormatAvroApacheAvro": "destination_s3_output_format_avro_apache_avro",
                "destinationS3OutputFormatCsvCommaSeparatedValues": "destination_s3_output_format_csv_comma_separated_values",
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJson": "destination_s3_output_format_json_lines_newline_delimited_json",
                "destinationS3OutputFormatParquetColumnarStorage": "destination_s3_output_format_parquet_columnar_storage",
                "destinationS3UpdateOutputFormatAvroApacheAvro": "destination_s3_update_output_format_avro_apache_avro",
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValues": "destination_s3_update_output_format_csv_comma_separated_values",
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson": "destination_s3_update_output_format_json_lines_newline_delimited_json",
                "destinationS3UpdateOutputFormatParquetColumnarStorage": "destination_s3_update_output_format_parquet_columnar_storage"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec": {
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2": "destination_s3_output_format_avro_apache_avro_compression_codec_bzip2",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate": "destination_s3_output_format_avro_apache_avro_compression_codec_deflate",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression": "destination_s3_output_format_avro_apache_avro_compression_codec_no_compression",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy": "destination_s3_output_format_avro_apache_avro_compression_codec_snappy",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecXz": "destination_s3_output_format_avro_apache_avro_compression_codec_xz",
                "destinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard": "destination_s3_output_format_avro_apache_avro_compression_codec_zstandard"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard": {
                "compressionLevel": "compression_level",
                "includeChecksum": "include_checksum"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression": {
                "destinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip": "destination_s3_output_format_csv_comma_separated_values_compression_gzip",
                "destinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression": "destination_s3_output_format_csv_comma_separated_values_compression_no_compression"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_s3_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_s3_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage:getDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage": {
                "blockSizeMb": "block_size_mb",
                "compressionCodec": "compression_codec",
                "dictionaryEncoding": "dictionary_encoding",
                "dictionaryPageSizeKb": "dictionary_page_size_kb",
                "formatType": "format_type",
                "maxPaddingSizeMb": "max_padding_size_mb",
                "pageSizeKb": "page_size_kb"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro": {
                "compressionCodec": "compression_codec",
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec": {
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2": "destination_s3_update_output_format_avro_apache_avro_compression_codec_bzip2",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": "destination_s3_update_output_format_avro_apache_avro_compression_codec_deflate",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression": "destination_s3_update_output_format_avro_apache_avro_compression_codec_no_compression",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy": "destination_s3_update_output_format_avro_apache_avro_compression_codec_snappy",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz": "destination_s3_update_output_format_avro_apache_avro_compression_codec_xz",
                "destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": "destination_s3_update_output_format_avro_apache_avro_compression_codec_zstandard"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz": {
                "compressionLevel": "compression_level"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard": {
                "compressionLevel": "compression_level",
                "includeChecksum": "include_checksum"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression": {
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": "destination_s3_update_output_format_csv_comma_separated_values_compression_gzip",
                "destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": "destination_s3_update_output_format_csv_comma_separated_values_compression_no_compression"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_s3_update_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_s3_update_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage:getDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage": {
                "blockSizeMb": "block_size_mb",
                "compressionCodec": "compression_codec",
                "dictionaryEncoding": "dictionary_encoding",
                "dictionaryPageSizeKb": "dictionary_page_size_kb",
                "formatType": "format_type",
                "maxPaddingSizeMb": "max_padding_size_mb",
                "pageSizeKb": "page_size_kb"
            },
            "airbyte:index/getDestinationS3Glue:getDestinationS3Glue": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationS3GlueConfiguration:getDestinationS3GlueConfiguration": {
                "accessKeyId": "access_key_id",
                "destinationType": "destination_type",
                "fileNamePattern": "file_name_pattern",
                "glueDatabase": "glue_database",
                "glueSerializationLibrary": "glue_serialization_library",
                "s3BucketName": "s3_bucket_name",
                "s3BucketPath": "s3_bucket_path",
                "s3BucketRegion": "s3_bucket_region",
                "s3Endpoint": "s3_endpoint",
                "s3PathFormat": "s3_path_format",
                "secretAccessKey": "secret_access_key"
            },
            "airbyte:index/getDestinationS3GlueConfigurationFormat:getDestinationS3GlueConfigurationFormat": {
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson": "destination_s3_glue_output_format_json_lines_newline_delimited_json",
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson": "destination_s3_glue_update_output_format_json_lines_newline_delimited_json"
            },
            "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_s3_glue_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_s3_glue_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression": {
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": "destination_s3_glue_update_output_format_json_lines_newline_delimited_json_compression_gzip",
                "destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": "destination_s3_glue_update_output_format_json_lines_newline_delimited_json_compression_no_compression"
            },
            "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression:getDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression": {
                "compressionType": "compression_type"
            },
            "airbyte:index/getDestinationSftpJson:getDestinationSftpJson": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationSftpJsonConfiguration:getDestinationSftpJsonConfiguration": {
                "destinationPath": "destination_path",
                "destinationType": "destination_type"
            },
            "airbyte:index/getDestinationSnowflake:getDestinationSnowflake": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationSnowflakeConfiguration:getDestinationSnowflakeConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "rawDataSchema": "raw_data_schema",
                "use1s1tFormat": "use_1s1t_format"
            },
            "airbyte:index/getDestinationSnowflakeConfigurationCredentials:getDestinationSnowflakeConfigurationCredentials": {
                "destinationSnowflakeAuthorizationMethodKeyPairAuthentication": "destination_snowflake_authorization_method_key_pair_authentication",
                "destinationSnowflakeAuthorizationMethodOAuth20": "destination_snowflake_authorization_method_o_auth2_0",
                "destinationSnowflakeAuthorizationMethodUsernameAndPassword": "destination_snowflake_authorization_method_username_and_password",
                "destinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication": "destination_snowflake_update_authorization_method_key_pair_authentication",
                "destinationSnowflakeUpdateAuthorizationMethodOAuth20": "destination_snowflake_update_authorization_method_o_auth2_0",
                "destinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword": "destination_snowflake_update_authorization_method_username_and_password"
            },
            "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication": {
                "authType": "auth_type",
                "privateKey": "private_key",
                "privateKeyPassword": "private_key_password"
            },
            "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword": {
                "authType": "auth_type"
            },
            "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication": {
                "authType": "auth_type",
                "privateKey": "private_key",
                "privateKeyPassword": "private_key_password"
            },
            "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword:getDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
                "authType": "auth_type"
            },
            "airbyte:index/getDestinationTimeplus:getDestinationTimeplus": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationTimeplusConfiguration:getDestinationTimeplusConfiguration": {
                "destinationType": "destination_type"
            },
            "airbyte:index/getDestinationTypesense:getDestinationTypesense": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationTypesenseConfiguration:getDestinationTypesenseConfiguration": {
                "apiKey": "api_key",
                "batchSize": "batch_size",
                "destinationType": "destination_type"
            },
            "airbyte:index/getDestinationVertica:getDestinationVertica": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationVerticaConfiguration:getDestinationVerticaConfiguration": {
                "destinationType": "destination_type",
                "jdbcUrlParams": "jdbc_url_params",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationVerticaConfigurationTunnelMethod:getDestinationVerticaConfigurationTunnelMethod": {
                "destinationVerticaSshTunnelMethodNoTunnel": "destination_vertica_ssh_tunnel_method_no_tunnel",
                "destinationVerticaSshTunnelMethodPasswordAuthentication": "destination_vertica_ssh_tunnel_method_password_authentication",
                "destinationVerticaSshTunnelMethodSshKeyAuthentication": "destination_vertica_ssh_tunnel_method_ssh_key_authentication",
                "destinationVerticaUpdateSshTunnelMethodNoTunnel": "destination_vertica_update_ssh_tunnel_method_no_tunnel",
                "destinationVerticaUpdateSshTunnelMethodPasswordAuthentication": "destination_vertica_update_ssh_tunnel_method_password_authentication",
                "destinationVerticaUpdateSshTunnelMethodSshKeyAuthentication": "destination_vertica_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication:getDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getDestinationXata:getDestinationXata": {
                "destinationId": "destination_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getDestinationXataConfiguration:getDestinationXataConfiguration": {
                "apiKey": "api_key",
                "dbUrl": "db_url",
                "destinationType": "destination_type"
            },
            "airbyte:index/getSourceAha:getSourceAha": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAhaConfiguration:getSourceAhaConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceAircall:getSourceAircall": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAircallConfiguration:getSourceAircallConfiguration": {
                "apiId": "api_id",
                "apiToken": "api_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceAirtable:getSourceAirtable": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAirtableConfiguration:getSourceAirtableConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceAirtableConfigurationCredentials:getSourceAirtableConfigurationCredentials": {
                "sourceAirtableAuthenticationOAuth20": "source_airtable_authentication_o_auth2_0",
                "sourceAirtableAuthenticationPersonalAccessToken": "source_airtable_authentication_personal_access_token",
                "sourceAirtableUpdateAuthenticationOAuth20": "source_airtable_update_authentication_o_auth2_0",
                "sourceAirtableUpdateAuthenticationPersonalAccessToken": "source_airtable_update_authentication_personal_access_token"
            },
            "airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20:getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20": {
                "accessToken": "access_token",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken:getSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken": {
                "apiKey": "api_key",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20:getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20": {
                "accessToken": "access_token",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken:getSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken": {
                "apiKey": "api_key",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourceAlloydb:getSourceAlloydb": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAlloydbConfiguration:getSourceAlloydbConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "replicationMethod": "replication_method",
                "sourceType": "source_type",
                "sslMode": "ssl_mode",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceAlloydbConfigurationReplicationMethod:getSourceAlloydbConfigurationReplicationMethod": {
                "sourceAlloydbReplicationMethodLogicalReplicationCdc": "source_alloydb_replication_method_logical_replication_cdc",
                "sourceAlloydbReplicationMethodStandard": "source_alloydb_replication_method_standard",
                "sourceAlloydbReplicationMethodStandardXmin": "source_alloydb_replication_method_standard_xmin",
                "sourceAlloydbUpdateReplicationMethodLogicalReplicationCdc": "source_alloydb_update_replication_method_logical_replication_cdc",
                "sourceAlloydbUpdateReplicationMethodStandard": "source_alloydb_update_replication_method_standard",
                "sourceAlloydbUpdateReplicationMethodStandardXmin": "source_alloydb_update_replication_method_standard_xmin"
            },
            "airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc": {
                "additionalProperties": "additional_properties",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "lsnCommitBehaviour": "lsn_commit_behaviour",
                "queueSize": "queue_size",
                "replicationSlot": "replication_slot"
            },
            "airbyte:index/getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc:getSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc": {
                "additionalProperties": "additional_properties",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "lsnCommitBehaviour": "lsn_commit_behaviour",
                "queueSize": "queue_size",
                "replicationSlot": "replication_slot"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslMode:getSourceAlloydbConfigurationSslMode": {
                "sourceAlloydbSslModesAllow": "source_alloydb_ssl_modes_allow",
                "sourceAlloydbSslModesDisable": "source_alloydb_ssl_modes_disable",
                "sourceAlloydbSslModesPrefer": "source_alloydb_ssl_modes_prefer",
                "sourceAlloydbSslModesRequire": "source_alloydb_ssl_modes_require",
                "sourceAlloydbSslModesVerifyCa": "source_alloydb_ssl_modes_verify_ca",
                "sourceAlloydbSslModesVerifyFull": "source_alloydb_ssl_modes_verify_full",
                "sourceAlloydbUpdateSslModesAllow": "source_alloydb_update_ssl_modes_allow",
                "sourceAlloydbUpdateSslModesDisable": "source_alloydb_update_ssl_modes_disable",
                "sourceAlloydbUpdateSslModesPrefer": "source_alloydb_update_ssl_modes_prefer",
                "sourceAlloydbUpdateSslModesRequire": "source_alloydb_update_ssl_modes_require",
                "sourceAlloydbUpdateSslModesVerifyCa": "source_alloydb_update_ssl_modes_verify_ca",
                "sourceAlloydbUpdateSslModesVerifyFull": "source_alloydb_update_ssl_modes_verify_full"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull:getSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull:getSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourceAlloydbConfigurationTunnelMethod:getSourceAlloydbConfigurationTunnelMethod": {
                "sourceAlloydbSshTunnelMethodNoTunnel": "source_alloydb_ssh_tunnel_method_no_tunnel",
                "sourceAlloydbSshTunnelMethodPasswordAuthentication": "source_alloydb_ssh_tunnel_method_password_authentication",
                "sourceAlloydbSshTunnelMethodSshKeyAuthentication": "source_alloydb_ssh_tunnel_method_ssh_key_authentication",
                "sourceAlloydbUpdateSshTunnelMethodNoTunnel": "source_alloydb_update_ssh_tunnel_method_no_tunnel",
                "sourceAlloydbUpdateSshTunnelMethodPasswordAuthentication": "source_alloydb_update_ssh_tunnel_method_password_authentication",
                "sourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication": "source_alloydb_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication:getSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourceAmazonAds:getSourceAmazonAds": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAmazonAdsConfiguration:getSourceAmazonAdsConfiguration": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "lookBackWindow": "look_back_window",
                "refreshToken": "refresh_token",
                "reportRecordTypes": "report_record_types",
                "sourceType": "source_type",
                "startDate": "start_date",
                "stateFilters": "state_filter"
            },
            "airbyte:index/getSourceAmazonSellerPartner:getSourceAmazonSellerPartner": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAmazonSellerPartnerConfiguration:getSourceAmazonSellerPartnerConfiguration": {
                "advancedStreamOptions": "advanced_stream_options",
                "authType": "auth_type",
                "awsAccessKey": "aws_access_key",
                "awsEnvironment": "aws_environment",
                "awsSecretKey": "aws_secret_key",
                "lwaAppId": "lwa_app_id",
                "lwaClientSecret": "lwa_client_secret",
                "maxWaitSeconds": "max_wait_seconds",
                "periodInDays": "period_in_days",
                "refreshToken": "refresh_token",
                "replicationEndDate": "replication_end_date",
                "replicationStartDate": "replication_start_date",
                "reportOptions": "report_options",
                "roleArn": "role_arn",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceAmazonSqs:getSourceAmazonSqs": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAmazonSqsConfiguration:getSourceAmazonSqsConfiguration": {
                "accessKey": "access_key",
                "attributesToReturn": "attributes_to_return",
                "deleteMessages": "delete_messages",
                "maxBatchSize": "max_batch_size",
                "maxWaitTime": "max_wait_time",
                "queueUrl": "queue_url",
                "secretKey": "secret_key",
                "sourceType": "source_type",
                "visibilityTimeout": "visibility_timeout"
            },
            "airbyte:index/getSourceAmplitude:getSourceAmplitude": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAmplitudeConfiguration:getSourceAmplitudeConfiguration": {
                "apiKey": "api_key",
                "dataRegion": "data_region",
                "requestTimeRange": "request_time_range",
                "secretKey": "secret_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceApifyDataset:getSourceApifyDataset": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceApifyDatasetConfiguration:getSourceApifyDatasetConfiguration": {
                "datasetId": "dataset_id",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceAppfollow:getSourceAppfollow": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAppfollowConfiguration:getSourceAppfollowConfiguration": {
                "apiSecret": "api_secret",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceAsana:getSourceAsana": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAsanaConfiguration:getSourceAsanaConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceAsanaConfigurationCredentials:getSourceAsanaConfigurationCredentials": {
                "sourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth": "source_asana_authentication_mechanism_authenticate_via_asana_oauth",
                "sourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken": "source_asana_authentication_mechanism_authenticate_with_personal_access_token",
                "sourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth": "source_asana_update_authentication_mechanism_authenticate_via_asana_oauth",
                "sourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": "source_asana_update_authentication_mechanism_authenticate_with_personal_access_token"
            },
            "airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth:getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                "optionTitle": "option_title",
                "personalAccessToken": "personal_access_token"
            },
            "airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth:getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                "optionTitle": "option_title",
                "personalAccessToken": "personal_access_token"
            },
            "airbyte:index/getSourceAuth0:getSourceAuth0": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAuth0Configuration:getSourceAuth0Configuration": {
                "baseUrl": "base_url",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceAuth0ConfigurationCredentials:getSourceAuth0ConfigurationCredentials": {
                "sourceAuth0AuthenticationMethodOAuth2AccessToken": "source_auth0_authentication_method_o_auth2_access_token",
                "sourceAuth0AuthenticationMethodOAuth2ConfidentialApplication": "source_auth0_authentication_method_o_auth2_confidential_application",
                "sourceAuth0UpdateAuthenticationMethodOAuth2AccessToken": "source_auth0_update_authentication_method_o_auth2_access_token",
                "sourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication": "source_auth0_update_authentication_method_o_auth2_confidential_application"
            },
            "airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken:getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication:getSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken:getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication:getSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceAwsCloudtrail:getSourceAwsCloudtrail": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAwsCloudtrailConfiguration:getSourceAwsCloudtrailConfiguration": {
                "awsKeyId": "aws_key_id",
                "awsRegionName": "aws_region_name",
                "awsSecretKey": "aws_secret_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceAzureBlobStorage:getSourceAzureBlobStorage": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAzureBlobStorageConfiguration:getSourceAzureBlobStorageConfiguration": {
                "azureBlobStorageAccountKey": "azure_blob_storage_account_key",
                "azureBlobStorageAccountName": "azure_blob_storage_account_name",
                "azureBlobStorageBlobsPrefix": "azure_blob_storage_blobs_prefix",
                "azureBlobStorageContainerName": "azure_blob_storage_container_name",
                "azureBlobStorageEndpoint": "azure_blob_storage_endpoint",
                "azureBlobStorageSchemaInferenceLimit": "azure_blob_storage_schema_inference_limit",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceAzureBlobStorageConfigurationFormat:getSourceAzureBlobStorageConfigurationFormat": {
                "sourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson": "source_azure_blob_storage_input_format_json_lines_newline_delimited_json",
                "sourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson": "source_azure_blob_storage_update_input_format_json_lines_newline_delimited_json"
            },
            "airbyte:index/getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson:getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson:getSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson": {
                "formatType": "format_type"
            },
            "airbyte:index/getSourceAzureTable:getSourceAzureTable": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceAzureTableConfiguration:getSourceAzureTableConfiguration": {
                "sourceType": "source_type",
                "storageAccessKey": "storage_access_key",
                "storageAccountName": "storage_account_name",
                "storageEndpointSuffix": "storage_endpoint_suffix"
            },
            "airbyte:index/getSourceBambooHr:getSourceBambooHr": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceBambooHrConfiguration:getSourceBambooHrConfiguration": {
                "apiKey": "api_key",
                "customReportsFields": "custom_reports_fields",
                "customReportsIncludeDefaultFields": "custom_reports_include_default_fields",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceBigcommerce:getSourceBigcommerce": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceBigcommerceConfiguration:getSourceBigcommerceConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type",
                "startDate": "start_date",
                "storeHash": "store_hash"
            },
            "airbyte:index/getSourceBigquery:getSourceBigquery": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceBigqueryConfiguration:getSourceBigqueryConfiguration": {
                "credentialsJson": "credentials_json",
                "datasetId": "dataset_id",
                "projectId": "project_id",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceBingAds:getSourceBingAds": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceBingAdsConfiguration:getSourceBingAdsConfiguration": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "developerToken": "developer_token",
                "lookbackWindow": "lookback_window",
                "refreshToken": "refresh_token",
                "reportsStartDate": "reports_start_date",
                "sourceType": "source_type",
                "tenantId": "tenant_id"
            },
            "airbyte:index/getSourceBraintree:getSourceBraintree": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceBraintreeConfiguration:getSourceBraintreeConfiguration": {
                "merchantId": "merchant_id",
                "privateKey": "private_key",
                "publicKey": "public_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceBraze:getSourceBraze": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceBrazeConfiguration:getSourceBrazeConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceChargebee:getSourceChargebee": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceChargebeeConfiguration:getSourceChargebeeConfiguration": {
                "productCatalog": "product_catalog",
                "siteApiKey": "site_api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceChartmogul:getSourceChartmogul": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceChartmogulConfiguration:getSourceChartmogulConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceClickhouse:getSourceClickhouse": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceClickhouseConfiguration:getSourceClickhouseConfiguration": {
                "sourceType": "source_type",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceClickhouseConfigurationTunnelMethod:getSourceClickhouseConfigurationTunnelMethod": {
                "sourceClickhouseSshTunnelMethodNoTunnel": "source_clickhouse_ssh_tunnel_method_no_tunnel",
                "sourceClickhouseSshTunnelMethodPasswordAuthentication": "source_clickhouse_ssh_tunnel_method_password_authentication",
                "sourceClickhouseSshTunnelMethodSshKeyAuthentication": "source_clickhouse_ssh_tunnel_method_ssh_key_authentication",
                "sourceClickhouseUpdateSshTunnelMethodNoTunnel": "source_clickhouse_update_ssh_tunnel_method_no_tunnel",
                "sourceClickhouseUpdateSshTunnelMethodPasswordAuthentication": "source_clickhouse_update_ssh_tunnel_method_password_authentication",
                "sourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication": "source_clickhouse_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication:getSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourceClickupApi:getSourceClickupApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceClickupApiConfiguration:getSourceClickupApiConfiguration": {
                "apiToken": "api_token",
                "folderId": "folder_id",
                "includeClosedTasks": "include_closed_tasks",
                "listId": "list_id",
                "sourceType": "source_type",
                "spaceId": "space_id",
                "teamId": "team_id"
            },
            "airbyte:index/getSourceClockify:getSourceClockify": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceClockifyConfiguration:getSourceClockifyConfiguration": {
                "apiKey": "api_key",
                "apiUrl": "api_url",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceCloseCom:getSourceCloseCom": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceCloseComConfiguration:getSourceCloseComConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceCoda:getSourceCoda": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceCodaConfiguration:getSourceCodaConfiguration": {
                "authToken": "auth_token",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceCoinApi:getSourceCoinApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceCoinApiConfiguration:getSourceCoinApiConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date",
                "symbolId": "symbol_id"
            },
            "airbyte:index/getSourceCoinmarketcap:getSourceCoinmarketcap": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceCoinmarketcapConfiguration:getSourceCoinmarketcapConfiguration": {
                "apiKey": "api_key",
                "dataType": "data_type",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceConfigcat:getSourceConfigcat": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceConfigcatConfiguration:getSourceConfigcatConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceConfluence:getSourceConfluence": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceConfluenceConfiguration:getSourceConfluenceConfiguration": {
                "apiToken": "api_token",
                "domainName": "domain_name",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceConvex:getSourceConvex": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceConvexConfiguration:getSourceConvexConfiguration": {
                "accessKey": "access_key",
                "deploymentUrl": "deployment_url",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceDatadog:getSourceDatadog": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceDatadogConfiguration:getSourceDatadogConfiguration": {
                "apiKey": "api_key",
                "applicationKey": "application_key",
                "endDate": "end_date",
                "maxRecordsPerRequest": "max_records_per_request",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceDatadogConfigurationQuery:getSourceDatadogConfigurationQuery": {
                "dataSource": "data_source"
            },
            "airbyte:index/getSourceDatascope:getSourceDatascope": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceDatascopeConfiguration:getSourceDatascopeConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceDelighted:getSourceDelighted": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceDelightedConfiguration:getSourceDelightedConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceDixa:getSourceDixa": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceDixaConfiguration:getSourceDixaConfiguration": {
                "apiToken": "api_token",
                "batchSize": "batch_size",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceDockerhub:getSourceDockerhub": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceDockerhubConfiguration:getSourceDockerhubConfiguration": {
                "dockerUsername": "docker_username",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceDremio:getSourceDremio": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceDremioConfiguration:getSourceDremioConfiguration": {
                "apiKey": "api_key",
                "baseUrl": "base_url",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceDynamodb:getSourceDynamodb": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceDynamodbConfiguration:getSourceDynamodbConfiguration": {
                "accessKeyId": "access_key_id",
                "reservedAttributeNames": "reserved_attribute_names",
                "secretAccessKey": "secret_access_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceE2eTestCloud:getSourceE2eTestCloud": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceE2eTestCloudConfiguration:getSourceE2eTestCloudConfiguration": {
                "maxMessages": "max_messages",
                "messageIntervalMs": "message_interval_ms",
                "mockCatalog": "mock_catalog",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceE2eTestCloudConfigurationMockCatalog:getSourceE2eTestCloudConfigurationMockCatalog": {
                "sourceE2eTestCloudMockCatalogMultiSchema": "source_e2e_test_cloud_mock_catalog_multi_schema",
                "sourceE2eTestCloudMockCatalogSingleSchema": "source_e2e_test_cloud_mock_catalog_single_schema",
                "sourceE2eTestCloudUpdateMockCatalogMultiSchema": "source_e2e_test_cloud_update_mock_catalog_multi_schema",
                "sourceE2eTestCloudUpdateMockCatalogSingleSchema": "source_e2e_test_cloud_update_mock_catalog_single_schema"
            },
            "airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema": {
                "streamSchemas": "stream_schemas"
            },
            "airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema": {
                "streamDuplication": "stream_duplication",
                "streamName": "stream_name",
                "streamSchema": "stream_schema"
            },
            "airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema": {
                "streamSchemas": "stream_schemas"
            },
            "airbyte:index/getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema:getSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema": {
                "streamDuplication": "stream_duplication",
                "streamName": "stream_name",
                "streamSchema": "stream_schema"
            },
            "airbyte:index/getSourceEmailoctopus:getSourceEmailoctopus": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceEmailoctopusConfiguration:getSourceEmailoctopusConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceExchangeRates:getSourceExchangeRates": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceExchangeRatesConfiguration:getSourceExchangeRatesConfiguration": {
                "accessKey": "access_key",
                "ignoreWeekends": "ignore_weekends",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceFacebookMarketing:getSourceFacebookMarketing": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceFacebookMarketingConfiguration:getSourceFacebookMarketingConfiguration": {
                "accessToken": "access_token",
                "accountId": "account_id",
                "actionBreakdownsAllowEmpty": "action_breakdowns_allow_empty",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "customInsights": "custom_insights",
                "endDate": "end_date",
                "fetchThumbnailImages": "fetch_thumbnail_images",
                "includeDeleted": "include_deleted",
                "insightsLookbackWindow": "insights_lookback_window",
                "maxBatchSize": "max_batch_size",
                "pageSize": "page_size",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceFacebookMarketingConfigurationCustomInsight:getSourceFacebookMarketingConfigurationCustomInsight": {
                "actionBreakdowns": "action_breakdowns",
                "actionReportTime": "action_report_time",
                "endDate": "end_date",
                "insightsLookbackWindow": "insights_lookback_window",
                "startDate": "start_date",
                "timeIncrement": "time_increment"
            },
            "airbyte:index/getSourceFacebookPages:getSourceFacebookPages": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceFacebookPagesConfiguration:getSourceFacebookPagesConfiguration": {
                "accessToken": "access_token",
                "pageId": "page_id",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceFaker:getSourceFaker": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceFakerConfiguration:getSourceFakerConfiguration": {
                "alwaysUpdated": "always_updated",
                "recordsPerSlice": "records_per_slice",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceFauna:getSourceFauna": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceFaunaConfiguration:getSourceFaunaConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceFaunaConfigurationCollection:getSourceFaunaConfigurationCollection": {
                "pageSize": "page_size"
            },
            "airbyte:index/getSourceFaunaConfigurationCollectionDeletions:getSourceFaunaConfigurationCollectionDeletions": {
                "sourceFaunaCollectionDeletionModeDisabled": "source_fauna_collection_deletion_mode_disabled",
                "sourceFaunaCollectionDeletionModeEnabled": "source_fauna_collection_deletion_mode_enabled",
                "sourceFaunaUpdateCollectionDeletionModeDisabled": "source_fauna_update_collection_deletion_mode_disabled",
                "sourceFaunaUpdateCollectionDeletionModeEnabled": "source_fauna_update_collection_deletion_mode_enabled"
            },
            "airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled": {
                "deletionMode": "deletion_mode"
            },
            "airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled": {
                "deletionMode": "deletion_mode"
            },
            "airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled": {
                "deletionMode": "deletion_mode"
            },
            "airbyte:index/getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled:getSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled": {
                "deletionMode": "deletion_mode"
            },
            "airbyte:index/getSourceFileSecure:getSourceFileSecure": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceFileSecureConfiguration:getSourceFileSecureConfiguration": {
                "datasetName": "dataset_name",
                "readerOptions": "reader_options",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceFileSecureConfigurationProvider:getSourceFileSecureConfigurationProvider": {
                "sourceFileSecureStorageProviderAzBlobAzureBlobStorage": "source_file_secure_storage_provider_az_blob_azure_blob_storage",
                "sourceFileSecureStorageProviderGcsGoogleCloudStorage": "source_file_secure_storage_provider_gcs_google_cloud_storage",
                "sourceFileSecureStorageProviderHttpsPublicWeb": "source_file_secure_storage_provider_https_public_web",
                "sourceFileSecureStorageProviderS3AmazonWebServices": "source_file_secure_storage_provider_s3_amazon_web_services",
                "sourceFileSecureStorageProviderScpSecureCopyProtocol": "source_file_secure_storage_provider_scp_secure_copy_protocol",
                "sourceFileSecureStorageProviderSftpSecureFileTransferProtocol": "source_file_secure_storage_provider_sftp_secure_file_transfer_protocol",
                "sourceFileSecureStorageProviderSshSecureShell": "source_file_secure_storage_provider_ssh_secure_shell",
                "sourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage": "source_file_secure_update_storage_provider_az_blob_azure_blob_storage",
                "sourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage": "source_file_secure_update_storage_provider_gcs_google_cloud_storage",
                "sourceFileSecureUpdateStorageProviderHttpsPublicWeb": "source_file_secure_update_storage_provider_https_public_web",
                "sourceFileSecureUpdateStorageProviderS3AmazonWebServices": "source_file_secure_update_storage_provider_s3_amazon_web_services",
                "sourceFileSecureUpdateStorageProviderScpSecureCopyProtocol": "source_file_secure_update_storage_provider_scp_secure_copy_protocol",
                "sourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol": "source_file_secure_update_storage_provider_sftp_secure_file_transfer_protocol",
                "sourceFileSecureUpdateStorageProviderSshSecureShell": "source_file_secure_update_storage_provider_ssh_secure_shell"
            },
            "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage": {
                "sasToken": "sas_token",
                "sharedKey": "shared_key",
                "storageAccount": "storage_account"
            },
            "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage": {
                "serviceAccountJson": "service_account_json"
            },
            "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb": {
                "userAgent": "user_agent"
            },
            "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices:getSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key"
            },
            "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage": {
                "sasToken": "sas_token",
                "sharedKey": "shared_key",
                "storageAccount": "storage_account"
            },
            "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage": {
                "serviceAccountJson": "service_account_json"
            },
            "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb": {
                "userAgent": "user_agent"
            },
            "airbyte:index/getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices:getSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key"
            },
            "airbyte:index/getSourceFirebolt:getSourceFirebolt": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceFireboltConfiguration:getSourceFireboltConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceFreshcaller:getSourceFreshcaller": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceFreshcallerConfiguration:getSourceFreshcallerConfiguration": {
                "apiKey": "api_key",
                "requestsPerMinute": "requests_per_minute",
                "sourceType": "source_type",
                "startDate": "start_date",
                "syncLagMinutes": "sync_lag_minutes"
            },
            "airbyte:index/getSourceFreshdesk:getSourceFreshdesk": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceFreshdeskConfiguration:getSourceFreshdeskConfiguration": {
                "apiKey": "api_key",
                "requestsPerMinute": "requests_per_minute",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceFreshsales:getSourceFreshsales": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceFreshsalesConfiguration:getSourceFreshsalesConfiguration": {
                "apiKey": "api_key",
                "domainName": "domain_name",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceGainsightPx:getSourceGainsightPx": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGainsightPxConfiguration:getSourceGainsightPxConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceGcs:getSourceGcs": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGcsConfiguration:getSourceGcsConfiguration": {
                "gcsBucket": "gcs_bucket",
                "gcsPath": "gcs_path",
                "serviceAccount": "service_account",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceGetlago:getSourceGetlago": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGetlagoConfiguration:getSourceGetlagoConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceGithub:getSourceGithub": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGithubConfiguration:getSourceGithubConfiguration": {
                "requestsPerHour": "requests_per_hour",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceGithubConfigurationCredentials:getSourceGithubConfigurationCredentials": {
                "sourceGithubAuthenticationOAuth": "source_github_authentication_o_auth",
                "sourceGithubAuthenticationPersonalAccessToken": "source_github_authentication_personal_access_token",
                "sourceGithubUpdateAuthenticationOAuth": "source_github_update_authentication_o_auth",
                "sourceGithubUpdateAuthenticationPersonalAccessToken": "source_github_update_authentication_personal_access_token"
            },
            "airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth:getSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken:getSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken": {
                "optionTitle": "option_title",
                "personalAccessToken": "personal_access_token"
            },
            "airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth:getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken:getSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken": {
                "optionTitle": "option_title",
                "personalAccessToken": "personal_access_token"
            },
            "airbyte:index/getSourceGitlab:getSourceGitlab": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGitlabConfiguration:getSourceGitlabConfiguration": {
                "apiUrl": "api_url",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceGitlabConfigurationCredentials:getSourceGitlabConfigurationCredentials": {
                "sourceGitlabAuthorizationMethodOAuth20": "source_gitlab_authorization_method_o_auth2_0",
                "sourceGitlabAuthorizationMethodPrivateToken": "source_gitlab_authorization_method_private_token",
                "sourceGitlabUpdateAuthorizationMethodOAuth20": "source_gitlab_update_authorization_method_o_auth2_0",
                "sourceGitlabUpdateAuthorizationMethodPrivateToken": "source_gitlab_update_authorization_method_private_token"
            },
            "airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20:getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken:getSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20:getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken:getSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceGlassfrog:getSourceGlassfrog": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGlassfrogConfiguration:getSourceGlassfrogConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceGnews:getSourceGnews": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGnewsConfiguration:getSourceGnewsConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "ins": "in",
                "nullables": "nullable",
                "sourceType": "source_type",
                "startDate": "start_date",
                "topHeadlinesQuery": "top_headlines_query",
                "topHeadlinesTopic": "top_headlines_topic"
            },
            "airbyte:index/getSourceGoogleAds:getSourceGoogleAds": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGoogleAdsConfiguration:getSourceGoogleAdsConfiguration": {
                "conversionWindowDays": "conversion_window_days",
                "customQueries": "custom_queries",
                "customerId": "customer_id",
                "endDate": "end_date",
                "loginCustomerId": "login_customer_id",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceGoogleAdsConfigurationCredentials:getSourceGoogleAdsConfigurationCredentials": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "developerToken": "developer_token",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceGoogleAdsConfigurationCustomQuery:getSourceGoogleAdsConfigurationCustomQuery": {
                "tableName": "table_name"
            },
            "airbyte:index/getSourceGoogleAnalyticsDataApi:getSourceGoogleAnalyticsDataApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGoogleAnalyticsDataApiConfiguration:getSourceGoogleAnalyticsDataApiConfiguration": {
                "customReports": "custom_reports",
                "dateRangesStartDate": "date_ranges_start_date",
                "propertyId": "property_id",
                "sourceType": "source_type",
                "windowInDays": "window_in_days"
            },
            "airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentials:getSourceGoogleAnalyticsDataApiConfigurationCredentials": {
                "sourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth": "source_google_analytics_data_api_credentials_authenticate_via_google_oauth",
                "sourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication": "source_google_analytics_data_api_credentials_service_account_key_authentication",
                "sourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth": "source_google_analytics_data_api_update_credentials_authenticate_via_google_oauth",
                "sourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication": "source_google_analytics_data_api_update_credentials_service_account_key_authentication"
            },
            "airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "credentialsJson": "credentials_json"
            },
            "airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "credentialsJson": "credentials_json"
            },
            "airbyte:index/getSourceGoogleAnalyticsV4:getSourceGoogleAnalyticsV4": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGoogleAnalyticsV4Configuration:getSourceGoogleAnalyticsV4Configuration": {
                "customReports": "custom_reports",
                "sourceType": "source_type",
                "startDate": "start_date",
                "viewId": "view_id",
                "windowInDays": "window_in_days"
            },
            "airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentials:getSourceGoogleAnalyticsV4ConfigurationCredentials": {
                "sourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth": "source_google_analytics_v4_credentials_authenticate_via_google_oauth",
                "sourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication": "source_google_analytics_v4_credentials_service_account_key_authentication",
                "sourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth": "source_google_analytics_v4_update_credentials_authenticate_via_google_oauth",
                "sourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication": "source_google_analytics_v4_update_credentials_service_account_key_authentication"
            },
            "airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "credentialsJson": "credentials_json"
            },
            "airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication:getSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "credentialsJson": "credentials_json"
            },
            "airbyte:index/getSourceGoogleDirectory:getSourceGoogleDirectory": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGoogleDirectoryConfiguration:getSourceGoogleDirectoryConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceGoogleDirectoryConfigurationCredentials:getSourceGoogleDirectoryConfigurationCredentials": {
                "sourceGoogleDirectoryGoogleCredentialsServiceAccountKey": "source_google_directory_google_credentials_service_account_key",
                "sourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth": "source_google_directory_google_credentials_sign_in_via_google_o_auth",
                "sourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey": "source_google_directory_update_google_credentials_service_account_key",
                "sourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth": "source_google_directory_update_google_credentials_sign_in_via_google_o_auth"
            },
            "airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey": {
                "credentialsJson": "credentials_json",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "credentialsTitle": "credentials_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey": {
                "credentialsJson": "credentials_json",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth:getSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "credentialsTitle": "credentials_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceGooglePagespeedInsights:getSourceGooglePagespeedInsights": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGooglePagespeedInsightsConfiguration:getSourceGooglePagespeedInsightsConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceGoogleSearchConsole:getSourceGoogleSearchConsole": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGoogleSearchConsoleConfiguration:getSourceGoogleSearchConsoleConfiguration": {
                "customReports": "custom_reports",
                "dataState": "data_state",
                "endDate": "end_date",
                "siteUrls": "site_urls",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorization:getSourceGoogleSearchConsoleConfigurationAuthorization": {
                "sourceGoogleSearchConsoleAuthenticationTypeOAuth": "source_google_search_console_authentication_type_o_auth",
                "sourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication": "source_google_search_console_authentication_type_service_account_key_authentication",
                "sourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth": "source_google_search_console_update_authentication_type_o_auth",
                "sourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication": "source_google_search_console_update_authentication_type_service_account_key_authentication"
            },
            "airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "serviceAccountInfo": "service_account_info"
            },
            "airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication:getSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "serviceAccountInfo": "service_account_info"
            },
            "airbyte:index/getSourceGoogleSheets:getSourceGoogleSheets": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGoogleSheetsConfiguration:getSourceGoogleSheetsConfiguration": {
                "namesConversion": "names_conversion",
                "rowBatchSize": "row_batch_size",
                "sourceType": "source_type",
                "spreadsheetId": "spreadsheet_id"
            },
            "airbyte:index/getSourceGoogleSheetsConfigurationCredentials:getSourceGoogleSheetsConfigurationCredentials": {
                "sourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth": "source_google_sheets_authentication_authenticate_via_google_o_auth",
                "sourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication": "source_google_sheets_authentication_service_account_key_authentication",
                "sourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth": "source_google_sheets_update_authentication_authenticate_via_google_o_auth",
                "sourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication": "source_google_sheets_update_authentication_service_account_key_authentication"
            },
            "airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "serviceAccountInfo": "service_account_info"
            },
            "airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication:getSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication": {
                "authType": "auth_type",
                "serviceAccountInfo": "service_account_info"
            },
            "airbyte:index/getSourceGoogleWebfonts:getSourceGoogleWebfonts": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGoogleWebfontsConfiguration:getSourceGoogleWebfontsConfiguration": {
                "apiKey": "api_key",
                "prettyPrint": "pretty_print",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceGoogleWorkspaceAdminReports:getSourceGoogleWorkspaceAdminReports": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGoogleWorkspaceAdminReportsConfiguration:getSourceGoogleWorkspaceAdminReportsConfiguration": {
                "credentialsJson": "credentials_json",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceGreenhouse:getSourceGreenhouse": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGreenhouseConfiguration:getSourceGreenhouseConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceGridly:getSourceGridly": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceGridlyConfiguration:getSourceGridlyConfiguration": {
                "apiKey": "api_key",
                "gridId": "grid_id",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceHarvest:getSourceHarvest": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceHarvestConfiguration:getSourceHarvestConfiguration": {
                "accountId": "account_id",
                "replicationEndDate": "replication_end_date",
                "replicationStartDate": "replication_start_date",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceHarvestConfigurationCredentials:getSourceHarvestConfigurationCredentials": {
                "sourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth": "source_harvest_authentication_mechanism_authenticate_via_harvest_o_auth",
                "sourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken": "source_harvest_authentication_mechanism_authenticate_with_personal_access_token",
                "sourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth": "source_harvest_update_authentication_mechanism_authenticate_via_harvest_o_auth",
                "sourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": "source_harvest_update_authentication_mechanism_authenticate_with_personal_access_token"
            },
            "airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth:getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth": {
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth:getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth": {
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken:getSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceHubplanner:getSourceHubplanner": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceHubplannerConfiguration:getSourceHubplannerConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceHubspot:getSourceHubspot": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceHubspotConfiguration:getSourceHubspotConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceHubspotConfigurationCredentials:getSourceHubspotConfigurationCredentials": {
                "sourceHubspotAuthenticationOAuth": "source_hubspot_authentication_o_auth",
                "sourceHubspotAuthenticationPrivateApp": "source_hubspot_authentication_private_app",
                "sourceHubspotUpdateAuthenticationOAuth": "source_hubspot_update_authentication_o_auth",
                "sourceHubspotUpdateAuthenticationPrivateApp": "source_hubspot_update_authentication_private_app"
            },
            "airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth:getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "credentialsTitle": "credentials_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp:getSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp": {
                "accessToken": "access_token",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth:getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "credentialsTitle": "credentials_title",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp:getSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp": {
                "accessToken": "access_token",
                "credentialsTitle": "credentials_title"
            },
            "airbyte:index/getSourceInsightly:getSourceInsightly": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceInsightlyConfiguration:getSourceInsightlyConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceInstagram:getSourceInstagram": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceInstagramConfiguration:getSourceInstagramConfiguration": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceInstatus:getSourceInstatus": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceInstatusConfiguration:getSourceInstatusConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceIntercom:getSourceIntercom": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceIntercomConfiguration:getSourceIntercomConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceIp2whois:getSourceIp2whois": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceIp2whoisConfiguration:getSourceIp2whoisConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceIterable:getSourceIterable": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceIterableConfiguration:getSourceIterableConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceJira:getSourceJira": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceJiraConfiguration:getSourceJiraConfiguration": {
                "apiToken": "api_token",
                "enableExperimentalStreams": "enable_experimental_streams",
                "expandIssueChangelog": "expand_issue_changelog",
                "renderFields": "render_fields",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceK6Cloud:getSourceK6Cloud": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceK6CloudConfiguration:getSourceK6CloudConfiguration": {
                "apiToken": "api_token",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceKlarna:getSourceKlarna": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceKlarnaConfiguration:getSourceKlarnaConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceKlaviyo:getSourceKlaviyo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceKlaviyoConfiguration:getSourceKlaviyoConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceKustomerSinger:getSourceKustomerSinger": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceKustomerSingerConfiguration:getSourceKustomerSingerConfiguration": {
                "apiToken": "api_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceKyve:getSourceKyve": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceKyveConfiguration:getSourceKyveConfiguration": {
                "maxPages": "max_pages",
                "pageSize": "page_size",
                "poolIds": "pool_ids",
                "sourceType": "source_type",
                "startIds": "start_ids",
                "urlBase": "url_base"
            },
            "airbyte:index/getSourceLaunchdarkly:getSourceLaunchdarkly": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceLaunchdarklyConfiguration:getSourceLaunchdarklyConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceLemlist:getSourceLemlist": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceLemlistConfiguration:getSourceLemlistConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceLeverHiring:getSourceLeverHiring": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceLeverHiringConfiguration:getSourceLeverHiringConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceLeverHiringConfigurationCredentials:getSourceLeverHiringConfigurationCredentials": {
                "sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey": "source_lever_hiring_authentication_mechanism_authenticate_via_lever_api_key",
                "sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth": "source_lever_hiring_authentication_mechanism_authenticate_via_lever_o_auth",
                "sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey": "source_lever_hiring_update_authentication_mechanism_authenticate_via_lever_api_key",
                "sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth": "source_lever_hiring_update_authentication_mechanism_authenticate_via_lever_o_auth"
            },
            "airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth:getSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceLinkedinAds:getSourceLinkedinAds": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceLinkedinAdsConfiguration:getSourceLinkedinAdsConfiguration": {
                "accountIds": "account_ids",
                "adAnalyticsReports": "ad_analytics_reports",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceLinkedinAdsConfigurationAdAnalyticsReport:getSourceLinkedinAdsConfigurationAdAnalyticsReport": {
                "pivotBy": "pivot_by",
                "timeGranularity": "time_granularity"
            },
            "airbyte:index/getSourceLinkedinAdsConfigurationCredentials:getSourceLinkedinAdsConfigurationCredentials": {
                "sourceLinkedinAdsAuthenticationAccessToken": "source_linkedin_ads_authentication_access_token",
                "sourceLinkedinAdsAuthenticationOAuth20": "source_linkedin_ads_authentication_o_auth2_0",
                "sourceLinkedinAdsUpdateAuthenticationAccessToken": "source_linkedin_ads_update_authentication_access_token",
                "sourceLinkedinAdsUpdateAuthenticationOAuth20": "source_linkedin_ads_update_authentication_o_auth2_0"
            },
            "airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20:getSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceLinkedinPages:getSourceLinkedinPages": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceLinkedinPagesConfiguration:getSourceLinkedinPagesConfiguration": {
                "orgId": "org_id",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceLinkedinPagesConfigurationCredentials:getSourceLinkedinPagesConfigurationCredentials": {
                "sourceLinkedinPagesAuthenticationAccessToken": "source_linkedin_pages_authentication_access_token",
                "sourceLinkedinPagesAuthenticationOAuth20": "source_linkedin_pages_authentication_o_auth2_0",
                "sourceLinkedinPagesUpdateAuthenticationAccessToken": "source_linkedin_pages_update_authentication_access_token",
                "sourceLinkedinPagesUpdateAuthenticationOAuth20": "source_linkedin_pages_update_authentication_o_auth2_0"
            },
            "airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20:getSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceLinnworks:getSourceLinnworks": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceLinnworksConfiguration:getSourceLinnworksConfiguration": {
                "applicationId": "application_id",
                "applicationSecret": "application_secret",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceLokalise:getSourceLokalise": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceLokaliseConfiguration:getSourceLokaliseConfiguration": {
                "apiKey": "api_key",
                "projectId": "project_id",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceMailchimp:getSourceMailchimp": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMailchimpConfiguration:getSourceMailchimpConfiguration": {
                "campaignId": "campaign_id",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceMailchimpConfigurationCredentials:getSourceMailchimpConfigurationCredentials": {
                "sourceMailchimpAuthenticationApiKey": "source_mailchimp_authentication_api_key",
                "sourceMailchimpAuthenticationOAuth20": "source_mailchimp_authentication_o_auth2_0",
                "sourceMailchimpUpdateAuthenticationApiKey": "source_mailchimp_update_authentication_api_key",
                "sourceMailchimpUpdateAuthenticationOAuth20": "source_mailchimp_update_authentication_o_auth2_0"
            },
            "airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey:getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey": {
                "authType": "auth_type"
            },
            "airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20:getSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey:getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey": {
                "authType": "auth_type"
            },
            "airbyte:index/getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20:getSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceMailgun:getSourceMailgun": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMailgunConfiguration:getSourceMailgunConfiguration": {
                "domainRegion": "domain_region",
                "privateKey": "private_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceMailjetSms:getSourceMailjetSms": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMailjetSmsConfiguration:getSourceMailjetSmsConfiguration": {
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceMarketo:getSourceMarketo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMarketoConfiguration:getSourceMarketoConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "domainUrl": "domain_url",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceMetabase:getSourceMetabase": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMetabaseConfiguration:getSourceMetabaseConfiguration": {
                "instanceApiUrl": "instance_api_url",
                "sessionToken": "session_token",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceMicrosoftTeams:getSourceMicrosoftTeams": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMicrosoftTeamsConfiguration:getSourceMicrosoftTeamsConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceMicrosoftTeamsConfigurationCredentials:getSourceMicrosoftTeamsConfigurationCredentials": {
                "sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft": "source_microsoft_teams_authentication_mechanism_authenticate_via_microsoft",
                "sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": "source_microsoft_teams_authentication_mechanism_authenticate_via_microsoft_o_auth_2_0",
                "sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft": "source_microsoft_teams_update_authentication_mechanism_authenticate_via_microsoft",
                "sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": "source_microsoft_teams_update_authentication_mechanism_authenticate_via_microsoft_o_auth_2_0"
            },
            "airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tenantId": "tenant_id"
            },
            "airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tenantId": "tenant_id"
            },
            "airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "tenantId": "tenant_id"
            },
            "airbyte:index/getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20:getSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tenantId": "tenant_id"
            },
            "airbyte:index/getSourceMixpanel:getSourceMixpanel": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMixpanelConfiguration:getSourceMixpanelConfiguration": {
                "attributionWindow": "attribution_window",
                "dateWindowSize": "date_window_size",
                "endDate": "end_date",
                "projectId": "project_id",
                "projectTimezone": "project_timezone",
                "selectPropertiesByDefault": "select_properties_by_default",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceMixpanelConfigurationCredentials:getSourceMixpanelConfigurationCredentials": {
                "sourceMixpanelAuthenticationWildcardProjectSecret": "source_mixpanel_authentication_wildcard_project_secret",
                "sourceMixpanelAuthenticationWildcardServiceAccount": "source_mixpanel_authentication_wildcard_service_account",
                "sourceMixpanelUpdateAuthenticationWildcardProjectSecret": "source_mixpanel_update_authentication_wildcard_project_secret",
                "sourceMixpanelUpdateAuthenticationWildcardServiceAccount": "source_mixpanel_update_authentication_wildcard_service_account"
            },
            "airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret:getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret": {
                "apiSecret": "api_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount:getSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount": {
                "optionTitle": "option_title"
            },
            "airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret:getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret": {
                "apiSecret": "api_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount:getSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount": {
                "optionTitle": "option_title"
            },
            "airbyte:index/getSourceMonday:getSourceMonday": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMondayConfiguration:getSourceMondayConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceMondayConfigurationCredentials:getSourceMondayConfigurationCredentials": {
                "sourceMondayAuthorizationMethodApiToken": "source_monday_authorization_method_api_token",
                "sourceMondayAuthorizationMethodOAuth20": "source_monday_authorization_method_o_auth2_0",
                "sourceMondayUpdateAuthorizationMethodApiToken": "source_monday_update_authorization_method_api_token",
                "sourceMondayUpdateAuthorizationMethodOAuth20": "source_monday_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken:getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken": {
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20:getSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken:getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken": {
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20:getSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceMongodb:getSourceMongodb": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMongodbConfiguration:getSourceMongodbConfiguration": {
                "authSource": "auth_source",
                "instanceType": "instance_type",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceMongodbConfigurationInstanceType:getSourceMongodbConfigurationInstanceType": {
                "sourceMongodbMongoDbInstanceTypeMongoDbAtlas": "source_mongodb_mongo_db_instance_type_mongo_db_atlas",
                "sourceMongodbMongoDbInstanceTypeReplicaSet": "source_mongodb_mongo_db_instance_type_replica_set",
                "sourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance": "source_mongodb_mongo_db_instance_type_standalone_mongo_db_instance",
                "sourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": "source_mongodb_update_mongo_db_instance_type_mongo_db_atlas",
                "sourceMongodbUpdateMongoDbInstanceTypeReplicaSet": "source_mongodb_update_mongo_db_instance_type_replica_set",
                "sourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance": "source_mongodb_update_mongo_db_instance_type_standalone_mongo_db_instance"
            },
            "airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas:getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas": {
                "additionalProperties": "additional_properties",
                "clusterUrl": "cluster_url"
            },
            "airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet:getSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet": {
                "replicaSet": "replica_set",
                "serverAddresses": "server_addresses"
            },
            "airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas:getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas": {
                "additionalProperties": "additional_properties",
                "clusterUrl": "cluster_url"
            },
            "airbyte:index/getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet:getSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet": {
                "replicaSet": "replica_set",
                "serverAddresses": "server_addresses"
            },
            "airbyte:index/getSourceMongodbInternalPoc:getSourceMongodbInternalPoc": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMongodbInternalPocConfiguration:getSourceMongodbInternalPocConfiguration": {
                "authSource": "auth_source",
                "connectionString": "connection_string",
                "replicaSet": "replica_set",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceMssql:getSourceMssql": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMssqlConfiguration:getSourceMssqlConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "replicationMethod": "replication_method",
                "sourceType": "source_type",
                "sslMethod": "ssl_method",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceMssqlConfigurationReplicationMethod:getSourceMssqlConfigurationReplicationMethod": {
                "sourceMssqlReplicationMethodLogicalReplicationCdc": "source_mssql_replication_method_logical_replication_cdc",
                "sourceMssqlReplicationMethodStandard": "source_mssql_replication_method_standard",
                "sourceMssqlUpdateReplicationMethodLogicalReplicationCdc": "source_mssql_update_replication_method_logical_replication_cdc",
                "sourceMssqlUpdateReplicationMethodStandard": "source_mssql_update_replication_method_standard"
            },
            "airbyte:index/getSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc:getSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc": {
                "dataToSync": "data_to_sync",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "snapshotIsolation": "snapshot_isolation"
            },
            "airbyte:index/getSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc:getSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc": {
                "dataToSync": "data_to_sync",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "snapshotIsolation": "snapshot_isolation"
            },
            "airbyte:index/getSourceMssqlConfigurationSslMethod:getSourceMssqlConfigurationSslMethod": {
                "sourceMssqlSslMethodEncryptedTrustServerCertificate": "source_mssql_ssl_method_encrypted_trust_server_certificate",
                "sourceMssqlSslMethodEncryptedVerifyCertificate": "source_mssql_ssl_method_encrypted_verify_certificate",
                "sourceMssqlUpdateSslMethodEncryptedTrustServerCertificate": "source_mssql_update_ssl_method_encrypted_trust_server_certificate",
                "sourceMssqlUpdateSslMethodEncryptedVerifyCertificate": "source_mssql_update_ssl_method_encrypted_verify_certificate"
            },
            "airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate": {
                "sslMethod": "ssl_method"
            },
            "airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate": {
                "hostNameInCertificate": "host_name_in_certificate",
                "sslMethod": "ssl_method"
            },
            "airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate": {
                "sslMethod": "ssl_method"
            },
            "airbyte:index/getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate:getSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate": {
                "hostNameInCertificate": "host_name_in_certificate",
                "sslMethod": "ssl_method"
            },
            "airbyte:index/getSourceMssqlConfigurationTunnelMethod:getSourceMssqlConfigurationTunnelMethod": {
                "sourceMssqlSshTunnelMethodNoTunnel": "source_mssql_ssh_tunnel_method_no_tunnel",
                "sourceMssqlSshTunnelMethodPasswordAuthentication": "source_mssql_ssh_tunnel_method_password_authentication",
                "sourceMssqlSshTunnelMethodSshKeyAuthentication": "source_mssql_ssh_tunnel_method_ssh_key_authentication",
                "sourceMssqlUpdateSshTunnelMethodNoTunnel": "source_mssql_update_ssh_tunnel_method_no_tunnel",
                "sourceMssqlUpdateSshTunnelMethodPasswordAuthentication": "source_mssql_update_ssh_tunnel_method_password_authentication",
                "sourceMssqlUpdateSshTunnelMethodSshKeyAuthentication": "source_mssql_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel:getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel:getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication:getSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourceMyHours:getSourceMyHours": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMyHoursConfiguration:getSourceMyHoursConfiguration": {
                "logsBatchSize": "logs_batch_size",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceMysql:getSourceMysql": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceMysqlConfiguration:getSourceMysqlConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "replicationMethod": "replication_method",
                "sourceType": "source_type",
                "sslMode": "ssl_mode",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceMysqlConfigurationReplicationMethod:getSourceMysqlConfigurationReplicationMethod": {
                "sourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc": "source_mysql_update_method_read_changes_using_binary_log_cdc",
                "sourceMysqlUpdateMethodScanChangesWithUserDefinedCursor": "source_mysql_update_method_scan_changes_with_user_defined_cursor",
                "sourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc": "source_mysql_update_update_method_read_changes_using_binary_log_cdc",
                "sourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor": "source_mysql_update_update_method_scan_changes_with_user_defined_cursor"
            },
            "airbyte:index/getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc:getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc": {
                "initialWaitingSeconds": "initial_waiting_seconds",
                "serverTimeZone": "server_time_zone"
            },
            "airbyte:index/getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc:getSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc": {
                "initialWaitingSeconds": "initial_waiting_seconds",
                "serverTimeZone": "server_time_zone"
            },
            "airbyte:index/getSourceMysqlConfigurationSslMode:getSourceMysqlConfigurationSslMode": {
                "sourceMysqlSslModesPreferred": "source_mysql_ssl_modes_preferred",
                "sourceMysqlSslModesRequired": "source_mysql_ssl_modes_required",
                "sourceMysqlSslModesVerifyCa": "source_mysql_ssl_modes_verify_ca",
                "sourceMysqlSslModesVerifyIdentity": "source_mysql_ssl_modes_verify_identity",
                "sourceMysqlUpdateSslModesPreferred": "source_mysql_update_ssl_modes_preferred",
                "sourceMysqlUpdateSslModesRequired": "source_mysql_update_ssl_modes_required",
                "sourceMysqlUpdateSslModesVerifyCa": "source_mysql_update_ssl_modes_verify_ca",
                "sourceMysqlUpdateSslModesVerifyIdentity": "source_mysql_update_ssl_modes_verify_identity"
            },
            "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa:getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity:getSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa:getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity:getSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity": {
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourceMysqlConfigurationTunnelMethod:getSourceMysqlConfigurationTunnelMethod": {
                "sourceMysqlSshTunnelMethodNoTunnel": "source_mysql_ssh_tunnel_method_no_tunnel",
                "sourceMysqlSshTunnelMethodPasswordAuthentication": "source_mysql_ssh_tunnel_method_password_authentication",
                "sourceMysqlSshTunnelMethodSshKeyAuthentication": "source_mysql_ssh_tunnel_method_ssh_key_authentication",
                "sourceMysqlUpdateSshTunnelMethodNoTunnel": "source_mysql_update_ssh_tunnel_method_no_tunnel",
                "sourceMysqlUpdateSshTunnelMethodPasswordAuthentication": "source_mysql_update_ssh_tunnel_method_password_authentication",
                "sourceMysqlUpdateSshTunnelMethodSshKeyAuthentication": "source_mysql_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel:getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel:getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication:getSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourceNetsuite:getSourceNetsuite": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceNetsuiteConfiguration:getSourceNetsuiteConfiguration": {
                "consumerKey": "consumer_key",
                "consumerSecret": "consumer_secret",
                "objectTypes": "object_types",
                "sourceType": "source_type",
                "startDatetime": "start_datetime",
                "tokenKey": "token_key",
                "tokenSecret": "token_secret",
                "windowInDays": "window_in_days"
            },
            "airbyte:index/getSourceNotion:getSourceNotion": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceNotionConfiguration:getSourceNotionConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceNotionConfigurationCredentials:getSourceNotionConfigurationCredentials": {
                "sourceNotionAuthenticateUsingAccessToken": "source_notion_authenticate_using_access_token",
                "sourceNotionAuthenticateUsingOAuth20": "source_notion_authenticate_using_o_auth2_0",
                "sourceNotionUpdateAuthenticateUsingAccessToken": "source_notion_update_authenticate_using_access_token",
                "sourceNotionUpdateAuthenticateUsingOAuth20": "source_notion_update_authenticate_using_o_auth2_0"
            },
            "airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken:getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken": {
                "authType": "auth_type"
            },
            "airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20:getSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken:getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken": {
                "authType": "auth_type"
            },
            "airbyte:index/getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20:getSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceNytimes:getSourceNytimes": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceNytimesConfiguration:getSourceNytimesConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "shareType": "share_type",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceOkta:getSourceOkta": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceOktaConfiguration:getSourceOktaConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceOktaConfigurationCredentials:getSourceOktaConfigurationCredentials": {
                "sourceOktaAuthorizationMethodApiToken": "source_okta_authorization_method_api_token",
                "sourceOktaAuthorizationMethodOAuth20": "source_okta_authorization_method_o_auth2_0",
                "sourceOktaUpdateAuthorizationMethodApiToken": "source_okta_update_authorization_method_api_token",
                "sourceOktaUpdateAuthorizationMethodOAuth20": "source_okta_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken:getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken": {
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20:getSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken:getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken": {
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20:getSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceOmnisend:getSourceOmnisend": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceOmnisendConfiguration:getSourceOmnisendConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceOnesignal:getSourceOnesignal": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceOnesignalConfiguration:getSourceOnesignalConfiguration": {
                "outcomeNames": "outcome_names",
                "sourceType": "source_type",
                "startDate": "start_date",
                "userAuthKey": "user_auth_key"
            },
            "airbyte:index/getSourceOnesignalConfigurationApplication:getSourceOnesignalConfigurationApplication": {
                "appApiKey": "app_api_key",
                "appId": "app_id",
                "appName": "app_name"
            },
            "airbyte:index/getSourceOpenweather:getSourceOpenweather": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceOpenweatherConfiguration:getSourceOpenweatherConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceOracle:getSourceOracle": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceOracleConfiguration:getSourceOracleConfiguration": {
                "connectionData": "connection_data",
                "jdbcUrlParams": "jdbc_url_params",
                "sourceType": "source_type",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceOracleConfigurationConnectionData:getSourceOracleConfigurationConnectionData": {
                "sourceOracleConnectByServiceName": "source_oracle_connect_by_service_name",
                "sourceOracleConnectBySystemIdSid": "source_oracle_connect_by_system_id_sid",
                "sourceOracleUpdateConnectByServiceName": "source_oracle_update_connect_by_service_name",
                "sourceOracleUpdateConnectBySystemIdSid": "source_oracle_update_connect_by_system_id_sid"
            },
            "airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName:getSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName": {
                "connectionType": "connection_type",
                "serviceName": "service_name"
            },
            "airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid:getSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid": {
                "connectionType": "connection_type"
            },
            "airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName:getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName": {
                "connectionType": "connection_type",
                "serviceName": "service_name"
            },
            "airbyte:index/getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid:getSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid": {
                "connectionType": "connection_type"
            },
            "airbyte:index/getSourceOracleConfigurationEncryption:getSourceOracleConfigurationEncryption": {
                "sourceOracleEncryptionNativeNetworkEncryptionNne": "source_oracle_encryption_native_network_encryption_nne",
                "sourceOracleEncryptionTlsEncryptedVerifyCertificate": "source_oracle_encryption_tls_encrypted_verify_certificate",
                "sourceOracleUpdateEncryptionNativeNetworkEncryptionNne": "source_oracle_update_encryption_native_network_encryption_nne",
                "sourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate": "source_oracle_update_encryption_tls_encrypted_verify_certificate"
            },
            "airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne:getSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne": {
                "encryptionAlgorithm": "encryption_algorithm",
                "encryptionMethod": "encryption_method"
            },
            "airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate:getSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate": {
                "encryptionMethod": "encryption_method",
                "sslCertificate": "ssl_certificate"
            },
            "airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne:getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne": {
                "encryptionAlgorithm": "encryption_algorithm",
                "encryptionMethod": "encryption_method"
            },
            "airbyte:index/getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate:getSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate": {
                "encryptionMethod": "encryption_method",
                "sslCertificate": "ssl_certificate"
            },
            "airbyte:index/getSourceOracleConfigurationTunnelMethod:getSourceOracleConfigurationTunnelMethod": {
                "sourceOracleSshTunnelMethodNoTunnel": "source_oracle_ssh_tunnel_method_no_tunnel",
                "sourceOracleSshTunnelMethodPasswordAuthentication": "source_oracle_ssh_tunnel_method_password_authentication",
                "sourceOracleSshTunnelMethodSshKeyAuthentication": "source_oracle_ssh_tunnel_method_ssh_key_authentication",
                "sourceOracleUpdateSshTunnelMethodNoTunnel": "source_oracle_update_ssh_tunnel_method_no_tunnel",
                "sourceOracleUpdateSshTunnelMethodPasswordAuthentication": "source_oracle_update_ssh_tunnel_method_password_authentication",
                "sourceOracleUpdateSshTunnelMethodSshKeyAuthentication": "source_oracle_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel:getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel:getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication:getSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourceOrb:getSourceOrb": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceOrbConfiguration:getSourceOrbConfiguration": {
                "apiKey": "api_key",
                "lookbackWindowDays": "lookback_window_days",
                "numericEventPropertiesKeys": "numeric_event_properties_keys",
                "planId": "plan_id",
                "sourceType": "source_type",
                "startDate": "start_date",
                "stringEventPropertiesKeys": "string_event_properties_keys",
                "subscriptionUsageGroupingKey": "subscription_usage_grouping_key"
            },
            "airbyte:index/getSourceOrbit:getSourceOrbit": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceOrbitConfiguration:getSourceOrbitConfiguration": {
                "apiToken": "api_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceOutbrainAmplify:getSourceOutbrainAmplify": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceOutbrainAmplifyConfiguration:getSourceOutbrainAmplifyConfiguration": {
                "endDate": "end_date",
                "geoLocationBreakdown": "geo_location_breakdown",
                "reportGranularity": "report_granularity",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceOutbrainAmplifyConfigurationCredentials:getSourceOutbrainAmplifyConfigurationCredentials": {
                "sourceOutbrainAmplifyAuthenticationMethodAccessToken": "source_outbrain_amplify_authentication_method_access_token",
                "sourceOutbrainAmplifyAuthenticationMethodUsernamePassword": "source_outbrain_amplify_authentication_method_username_password",
                "sourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken": "source_outbrain_amplify_update_authentication_method_access_token",
                "sourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword": "source_outbrain_amplify_update_authentication_method_username_password"
            },
            "airbyte:index/getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken:getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken": {
                "accessToken": "access_token"
            },
            "airbyte:index/getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken:getSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken": {
                "accessToken": "access_token"
            },
            "airbyte:index/getSourceOutreach:getSourceOutreach": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceOutreachConfiguration:getSourceOutreachConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "redirectUri": "redirect_uri",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourcePaypalTransaction:getSourcePaypalTransaction": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePaypalTransactionConfiguration:getSourcePaypalTransactionConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "isSandbox": "is_sandbox",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourcePaystack:getSourcePaystack": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePaystackConfiguration:getSourcePaystackConfiguration": {
                "lookbackWindowDays": "lookback_window_days",
                "secretKey": "secret_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourcePendo:getSourcePendo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePendoConfiguration:getSourcePendoConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourcePersistiq:getSourcePersistiq": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePersistiqConfiguration:getSourcePersistiqConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourcePexelsApi:getSourcePexelsApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePexelsApiConfiguration:getSourcePexelsApiConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourcePinterest:getSourcePinterest": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePinterestConfiguration:getSourcePinterestConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date",
                "statuses": "status"
            },
            "airbyte:index/getSourcePinterestConfigurationCredentials:getSourcePinterestConfigurationCredentials": {
                "sourcePinterestAuthorizationMethodAccessToken": "source_pinterest_authorization_method_access_token",
                "sourcePinterestAuthorizationMethodOAuth20": "source_pinterest_authorization_method_o_auth2_0",
                "sourcePinterestUpdateAuthorizationMethodAccessToken": "source_pinterest_update_authorization_method_access_token",
                "sourcePinterestUpdateAuthorizationMethodOAuth20": "source_pinterest_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken:getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20:getSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken:getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken": {
                "accessToken": "access_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20:getSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20": {
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourcePipedrive:getSourcePipedrive": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePipedriveConfiguration:getSourcePipedriveConfiguration": {
                "replicationStartDate": "replication_start_date",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourcePipedriveConfigurationAuthorization:getSourcePipedriveConfigurationAuthorization": {
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourcePocket:getSourcePocket": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePocketConfiguration:getSourcePocketConfiguration": {
                "accessToken": "access_token",
                "consumerKey": "consumer_key",
                "contentType": "content_type",
                "detailType": "detail_type",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourcePokeapi:getSourcePokeapi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePokeapiConfiguration:getSourcePokeapiConfiguration": {
                "pokemonName": "pokemon_name",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourcePolygonStockApi:getSourcePolygonStockApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePolygonStockApiConfiguration:getSourcePolygonStockApiConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date",
                "stocksTicker": "stocks_ticker"
            },
            "airbyte:index/getSourcePostgres:getSourcePostgres": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePostgresConfiguration:getSourcePostgresConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "replicationMethod": "replication_method",
                "sourceType": "source_type",
                "sslMode": "ssl_mode",
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourcePostgresConfigurationReplicationMethod:getSourcePostgresConfigurationReplicationMethod": {
                "sourcePostgresReplicationMethodLogicalReplicationCdc": "source_postgres_replication_method_logical_replication_cdc",
                "sourcePostgresReplicationMethodStandard": "source_postgres_replication_method_standard",
                "sourcePostgresReplicationMethodStandardXmin": "source_postgres_replication_method_standard_xmin",
                "sourcePostgresUpdateReplicationMethodLogicalReplicationCdc": "source_postgres_update_replication_method_logical_replication_cdc",
                "sourcePostgresUpdateReplicationMethodStandard": "source_postgres_update_replication_method_standard",
                "sourcePostgresUpdateReplicationMethodStandardXmin": "source_postgres_update_replication_method_standard_xmin"
            },
            "airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc:getSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc": {
                "additionalProperties": "additional_properties",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "lsnCommitBehaviour": "lsn_commit_behaviour",
                "queueSize": "queue_size",
                "replicationSlot": "replication_slot"
            },
            "airbyte:index/getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc:getSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc": {
                "additionalProperties": "additional_properties",
                "initialWaitingSeconds": "initial_waiting_seconds",
                "lsnCommitBehaviour": "lsn_commit_behaviour",
                "queueSize": "queue_size",
                "replicationSlot": "replication_slot"
            },
            "airbyte:index/getSourcePostgresConfigurationSslMode:getSourcePostgresConfigurationSslMode": {
                "sourcePostgresSslModesAllow": "source_postgres_ssl_modes_allow",
                "sourcePostgresSslModesDisable": "source_postgres_ssl_modes_disable",
                "sourcePostgresSslModesPrefer": "source_postgres_ssl_modes_prefer",
                "sourcePostgresSslModesRequire": "source_postgres_ssl_modes_require",
                "sourcePostgresSslModesVerifyCa": "source_postgres_ssl_modes_verify_ca",
                "sourcePostgresSslModesVerifyFull": "source_postgres_ssl_modes_verify_full",
                "sourcePostgresUpdateSslModesAllow": "source_postgres_update_ssl_modes_allow",
                "sourcePostgresUpdateSslModesDisable": "source_postgres_update_ssl_modes_disable",
                "sourcePostgresUpdateSslModesPrefer": "source_postgres_update_ssl_modes_prefer",
                "sourcePostgresUpdateSslModesRequire": "source_postgres_update_ssl_modes_require",
                "sourcePostgresUpdateSslModesVerifyCa": "source_postgres_update_ssl_modes_verify_ca",
                "sourcePostgresUpdateSslModesVerifyFull": "source_postgres_update_ssl_modes_verify_full"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow:getSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable:getSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer:getSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire:getSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa:getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull:getSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire": {
                "additionalProperties": "additional_properties"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull:getSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull": {
                "additionalProperties": "additional_properties",
                "caCertificate": "ca_certificate",
                "clientCertificate": "client_certificate",
                "clientKey": "client_key",
                "clientKeyPassword": "client_key_password"
            },
            "airbyte:index/getSourcePostgresConfigurationTunnelMethod:getSourcePostgresConfigurationTunnelMethod": {
                "sourcePostgresSshTunnelMethodNoTunnel": "source_postgres_ssh_tunnel_method_no_tunnel",
                "sourcePostgresSshTunnelMethodPasswordAuthentication": "source_postgres_ssh_tunnel_method_password_authentication",
                "sourcePostgresSshTunnelMethodSshKeyAuthentication": "source_postgres_ssh_tunnel_method_ssh_key_authentication",
                "sourcePostgresUpdateSshTunnelMethodNoTunnel": "source_postgres_update_ssh_tunnel_method_no_tunnel",
                "sourcePostgresUpdateSshTunnelMethodPasswordAuthentication": "source_postgres_update_ssh_tunnel_method_password_authentication",
                "sourcePostgresUpdateSshTunnelMethodSshKeyAuthentication": "source_postgres_update_ssh_tunnel_method_ssh_key_authentication"
            },
            "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel:getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel:getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel": {
                "tunnelMethod": "tunnel_method"
            },
            "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication": {
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user",
                "tunnelUserPassword": "tunnel_user_password"
            },
            "airbyte:index/getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication:getSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication": {
                "sshKey": "ssh_key",
                "tunnelHost": "tunnel_host",
                "tunnelMethod": "tunnel_method",
                "tunnelPort": "tunnel_port",
                "tunnelUser": "tunnel_user"
            },
            "airbyte:index/getSourcePosthog:getSourcePosthog": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePosthogConfiguration:getSourcePosthogConfiguration": {
                "apiKey": "api_key",
                "baseUrl": "base_url",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourcePostmarkapp:getSourcePostmarkapp": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePostmarkappConfiguration:getSourcePostmarkappConfiguration": {
                "sourceType": "source_type",
                "xPostmarkAccountToken": "x_postmark_account_token",
                "xPostmarkServerToken": "x_postmark_server_token"
            },
            "airbyte:index/getSourcePrestashop:getSourcePrestashop": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePrestashopConfiguration:getSourcePrestashopConfiguration": {
                "accessKey": "access_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourcePublicApis:getSourcePublicApis": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePublicApisConfiguration:getSourcePublicApisConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourcePunkApi:getSourcePunkApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePunkApiConfiguration:getSourcePunkApiConfiguration": {
                "brewedAfter": "brewed_after",
                "brewedBefore": "brewed_before",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourcePypi:getSourcePypi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourcePypiConfiguration:getSourcePypiConfiguration": {
                "projectName": "project_name",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceQualaroo:getSourceQualaroo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceQualarooConfiguration:getSourceQualarooConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date",
                "surveyIds": "survey_ids"
            },
            "airbyte:index/getSourceQuickbooks:getSourceQuickbooks": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceQuickbooksConfiguration:getSourceQuickbooksConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceQuickbooksConfigurationCredentials:getSourceQuickbooksConfigurationCredentials": {
                "sourceQuickbooksAuthorizationMethodOAuth20": "source_quickbooks_authorization_method_o_auth2_0",
                "sourceQuickbooksUpdateAuthorizationMethodOAuth20": "source_quickbooks_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/getSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20:getSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "realmId": "realm_id",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20:getSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "realmId": "realm_id",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceRailz:getSourceRailz": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceRailzConfiguration:getSourceRailzConfiguration": {
                "clientId": "client_id",
                "secretKey": "secret_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceRecharge:getSourceRecharge": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceRechargeConfiguration:getSourceRechargeConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceRecreation:getSourceRecreation": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceRecreationConfiguration:getSourceRecreationConfiguration": {
                "queryCampsites": "query_campsites",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceRecruitee:getSourceRecruitee": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceRecruiteeConfiguration:getSourceRecruiteeConfiguration": {
                "apiKey": "api_key",
                "companyId": "company_id",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceRecurly:getSourceRecurly": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceRecurlyConfiguration:getSourceRecurlyConfiguration": {
                "apiKey": "api_key",
                "beginTime": "begin_time",
                "endTime": "end_time",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceRedshift:getSourceRedshift": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceRedshiftConfiguration:getSourceRedshiftConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceRetently:getSourceRetently": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceRetentlyConfiguration:getSourceRetentlyConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceRetentlyConfigurationCredentials:getSourceRetentlyConfigurationCredentials": {
                "sourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth": "source_retently_authentication_mechanism_authenticate_via_retently_o_auth",
                "sourceRetentlyAuthenticationMechanismAuthenticateWithApiToken": "source_retently_authentication_mechanism_authenticate_with_api_token",
                "sourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth": "source_retently_update_authentication_mechanism_authenticate_via_retently_o_auth",
                "sourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken": "source_retently_update_authentication_mechanism_authenticate_with_api_token"
            },
            "airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth:getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken:getSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken": {
                "additionalProperties": "additional_properties",
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth:getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth": {
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken:getSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken": {
                "additionalProperties": "additional_properties",
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceRkiCovid:getSourceRkiCovid": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceRkiCovidConfiguration:getSourceRkiCovidConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceRss:getSourceRss": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceRssConfiguration:getSourceRssConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceS3:getSourceS3": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceS3Configuration:getSourceS3Configuration": {
                "pathPattern": "path_pattern",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceS3ConfigurationFormat:getSourceS3ConfigurationFormat": {
                "sourceS3FileFormatAvro": "source_s3_file_format_avro",
                "sourceS3FileFormatCsv": "source_s3_file_format_csv",
                "sourceS3FileFormatJsonl": "source_s3_file_format_jsonl",
                "sourceS3FileFormatParquet": "source_s3_file_format_parquet",
                "sourceS3UpdateFileFormatAvro": "source_s3_update_file_format_avro",
                "sourceS3UpdateFileFormatCsv": "source_s3_update_file_format_csv",
                "sourceS3UpdateFileFormatJsonl": "source_s3_update_file_format_jsonl",
                "sourceS3UpdateFileFormatParquet": "source_s3_update_file_format_parquet"
            },
            "airbyte:index/getSourceS3ConfigurationFormatSourceS3FileFormatCsv:getSourceS3ConfigurationFormatSourceS3FileFormatCsv": {
                "additionalReaderOptions": "additional_reader_options",
                "advancedOptions": "advanced_options",
                "blockSize": "block_size",
                "doubleQuote": "double_quote",
                "escapeChar": "escape_char",
                "inferDatatypes": "infer_datatypes",
                "newlinesInValues": "newlines_in_values",
                "quoteChar": "quote_char"
            },
            "airbyte:index/getSourceS3ConfigurationFormatSourceS3FileFormatJsonl:getSourceS3ConfigurationFormatSourceS3FileFormatJsonl": {
                "blockSize": "block_size",
                "newlinesInValues": "newlines_in_values",
                "unexpectedFieldBehavior": "unexpected_field_behavior"
            },
            "airbyte:index/getSourceS3ConfigurationFormatSourceS3FileFormatParquet:getSourceS3ConfigurationFormatSourceS3FileFormatParquet": {
                "batchSize": "batch_size",
                "bufferSize": "buffer_size"
            },
            "airbyte:index/getSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv:getSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv": {
                "additionalReaderOptions": "additional_reader_options",
                "advancedOptions": "advanced_options",
                "blockSize": "block_size",
                "doubleQuote": "double_quote",
                "escapeChar": "escape_char",
                "inferDatatypes": "infer_datatypes",
                "newlinesInValues": "newlines_in_values",
                "quoteChar": "quote_char"
            },
            "airbyte:index/getSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl:getSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl": {
                "blockSize": "block_size",
                "newlinesInValues": "newlines_in_values",
                "unexpectedFieldBehavior": "unexpected_field_behavior"
            },
            "airbyte:index/getSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet:getSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet": {
                "batchSize": "batch_size",
                "bufferSize": "buffer_size"
            },
            "airbyte:index/getSourceS3ConfigurationProvider:getSourceS3ConfigurationProvider": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key",
                "pathPrefix": "path_prefix",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceSalesforce:getSourceSalesforce": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSalesforceConfiguration:getSourceSalesforceConfiguration": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "forceUseBulkApi": "force_use_bulk_api",
                "isSandbox": "is_sandbox",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDate": "start_date",
                "streamsCriterias": "streams_criteria"
            },
            "airbyte:index/getSourceSalesloft:getSourceSalesloft": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSalesloftConfiguration:getSourceSalesloftConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceSalesloftConfigurationCredentials:getSourceSalesloftConfigurationCredentials": {
                "sourceSalesloftCredentialsAuthenticateViaApiKey": "source_salesloft_credentials_authenticate_via_api_key",
                "sourceSalesloftCredentialsAuthenticateViaOAuth": "source_salesloft_credentials_authenticate_via_o_auth",
                "sourceSalesloftUpdateCredentialsAuthenticateViaApiKey": "source_salesloft_update_credentials_authenticate_via_api_key",
                "sourceSalesloftUpdateCredentialsAuthenticateViaOAuth": "source_salesloft_update_credentials_authenticate_via_o_auth"
            },
            "airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey:getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth:getSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey:getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth:getSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceSapFieldglass:getSourceSapFieldglass": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSapFieldglassConfiguration:getSourceSapFieldglassConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceSecoda:getSourceSecoda": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSecodaConfiguration:getSourceSecodaConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceSendgrid:getSourceSendgrid": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSendgridConfiguration:getSourceSendgridConfiguration": {
                "sourceType": "source_type",
                "startTime": "start_time"
            },
            "airbyte:index/getSourceSendinblue:getSourceSendinblue": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSendinblueConfiguration:getSourceSendinblueConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceSenseforce:getSourceSenseforce": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSenseforceConfiguration:getSourceSenseforceConfiguration": {
                "accessToken": "access_token",
                "backendUrl": "backend_url",
                "datasetId": "dataset_id",
                "sliceRange": "slice_range",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceSentry:getSourceSentry": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSentryConfiguration:getSourceSentryConfiguration": {
                "authToken": "auth_token",
                "discoverFields": "discover_fields",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceSftp:getSourceSftp": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSftpBulk:getSourceSftpBulk": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSftpBulkConfiguration:getSourceSftpBulkConfiguration": {
                "fileMostRecent": "file_most_recent",
                "filePattern": "file_pattern",
                "fileType": "file_type",
                "folderPath": "folder_path",
                "privateKey": "private_key",
                "sourceType": "source_type",
                "startDate": "start_date",
                "streamName": "stream_name"
            },
            "airbyte:index/getSourceSftpConfiguration:getSourceSftpConfiguration": {
                "filePattern": "file_pattern",
                "fileTypes": "file_types",
                "folderPath": "folder_path",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceSftpConfigurationCredentials:getSourceSftpConfigurationCredentials": {
                "sourceSftpAuthenticationWildcardPasswordAuthentication": "source_sftp_authentication_wildcard_password_authentication",
                "sourceSftpAuthenticationWildcardSshKeyAuthentication": "source_sftp_authentication_wildcard_ssh_key_authentication",
                "sourceSftpUpdateAuthenticationWildcardPasswordAuthentication": "source_sftp_update_authentication_wildcard_password_authentication",
                "sourceSftpUpdateAuthenticationWildcardSshKeyAuthentication": "source_sftp_update_authentication_wildcard_ssh_key_authentication"
            },
            "airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication:getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication": {
                "authMethod": "auth_method",
                "authUserPassword": "auth_user_password"
            },
            "airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication:getSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication": {
                "authMethod": "auth_method",
                "authSshKey": "auth_ssh_key"
            },
            "airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication:getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication": {
                "authMethod": "auth_method",
                "authUserPassword": "auth_user_password"
            },
            "airbyte:index/getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication:getSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication": {
                "authMethod": "auth_method",
                "authSshKey": "auth_ssh_key"
            },
            "airbyte:index/getSourceShopify:getSourceShopify": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceShopifyConfiguration:getSourceShopifyConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceShopifyConfigurationCredentials:getSourceShopifyConfigurationCredentials": {
                "sourceShopifyShopifyAuthorizationMethodApiPassword": "source_shopify_shopify_authorization_method_api_password",
                "sourceShopifyShopifyAuthorizationMethodOAuth20": "source_shopify_shopify_authorization_method_o_auth2_0",
                "sourceShopifyUpdateShopifyAuthorizationMethodApiPassword": "source_shopify_update_shopify_authorization_method_api_password",
                "sourceShopifyUpdateShopifyAuthorizationMethodOAuth20": "source_shopify_update_shopify_authorization_method_o_auth2_0"
            },
            "airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword:getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword": {
                "apiPassword": "api_password",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20:getSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword:getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword": {
                "apiPassword": "api_password",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20:getSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceShortio:getSourceShortio": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceShortioConfiguration:getSourceShortioConfiguration": {
                "domainId": "domain_id",
                "secretKey": "secret_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceSlack:getSourceSlack": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSlackConfiguration:getSourceSlackConfiguration": {
                "channelFilters": "channel_filter",
                "joinChannels": "join_channels",
                "lookbackWindow": "lookback_window",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceSlackConfigurationCredentials:getSourceSlackConfigurationCredentials": {
                "sourceSlackAuthenticationMechanismApiToken": "source_slack_authentication_mechanism_api_token",
                "sourceSlackAuthenticationMechanismSignInViaSlackOAuth": "source_slack_authentication_mechanism_sign_in_via_slack_o_auth",
                "sourceSlackUpdateAuthenticationMechanismApiToken": "source_slack_update_authentication_mechanism_api_token",
                "sourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth": "source_slack_update_authentication_mechanism_sign_in_via_slack_o_auth"
            },
            "airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken:getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken": {
                "apiToken": "api_token",
                "optionTitle": "option_title"
            },
            "airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth:getSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken:getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken": {
                "apiToken": "api_token",
                "optionTitle": "option_title"
            },
            "airbyte:index/getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth:getSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "optionTitle": "option_title"
            },
            "airbyte:index/getSourceSmaily:getSourceSmaily": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSmailyConfiguration:getSourceSmailyConfiguration": {
                "apiPassword": "api_password",
                "apiSubdomain": "api_subdomain",
                "apiUsername": "api_username",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceSmartengage:getSourceSmartengage": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSmartengageConfiguration:getSourceSmartengageConfiguration": {
                "apiKey": "api_key",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceSmartsheets:getSourceSmartsheets": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSmartsheetsConfiguration:getSourceSmartsheetsConfiguration": {
                "metadataFields": "metadata_fields",
                "sourceType": "source_type",
                "spreadsheetId": "spreadsheet_id",
                "startDatetime": "start_datetime"
            },
            "airbyte:index/getSourceSmartsheetsConfigurationCredentials:getSourceSmartsheetsConfigurationCredentials": {
                "sourceSmartsheetsAuthorizationMethodApiAccessToken": "source_smartsheets_authorization_method_api_access_token",
                "sourceSmartsheetsAuthorizationMethodOAuth20": "source_smartsheets_authorization_method_o_auth2_0",
                "sourceSmartsheetsUpdateAuthorizationMethodApiAccessToken": "source_smartsheets_update_authorization_method_api_access_token",
                "sourceSmartsheetsUpdateAuthorizationMethodOAuth20": "source_smartsheets_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20:getSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceSnapchatMarketing:getSourceSnapchatMarketing": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSnapchatMarketingConfiguration:getSourceSnapchatMarketingConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "endDate": "end_date",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceSnowflake:getSourceSnowflake": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSnowflakeConfiguration:getSourceSnowflakeConfiguration": {
                "jdbcUrlParams": "jdbc_url_params",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceSnowflakeConfigurationCredentials:getSourceSnowflakeConfigurationCredentials": {
                "sourceSnowflakeAuthorizationMethodOAuth20": "source_snowflake_authorization_method_o_auth2_0",
                "sourceSnowflakeAuthorizationMethodUsernameAndPassword": "source_snowflake_authorization_method_username_and_password",
                "sourceSnowflakeUpdateAuthorizationMethodOAuth20": "source_snowflake_update_authorization_method_o_auth2_0",
                "sourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword": "source_snowflake_update_authorization_method_username_and_password"
            },
            "airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword": {
                "authType": "auth_type"
            },
            "airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword:getSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword": {
                "authType": "auth_type"
            },
            "airbyte:index/getSourceSonarCloud:getSourceSonarCloud": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSonarCloudConfiguration:getSourceSonarCloudConfiguration": {
                "componentKeys": "component_keys",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date",
                "userToken": "user_token"
            },
            "airbyte:index/getSourceSpaceXApi:getSourceSpaceXApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSpaceXApiConfiguration:getSourceSpaceXApiConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceSquare:getSourceSquare": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSquareConfiguration:getSourceSquareConfiguration": {
                "includeDeletedObjects": "include_deleted_objects",
                "isSandbox": "is_sandbox",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceSquareConfigurationCredentials:getSourceSquareConfigurationCredentials": {
                "sourceSquareAuthenticationApiKey": "source_square_authentication_api_key",
                "sourceSquareAuthenticationOauthAuthentication": "source_square_authentication_oauth_authentication",
                "sourceSquareUpdateAuthenticationApiKey": "source_square_update_authentication_api_key",
                "sourceSquareUpdateAuthenticationOauthAuthentication": "source_square_update_authentication_oauth_authentication"
            },
            "airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey:getSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication:getSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey:getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey": {
                "apiKey": "api_key",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication:getSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication": {
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceStrava:getSourceStrava": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceStravaConfiguration:getSourceStravaConfiguration": {
                "athleteId": "athlete_id",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceStripe:getSourceStripe": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceStripeConfiguration:getSourceStripeConfiguration": {
                "accountId": "account_id",
                "clientSecret": "client_secret",
                "lookbackWindowDays": "lookback_window_days",
                "sliceRange": "slice_range",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceSurveySparrow:getSourceSurveySparrow": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSurveySparrowConfiguration:getSourceSurveySparrowConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type",
                "surveyIds": "survey_id"
            },
            "airbyte:index/getSourceSurveySparrowConfigurationRegion:getSourceSurveySparrowConfigurationRegion": {
                "sourceSurveySparrowBaseUrlEuBasedAccount": "source_survey_sparrow_base_url_eu_based_account",
                "sourceSurveySparrowBaseUrlGlobalAccount": "source_survey_sparrow_base_url_global_account",
                "sourceSurveySparrowUpdateBaseUrlEuBasedAccount": "source_survey_sparrow_update_base_url_eu_based_account",
                "sourceSurveySparrowUpdateBaseUrlGlobalAccount": "source_survey_sparrow_update_base_url_global_account"
            },
            "airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount": {
                "urlBase": "url_base"
            },
            "airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount": {
                "urlBase": "url_base"
            },
            "airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount": {
                "urlBase": "url_base"
            },
            "airbyte:index/getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount:getSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount": {
                "urlBase": "url_base"
            },
            "airbyte:index/getSourceSurveymonkey:getSourceSurveymonkey": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceSurveymonkeyConfiguration:getSourceSurveymonkeyConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date",
                "surveyIds": "survey_ids"
            },
            "airbyte:index/getSourceSurveymonkeyConfigurationCredentials:getSourceSurveymonkeyConfigurationCredentials": {
                "accessToken": "access_token",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceTempo:getSourceTempo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceTempoConfiguration:getSourceTempoConfiguration": {
                "apiToken": "api_token",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceTheGuardianApi:getSourceTheGuardianApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceTheGuardianApiConfiguration:getSourceTheGuardianApiConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceTiktokMarketing:getSourceTiktokMarketing": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceTiktokMarketingConfiguration:getSourceTiktokMarketingConfiguration": {
                "attributionWindow": "attribution_window",
                "endDate": "end_date",
                "includeDeleted": "include_deleted",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceTiktokMarketingConfigurationCredentials:getSourceTiktokMarketingConfigurationCredentials": {
                "sourceTiktokMarketingAuthenticationMethodOAuth20": "source_tiktok_marketing_authentication_method_o_auth2_0",
                "sourceTiktokMarketingAuthenticationMethodSandboxAccessToken": "source_tiktok_marketing_authentication_method_sandbox_access_token",
                "sourceTiktokMarketingUpdateAuthenticationMethodOAuth20": "source_tiktok_marketing_update_authentication_method_o_auth2_0",
                "sourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken": "source_tiktok_marketing_update_authentication_method_sandbox_access_token"
            },
            "airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20": {
                "accessToken": "access_token",
                "advertiserId": "advertiser_id",
                "appId": "app_id",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken": {
                "accessToken": "access_token",
                "advertiserId": "advertiser_id",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20": {
                "accessToken": "access_token",
                "advertiserId": "advertiser_id",
                "appId": "app_id",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken:getSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken": {
                "accessToken": "access_token",
                "advertiserId": "advertiser_id",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceTodoist:getSourceTodoist": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceTodoistConfiguration:getSourceTodoistConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceTrello:getSourceTrello": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceTrelloConfiguration:getSourceTrelloConfiguration": {
                "boardIds": "board_ids",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceTrustpilot:getSourceTrustpilot": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceTrustpilotConfiguration:getSourceTrustpilotConfiguration": {
                "businessUnits": "business_units",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceTrustpilotConfigurationCredentials:getSourceTrustpilotConfigurationCredentials": {
                "sourceTrustpilotAuthorizationMethodApiKey": "source_trustpilot_authorization_method_api_key",
                "sourceTrustpilotAuthorizationMethodOAuth20": "source_trustpilot_authorization_method_o_auth_2_0",
                "sourceTrustpilotUpdateAuthorizationMethodApiKey": "source_trustpilot_update_authorization_method_api_key",
                "sourceTrustpilotUpdateAuthorizationMethodOAuth20": "source_trustpilot_update_authorization_method_o_auth_2_0"
            },
            "airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey": {
                "authType": "auth_type",
                "clientId": "client_id"
            },
            "airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey": {
                "authType": "auth_type",
                "clientId": "client_id"
            },
            "airbyte:index/getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20:getSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceTvmazeSchedule:getSourceTvmazeSchedule": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceTvmazeScheduleConfiguration:getSourceTvmazeScheduleConfiguration": {
                "domesticScheduleCountryCode": "domestic_schedule_country_code",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date",
                "webScheduleCountryCode": "web_schedule_country_code"
            },
            "airbyte:index/getSourceTwilio:getSourceTwilio": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceTwilioConfiguration:getSourceTwilioConfiguration": {
                "accountSid": "account_sid",
                "authToken": "auth_token",
                "lookbackWindow": "lookback_window",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceTwilioTaskrouter:getSourceTwilioTaskrouter": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceTwilioTaskrouterConfiguration:getSourceTwilioTaskrouterConfiguration": {
                "accountSid": "account_sid",
                "authToken": "auth_token",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceTwitter:getSourceTwitter": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceTwitterConfiguration:getSourceTwitterConfiguration": {
                "apiKey": "api_key",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceTypeform:getSourceTypeform": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceTypeformConfiguration:getSourceTypeformConfiguration": {
                "formIds": "form_ids",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceTypeformConfigurationCredentials:getSourceTypeformConfigurationCredentials": {
                "sourceTypeformAuthorizationMethodOAuth20": "source_typeform_authorization_method_o_auth2_0",
                "sourceTypeformAuthorizationMethodPrivateToken": "source_typeform_authorization_method_private_token",
                "sourceTypeformUpdateAuthorizationMethodOAuth20": "source_typeform_update_authorization_method_o_auth2_0",
                "sourceTypeformUpdateAuthorizationMethodPrivateToken": "source_typeform_update_authorization_method_private_token"
            },
            "airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20:getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken:getSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20:getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken:getSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken": {
                "accessToken": "access_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceUsCensus:getSourceUsCensus": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceUsCensusConfiguration:getSourceUsCensusConfiguration": {
                "apiKey": "api_key",
                "queryParams": "query_params",
                "queryPath": "query_path",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceVantage:getSourceVantage": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceVantageConfiguration:getSourceVantageConfiguration": {
                "accessToken": "access_token",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceWebflow:getSourceWebflow": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceWebflowConfiguration:getSourceWebflowConfiguration": {
                "apiKey": "api_key",
                "siteId": "site_id",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceWhiskyHunter:getSourceWhiskyHunter": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceWhiskyHunterConfiguration:getSourceWhiskyHunterConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceWikipediaPageviews:getSourceWikipediaPageviews": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceWikipediaPageviewsConfiguration:getSourceWikipediaPageviewsConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceWoocommerce:getSourceWoocommerce": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceWoocommerceConfiguration:getSourceWoocommerceConfiguration": {
                "apiKey": "api_key",
                "apiSecret": "api_secret",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceXero:getSourceXero": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceXeroConfiguration:getSourceXeroConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date",
                "tenantId": "tenant_id"
            },
            "airbyte:index/getSourceXeroConfigurationAuthentication:getSourceXeroConfigurationAuthentication": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token",
                "tokenExpiryDate": "token_expiry_date"
            },
            "airbyte:index/getSourceXkcd:getSourceXkcd": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceXkcdConfiguration:getSourceXkcdConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceYandexMetrica:getSourceYandexMetrica": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceYandexMetricaConfiguration:getSourceYandexMetricaConfiguration": {
                "authToken": "auth_token",
                "counterId": "counter_id",
                "endDate": "end_date",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceYotpo:getSourceYotpo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceYotpoConfiguration:getSourceYotpoConfiguration": {
                "accessToken": "access_token",
                "appKey": "app_key",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceYounium:getSourceYounium": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceYouniumConfiguration:getSourceYouniumConfiguration": {
                "legalEntity": "legal_entity",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceYoutubeAnalytics:getSourceYoutubeAnalytics": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceYoutubeAnalyticsConfiguration:getSourceYoutubeAnalyticsConfiguration": {
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceYoutubeAnalyticsConfigurationCredentials:getSourceYoutubeAnalyticsConfigurationCredentials": {
                "additionalProperties": "additional_properties",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceZendeskChat:getSourceZendeskChat": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceZendeskChatConfiguration:getSourceZendeskChatConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceZendeskChatConfigurationCredentials:getSourceZendeskChatConfigurationCredentials": {
                "sourceZendeskChatAuthorizationMethodAccessToken": "source_zendesk_chat_authorization_method_access_token",
                "sourceZendeskChatAuthorizationMethodOAuth20": "source_zendesk_chat_authorization_method_o_auth2_0",
                "sourceZendeskChatUpdateAuthorizationMethodAccessToken": "source_zendesk_chat_update_authorization_method_access_token",
                "sourceZendeskChatUpdateAuthorizationMethodOAuth20": "source_zendesk_chat_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken": {
                "accessToken": "access_token"
            },
            "airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken": {
                "accessToken": "access_token"
            },
            "airbyte:index/getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20:getSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "refreshToken": "refresh_token"
            },
            "airbyte:index/getSourceZendeskSunshine:getSourceZendeskSunshine": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceZendeskSunshineConfiguration:getSourceZendeskSunshineConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceZendeskSunshineConfigurationCredentials:getSourceZendeskSunshineConfigurationCredentials": {
                "sourceZendeskSunshineAuthorizationMethodApiToken": "source_zendesk_sunshine_authorization_method_api_token",
                "sourceZendeskSunshineAuthorizationMethodOAuth20": "source_zendesk_sunshine_authorization_method_o_auth2_0",
                "sourceZendeskSunshineUpdateAuthorizationMethodApiToken": "source_zendesk_sunshine_update_authorization_method_api_token",
                "sourceZendeskSunshineUpdateAuthorizationMethodOAuth20": "source_zendesk_sunshine_update_authorization_method_o_auth2_0"
            },
            "airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authMethod": "auth_method"
            },
            "airbyte:index/getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20:getSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "authMethod": "auth_method",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceZendeskSupport:getSourceZendeskSupport": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceZendeskSupportConfiguration:getSourceZendeskSupportConfiguration": {
                "ignorePagination": "ignore_pagination",
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceZendeskSupportConfigurationCredentials:getSourceZendeskSupportConfigurationCredentials": {
                "sourceZendeskSupportAuthenticationApiToken": "source_zendesk_support_authentication_api_token",
                "sourceZendeskSupportAuthenticationOAuth20": "source_zendesk_support_authentication_o_auth2_0",
                "sourceZendeskSupportUpdateAuthenticationApiToken": "source_zendesk_support_update_authentication_api_token",
                "sourceZendeskSupportUpdateAuthenticationOAuth20": "source_zendesk_support_update_authentication_o_auth2_0"
            },
            "airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token"
            },
            "airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token"
            },
            "airbyte:index/getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20:getSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceZendeskTalk:getSourceZendeskTalk": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceZendeskTalkConfiguration:getSourceZendeskTalkConfiguration": {
                "sourceType": "source_type",
                "startDate": "start_date"
            },
            "airbyte:index/getSourceZendeskTalkConfigurationCredentials:getSourceZendeskTalkConfigurationCredentials": {
                "sourceZendeskTalkAuthenticationApiToken": "source_zendesk_talk_authentication_api_token",
                "sourceZendeskTalkAuthenticationOAuth20": "source_zendesk_talk_authentication_o_auth2_0",
                "sourceZendeskTalkUpdateAuthenticationApiToken": "source_zendesk_talk_update_authentication_api_token",
                "sourceZendeskTalkUpdateAuthenticationOAuth20": "source_zendesk_talk_update_authentication_o_auth2_0"
            },
            "airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken": {
                "additionalProperties": "additional_properties",
                "apiToken": "api_token",
                "authType": "auth_type"
            },
            "airbyte:index/getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20:getSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20": {
                "accessToken": "access_token",
                "additionalProperties": "additional_properties",
                "authType": "auth_type",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "airbyte:index/getSourceZenloop:getSourceZenloop": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceZenloopConfiguration:getSourceZenloopConfiguration": {
                "apiToken": "api_token",
                "dateFrom": "date_from",
                "sourceType": "source_type",
                "surveyGroupId": "survey_group_id",
                "surveyId": "survey_id"
            },
            "airbyte:index/getSourceZohoCrm:getSourceZohoCrm": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceZohoCrmConfiguration:getSourceZohoCrmConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "dcRegion": "dc_region",
                "refreshToken": "refresh_token",
                "sourceType": "source_type",
                "startDatetime": "start_datetime"
            },
            "airbyte:index/getSourceZoom:getSourceZoom": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceZoomConfiguration:getSourceZoomConfiguration": {
                "jwtToken": "jwt_token",
                "sourceType": "source_type"
            },
            "airbyte:index/getSourceZuora:getSourceZuora": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/getSourceZuoraConfiguration:getSourceZuoraConfiguration": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "dataQuery": "data_query",
                "sourceType": "source_type",
                "startDate": "start_date",
                "tenantEndpoint": "tenant_endpoint",
                "windowInDays": "window_in_days"
            },
            "airbyte:index/getWorkspace:getWorkspace": {
                "dataResidency": "data_residency",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAha:SourceAha": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAircall:SourceAircall": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAirtable:SourceAirtable": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAlloydb:SourceAlloydb": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAmazonAds:SourceAmazonAds": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAmazonSellerPartner:SourceAmazonSellerPartner": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAmazonSqs:SourceAmazonSqs": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAmplitude:SourceAmplitude": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceApifyDataset:SourceApifyDataset": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAppfollow:SourceAppfollow": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAsana:SourceAsana": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAuth0:SourceAuth0": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAwsCloudtrail:SourceAwsCloudtrail": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAzureBlobStorage:SourceAzureBlobStorage": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceAzureTable:SourceAzureTable": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceBambooHr:SourceBambooHr": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceBigcommerce:SourceBigcommerce": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceBigquery:SourceBigquery": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceBingAds:SourceBingAds": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceBraintree:SourceBraintree": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceBraze:SourceBraze": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceChargebee:SourceChargebee": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceChartmogul:SourceChartmogul": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceClickhouse:SourceClickhouse": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceClickupApi:SourceClickupApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceClockify:SourceClockify": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceCloseCom:SourceCloseCom": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceCoda:SourceCoda": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceCoinApi:SourceCoinApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceCoinmarketcap:SourceCoinmarketcap": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceConfigcat:SourceConfigcat": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceConfluence:SourceConfluence": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceConvex:SourceConvex": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceDatadog:SourceDatadog": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceDatascope:SourceDatascope": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceDelighted:SourceDelighted": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceDixa:SourceDixa": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceDockerhub:SourceDockerhub": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceDremio:SourceDremio": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceDynamodb:SourceDynamodb": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceE2eTestCloud:SourceE2eTestCloud": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceEmailoctopus:SourceEmailoctopus": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceExchangeRates:SourceExchangeRates": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceFacebookMarketing:SourceFacebookMarketing": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceFacebookPages:SourceFacebookPages": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceFaker:SourceFaker": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceFauna:SourceFauna": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceFileSecure:SourceFileSecure": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceFirebolt:SourceFirebolt": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceFreshcaller:SourceFreshcaller": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceFreshdesk:SourceFreshdesk": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceFreshsales:SourceFreshsales": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGainsightPx:SourceGainsightPx": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGcs:SourceGcs": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGetlago:SourceGetlago": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGithub:SourceGithub": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGitlab:SourceGitlab": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGlassfrog:SourceGlassfrog": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGnews:SourceGnews": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGoogleAds:SourceGoogleAds": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGoogleAnalyticsDataApi:SourceGoogleAnalyticsDataApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGoogleAnalyticsV4:SourceGoogleAnalyticsV4": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGoogleDirectory:SourceGoogleDirectory": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGooglePagespeedInsights:SourceGooglePagespeedInsights": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGoogleSearchConsole:SourceGoogleSearchConsole": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGoogleSheets:SourceGoogleSheets": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGoogleWebfonts:SourceGoogleWebfonts": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGoogleWorkspaceAdminReports:SourceGoogleWorkspaceAdminReports": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGreenhouse:SourceGreenhouse": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceGridly:SourceGridly": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceHarvest:SourceHarvest": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceHubplanner:SourceHubplanner": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceHubspot:SourceHubspot": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceInsightly:SourceInsightly": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceInstagram:SourceInstagram": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceInstatus:SourceInstatus": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceIntercom:SourceIntercom": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceIp2whois:SourceIp2whois": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceIterable:SourceIterable": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceJira:SourceJira": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceK6Cloud:SourceK6Cloud": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceKlarna:SourceKlarna": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceKlaviyo:SourceKlaviyo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceKustomerSinger:SourceKustomerSinger": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceKyve:SourceKyve": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceLaunchdarkly:SourceLaunchdarkly": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceLemlist:SourceLemlist": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceLeverHiring:SourceLeverHiring": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceLinkedinAds:SourceLinkedinAds": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceLinkedinPages:SourceLinkedinPages": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceLinnworks:SourceLinnworks": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceLokalise:SourceLokalise": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMailchimp:SourceMailchimp": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMailgun:SourceMailgun": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMailjetSms:SourceMailjetSms": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMarketo:SourceMarketo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMetabase:SourceMetabase": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMicrosoftTeams:SourceMicrosoftTeams": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMixpanel:SourceMixpanel": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMonday:SourceMonday": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMongodb:SourceMongodb": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMongodbInternalPoc:SourceMongodbInternalPoc": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMssql:SourceMssql": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMyHours:SourceMyHours": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceMysql:SourceMysql": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceNetsuite:SourceNetsuite": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceNotion:SourceNotion": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceNytimes:SourceNytimes": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceOkta:SourceOkta": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceOmnisend:SourceOmnisend": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceOnesignal:SourceOnesignal": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceOpenweather:SourceOpenweather": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceOracle:SourceOracle": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceOrb:SourceOrb": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceOrbit:SourceOrbit": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceOutbrainAmplify:SourceOutbrainAmplify": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceOutreach:SourceOutreach": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePaypalTransaction:SourcePaypalTransaction": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePaystack:SourcePaystack": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePendo:SourcePendo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePersistiq:SourcePersistiq": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePexelsApi:SourcePexelsApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePinterest:SourcePinterest": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePipedrive:SourcePipedrive": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePocket:SourcePocket": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePokeapi:SourcePokeapi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePolygonStockApi:SourcePolygonStockApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePostgres:SourcePostgres": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePosthog:SourcePosthog": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePostmarkapp:SourcePostmarkapp": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePrestashop:SourcePrestashop": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePublicApis:SourcePublicApis": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePunkApi:SourcePunkApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourcePypi:SourcePypi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceQualaroo:SourceQualaroo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceQuickbooks:SourceQuickbooks": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceRailz:SourceRailz": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceRecharge:SourceRecharge": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceRecreation:SourceRecreation": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceRecruitee:SourceRecruitee": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceRecurly:SourceRecurly": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceRedshift:SourceRedshift": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceRetently:SourceRetently": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceRkiCovid:SourceRkiCovid": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceRss:SourceRss": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceS3:SourceS3": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSalesforce:SourceSalesforce": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSalesloft:SourceSalesloft": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSapFieldglass:SourceSapFieldglass": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSecoda:SourceSecoda": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSendgrid:SourceSendgrid": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSendinblue:SourceSendinblue": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSenseforce:SourceSenseforce": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSentry:SourceSentry": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSftp:SourceSftp": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSftpBulk:SourceSftpBulk": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceShopify:SourceShopify": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceShortio:SourceShortio": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSlack:SourceSlack": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSmaily:SourceSmaily": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSmartengage:SourceSmartengage": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSmartsheets:SourceSmartsheets": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSnapchatMarketing:SourceSnapchatMarketing": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSnowflake:SourceSnowflake": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSonarCloud:SourceSonarCloud": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSpaceXApi:SourceSpaceXApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSquare:SourceSquare": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceStrava:SourceStrava": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceStripe:SourceStripe": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSurveySparrow:SourceSurveySparrow": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceSurveymonkey:SourceSurveymonkey": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceTempo:SourceTempo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceTheGuardianApi:SourceTheGuardianApi": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceTiktokMarketing:SourceTiktokMarketing": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceTodoist:SourceTodoist": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceTrello:SourceTrello": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceTrustpilot:SourceTrustpilot": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceTvmazeSchedule:SourceTvmazeSchedule": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceTwilio:SourceTwilio": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceTwilioTaskrouter:SourceTwilioTaskrouter": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceTwitter:SourceTwitter": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceTypeform:SourceTypeform": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceUsCensus:SourceUsCensus": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceVantage:SourceVantage": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceWebflow:SourceWebflow": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceWhiskyHunter:SourceWhiskyHunter": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceWikipediaPageviews:SourceWikipediaPageviews": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceWoocommerce:SourceWoocommerce": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceXero:SourceXero": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceXkcd:SourceXkcd": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceYandexMetrica:SourceYandexMetrica": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceYotpo:SourceYotpo": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceYounium:SourceYounium": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceYoutubeAnalytics:SourceYoutubeAnalytics": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceZendeskChat:SourceZendeskChat": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceZendeskSunshine:SourceZendeskSunshine": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceZendeskSupport:SourceZendeskSupport": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceZendeskTalk:SourceZendeskTalk": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceZenloop:SourceZenloop": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceZohoCrm:SourceZohoCrm": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceZoom:SourceZoom": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/sourceZuora:SourceZuora": {
                "secretId": "secret_id",
                "sourceId": "source_id",
                "sourceType": "source_type",
                "workspaceId": "workspace_id"
            },
            "airbyte:index/workspace:Workspace": {
                "dataResidency": "data_residency",
                "workspaceId": "workspace_id"
            },
            "airbyte:index:Provider": {
                "bearerAuth": "bearer_auth",
                "serverUrl": "server_url"
            }
        },
        "renamedConfigProperties": {
            "bearerAuth": "bearer_auth",
            "serverUrl": "server_url"
        }
    }
}