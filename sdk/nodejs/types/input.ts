// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ConnectionConfigurations {
    streams?: pulumi.Input<pulumi.Input<inputs.ConnectionConfigurationsStream>[]>;
}

export interface ConnectionConfigurationsStream {
    cursorFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optional name of the connection
     */
    name: pulumi.Input<string>;
    primaryKeys?: pulumi.Input<pulumi.Input<pulumi.Input<string>[]>[]>;
    syncMode?: pulumi.Input<string>;
}

export interface ConnectionSchedule {
    basicTiming?: pulumi.Input<string>;
    cronExpression?: pulumi.Input<string>;
    /**
     * must be one of ["manual", "cron"]
     */
    scheduleType: pulumi.Input<string>;
}

export interface DestinationAWSDatalakeConfiguration {
    /**
     * target aws account id
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * The name of the S3 bucket. Read more \n\nhere\n\n.
     */
    bucketName: pulumi.Input<string>;
    /**
     * S3 prefix
     */
    bucketPrefix?: pulumi.Input<string>;
    /**
     * Choose How to Authenticate to AWS.
     */
    credentials: pulumi.Input<inputs.DestinationAWSDatalakeConfigurationCredentials>;
    /**
     * must be one of ["aws-datalake"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Format of the data output.
     */
    format?: pulumi.Input<inputs.DestinationAWSDatalakeConfigurationFormat>;
    /**
     * Cast float/double as decimal(38,18). This can help achieve higher accuracy and represent numbers correctly as received from the source.
     */
    glueCatalogFloatAsDecimal?: pulumi.Input<boolean>;
    /**
     * Add a default tag key to databases created by this destination
     */
    lakeformationDatabaseDefaultTagKey?: pulumi.Input<string>;
    /**
     * Add default values for the `Tag Key` to databases created by this destination. Comma separate for multiple values.
     */
    lakeformationDatabaseDefaultTagValues?: pulumi.Input<string>;
    /**
     * The default database this destination will use to create tables in per stream. Can be changed per connection by customizing the namespace.
     */
    lakeformationDatabaseName: pulumi.Input<string>;
    /**
     * Whether to create tables as LF governed tables.
     */
    lakeformationGovernedTables?: pulumi.Input<boolean>;
    /**
     * must be one of ["NO PARTITIONING", "DATE", "YEAR", "MONTH", "DAY", "YEAR/MONTH", "YEAR/MONTH/DAY"]
     * Partition data by cursor fields when a cursor field is a date
     */
    partitioning?: pulumi.Input<string>;
    /**
     * must be one of ["", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
     * The region of the S3 bucket. See \n\nhere\n\n for all region codes.
     */
    region: pulumi.Input<string>;
}

export interface DestinationAWSDatalakeConfigurationCredentials {
    destinationAwsDatalakeAuthenticationModeIamRole?: pulumi.Input<inputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole>;
    destinationAwsDatalakeAuthenticationModeIamUser?: pulumi.Input<inputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser>;
    destinationAwsDatalakeUpdateAuthenticationModeIamRole?: pulumi.Input<inputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole>;
    destinationAwsDatalakeUpdateAuthenticationModeIamUser?: pulumi.Input<inputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser>;
}

export interface DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole {
    credentialsTitle: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}

export interface DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser {
    awsAccessKeyId: pulumi.Input<string>;
    awsSecretAccessKey: pulumi.Input<string>;
    credentialsTitle: pulumi.Input<string>;
}

export interface DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole {
    credentialsTitle: pulumi.Input<string>;
    roleArn: pulumi.Input<string>;
}

export interface DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser {
    awsAccessKeyId: pulumi.Input<string>;
    awsSecretAccessKey: pulumi.Input<string>;
    credentialsTitle: pulumi.Input<string>;
}

export interface DestinationAWSDatalakeConfigurationFormat {
    destinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson>;
    destinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage?: pulumi.Input<inputs.DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage>;
    destinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson>;
    destinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage?: pulumi.Input<inputs.DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage>;
}

export interface DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardJsonLinesNewlineDelimitedJson {
    compressionCodec?: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeOutputFormatWildcardParquetColumnarStorage {
    compressionCodec?: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardJsonLinesNewlineDelimitedJson {
    compressionCodec?: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationAWSDatalakeConfigurationFormatDestinationAwsDatalakeUpdateOutputFormatWildcardParquetColumnarStorage {
    compressionCodec?: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationAzureBlobStorageConfiguration {
    /**
     * The Azure blob storage account key.
     */
    azureBlobStorageAccountKey: pulumi.Input<string>;
    /**
     * The account's name of the Azure Blob Storage.
     */
    azureBlobStorageAccountName: pulumi.Input<string>;
    /**
     * The name of the Azure blob storage container. If not exists - will be created automatically. May be empty, then will be created automatically airbytecontainer+timestamp
     */
    azureBlobStorageContainerName?: pulumi.Input<string>;
    /**
     * This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.
     */
    azureBlobStorageEndpointDomainName?: pulumi.Input<string>;
    /**
     * The amount of megabytes to buffer for the output stream to Azure. This will impact memory footprint on workers, but may need adjustment for performance and appropriate block size in Azure.
     */
    azureBlobStorageOutputBufferSize?: pulumi.Input<number>;
    /**
     * The amount of megabytes after which the connector should spill the records in a new blob object. Make sure to configure size greater than individual records. Enter 0 if not applicable
     */
    azureBlobStorageSpillSize?: pulumi.Input<number>;
    /**
     * must be one of ["azure-blob-storage"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Output data format
     */
    format: pulumi.Input<inputs.DestinationAzureBlobStorageConfigurationFormat>;
}

export interface DestinationAzureBlobStorageConfigurationFormat {
    destinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues?: pulumi.Input<inputs.DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues>;
    destinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson>;
    destinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues?: pulumi.Input<inputs.DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues>;
    destinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson>;
}

export interface DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatCsvCommaSeparatedValues {
    flattening: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageOutputFormatJsonLinesNewlineDelimitedJson {
    formatType: pulumi.Input<string>;
}

export interface DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatCsvCommaSeparatedValues {
    flattening: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationAzureBlobStorageConfigurationFormatDestinationAzureBlobStorageUpdateOutputFormatJsonLinesNewlineDelimitedJson {
    formatType: pulumi.Input<string>;
}

export interface DestinationBigqueryConfiguration {
    /**
     * Google BigQuery client's chunk (buffer) size (MIN=1, MAX = 15) for each table. The size that will be written by a single RPC. Written data will be buffered and only flushed upon reaching this size or closing the channel. The default 15MB value is used if not set explicitly. Read more \n\nhere\n\n.
     */
    bigQueryClientBufferSizeMb?: pulumi.Input<number>;
    /**
     * The contents of the JSON service account key. Check out the \n\ndocs\n\n if you need help generating this key. Default credentials will be used if this field is left empty.
     */
    credentialsJson?: pulumi.Input<string>;
    /**
     * The default BigQuery Dataset ID that tables are replicated to if the source does not specify a namespace. Read more \n\nhere\n\n.
     */
    datasetId: pulumi.Input<string>;
    /**
     * must be one of ["US", "EU", "asia-east1", "asia-east2", "asia-northeast1", "asia-northeast2", "asia-northeast3", "asia-south1", "asia-south2", "asia-southeast1", "asia-southeast2", "australia-southeast1", "australia-southeast2", "europe-central1", "europe-central2", "europe-north1", "europe-southwest1", "europe-west1", "europe-west2", "europe-west3", "europe-west4", "europe-west6", "europe-west7", "europe-west8", "europe-west9", "me-west1", "northamerica-northeast1", "northamerica-northeast2", "southamerica-east1", "southamerica-west1", "us-central1", "us-east1", "us-east2", "us-east3", "us-east4", "us-east5", "us-west1", "us-west2", "us-west3", "us-west4"]
     * The location of the dataset. Warning: Changes made after creation will not be applied. Read more \n\nhere\n\n.
     */
    datasetLocation: pulumi.Input<string>;
    /**
     * must be one of ["bigquery"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Loading method used to send select the way data will be uploaded to BigQuery. \n\n\n\nStandard Inserts\n\n - Direct uploading using SQL INSERT statements. This method is extremely inefficient and provided only for quick testing. In almost all cases, you should use staging. \n\n\n\nGCS Staging\n\n - Writes large batches of records to a file, uploads the file to GCS, then uses \n\nCOPY INTO table\n\n to upload the file. Recommended for most workloads for better speed and scalability. Read more about GCS Staging \n\nhere\n\n.
     */
    loadingMethod?: pulumi.Input<inputs.DestinationBigqueryConfigurationLoadingMethod>;
    /**
     * The GCP project ID for the project containing the target BigQuery dataset. Read more \n\nhere\n\n.
     */
    projectId: pulumi.Input<string>;
    /**
     * (Early Access) The dataset to write raw tables into
     */
    rawDataDataset?: pulumi.Input<string>;
    /**
     * must be one of ["interactive", "batch"]
     * Interactive run type means that the query is executed as soon as possible, and these queries count towards concurrent rate limit and daily limit. Read more about interactive run type \n\nhere\n\n. Batch queries are queued and started as soon as idle resources are available in the BigQuery shared resource pool, which usually occurs within a few minutes. Batch queries don’t count towards your concurrent rate limit. Read more about batch queries \n\nhere\n\n. The default "interactive" value is used if not set explicitly.
     */
    transformationPriority?: pulumi.Input<string>;
    /**
     * (Early Access) Use \n\nDestinations V2\n\n.
     */
    use1s1tFormat?: pulumi.Input<boolean>;
}

export interface DestinationBigqueryConfigurationLoadingMethod {
    destinationBigqueryLoadingMethodGcsStaging?: pulumi.Input<inputs.DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging>;
    destinationBigqueryLoadingMethodStandardInserts?: pulumi.Input<inputs.DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodStandardInserts>;
    destinationBigqueryUpdateLoadingMethodGcsStaging?: pulumi.Input<inputs.DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging>;
    destinationBigqueryUpdateLoadingMethodStandardInserts?: pulumi.Input<inputs.DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodStandardInserts>;
}

export interface DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStaging {
    credential: pulumi.Input<inputs.DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential>;
    fileBufferCount?: pulumi.Input<number>;
    gcsBucketName: pulumi.Input<string>;
    gcsBucketPath: pulumi.Input<string>;
    keepFilesInGcsBucket?: pulumi.Input<string>;
    method: pulumi.Input<string>;
}

export interface DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredential {
    destinationBigqueryLoadingMethodGcsStagingCredentialHmacKey?: pulumi.Input<inputs.DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey>;
}

export interface DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodGcsStagingCredentialDestinationBigqueryLoadingMethodGcsStagingCredentialHmacKey {
    credentialType: pulumi.Input<string>;
    hmacKeyAccessId: pulumi.Input<string>;
    hmacKeySecret: pulumi.Input<string>;
}

export interface DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryLoadingMethodStandardInserts {
    method: pulumi.Input<string>;
}

export interface DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStaging {
    credential: pulumi.Input<inputs.DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential>;
    fileBufferCount?: pulumi.Input<number>;
    gcsBucketName: pulumi.Input<string>;
    gcsBucketPath: pulumi.Input<string>;
    keepFilesInGcsBucket?: pulumi.Input<string>;
    method: pulumi.Input<string>;
}

export interface DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredential {
    destinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey?: pulumi.Input<inputs.DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey>;
}

export interface DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryUpdateLoadingMethodGcsStagingCredentialHmacKey {
    credentialType: pulumi.Input<string>;
    hmacKeyAccessId: pulumi.Input<string>;
    hmacKeySecret: pulumi.Input<string>;
}

export interface DestinationBigqueryConfigurationLoadingMethodDestinationBigqueryUpdateLoadingMethodStandardInserts {
    method: pulumi.Input<string>;
}

export interface DestinationBigqueryDenormalizedConfiguration {
    /**
     * Google BigQuery client's chunk (buffer) size (MIN=1, MAX = 15) for each table. The size that will be written by a single RPC. Written data will be buffered and only flushed upon reaching this size or closing the channel. The default 15MB value is used if not set explicitly. Read more \n\nhere\n\n.
     */
    bigQueryClientBufferSizeMb?: pulumi.Input<number>;
    /**
     * The contents of the JSON service account key. Check out the \n\ndocs\n\n if you need help generating this key. Default credentials will be used if this field is left empty.
     */
    credentialsJson?: pulumi.Input<string>;
    /**
     * The default BigQuery Dataset ID that tables are replicated to if the source does not specify a namespace. Read more \n\nhere\n\n.
     */
    datasetId: pulumi.Input<string>;
    /**
     * must be one of ["US", "EU", "asia-east1", "asia-east2", "asia-northeast1", "asia-northeast2", "asia-northeast3", "asia-south1", "asia-south2", "asia-southeast1", "asia-southeast2", "australia-southeast1", "australia-southeast2", "europe-central1", "europe-central2", "europe-north1", "europe-southwest1", "europe-west1", "europe-west2", "europe-west3", "europe-west4", "europe-west6", "europe-west7", "europe-west8", "europe-west9", "me-west1", "northamerica-northeast1", "northamerica-northeast2", "southamerica-east1", "southamerica-west1", "us-central1", "us-east1", "us-east2", "us-east3", "us-east4", "us-east5", "us-west1", "us-west2", "us-west3", "us-west4"]
     * The location of the dataset. Warning: Changes made after creation will not be applied. The default "US" value is used if not set explicitly. Read more \n\nhere\n\n.
     */
    datasetLocation?: pulumi.Input<string>;
    /**
     * must be one of ["bigquery-denormalized"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Loading method used to send select the way data will be uploaded to BigQuery. \n\n\n\nStandard Inserts\n\n - Direct uploading using SQL INSERT statements. This method is extremely inefficient and provided only for quick testing. In almost all cases, you should use staging. \n\n\n\nGCS Staging\n\n - Writes large batches of records to a file, uploads the file to GCS, then uses \n\nCOPY INTO table\n\n to upload the file. Recommended for most workloads for better speed and scalability. Read more about GCS Staging \n\nhere\n\n.
     */
    loadingMethod?: pulumi.Input<inputs.DestinationBigqueryDenormalizedConfigurationLoadingMethod>;
    /**
     * The GCP project ID for the project containing the target BigQuery dataset. Read more \n\nhere\n\n.
     */
    projectId: pulumi.Input<string>;
}

export interface DestinationBigqueryDenormalizedConfigurationLoadingMethod {
    destinationBigqueryDenormalizedLoadingMethodGcsStaging?: pulumi.Input<inputs.DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging>;
    destinationBigqueryDenormalizedLoadingMethodStandardInserts?: pulumi.Input<inputs.DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodStandardInserts>;
    destinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging?: pulumi.Input<inputs.DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging>;
    destinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts?: pulumi.Input<inputs.DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts>;
}

export interface DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStaging {
    credential: pulumi.Input<inputs.DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential>;
    fileBufferCount?: pulumi.Input<number>;
    gcsBucketName: pulumi.Input<string>;
    gcsBucketPath: pulumi.Input<string>;
    keepFilesInGcsBucket?: pulumi.Input<string>;
    method: pulumi.Input<string>;
}

export interface DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredential {
    destinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey?: pulumi.Input<inputs.DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey>;
}

export interface DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedLoadingMethodGcsStagingCredentialHmacKey {
    credentialType: pulumi.Input<string>;
    hmacKeyAccessId: pulumi.Input<string>;
    hmacKeySecret: pulumi.Input<string>;
}

export interface DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedLoadingMethodStandardInserts {
    method: pulumi.Input<string>;
}

export interface DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStaging {
    credential: pulumi.Input<inputs.DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential>;
    fileBufferCount?: pulumi.Input<number>;
    gcsBucketName: pulumi.Input<string>;
    gcsBucketPath: pulumi.Input<string>;
    keepFilesInGcsBucket?: pulumi.Input<string>;
    method: pulumi.Input<string>;
}

export interface DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredential {
    destinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey?: pulumi.Input<inputs.DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey>;
}

export interface DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialDestinationBigqueryDenormalizedUpdateLoadingMethodGcsStagingCredentialHmacKey {
    credentialType: pulumi.Input<string>;
    hmacKeyAccessId: pulumi.Input<string>;
    hmacKeySecret: pulumi.Input<string>;
}

export interface DestinationBigqueryDenormalizedConfigurationLoadingMethodDestinationBigqueryDenormalizedUpdateLoadingMethodStandardInserts {
    method: pulumi.Input<string>;
}

export interface DestinationClickhouseConfiguration {
    /**
     * Name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * must be one of ["clickhouse"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Hostname of the database.
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * Password associated with the username.
     */
    password?: pulumi.Input<string>;
    /**
     * HTTP port of the database.
     */
    port: pulumi.Input<number>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.DestinationClickhouseConfigurationTunnelMethod>;
    /**
     * Username to use to access the database.
     */
    username: pulumi.Input<string>;
}

export interface DestinationClickhouseConfigurationTunnelMethod {
    destinationClickhouseSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel>;
    destinationClickhouseSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication>;
    destinationClickhouseSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication>;
    destinationClickhouseUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel>;
    destinationClickhouseUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication>;
    destinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationClickhouseConfigurationTunnelMethodDestinationClickhouseUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationConvexConfiguration {
    /**
     * API access key used to send data to a Convex deployment.
     */
    accessKey: pulumi.Input<string>;
    /**
     * URL of the Convex deployment that is the destination
     */
    deploymentUrl: pulumi.Input<string>;
    /**
     * must be one of ["convex"]
     */
    destinationType: pulumi.Input<string>;
}

export interface DestinationCumulioConfiguration {
    /**
     * URL of the Cumul.io API (e.g. 'https://api.cumul.io', 'https://api.us.cumul.io', or VPC-specific API url). Defaults to 'https://api.cumul.io'.
     */
    apiHost: pulumi.Input<string>;
    /**
     * An API key generated in Cumul.io's platform (can be generated here: https://app.cumul.io/start/profile/integration).
     */
    apiKey: pulumi.Input<string>;
    /**
     * The corresponding API token generated in Cumul.io's platform (can be generated here: https://app.cumul.io/start/profile/integration).
     */
    apiToken: pulumi.Input<string>;
    /**
     * must be one of ["cumulio"]
     */
    destinationType: pulumi.Input<string>;
}

export interface DestinationDatabendConfiguration {
    /**
     * Name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * must be one of ["databend"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Hostname of the database.
     */
    host: pulumi.Input<string>;
    /**
     * Password associated with the username.
     */
    password?: pulumi.Input<string>;
    /**
     * Port of the database.
     */
    port?: pulumi.Input<number>;
    /**
     * The default  table was written to.
     */
    table?: pulumi.Input<string>;
    /**
     * Username to use to access the database.
     */
    username: pulumi.Input<string>;
}

export interface DestinationDatabricksConfiguration {
    /**
     * You must agree to the Databricks JDBC Driver \n\nTerms & Conditions\n\n to use this connector.
     */
    acceptTerms: pulumi.Input<boolean>;
    /**
     * Storage on which the delta lake is built.
     */
    dataSource: pulumi.Input<inputs.DestinationDatabricksConfigurationDataSource>;
    /**
     * The name of the catalog. If not specified otherwise, the "hiveMetastore" will be used.
     */
    database?: pulumi.Input<string>;
    /**
     * Databricks Cluster HTTP Path.
     */
    databricksHttpPath: pulumi.Input<string>;
    /**
     * Databricks Personal Access Token for making authenticated requests.
     */
    databricksPersonalAccessToken: pulumi.Input<string>;
    /**
     * Databricks Cluster Port.
     */
    databricksPort?: pulumi.Input<string>;
    /**
     * Databricks Cluster Server Hostname.
     */
    databricksServerHostname: pulumi.Input<string>;
    /**
     * must be one of ["databricks"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Support schema evolution for all streams. If "false", the connector might fail when a stream's schema changes.
     */
    enableSchemaEvolution?: pulumi.Input<boolean>;
    /**
     * Default to 'true'. Switch it to 'false' for debugging purpose.
     */
    purgeStagingData?: pulumi.Input<boolean>;
    /**
     * The default schema tables are written. If not specified otherwise, the "default" will be used.
     */
    schema?: pulumi.Input<string>;
}

export interface DestinationDatabricksConfigurationDataSource {
    destinationDatabricksDataSourceAmazonS3?: pulumi.Input<inputs.DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3>;
    destinationDatabricksDataSourceAzureBlobStorage?: pulumi.Input<inputs.DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage>;
    destinationDatabricksDataSourceRecommendedManagedTables?: pulumi.Input<inputs.DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables>;
    destinationDatabricksUpdateDataSourceAmazonS3?: pulumi.Input<inputs.DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3>;
    destinationDatabricksUpdateDataSourceAzureBlobStorage?: pulumi.Input<inputs.DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage>;
    destinationDatabricksUpdateDataSourceRecommendedManagedTables?: pulumi.Input<inputs.DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables>;
}

export interface DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAmazonS3 {
    dataSourceType: pulumi.Input<string>;
    fileNamePattern?: pulumi.Input<string>;
    s3AccessKeyId: pulumi.Input<string>;
    s3BucketName: pulumi.Input<string>;
    s3BucketPath: pulumi.Input<string>;
    s3BucketRegion: pulumi.Input<string>;
    s3SecretAccessKey: pulumi.Input<string>;
}

export interface DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceAzureBlobStorage {
    azureBlobStorageAccountName: pulumi.Input<string>;
    azureBlobStorageContainerName: pulumi.Input<string>;
    azureBlobStorageEndpointDomainName?: pulumi.Input<string>;
    azureBlobStorageSasToken: pulumi.Input<string>;
    dataSourceType: pulumi.Input<string>;
}

export interface DestinationDatabricksConfigurationDataSourceDestinationDatabricksDataSourceRecommendedManagedTables {
    dataSourceType: pulumi.Input<string>;
}

export interface DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAmazonS3 {
    dataSourceType: pulumi.Input<string>;
    fileNamePattern?: pulumi.Input<string>;
    s3AccessKeyId: pulumi.Input<string>;
    s3BucketName: pulumi.Input<string>;
    s3BucketPath: pulumi.Input<string>;
    s3BucketRegion: pulumi.Input<string>;
    s3SecretAccessKey: pulumi.Input<string>;
}

export interface DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceAzureBlobStorage {
    azureBlobStorageAccountName: pulumi.Input<string>;
    azureBlobStorageContainerName: pulumi.Input<string>;
    azureBlobStorageEndpointDomainName?: pulumi.Input<string>;
    azureBlobStorageSasToken: pulumi.Input<string>;
    dataSourceType: pulumi.Input<string>;
}

export interface DestinationDatabricksConfigurationDataSourceDestinationDatabricksUpdateDataSourceRecommendedManagedTables {
    dataSourceType: pulumi.Input<string>;
}

export interface DestinationDevNullConfiguration {
    /**
     * must be one of ["dev-null"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * The type of destination to be used
     */
    testDestination: pulumi.Input<inputs.DestinationDevNullConfigurationTestDestination>;
}

export interface DestinationDevNullConfigurationTestDestination {
    destinationDevNullTestDestinationSilent?: pulumi.Input<inputs.DestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent>;
    destinationDevNullUpdateTestDestinationSilent?: pulumi.Input<inputs.DestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent>;
}

export interface DestinationDevNullConfigurationTestDestinationDestinationDevNullTestDestinationSilent {
    testDestinationType: pulumi.Input<string>;
}

export interface DestinationDevNullConfigurationTestDestinationDestinationDevNullUpdateTestDestinationSilent {
    testDestinationType: pulumi.Input<string>;
}

export interface DestinationDynamodbConfiguration {
    /**
     * The access key id to access the DynamoDB. Airbyte requires Read and Write permissions to the DynamoDB.
     */
    accessKeyId: pulumi.Input<string>;
    /**
     * must be one of ["dynamodb"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * This is your DynamoDB endpoint url.(if you are working with AWS DynamoDB, just leave empty).
     */
    dynamodbEndpoint?: pulumi.Input<string>;
    /**
     * must be one of ["", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
     * The region of the DynamoDB.
     */
    dynamodbRegion: pulumi.Input<string>;
    /**
     * The prefix to use when naming DynamoDB tables.
     */
    dynamodbTableNamePrefix: pulumi.Input<string>;
    /**
     * The corresponding secret to the access key id.
     */
    secretAccessKey: pulumi.Input<string>;
}

export interface DestinationElasticsearchConfiguration {
    /**
     * The type of authentication to be used
     */
    authenticationMethod?: pulumi.Input<inputs.DestinationElasticsearchConfigurationAuthenticationMethod>;
    /**
     * CA certificate
     */
    caCertificate?: pulumi.Input<string>;
    /**
     * must be one of ["elasticsearch"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * The full url of the Elasticsearch server
     */
    endpoint: pulumi.Input<string>;
    /**
     * If a primary key identifier is defined in the source, an upsert will be performed using the primary key value as the elasticsearch doc id. Does not support composite primary keys.
     */
    upsert?: pulumi.Input<boolean>;
}

export interface DestinationElasticsearchConfigurationAuthenticationMethod {
    destinationElasticsearchAuthenticationMethodApiKeySecret?: pulumi.Input<inputs.DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret>;
    destinationElasticsearchAuthenticationMethodUsernamePassword?: pulumi.Input<inputs.DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodUsernamePassword>;
    destinationElasticsearchUpdateAuthenticationMethodApiKeySecret?: pulumi.Input<inputs.DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret>;
    destinationElasticsearchUpdateAuthenticationMethodUsernamePassword?: pulumi.Input<inputs.DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodUsernamePassword>;
}

export interface DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodApiKeySecret {
    apiKeyId: pulumi.Input<string>;
    apiKeySecret: pulumi.Input<string>;
    method: pulumi.Input<string>;
}

export interface DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchAuthenticationMethodUsernamePassword {
    method: pulumi.Input<string>;
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodApiKeySecret {
    apiKeyId: pulumi.Input<string>;
    apiKeySecret: pulumi.Input<string>;
    method: pulumi.Input<string>;
}

export interface DestinationElasticsearchConfigurationAuthenticationMethodDestinationElasticsearchUpdateAuthenticationMethodUsernamePassword {
    method: pulumi.Input<string>;
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DestinationFireboltConfiguration {
    /**
     * Firebolt account to login.
     */
    account?: pulumi.Input<string>;
    /**
     * The database to connect to.
     */
    database: pulumi.Input<string>;
    /**
     * must be one of ["firebolt"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Engine name or url to connect to.
     */
    engine?: pulumi.Input<string>;
    /**
     * The host name of your Firebolt database.
     */
    host?: pulumi.Input<string>;
    /**
     * Loading method used to select the way data will be uploaded to Firebolt
     */
    loadingMethod?: pulumi.Input<inputs.DestinationFireboltConfigurationLoadingMethod>;
    /**
     * Firebolt password.
     */
    password: pulumi.Input<string>;
    /**
     * Firebolt email address you use to login.
     */
    username: pulumi.Input<string>;
}

export interface DestinationFireboltConfigurationLoadingMethod {
    destinationFireboltLoadingMethodExternalTableViaS3?: pulumi.Input<inputs.DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3>;
    destinationFireboltLoadingMethodSqlInserts?: pulumi.Input<inputs.DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodSqlInserts>;
    destinationFireboltUpdateLoadingMethodExternalTableViaS3?: pulumi.Input<inputs.DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3>;
    destinationFireboltUpdateLoadingMethodSqlInserts?: pulumi.Input<inputs.DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodSqlInserts>;
}

export interface DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodExternalTableViaS3 {
    awsKeyId: pulumi.Input<string>;
    awsKeySecret: pulumi.Input<string>;
    method: pulumi.Input<string>;
    s3Bucket: pulumi.Input<string>;
    s3Region: pulumi.Input<string>;
}

export interface DestinationFireboltConfigurationLoadingMethodDestinationFireboltLoadingMethodSqlInserts {
    method: pulumi.Input<string>;
}

export interface DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodExternalTableViaS3 {
    awsKeyId: pulumi.Input<string>;
    awsKeySecret: pulumi.Input<string>;
    method: pulumi.Input<string>;
    s3Bucket: pulumi.Input<string>;
    s3Region: pulumi.Input<string>;
}

export interface DestinationFireboltConfigurationLoadingMethodDestinationFireboltUpdateLoadingMethodSqlInserts {
    method: pulumi.Input<string>;
}

export interface DestinationFirestoreConfiguration {
    /**
     * The contents of the JSON service account key. Check out the \n\ndocs\n\n if you need help generating this key. Default credentials will be used if this field is left empty.
     */
    credentialsJson?: pulumi.Input<string>;
    /**
     * must be one of ["firestore"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * The GCP project ID for the project containing the target BigQuery dataset.
     */
    projectId: pulumi.Input<string>;
}

export interface DestinationGcsConfiguration {
    /**
     * An HMAC key is a type of credential and can be associated with a service account or a user account in Cloud Storage. Read more \n\nhere\n\n.
     */
    credential: pulumi.Input<inputs.DestinationGcsConfigurationCredential>;
    /**
     * must be one of ["gcs"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Output data format. One of the following formats must be selected - \n\nAVRO\n\n format, \n\nPARQUET\n\n format, \n\nCSV\n\n format, or \n\nJSONL\n\n format.
     */
    format: pulumi.Input<inputs.DestinationGcsConfigurationFormat>;
    /**
     * You can find the bucket name in the App Engine Admin console Application Settings page, under the label Google Cloud Storage Bucket. Read more \n\nhere\n\n.
     */
    gcsBucketName: pulumi.Input<string>;
    /**
     * GCS Bucket Path string Subdirectory under the above bucket to sync the data into.
     */
    gcsBucketPath: pulumi.Input<string>;
    /**
     * must be one of ["northamerica-northeast1", "northamerica-northeast2", "us-central1", "us-east1", "us-east4", "us-west1", "us-west2", "us-west3", "us-west4", "southamerica-east1", "southamerica-west1", "europe-central2", "europe-north1", "europe-west1", "europe-west2", "europe-west3", "europe-west4", "europe-west6", "asia-east1", "asia-east2", "asia-northeast1", "asia-northeast2", "asia-northeast3", "asia-south1", "asia-south2", "asia-southeast1", "asia-southeast2", "australia-southeast1", "australia-southeast2", "asia", "eu", "us", "asia1", "eur4", "nam4"]
     * Select a Region of the GCS Bucket. Read more \n\nhere\n\n.
     */
    gcsBucketRegion?: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationCredential {
    destinationGcsAuthenticationHmacKey?: pulumi.Input<inputs.DestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey>;
    destinationGcsUpdateAuthenticationHmacKey?: pulumi.Input<inputs.DestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey>;
}

export interface DestinationGcsConfigurationCredentialDestinationGcsAuthenticationHmacKey {
    credentialType: pulumi.Input<string>;
    hmacKeyAccessId: pulumi.Input<string>;
    hmacKeySecret: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationCredentialDestinationGcsUpdateAuthenticationHmacKey {
    credentialType: pulumi.Input<string>;
    hmacKeyAccessId: pulumi.Input<string>;
    hmacKeySecret: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormat {
    destinationGcsOutputFormatAvroApacheAvro?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro>;
    destinationGcsOutputFormatCsvCommaSeparatedValues?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues>;
    destinationGcsOutputFormatJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson>;
    destinationGcsOutputFormatParquetColumnarStorage?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage>;
    destinationGcsUpdateOutputFormatAvroApacheAvro?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro>;
    destinationGcsUpdateOutputFormatCsvCommaSeparatedValues?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues>;
    destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson>;
    destinationGcsUpdateOutputFormatParquetColumnarStorage?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvro {
    compressionCodec: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec>;
    formatType: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodec {
    destinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2>;
    destinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate>;
    destinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression>;
    destinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy>;
    destinationGcsOutputFormatAvroApacheAvroCompressionCodecXz?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz>;
    destinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecBzip2 {
    codec: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDeflate {
    codec: pulumi.Input<string>;
    compressionLevel?: pulumi.Input<number>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecNoCompression {
    codec: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecSnappy {
    codec: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecXz {
    codec: pulumi.Input<string>;
    compressionLevel?: pulumi.Input<number>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatAvroApacheAvroCompressionCodecDestinationGcsOutputFormatAvroApacheAvroCompressionCodecZstandard {
    codec: pulumi.Input<string>;
    compressionLevel?: pulumi.Input<number>;
    includeChecksum?: pulumi.Input<boolean>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValues {
    compression?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression>;
    flattening?: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompression {
    destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip>;
    destinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionGzip {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsOutputFormatCsvCommaSeparatedValuesCompressionNoCompression {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJson {
    compression?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression>;
    formatType: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompression {
    destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip>;
    destinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsOutputFormatParquetColumnarStorage {
    blockSizeMb?: pulumi.Input<number>;
    compressionCodec?: pulumi.Input<string>;
    dictionaryEncoding?: pulumi.Input<boolean>;
    dictionaryPageSizeKb?: pulumi.Input<number>;
    formatType: pulumi.Input<string>;
    maxPaddingSizeMb?: pulumi.Input<number>;
    pageSizeKb?: pulumi.Input<number>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvro {
    compressionCodec: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec>;
    formatType: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodec {
    destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2>;
    destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate>;
    destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression>;
    destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy>;
    destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz>;
    destinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecBzip2 {
    codec: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDeflate {
    codec: pulumi.Input<string>;
    compressionLevel?: pulumi.Input<number>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression {
    codec: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecSnappy {
    codec: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecXz {
    codec: pulumi.Input<string>;
    compressionLevel?: pulumi.Input<number>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecDestinationGcsUpdateOutputFormatAvroApacheAvroCompressionCodecZstandard {
    codec: pulumi.Input<string>;
    compressionLevel?: pulumi.Input<number>;
    includeChecksum?: pulumi.Input<boolean>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValues {
    compression?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression>;
    flattening?: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompression {
    destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip>;
    destinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationGcsUpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJson {
    compression?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression>;
    formatType: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression {
    destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip>;
    destinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression?: pulumi.Input<inputs.DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationGcsUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationGcsConfigurationFormatDestinationGcsUpdateOutputFormatParquetColumnarStorage {
    blockSizeMb?: pulumi.Input<number>;
    compressionCodec?: pulumi.Input<string>;
    dictionaryEncoding?: pulumi.Input<boolean>;
    dictionaryPageSizeKb?: pulumi.Input<number>;
    formatType: pulumi.Input<string>;
    maxPaddingSizeMb?: pulumi.Input<number>;
    pageSizeKb?: pulumi.Input<number>;
}

export interface DestinationGoogleSheetsConfiguration {
    /**
     * Google API Credentials for connecting to Google Sheets and Google Drive APIs
     */
    credentials: pulumi.Input<inputs.DestinationGoogleSheetsConfigurationCredentials>;
    /**
     * must be one of ["google-sheets"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * The link to your spreadsheet. See \n\nthis guide\n\n for more details.
     */
    spreadsheetId: pulumi.Input<string>;
}

export interface DestinationGoogleSheetsConfigurationCredentials {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface DestinationKeenConfiguration {
    /**
     * To get Keen Master API Key, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["keen"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Allow connector to guess keen.timestamp value based on the streamed data.
     */
    inferTimestamp?: pulumi.Input<boolean>;
    /**
     * To get Keen Project ID, navigate to the Access tab from the left-hand, side panel and check the Project Details section.
     */
    projectId: pulumi.Input<string>;
}

export interface DestinationKinesisConfiguration {
    /**
     * Generate the AWS Access Key for current user.
     */
    accessKey: pulumi.Input<string>;
    /**
     * Buffer size for storing kinesis records before being batch streamed.
     */
    bufferSize: pulumi.Input<number>;
    /**
     * must be one of ["kinesis"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * AWS Kinesis endpoint.
     */
    endpoint: pulumi.Input<string>;
    /**
     * The AWS Private Key - a string of numbers and letters that are unique for each account, also known as a "recovery phrase".
     */
    privateKey: pulumi.Input<string>;
    /**
     * AWS region. Your account determines the Regions that are available to you.
     */
    region: pulumi.Input<string>;
    /**
     * Number of shards to which the data should be streamed.
     */
    shardCount: pulumi.Input<number>;
}

export interface DestinationLangchainConfiguration {
    /**
     * must be one of ["langchain"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Embedding configuration
     */
    embedding: pulumi.Input<inputs.DestinationLangchainConfigurationEmbedding>;
    /**
     * Indexing configuration
     */
    indexing: pulumi.Input<inputs.DestinationLangchainConfigurationIndexing>;
    processing: pulumi.Input<inputs.DestinationLangchainConfigurationProcessing>;
}

export interface DestinationLangchainConfigurationEmbedding {
    destinationLangchainEmbeddingFake?: pulumi.Input<inputs.DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingFake>;
    destinationLangchainEmbeddingOpenAi?: pulumi.Input<inputs.DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi>;
    destinationLangchainUpdateEmbeddingFake?: pulumi.Input<inputs.DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake>;
    destinationLangchainUpdateEmbeddingOpenAi?: pulumi.Input<inputs.DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi>;
}

export interface DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingFake {
    mode?: pulumi.Input<string>;
}

export interface DestinationLangchainConfigurationEmbeddingDestinationLangchainEmbeddingOpenAi {
    mode?: pulumi.Input<string>;
    openaiKey: pulumi.Input<string>;
}

export interface DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake {
    mode?: pulumi.Input<string>;
}

export interface DestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi {
    mode?: pulumi.Input<string>;
    openaiKey: pulumi.Input<string>;
}

export interface DestinationLangchainConfigurationIndexing {
    destinationLangchainIndexingChromaLocalPersistance?: pulumi.Input<inputs.DestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance>;
    destinationLangchainIndexingDocArrayHnswSearch?: pulumi.Input<inputs.DestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch>;
    destinationLangchainIndexingPinecone?: pulumi.Input<inputs.DestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone>;
    destinationLangchainUpdateIndexingChromaLocalPersistance?: pulumi.Input<inputs.DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance>;
    destinationLangchainUpdateIndexingDocArrayHnswSearch?: pulumi.Input<inputs.DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch>;
    destinationLangchainUpdateIndexingPinecone?: pulumi.Input<inputs.DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone>;
}

export interface DestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance {
    collectionName?: pulumi.Input<string>;
    destinationPath: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
}

export interface DestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch {
    destinationPath: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
}

export interface DestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone {
    index: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    pineconeEnvironment: pulumi.Input<string>;
    pineconeKey: pulumi.Input<string>;
}

export interface DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance {
    collectionName?: pulumi.Input<string>;
    destinationPath: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
}

export interface DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch {
    destinationPath: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
}

export interface DestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone {
    index: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
    pineconeEnvironment: pulumi.Input<string>;
    pineconeKey: pulumi.Input<string>;
}

export interface DestinationLangchainConfigurationProcessing {
    chunkOverlap?: pulumi.Input<number>;
    chunkSize: pulumi.Input<number>;
    textFields: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DestinationMSsqlConfiguration {
    /**
     * The name of the MSSQL database.
     */
    database: pulumi.Input<string>;
    /**
     * must be one of ["mssql"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * The host name of the MSSQL database.
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * The password associated with this username.
     */
    password?: pulumi.Input<string>;
    /**
     * The port of the MSSQL database.
     */
    port: pulumi.Input<number>;
    /**
     * The default schema tables are written to if the source does not specify a namespace. The usual value for this field is "public".
     */
    schema: pulumi.Input<string>;
    /**
     * The encryption method which is used to communicate with the database.
     */
    sslMethod?: pulumi.Input<inputs.DestinationMSsqlConfigurationSslMethod>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.DestinationMSsqlConfigurationTunnelMethod>;
    /**
     * The username which is used to access the database.
     */
    username: pulumi.Input<string>;
}

export interface DestinationMSsqlConfigurationSslMethod {
    destinationMssqlSslMethodEncryptedTrustServerCertificate?: pulumi.Input<inputs.DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate>;
    destinationMssqlSslMethodEncryptedVerifyCertificate?: pulumi.Input<inputs.DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate>;
    destinationMssqlUpdateSslMethodEncryptedTrustServerCertificate?: pulumi.Input<inputs.DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate>;
    destinationMssqlUpdateSslMethodEncryptedVerifyCertificate?: pulumi.Input<inputs.DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate>;
}

export interface DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate {
    sslMethod: pulumi.Input<string>;
}

export interface DestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate {
    hostNameInCertificate?: pulumi.Input<string>;
    sslMethod: pulumi.Input<string>;
}

export interface DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate {
    sslMethod: pulumi.Input<string>;
}

export interface DestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate {
    hostNameInCertificate?: pulumi.Input<string>;
    sslMethod: pulumi.Input<string>;
}

export interface DestinationMSsqlConfigurationTunnelMethod {
    destinationMssqlSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel>;
    destinationMssqlSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication>;
    destinationMssqlSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication>;
    destinationMssqlUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel>;
    destinationMssqlUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication>;
    destinationMssqlUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationMongodbConfiguration {
    /**
     * Authorization type.
     */
    authType: pulumi.Input<inputs.DestinationMongodbConfigurationAuthType>;
    /**
     * Name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * must be one of ["mongodb"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default.
     */
    instanceType?: pulumi.Input<inputs.DestinationMongodbConfigurationInstanceType>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.DestinationMongodbConfigurationTunnelMethod>;
}

export interface DestinationMongodbConfigurationAuthType {
    destinationMongodbAuthorizationTypeLoginPassword?: pulumi.Input<inputs.DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword>;
    destinationMongodbAuthorizationTypeNone?: pulumi.Input<inputs.DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone>;
    destinationMongodbUpdateAuthorizationTypeLoginPassword?: pulumi.Input<inputs.DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword>;
    destinationMongodbUpdateAuthorizationTypeNone?: pulumi.Input<inputs.DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone>;
}

export interface DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword {
    authorization: pulumi.Input<string>;
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone {
    authorization: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword {
    authorization: pulumi.Input<string>;
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone {
    authorization: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationInstanceType {
    destinationMongodbMongoDbInstanceTypeMongoDbAtlas?: pulumi.Input<inputs.DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas>;
    destinationMongodbMongoDbInstanceTypeReplicaSet?: pulumi.Input<inputs.DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet>;
    destinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance?: pulumi.Input<inputs.DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance>;
    destinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas?: pulumi.Input<inputs.DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas>;
    destinationMongodbUpdateMongoDbInstanceTypeReplicaSet?: pulumi.Input<inputs.DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet>;
    destinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance?: pulumi.Input<inputs.DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance>;
}

export interface DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas {
    clusterUrl: pulumi.Input<string>;
    instance: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet {
    instance: pulumi.Input<string>;
    replicaSet?: pulumi.Input<string>;
    serverAddresses: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance {
    host: pulumi.Input<string>;
    instance: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas {
    clusterUrl: pulumi.Input<string>;
    instance: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet {
    instance: pulumi.Input<string>;
    replicaSet?: pulumi.Input<string>;
    serverAddresses: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance {
    host: pulumi.Input<string>;
    instance: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface DestinationMongodbConfigurationTunnelMethod {
    destinationMongodbSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel>;
    destinationMongodbSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication>;
    destinationMongodbSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication>;
    destinationMongodbUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel>;
    destinationMongodbUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication>;
    destinationMongodbUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationMysqlConfiguration {
    /**
     * Name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * must be one of ["mysql"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Hostname of the database.
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * Password associated with the username.
     */
    password?: pulumi.Input<string>;
    /**
     * Port of the database.
     */
    port: pulumi.Input<number>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.DestinationMysqlConfigurationTunnelMethod>;
    /**
     * Username to use to access the database.
     */
    username: pulumi.Input<string>;
}

export interface DestinationMysqlConfigurationTunnelMethod {
    destinationMysqlSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel>;
    destinationMysqlSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication>;
    destinationMysqlSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication>;
    destinationMysqlUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel>;
    destinationMysqlUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication>;
    destinationMysqlUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationOracleConfiguration {
    /**
     * must be one of ["oracle"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * The hostname of the database.
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * The password associated with the username.
     */
    password?: pulumi.Input<string>;
    /**
     * The port of the database.
     */
    port: pulumi.Input<number>;
    /**
     * The default schema is used as the target schema for all statements issued from the connection that do not explicitly specify a schema name. The usual value for this field is "airbyte".  In Oracle, schemas and users are the same thing, so the "user" parameter is used as the login credentials and this is used for the default Airbyte message schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * The System Identifier uniquely distinguishes the instance from any other instance on the same computer.
     */
    sid: pulumi.Input<string>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.DestinationOracleConfigurationTunnelMethod>;
    /**
     * The username to access the database. This user must have CREATE USER privileges in the database.
     */
    username: pulumi.Input<string>;
}

export interface DestinationOracleConfigurationTunnelMethod {
    destinationOracleSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel>;
    destinationOracleSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication>;
    destinationOracleSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication>;
    destinationOracleUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel>;
    destinationOracleUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication>;
    destinationOracleUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationPostgresConfiguration {
    /**
     * Name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * must be one of ["postgres"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Hostname of the database.
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * Password associated with the username.
     */
    password?: pulumi.Input<string>;
    /**
     * Port of the database.
     */
    port: pulumi.Input<number>;
    /**
     * The default schema tables are written to if the source does not specify a namespace. The usual value for this field is "public".
     */
    schema: pulumi.Input<string>;
    /**
     * SSL connection modes.
     * \n\ndisable\n\n - Chose this mode to disable encryption of communication between Airbyte and destination database
     * \n\nallow\n\n - Chose this mode to enable encryption only when required by the source database
     * \n\nprefer\n\n - Chose this mode to allow unencrypted connection only if the source database does not support encryption
     * \n\nrequire\n\n - Chose this mode to always require encryption. If the source database server does not support encryption, connection will fail
     * \n\nverify-ca\n\n - Chose this mode to always require encryption and to verify that the source database server has a valid SSL certificate
     * \n\nverify-full\n\n - This is the most secure mode. Chose this mode to always require encryption and to verify the identity of the source database server
     * See more information - \n\n in the docs\n\n.
     */
    sslMode?: pulumi.Input<inputs.DestinationPostgresConfigurationSslMode>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.DestinationPostgresConfigurationTunnelMethod>;
    /**
     * Username to use to access the database.
     */
    username: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslMode {
    destinationPostgresSslModesAllow?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow>;
    destinationPostgresSslModesDisable?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable>;
    destinationPostgresSslModesPrefer?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer>;
    destinationPostgresSslModesRequire?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire>;
    destinationPostgresSslModesVerifyCa?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa>;
    destinationPostgresSslModesVerifyFull?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull>;
    destinationPostgresUpdateSslModesAllow?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow>;
    destinationPostgresUpdateSslModesDisable?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable>;
    destinationPostgresUpdateSslModesPrefer?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer>;
    destinationPostgresUpdateSslModesRequire?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire>;
    destinationPostgresUpdateSslModesVerifyCa?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa>;
    destinationPostgresUpdateSslModesVerifyFull?: pulumi.Input<inputs.DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow {
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable {
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer {
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire {
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa {
    caCertificate: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull {
    caCertificate: pulumi.Input<string>;
    clientCertificate: pulumi.Input<string>;
    clientKey: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow {
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable {
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer {
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire {
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa {
    caCertificate: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull {
    caCertificate: pulumi.Input<string>;
    clientCertificate: pulumi.Input<string>;
    clientKey: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationTunnelMethod {
    destinationPostgresSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel>;
    destinationPostgresSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication>;
    destinationPostgresSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication>;
    destinationPostgresUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel>;
    destinationPostgresUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication>;
    destinationPostgresUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationPubsubConfiguration {
    /**
     * Number of ms before the buffer is flushed
     */
    batchingDelayThreshold?: pulumi.Input<number>;
    /**
     * Number of messages before the buffer is flushed
     */
    batchingElementCountThreshold?: pulumi.Input<number>;
    /**
     * If TRUE messages will be buffered instead of sending them one by one
     */
    batchingEnabled: pulumi.Input<boolean>;
    /**
     * Number of bytes before the buffer is flushed
     */
    batchingRequestBytesThreshold?: pulumi.Input<number>;
    /**
     * The contents of the JSON service account key. Check out the \n\ndocs\n\n if you need help generating this key.
     */
    credentialsJson: pulumi.Input<string>;
    /**
     * must be one of ["pubsub"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * If TRUE PubSub publisher will have \n\nmessage ordering\n\n enabled. Every message will have an ordering key of stream
     */
    orderingEnabled: pulumi.Input<boolean>;
    /**
     * The GCP project ID for the project containing the target PubSub.
     */
    projectId: pulumi.Input<string>;
    /**
     * The PubSub topic ID in the given GCP project ID.
     */
    topicId: pulumi.Input<string>;
}

export interface DestinationRedisConfiguration {
    /**
     * must be one of ["hash"]
     * Redis cache type to store data in.
     */
    cacheType: pulumi.Input<string>;
    /**
     * must be one of ["redis"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Redis host to connect to.
     */
    host: pulumi.Input<string>;
    /**
     * Password associated with Redis.
     */
    password?: pulumi.Input<string>;
    /**
     * Port of Redis.
     */
    port: pulumi.Input<number>;
    /**
     * Indicates whether SSL encryption protocol will be used to connect to Redis. It is recommended to use SSL connection if possible.
     */
    ssl?: pulumi.Input<boolean>;
    /**
     * SSL connection modes.
     * \n\n\n\nverify-full\n\n - This is the most secure mode. Always require encryption and verifies the identity of the source database server
     */
    sslMode?: pulumi.Input<inputs.DestinationRedisConfigurationSslMode>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.DestinationRedisConfigurationTunnelMethod>;
    /**
     * Username associated with Redis.
     */
    username: pulumi.Input<string>;
}

export interface DestinationRedisConfigurationSslMode {
    destinationRedisSslModesDisable?: pulumi.Input<inputs.DestinationRedisConfigurationSslModeDestinationRedisSslModesDisable>;
    destinationRedisSslModesVerifyFull?: pulumi.Input<inputs.DestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull>;
    destinationRedisUpdateSslModesDisable?: pulumi.Input<inputs.DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable>;
    destinationRedisUpdateSslModesVerifyFull?: pulumi.Input<inputs.DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull>;
}

export interface DestinationRedisConfigurationSslModeDestinationRedisSslModesDisable {
    mode: pulumi.Input<string>;
}

export interface DestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull {
    caCertificate: pulumi.Input<string>;
    clientCertificate: pulumi.Input<string>;
    clientKey: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable {
    mode: pulumi.Input<string>;
}

export interface DestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull {
    caCertificate: pulumi.Input<string>;
    clientCertificate: pulumi.Input<string>;
    clientKey: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface DestinationRedisConfigurationTunnelMethod {
    destinationRedisSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel>;
    destinationRedisSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication>;
    destinationRedisSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication>;
    destinationRedisUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel>;
    destinationRedisUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication>;
    destinationRedisUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationRedshiftConfiguration {
    /**
     * Name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * must be one of ["redshift"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com)
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * Password associated with the username.
     */
    password: pulumi.Input<string>;
    /**
     * Port of the database.
     */
    port: pulumi.Input<number>;
    /**
     * The default schema tables are written to if the source does not specify a namespace. Unless specifically configured, the usual value for this field is "public".
     */
    schema: pulumi.Input<string>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.DestinationRedshiftConfigurationTunnelMethod>;
    /**
     * The method how the data will be uploaded to the database.
     */
    uploadingMethod?: pulumi.Input<inputs.DestinationRedshiftConfigurationUploadingMethod>;
    /**
     * Username to use to access the database.
     */
    username: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationTunnelMethod {
    destinationRedshiftSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel>;
    destinationRedshiftSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication>;
    destinationRedshiftSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication>;
    destinationRedshiftUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel>;
    destinationRedshiftUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication>;
    destinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationUploadingMethod {
    destinationRedshiftUpdateUploadingMethodS3Staging?: pulumi.Input<inputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging>;
    destinationRedshiftUpdateUploadingMethodStandard?: pulumi.Input<inputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard>;
    destinationRedshiftUploadingMethodS3Staging?: pulumi.Input<inputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging>;
    destinationRedshiftUploadingMethodStandard?: pulumi.Input<inputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard>;
}

export interface DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging {
    accessKeyId: pulumi.Input<string>;
    encryption?: pulumi.Input<inputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption>;
    fileBufferCount?: pulumi.Input<number>;
    fileNamePattern?: pulumi.Input<string>;
    method: pulumi.Input<string>;
    purgeStagingData?: pulumi.Input<boolean>;
    s3BucketName: pulumi.Input<string>;
    s3BucketPath?: pulumi.Input<string>;
    s3BucketRegion: pulumi.Input<string>;
    secretAccessKey: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption {
    destinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption?: pulumi.Input<inputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption>;
    destinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption?: pulumi.Input<inputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption>;
}

export interface DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption {
    encryptionType: pulumi.Input<string>;
    keyEncryptingKey?: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption {
    encryptionType: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard {
    method: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging {
    accessKeyId: pulumi.Input<string>;
    encryption?: pulumi.Input<inputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption>;
    fileBufferCount?: pulumi.Input<number>;
    fileNamePattern?: pulumi.Input<string>;
    method: pulumi.Input<string>;
    purgeStagingData?: pulumi.Input<boolean>;
    s3BucketName: pulumi.Input<string>;
    s3BucketPath?: pulumi.Input<string>;
    s3BucketRegion: pulumi.Input<string>;
    secretAccessKey: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption {
    destinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption?: pulumi.Input<inputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption>;
    destinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption?: pulumi.Input<inputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption>;
}

export interface DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption {
    encryptionType: pulumi.Input<string>;
    keyEncryptingKey?: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption {
    encryptionType: pulumi.Input<string>;
}

export interface DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard {
    method: pulumi.Input<string>;
}

export interface DestinationS3Configuration {
    /**
     * The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more \n\nhere\n\n.
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * must be one of ["s3"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * The pattern allows you to set the file-name format for the S3 staging file(s)
     */
    fileNamePattern?: pulumi.Input<string>;
    /**
     * Format of the data output. See \n\nhere\n\n for more details
     */
    format: pulumi.Input<inputs.DestinationS3ConfigurationFormat>;
    /**
     * The name of the S3 bucket. Read more \n\nhere\n\n.
     */
    s3BucketName: pulumi.Input<string>;
    /**
     * Directory under the S3 bucket where data will be written. Read more \n\nhere\n\n
     */
    s3BucketPath: pulumi.Input<string>;
    /**
     * must be one of ["", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
     * The region of the S3 bucket. See \n\nhere\n\n for all region codes.
     */
    s3BucketRegion: pulumi.Input<string>;
    /**
     * Your S3 endpoint url. Read more \n\nhere\n\n
     */
    s3Endpoint?: pulumi.Input<string>;
    /**
     * Format string on how data will be organized inside the S3 bucket directory. Read more \n\nhere\n\n
     */
    s3PathFormat?: pulumi.Input<string>;
    /**
     * The corresponding secret to the access key ID. Read more \n\nhere\n\n
     */
    secretAccessKey?: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormat {
    destinationS3OutputFormatAvroApacheAvro?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro>;
    destinationS3OutputFormatCsvCommaSeparatedValues?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues>;
    destinationS3OutputFormatJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson>;
    destinationS3OutputFormatParquetColumnarStorage?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage>;
    destinationS3UpdateOutputFormatAvroApacheAvro?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro>;
    destinationS3UpdateOutputFormatCsvCommaSeparatedValues?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues>;
    destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson>;
    destinationS3UpdateOutputFormatParquetColumnarStorage?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro {
    compressionCodec: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec>;
    formatType: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec {
    destinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2>;
    destinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate>;
    destinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression>;
    destinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy>;
    destinationS3OutputFormatAvroApacheAvroCompressionCodecXz?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz>;
    destinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2 {
    codec: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate {
    codec: pulumi.Input<string>;
    compressionLevel: pulumi.Input<number>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression {
    codec: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy {
    codec: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz {
    codec: pulumi.Input<string>;
    compressionLevel: pulumi.Input<number>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard {
    codec: pulumi.Input<string>;
    compressionLevel: pulumi.Input<number>;
    includeChecksum?: pulumi.Input<boolean>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues {
    compression?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression>;
    flattening: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression {
    destinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip>;
    destinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson {
    compression?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression>;
    flattening?: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression {
    destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip>;
    destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage {
    blockSizeMb?: pulumi.Input<number>;
    compressionCodec?: pulumi.Input<string>;
    dictionaryEncoding?: pulumi.Input<boolean>;
    dictionaryPageSizeKb?: pulumi.Input<number>;
    formatType: pulumi.Input<string>;
    maxPaddingSizeMb?: pulumi.Input<number>;
    pageSizeKb?: pulumi.Input<number>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro {
    compressionCodec: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec>;
    formatType: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec {
    destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2>;
    destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate>;
    destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression>;
    destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy>;
    destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz>;
    destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2 {
    codec: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate {
    codec: pulumi.Input<string>;
    compressionLevel: pulumi.Input<number>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression {
    codec: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy {
    codec: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz {
    codec: pulumi.Input<string>;
    compressionLevel: pulumi.Input<number>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard {
    codec: pulumi.Input<string>;
    compressionLevel: pulumi.Input<number>;
    includeChecksum?: pulumi.Input<boolean>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues {
    compression?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression>;
    flattening: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression {
    destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip>;
    destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson {
    compression?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression>;
    flattening?: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression {
    destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip>;
    destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression?: pulumi.Input<inputs.DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage {
    blockSizeMb?: pulumi.Input<number>;
    compressionCodec?: pulumi.Input<string>;
    dictionaryEncoding?: pulumi.Input<boolean>;
    dictionaryPageSizeKb?: pulumi.Input<number>;
    formatType: pulumi.Input<string>;
    maxPaddingSizeMb?: pulumi.Input<number>;
    pageSizeKb?: pulumi.Input<number>;
}

export interface DestinationS3GlueConfiguration {
    /**
     * The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more \n\nhere\n\n.
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * must be one of ["s3-glue"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * The pattern allows you to set the file-name format for the S3 staging file(s)
     */
    fileNamePattern?: pulumi.Input<string>;
    /**
     * Format of the data output. See \n\nhere\n\n for more details
     */
    format: pulumi.Input<inputs.DestinationS3GlueConfigurationFormat>;
    /**
     * Name of the glue database for creating the tables, leave blank if no integration
     */
    glueDatabase: pulumi.Input<string>;
    /**
     * must be one of ["org.openx.data.jsonserde.JsonSerDe", "org.apache.hive.hcatalog.data.JsonSerDe"]
     * The library that your query engine will use for reading and writing data in your lake.
     */
    glueSerializationLibrary: pulumi.Input<string>;
    /**
     * The name of the S3 bucket. Read more \n\nhere\n\n.
     */
    s3BucketName: pulumi.Input<string>;
    /**
     * Directory under the S3 bucket where data will be written. Read more \n\nhere\n\n
     */
    s3BucketPath: pulumi.Input<string>;
    /**
     * must be one of ["", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
     * The region of the S3 bucket. See \n\nhere\n\n for all region codes.
     */
    s3BucketRegion: pulumi.Input<string>;
    /**
     * Your S3 endpoint url. Read more \n\nhere\n\n
     */
    s3Endpoint?: pulumi.Input<string>;
    /**
     * Format string on how data will be organized inside the S3 bucket directory. Read more \n\nhere\n\n
     */
    s3PathFormat?: pulumi.Input<string>;
    /**
     * The corresponding secret to the access key ID. Read more \n\nhere\n\n
     */
    secretAccessKey?: pulumi.Input<string>;
}

export interface DestinationS3GlueConfigurationFormat {
    destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson>;
    destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson>;
}

export interface DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson {
    compression?: pulumi.Input<inputs.DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression>;
    flattening?: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression {
    destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip?: pulumi.Input<inputs.DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip>;
    destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression?: pulumi.Input<inputs.DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression>;
}

export interface DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson {
    compression?: pulumi.Input<inputs.DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression>;
    flattening?: pulumi.Input<string>;
    formatType: pulumi.Input<string>;
}

export interface DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression {
    destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip?: pulumi.Input<inputs.DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip>;
    destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression?: pulumi.Input<inputs.DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression>;
}

export interface DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression {
    compressionType?: pulumi.Input<string>;
}

export interface DestinationSftpJsonConfiguration {
    /**
     * Path to the directory where json files will be written.
     */
    destinationPath: pulumi.Input<string>;
    /**
     * must be one of ["sftp-json"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Hostname of the SFTP server.
     */
    host: pulumi.Input<string>;
    /**
     * Password associated with the username.
     */
    password: pulumi.Input<string>;
    /**
     * Port of the SFTP server.
     */
    port?: pulumi.Input<number>;
    /**
     * Username to use to access the SFTP server.
     */
    username: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfiguration {
    credentials?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentials>;
    /**
     * Enter the name of the \n\ndatabase\n\n you want to sync data into
     */
    database: pulumi.Input<string>;
    /**
     * must be one of ["snowflake"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Enter your Snowflake account's \n\nlocator\n\n (in the format \n\n.\n\n.\n\n.snowflakecomputing.com)
     */
    host: pulumi.Input<string>;
    /**
     * Enter the additional properties to pass to the JDBC URL string when connecting to the database (formatted as key=value pairs separated by the symbol &). Example: key1=value1&key2=value2&key3=value3
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * (Beta) The schema to write raw tables into
     */
    rawDataSchema?: pulumi.Input<string>;
    /**
     * Enter the \n\nrole\n\n that you want to use to access Snowflake
     */
    role: pulumi.Input<string>;
    /**
     * Enter the name of the default \n\nschema\n\n
     */
    schema: pulumi.Input<string>;
    /**
     * (Beta) Use \n\nDestinations V2\n\n. Contact Airbyte Support to participate in the beta program.
     */
    use1s1tFormat?: pulumi.Input<boolean>;
    /**
     * Enter the name of the user you want to use to access the database
     */
    username: pulumi.Input<string>;
    /**
     * Enter the name of the \n\nwarehouse\n\n that you want to sync data into
     */
    warehouse: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentials {
    destinationSnowflakeAuthorizationMethodKeyPairAuthentication?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication>;
    destinationSnowflakeAuthorizationMethodOAuth20?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20>;
    destinationSnowflakeAuthorizationMethodUsernameAndPassword?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword>;
    destinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication>;
    destinationSnowflakeUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20>;
    destinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication {
    authType?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
    privateKeyPassword?: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword {
    authType?: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication {
    authType?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
    privateKeyPassword?: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword {
    authType?: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface DestinationTimeplusConfiguration {
    /**
     * Personal API key
     */
    apikey: pulumi.Input<string>;
    /**
     * must be one of ["timeplus"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Timeplus workspace endpoint
     */
    endpoint: pulumi.Input<string>;
}

export interface DestinationTypesenseConfiguration {
    /**
     * Typesense API Key
     */
    apiKey: pulumi.Input<string>;
    /**
     * How many documents should be imported together. Default 1000
     */
    batchSize?: pulumi.Input<string>;
    /**
     * must be one of ["typesense"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Hostname of the Typesense instance without protocol.
     */
    host: pulumi.Input<string>;
    /**
     * Port of the Typesense instance. Ex: 8108, 80, 443. Default is 443
     */
    port?: pulumi.Input<string>;
    /**
     * Protocol of the Typesense instance. Ex: http or https. Default is https
     */
    protocol?: pulumi.Input<string>;
}

export interface DestinationVerticaConfiguration {
    /**
     * Name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * must be one of ["vertica"]
     */
    destinationType: pulumi.Input<string>;
    /**
     * Hostname of the database.
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * Password associated with the username.
     */
    password?: pulumi.Input<string>;
    /**
     * Port of the database.
     */
    port: pulumi.Input<number>;
    /**
     * Schema for vertica destination
     */
    schema: pulumi.Input<string>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.DestinationVerticaConfigurationTunnelMethod>;
    /**
     * Username to use to access the database.
     */
    username: pulumi.Input<string>;
}

export interface DestinationVerticaConfigurationTunnelMethod {
    destinationVerticaSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel>;
    destinationVerticaSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication>;
    destinationVerticaSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication>;
    destinationVerticaUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel>;
    destinationVerticaUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication>;
    destinationVerticaUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface DestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface DestinationXataConfiguration {
    /**
     * API Key to connect.
     */
    apiKey: pulumi.Input<string>;
    /**
     * URL pointing to your workspace.
     */
    dbUrl: pulumi.Input<string>;
    /**
     * must be one of ["xata"]
     */
    destinationType: pulumi.Input<string>;
}

export interface SourceAhaConfiguration {
    /**
     * API Key
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["aha"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * URL
     */
    url: pulumi.Input<string>;
}

export interface SourceAircallConfiguration {
    /**
     * App ID found at settings https://dashboard.aircall.io/integrations/api-keys
     */
    apiId: pulumi.Input<string>;
    /**
     * App token found at settings (Ref- https://dashboard.aircall.io/integrations/api-keys)
     */
    apiToken: pulumi.Input<string>;
    /**
     * must be one of ["aircall"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Date time filter for incremental filter, Specify which date to extract from.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceAirtableConfiguration {
    credentials?: pulumi.Input<inputs.SourceAirtableConfigurationCredentials>;
    /**
     * must be one of ["airtable"]
     */
    sourceType?: pulumi.Input<string>;
}

export interface SourceAirtableConfigurationCredentials {
    sourceAirtableAuthenticationOAuth20?: pulumi.Input<inputs.SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20>;
    sourceAirtableAuthenticationPersonalAccessToken?: pulumi.Input<inputs.SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken>;
    sourceAirtableUpdateAuthenticationOAuth20?: pulumi.Input<inputs.SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20>;
    sourceAirtableUpdateAuthenticationPersonalAccessToken?: pulumi.Input<inputs.SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken>;
}

export interface SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20 {
    accessToken?: pulumi.Input<string>;
    authMethod?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate?: pulumi.Input<string>;
}

export interface SourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken {
    apiKey: pulumi.Input<string>;
    authMethod?: pulumi.Input<string>;
}

export interface SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20 {
    accessToken?: pulumi.Input<string>;
    authMethod?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate?: pulumi.Input<string>;
}

export interface SourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken {
    apiKey: pulumi.Input<string>;
    authMethod?: pulumi.Input<string>;
}

export interface SourceAlloydbConfiguration {
    /**
     * Name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * Hostname of the database.
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about \n\nJDBC URL parameters\n\n.
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * Password associated with the username.
     */
    password?: pulumi.Input<string>;
    /**
     * Port of the database.
     */
    port: pulumi.Input<number>;
    /**
     * Replication method for extracting data from the database.
     */
    replicationMethod?: pulumi.Input<inputs.SourceAlloydbConfigurationReplicationMethod>;
    /**
     * The list of schemas (case sensitive) to sync from. Defaults to public.
     */
    schemas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * must be one of ["alloydb"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * SSL connection modes.
     * Read more \n\n in the docs\n\n.
     */
    sslMode?: pulumi.Input<inputs.SourceAlloydbConfigurationSslMode>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.SourceAlloydbConfigurationTunnelMethod>;
    /**
     * Username to access the database.
     */
    username: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationReplicationMethod {
    sourceAlloydbReplicationMethodLogicalReplicationCdc?: pulumi.Input<inputs.SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc>;
    sourceAlloydbReplicationMethodStandard?: pulumi.Input<inputs.SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard>;
    sourceAlloydbReplicationMethodStandardXmin?: pulumi.Input<inputs.SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin>;
    sourceAlloydbUpdateReplicationMethodLogicalReplicationCdc?: pulumi.Input<inputs.SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc>;
    sourceAlloydbUpdateReplicationMethodStandard?: pulumi.Input<inputs.SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard>;
    sourceAlloydbUpdateReplicationMethodStandardXmin?: pulumi.Input<inputs.SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin>;
}

export interface SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc {
    additionalProperties?: pulumi.Input<string>;
    initialWaitingSeconds?: pulumi.Input<number>;
    lsnCommitBehaviour?: pulumi.Input<string>;
    method: pulumi.Input<string>;
    plugin?: pulumi.Input<string>;
    publication: pulumi.Input<string>;
    queueSize?: pulumi.Input<number>;
    replicationSlot: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard {
    method: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin {
    method: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc {
    additionalProperties?: pulumi.Input<string>;
    initialWaitingSeconds?: pulumi.Input<number>;
    lsnCommitBehaviour?: pulumi.Input<string>;
    method: pulumi.Input<string>;
    plugin?: pulumi.Input<string>;
    publication: pulumi.Input<string>;
    queueSize?: pulumi.Input<number>;
    replicationSlot: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard {
    method: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin {
    method: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslMode {
    sourceAlloydbSslModesAllow?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow>;
    sourceAlloydbSslModesDisable?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable>;
    sourceAlloydbSslModesPrefer?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer>;
    sourceAlloydbSslModesRequire?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire>;
    sourceAlloydbSslModesVerifyCa?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa>;
    sourceAlloydbSslModesVerifyFull?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull>;
    sourceAlloydbUpdateSslModesAllow?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow>;
    sourceAlloydbUpdateSslModesDisable?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable>;
    sourceAlloydbUpdateSslModesPrefer?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer>;
    sourceAlloydbUpdateSslModesRequire?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire>;
    sourceAlloydbUpdateSslModesVerifyCa?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa>;
    sourceAlloydbUpdateSslModesVerifyFull?: pulumi.Input<inputs.SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa {
    additionalProperties?: pulumi.Input<string>;
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull {
    additionalProperties?: pulumi.Input<string>;
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa {
    additionalProperties?: pulumi.Input<string>;
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull {
    additionalProperties?: pulumi.Input<string>;
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationTunnelMethod {
    sourceAlloydbSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel>;
    sourceAlloydbSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication>;
    sourceAlloydbSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication>;
    sourceAlloydbUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel>;
    sourceAlloydbUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication>;
    sourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourceAmazonAdsConfiguration {
    /**
     * must be one of ["oauth2.0"]
     */
    authType?: pulumi.Input<string>;
    /**
     * The client ID of your Amazon Ads developer application. See the \n\ndocs\n\n for more information.
     */
    clientId: pulumi.Input<string>;
    /**
     * The client secret of your Amazon Ads developer application. See the \n\ndocs\n\n for more information.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * The amount of days to go back in time to get the updated data from Amazon Ads
     */
    lookBackWindow?: pulumi.Input<number>;
    /**
     * Profile IDs you want to fetch data for. See \n\ndocs\n\n for more details.
     */
    profiles?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Amazon Ads refresh token. See the \n\ndocs\n\n for more information on how to obtain this token.
     */
    refreshToken: pulumi.Input<string>;
    /**
     * must be one of ["NA", "EU", "FE"]
     * Region to pull data from (EU/NA/FE). See \n\ndocs\n\n for more details.
     */
    region?: pulumi.Input<string>;
    /**
     * Optional configuration which accepts an array of string of record types. Leave blank for default behaviour to pull all report types. Use this config option only if you want to pull specific report type(s). See \n\ndocs\n\n for more details
     */
    reportRecordTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * must be one of ["amazon-ads"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format
     */
    startDate?: pulumi.Input<string>;
    /**
     * Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.
     */
    stateFilters?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SourceAmazonSellerPartnerConfiguration {
    /**
     * Additional information to configure report options. This varies by report type, not every report implement this kind of feature. Must be a valid json string.
     */
    advancedStreamOptions?: pulumi.Input<string>;
    /**
     * must be one of ["oauth2.0"]
     */
    authType?: pulumi.Input<string>;
    /**
     * Specifies the AWS access key used as part of the credentials to authenticate the user.
     */
    awsAccessKey?: pulumi.Input<string>;
    /**
     * must be one of ["PRODUCTION", "SANDBOX"]
     * Select the AWS Environment.
     */
    awsEnvironment: pulumi.Input<string>;
    /**
     * Specifies the AWS secret key used as part of the credentials to authenticate the user.
     */
    awsSecretKey?: pulumi.Input<string>;
    /**
     * Your Login with Amazon Client ID.
     */
    lwaAppId: pulumi.Input<string>;
    /**
     * Your Login with Amazon Client Secret.
     */
    lwaClientSecret: pulumi.Input<string>;
    /**
     * Sometimes report can take up to 30 minutes to generate. This will set the limit for how long to wait for a successful report.
     */
    maxWaitSeconds?: pulumi.Input<number>;
    /**
     * Will be used for stream slicing for initial fullRefresh sync when no updated state is present for reports that support sliced incremental sync.
     */
    periodInDays?: pulumi.Input<number>;
    /**
     * The Refresh Token obtained via OAuth flow authorization.
     */
    refreshToken: pulumi.Input<string>;
    /**
     * must be one of ["AE", "AU", "BE", "BR", "CA", "DE", "EG", "ES", "FR", "GB", "IN", "IT", "JP", "MX", "NL", "PL", "SA", "SE", "SG", "TR", "UK", "US"]
     * Select the AWS Region.
     */
    region: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.
     */
    replicationEndDate?: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    replicationStartDate: pulumi.Input<string>;
    /**
     * Additional information passed to reports. This varies by report type. Must be a valid json string.
     */
    reportOptions?: pulumi.Input<string>;
    /**
     * Specifies the Amazon Resource Name (ARN) of an IAM role that you want to use to perform operations requested using this profile. (Needs permission to 'Assume Role' STS).
     */
    roleArn?: pulumi.Input<string>;
    /**
     * must be one of ["amazon-seller-partner"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceAmazonSqsConfiguration {
    /**
     * The Access Key ID of the AWS IAM Role to use for pulling messages
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Comma separated list of Mesage Attribute names to return
     */
    attributesToReturn?: pulumi.Input<string>;
    /**
     * If Enabled, messages will be deleted from the SQS Queue after being read. If Disabled, messages are left in the queue and can be read more than once. WARNING: Enabling this option can result in data loss in cases of failure, use with caution, see documentation for more detail.
     */
    deleteMessages: pulumi.Input<boolean>;
    /**
     * Max amount of messages to get in one batch (10 max)
     */
    maxBatchSize?: pulumi.Input<number>;
    /**
     * Max amount of time in seconds to wait for messages in a single poll (20 max)
     */
    maxWaitTime?: pulumi.Input<number>;
    /**
     * URL of the SQS Queue
     */
    queueUrl: pulumi.Input<string>;
    /**
     * must be one of ["us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
     * AWS Region of the SQS Queue
     */
    region: pulumi.Input<string>;
    /**
     * The Secret Key of the AWS IAM Role to use for pulling messages
     */
    secretKey?: pulumi.Input<string>;
    /**
     * must be one of ["amazon-sqs"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Modify the Visibility Timeout of the individual message from the Queue's default (seconds).
     */
    visibilityTimeout?: pulumi.Input<number>;
}

export interface SourceAmplitudeConfiguration {
    /**
     * Amplitude API Key. See the \n\nsetup guide\n\n for more information on how to obtain this key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["Standard Server", "EU Residency Server"]
     * Amplitude data region server
     */
    dataRegion?: pulumi.Input<string>;
    /**
     * According to \n\nConsiderations\n\n too big time range in request can cause a timeout error. In this case, set shorter time interval in hours.
     */
    requestTimeRange?: pulumi.Input<number>;
    /**
     * Amplitude Secret Key. See the \n\nsetup guide\n\n for more information on how to obtain this key.
     */
    secretKey: pulumi.Input<string>;
    /**
     * must be one of ["amplitude"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2021-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceApifyDatasetConfiguration {
    /**
     * If set to true, only clean items will be downloaded from the dataset. See description of what clean means in \n\nApify API docs\n\n. If not sure, set clean to false.
     */
    clean?: pulumi.Input<boolean>;
    /**
     * ID of the dataset you would like to load to Airbyte.
     */
    datasetId: pulumi.Input<string>;
    /**
     * must be one of ["apify-dataset"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceAppfollowConfiguration {
    /**
     * API Key provided by Appfollow
     */
    apiSecret?: pulumi.Input<string>;
    /**
     * must be one of ["appfollow"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceAsanaConfiguration {
    /**
     * Choose how to authenticate to Github
     */
    credentials?: pulumi.Input<inputs.SourceAsanaConfigurationCredentials>;
    /**
     * must be one of ["asana"]
     */
    sourceType?: pulumi.Input<string>;
}

export interface SourceAsanaConfigurationCredentials {
    sourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth?: pulumi.Input<inputs.SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth>;
    sourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken?: pulumi.Input<inputs.SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken>;
    sourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth?: pulumi.Input<inputs.SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth>;
    sourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken?: pulumi.Input<inputs.SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken>;
}

export interface SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    optionTitle?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken {
    optionTitle?: pulumi.Input<string>;
    personalAccessToken: pulumi.Input<string>;
}

export interface SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    optionTitle?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken {
    optionTitle?: pulumi.Input<string>;
    personalAccessToken: pulumi.Input<string>;
}

export interface SourceAuth0Configuration {
    /**
     * The Authentication API is served over HTTPS. All URLs referenced in the documentation have the following base `https://YOUR_DOMAIN`
     */
    baseUrl: pulumi.Input<string>;
    credentials: pulumi.Input<inputs.SourceAuth0ConfigurationCredentials>;
    /**
     * must be one of ["auth0"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceAuth0ConfigurationCredentials {
    sourceAuth0AuthenticationMethodOAuth2AccessToken?: pulumi.Input<inputs.SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken>;
    sourceAuth0AuthenticationMethodOAuth2ConfidentialApplication?: pulumi.Input<inputs.SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication>;
    sourceAuth0UpdateAuthenticationMethodOAuth2AccessToken?: pulumi.Input<inputs.SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken>;
    sourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication?: pulumi.Input<inputs.SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication>;
}

export interface SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken {
    accessToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication {
    audience: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
}

export interface SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken {
    accessToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication {
    audience: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
}

export interface SourceAwsCloudtrailConfiguration {
    /**
     * AWS CloudTrail Access Key ID. See the \n\ndocs\n\n for more information on how to obtain this key.
     */
    awsKeyId: pulumi.Input<string>;
    /**
     * The default AWS Region to use, for example, us-west-1 or us-west-2. When specifying a Region inline during client initialization, this property is named region_name.
     */
    awsRegionName: pulumi.Input<string>;
    /**
     * AWS CloudTrail Access Key ID. See the \n\ndocs\n\n for more information on how to obtain this key.
     */
    awsSecretKey: pulumi.Input<string>;
    /**
     * must be one of ["aws-cloudtrail"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date you would like to replicate data. Data in AWS CloudTrail is available for last 90 days only. Format: YYYY-MM-DD.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceAzureBlobStorageConfiguration {
    /**
     * The Azure blob storage account key.
     */
    azureBlobStorageAccountKey: pulumi.Input<string>;
    /**
     * The account's name of the Azure Blob Storage.
     */
    azureBlobStorageAccountName: pulumi.Input<string>;
    /**
     * The Azure blob storage prefix to be applied
     */
    azureBlobStorageBlobsPrefix?: pulumi.Input<string>;
    /**
     * The name of the Azure blob storage container.
     */
    azureBlobStorageContainerName: pulumi.Input<string>;
    /**
     * This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.
     */
    azureBlobStorageEndpoint?: pulumi.Input<string>;
    /**
     * The Azure blob storage blobs to scan for inferring the schema, useful on large amounts of data with consistent structure
     */
    azureBlobStorageSchemaInferenceLimit?: pulumi.Input<number>;
    /**
     * Input data format
     */
    format: pulumi.Input<inputs.SourceAzureBlobStorageConfigurationFormat>;
    /**
     * must be one of ["azure-blob-storage"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceAzureBlobStorageConfigurationFormat {
    sourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson>;
    sourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson?: pulumi.Input<inputs.SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson>;
}

export interface SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson {
    formatType: pulumi.Input<string>;
}

export interface SourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson {
    formatType: pulumi.Input<string>;
}

export interface SourceAzureTableConfiguration {
    /**
     * must be one of ["azure-table"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Azure Table Storage Access Key. See the \n\ndocs\n\n for more information on how to obtain this key.
     */
    storageAccessKey: pulumi.Input<string>;
    /**
     * The name of your storage account.
     */
    storageAccountName: pulumi.Input<string>;
    /**
     * Azure Table Storage service account URL suffix. See the \n\ndocs\n\n for more information on how to obtain endpoint suffix
     */
    storageEndpointSuffix?: pulumi.Input<string>;
}

export interface SourceBambooHrConfiguration {
    /**
     * Api key of bamboo hr
     */
    apiKey: pulumi.Input<string>;
    /**
     * Comma-separated list of fields to include in custom reports.
     */
    customReportsFields?: pulumi.Input<string>;
    /**
     * If true, the custom reports endpoint will include the default fields defined here: https://documentation.bamboohr.com/docs/list-of-field-names.
     */
    customReportsIncludeDefaultFields?: pulumi.Input<boolean>;
    /**
     * must be one of ["bamboo-hr"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Sub Domain of bamboo hr
     */
    subdomain: pulumi.Input<string>;
}

export interface SourceBigcommerceConfiguration {
    /**
     * Access Token for making authenticated requests.
     */
    accessToken: pulumi.Input<string>;
    /**
     * must be one of ["bigcommerce"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date you would like to replicate data. Format: YYYY-MM-DD.
     */
    startDate: pulumi.Input<string>;
    /**
     * The hash code of the store. For https://api.bigcommerce.com/stores/HASH*CODE/v3/, The store's hash code is 'HASH*CODE'.
     */
    storeHash: pulumi.Input<string>;
}

export interface SourceBigqueryConfiguration {
    /**
     * The contents of your Service Account Key JSON file. See the \n\ndocs\n\n for more information on how to obtain this key.
     */
    credentialsJson: pulumi.Input<string>;
    /**
     * The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.
     */
    datasetId?: pulumi.Input<string>;
    /**
     * The GCP project ID for the project containing the target BigQuery dataset.
     */
    projectId: pulumi.Input<string>;
    /**
     * must be one of ["bigquery"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceBingAdsConfiguration {
    /**
     * must be one of ["oauth2.0"]
     */
    authMethod?: pulumi.Input<string>;
    /**
     * The Client ID of your Microsoft Advertising developer application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of your Microsoft Advertising developer application.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Developer token associated with user. See more info \n\n in the docs\n\n.
     */
    developerToken: pulumi.Input<string>;
    /**
     * Also known as attribution or conversion window. How far into the past to look for records (in days). If your conversion window has an hours/minutes granularity, round it up to the number of days exceeding. Used only for performance report streams in incremental mode.
     */
    lookbackWindow?: pulumi.Input<number>;
    /**
     * Refresh Token to renew the expired Access Token.
     */
    refreshToken: pulumi.Input<string>;
    /**
     * The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format.
     */
    reportsStartDate: pulumi.Input<string>;
    /**
     * must be one of ["bing-ads"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The Tenant ID of your Microsoft Advertising developer application. Set this to "common" unless you know you need a different value.
     */
    tenantId?: pulumi.Input<string>;
}

export interface SourceBraintreeConfiguration {
    /**
     * must be one of ["Development", "Sandbox", "Qa", "Production"]
     * Environment specifies where the data will come from.
     */
    environment: pulumi.Input<string>;
    /**
     * The unique identifier for your entire gateway account. See the \n\ndocs\n\n for more information on how to obtain this ID.
     */
    merchantId: pulumi.Input<string>;
    /**
     * Braintree Private Key. See the \n\ndocs\n\n for more information on how to obtain this key.
     */
    privateKey: pulumi.Input<string>;
    /**
     * Braintree Public Key. See the \n\ndocs\n\n for more information on how to obtain this key.
     */
    publicKey: pulumi.Input<string>;
    /**
     * must be one of ["braintree"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceBrazeConfiguration {
    /**
     * Braze REST API key
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["braze"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Rows after this date will be synced
     */
    startDate: pulumi.Input<string>;
    /**
     * Braze REST API endpoint
     */
    url: pulumi.Input<string>;
}

export interface SourceChargebeeConfiguration {
    /**
     * must be one of ["1.0", "2.0"]
     * Product Catalog version of your Chargebee site. Instructions on how to find your version you may find \n\nhere\n\n under `API Version` section.
     */
    productCatalog: pulumi.Input<string>;
    /**
     * The site prefix for your Chargebee instance.
     */
    site: pulumi.Input<string>;
    /**
     * Chargebee API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
     */
    siteApiKey: pulumi.Input<string>;
    /**
     * must be one of ["chargebee"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2021-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceChartmogulConfiguration {
    /**
     * Your Chartmogul API key. See \n\n the docs \n\n for info on how to obtain this.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["day", "week", "month", "quarter"]
     * Some APIs such as \n\nMetrics\n\n require intervals to cluster data.
     */
    interval: pulumi.Input<string>;
    /**
     * must be one of ["chartmogul"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. When feasible, any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceClickhouseConfiguration {
    /**
     * The name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * The host endpoint of the Clickhouse cluster.
     */
    host: pulumi.Input<string>;
    /**
     * The password associated with this username.
     */
    password?: pulumi.Input<string>;
    /**
     * The port of the database.
     */
    port: pulumi.Input<number>;
    /**
     * must be one of ["clickhouse"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.SourceClickhouseConfigurationTunnelMethod>;
    /**
     * The username which is used to access the database.
     */
    username: pulumi.Input<string>;
}

export interface SourceClickhouseConfigurationTunnelMethod {
    sourceClickhouseSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel>;
    sourceClickhouseSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication>;
    sourceClickhouseSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication>;
    sourceClickhouseUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel>;
    sourceClickhouseUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication>;
    sourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourceClickupApiConfiguration {
    /**
     * Every ClickUp API call required authentication. This field is your personal API token. See \n\nhere\n\n.
     */
    apiToken: pulumi.Input<string>;
    /**
     * The ID of your folder in your space. Retrieve it from the `/space/{space_id}/folder` of the ClickUp API. See \n\nhere\n\n.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Include or exclude closed tasks. By default, they are excluded. See \n\nhere\n\n.
     */
    includeClosedTasks?: pulumi.Input<boolean>;
    /**
     * The ID of your list in your folder. Retrieve it from the `/folder/{folder_id}/list` of the ClickUp API. See \n\nhere\n\n.
     */
    listId?: pulumi.Input<string>;
    /**
     * must be one of ["clickup-api"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The ID of your space in your workspace. Retrieve it from the `/team/{team_id}/space` of the ClickUp API. See \n\nhere\n\n.
     */
    spaceId?: pulumi.Input<string>;
    /**
     * The ID of your team in ClickUp. Retrieve it from the `/team` of the ClickUp API. See \n\nhere\n\n.
     */
    teamId?: pulumi.Input<string>;
}

export interface SourceClockifyConfiguration {
    /**
     * You can get your api accessKey \n\nhere\n\n This API is Case Sensitive.
     */
    apiKey: pulumi.Input<string>;
    /**
     * The URL for the Clockify API. This should only need to be modified if connecting to an enterprise version of Clockify.
     */
    apiUrl?: pulumi.Input<string>;
    /**
     * must be one of ["clockify"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * WorkSpace Id
     */
    workspaceId: pulumi.Input<string>;
}

export interface SourceCloseComConfiguration {
    /**
     * Close.com API key (usually starts with 'api_'; find yours \n\nhere\n\n).
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["close-com"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The start date to sync data; all data after this date will be replicated. Leave blank to retrieve all the data available in the account. Format: YYYY-MM-DD.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceCodaConfiguration {
    /**
     * Bearer token
     */
    authToken: pulumi.Input<string>;
    /**
     * must be one of ["coda"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceCoinApiConfiguration {
    /**
     * API Key
     */
    apiKey: pulumi.Input<string>;
    /**
     * The end date in ISO 8601 format. If not supplied, data will be returned
     * from the start date to the current time, or when the count of result
     * elements reaches its limit.
     */
    endDate?: pulumi.Input<string>;
    /**
     * must be one of ["sandbox", "production"]
     * The environment to use. Either sandbox or production.
     */
    environment: pulumi.Input<string>;
    /**
     * The maximum number of elements to return. If not supplied, the default
     * is 100. For numbers larger than 100, each 100 items is counted as one
     * request for pricing purposes. Maximum value is 100000.
     */
    limit?: pulumi.Input<number>;
    /**
     * The period to use. See the documentation for a list. https://docs.coinapi.io/#list-all-periods-get
     */
    period: pulumi.Input<string>;
    /**
     * must be one of ["coin-api"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The start date in ISO 8601 format.
     */
    startDate: pulumi.Input<string>;
    /**
     * The symbol ID to use. See the documentation for a list.
     * https://docs.coinapi.io/#list-all-symbols-get
     */
    symbolId: pulumi.Input<string>;
}

export interface SourceCoinmarketcapConfiguration {
    /**
     * Your API Key. See \n\nhere\n\n. The token is case sensitive.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["latest", "historical"]
     * /latest: Latest market ticker quotes and averages for cryptocurrencies and exchanges. /historical: Intervals of historic market data like OHLCV data or data for use in charting libraries. See \n\nhere\n\n.
     */
    dataType: pulumi.Input<string>;
    /**
     * must be one of ["coinmarketcap"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Cryptocurrency symbols. (only used for quotes stream)
     */
    symbols?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SourceConfigcatConfiguration {
    /**
     * Basic auth password. See \n\nhere\n\n.
     */
    password: pulumi.Input<string>;
    /**
     * must be one of ["configcat"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Basic auth user name. See \n\nhere\n\n.
     */
    username: pulumi.Input<string>;
}

export interface SourceConfluenceConfiguration {
    /**
     * Please follow the Jira confluence for generating an API token: \n\ngenerating an API token\n\n.
     */
    apiToken: pulumi.Input<string>;
    /**
     * Your Confluence domain name
     */
    domainName: pulumi.Input<string>;
    /**
     * Your Confluence login email
     */
    email: pulumi.Input<string>;
    /**
     * must be one of ["confluence"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceConvexConfiguration {
    /**
     * API access key used to retrieve data from Convex.
     */
    accessKey: pulumi.Input<string>;
    deploymentUrl: pulumi.Input<string>;
    /**
     * must be one of ["convex"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceDatadogConfiguration {
    /**
     * Datadog API key
     */
    apiKey: pulumi.Input<string>;
    /**
     * Datadog application key
     */
    applicationKey: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Data after this date will  not be replicated. An empty value will represent the current datetime for each  execution. This just applies to Incremental syncs.
     */
    endDate?: pulumi.Input<string>;
    /**
     * Maximum number of records to collect per request.
     */
    maxRecordsPerRequest?: pulumi.Input<number>;
    /**
     * List of queries to be run and used as inputs.
     */
    queries?: pulumi.Input<pulumi.Input<inputs.SourceDatadogConfigurationQuery>[]>;
    /**
     * The search query. This just applies to Incremental syncs. If empty, it'll collect all logs.
     */
    query?: pulumi.Input<string>;
    /**
     * must be one of ["datadoghq.com", "us3.datadoghq.com", "us5.datadoghq.com", "datadoghq.eu", "ddog-gov.com"]
     * The site where Datadog data resides in.
     */
    site?: pulumi.Input<string>;
    /**
     * must be one of ["datadog"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. This just applies to Incremental syncs.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceDatadogConfigurationQuery {
    dataSource: pulumi.Input<string>;
    name: pulumi.Input<string>;
    query: pulumi.Input<string>;
}

export interface SourceDatascopeConfiguration {
    /**
     * API Key
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["datascope"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Start date for the data to be replicated
     */
    startDate: pulumi.Input<string>;
}

export interface SourceDelightedConfiguration {
    /**
     * A Delighted API key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate the data
     */
    since: pulumi.Input<string>;
    /**
     * must be one of ["delighted"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceDixaConfiguration {
    /**
     * Dixa API token
     */
    apiToken: pulumi.Input<string>;
    /**
     * Number of days to batch into one request. Max 31.
     */
    batchSize?: pulumi.Input<number>;
    /**
     * must be one of ["dixa"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The connector pulls records updated from this date onwards.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceDockerhubConfiguration {
    /**
     * Username of DockerHub person or organization (for https://hub.docker.com/v2/repositories/USERNAME/ API call)
     */
    dockerUsername: pulumi.Input<string>;
    /**
     * must be one of ["dockerhub"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceDremioConfiguration {
    /**
     * API Key that is generated when you authenticate to Dremio API
     */
    apiKey: pulumi.Input<string>;
    /**
     * URL of your Dremio instance
     */
    baseUrl: pulumi.Input<string>;
    /**
     * must be one of ["dremio"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceDynamodbConfiguration {
    /**
     * The access key id to access Dynamodb. Airbyte requires read permissions to the database
     */
    accessKeyId: pulumi.Input<string>;
    /**
     * the URL of the Dynamodb database
     */
    endpoint?: pulumi.Input<string>;
    /**
     * must be one of ["", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
     * The region of the Dynamodb database
     */
    region?: pulumi.Input<string>;
    /**
     * Comma separated reserved attribute names present in your tables
     */
    reservedAttributeNames?: pulumi.Input<string>;
    /**
     * The corresponding secret to the access key id.
     */
    secretAccessKey: pulumi.Input<string>;
    /**
     * must be one of ["dynamodb"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceE2eTestCloudConfiguration {
    /**
     * Number of records to emit per stream. Min 1. Max 100 billion.
     */
    maxMessages: pulumi.Input<number>;
    /**
     * Interval between messages in ms. Min 0 ms. Max 60000 ms (1 minute).
     */
    messageIntervalMs?: pulumi.Input<number>;
    mockCatalog: pulumi.Input<inputs.SourceE2eTestCloudConfigurationMockCatalog>;
    /**
     * When the seed is unspecified, the current time millis will be used as the seed. Range: [0, 1000000].
     */
    seed?: pulumi.Input<number>;
    /**
     * must be one of ["e2e-test-cloud"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * must be one of ["CONTINUOUS_FEED"]
     */
    type?: pulumi.Input<string>;
}

export interface SourceE2eTestCloudConfigurationMockCatalog {
    sourceE2eTestCloudMockCatalogMultiSchema?: pulumi.Input<inputs.SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema>;
    sourceE2eTestCloudMockCatalogSingleSchema?: pulumi.Input<inputs.SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema>;
    sourceE2eTestCloudUpdateMockCatalogMultiSchema?: pulumi.Input<inputs.SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema>;
    sourceE2eTestCloudUpdateMockCatalogSingleSchema?: pulumi.Input<inputs.SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema>;
}

export interface SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema {
    streamSchemas: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema {
    streamDuplication?: pulumi.Input<number>;
    streamName: pulumi.Input<string>;
    streamSchema: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema {
    streamSchemas: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema {
    streamDuplication?: pulumi.Input<number>;
    streamName: pulumi.Input<string>;
    streamSchema: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SourceEmailoctopusConfiguration {
    /**
     * EmailOctopus API Key. See the \n\ndocs\n\n for information on how to generate this key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["emailoctopus"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceExchangeRatesConfiguration {
    /**
     * Your API Key. See \n\nhere\n\n. The key is case sensitive.
     */
    accessKey: pulumi.Input<string>;
    /**
     * ISO reference currency. See \n\nhere\n\n. Free plan doesn't support Source Currency Switching, default base currency is EUR
     */
    base?: pulumi.Input<string>;
    /**
     * Ignore weekends? (Exchanges don't run on weekends)
     */
    ignoreWeekends?: pulumi.Input<boolean>;
    /**
     * must be one of ["exchange-rates"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Start getting data from that date.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceFacebookMarketingConfiguration {
    /**
     * The value of the generated access token. From your App’s Dashboard, click on "Marketing API" then "Tools". Select permissions \n\nads*management, ads*read, read*insights, business*management\n\n. Then click on "Get token". See the \n\ndocs\n\n for more information.
     */
    accessToken: pulumi.Input<string>;
    /**
     * The Facebook Ad account ID to use when pulling data from the Facebook Marketing API. Open your Meta Ads Manager. The Ad account ID number is in the account dropdown menu or in your browser's address bar. See the \n\ndocs\n\n for more information.
     */
    accountId: pulumi.Input<string>;
    /**
     * Allows actionBreakdowns to be an empty list
     */
    actionBreakdownsAllowEmpty?: pulumi.Input<boolean>;
    /**
     * The Client Id for your OAuth app
     */
    clientId?: pulumi.Input<string>;
    /**
     * The Client Secret for your OAuth app
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * A list which contains ad statistics entries, each entry must have a name and can contains fields, breakdowns or action*breakdowns. Click on "add" to fill this field.
     */
    customInsights?: pulumi.Input<pulumi.Input<inputs.SourceFacebookMarketingConfigurationCustomInsight>[]>;
    /**
     * The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.
     */
    endDate?: pulumi.Input<string>;
    /**
     * Set to active if you want to fetch the thumbnail*url and store the result in thumbnail*data_url for each Ad Creative.
     */
    fetchThumbnailImages?: pulumi.Input<boolean>;
    /**
     * Set to active if you want to include data from deleted Campaigns, Ads, and AdSets.
     */
    includeDeleted?: pulumi.Input<boolean>;
    /**
     * The attribution window. Facebook freezes insight data 28 days after it was generated, which means that all data from the past 28 days may have changed since we last emitted it, so you can retrieve refreshed insights from the past by setting this parameter. If you set a custom lookback window value in Facebook account, please provide the same value here.
     */
    insightsLookbackWindow?: pulumi.Input<number>;
    /**
     * Maximum batch size used when sending batch requests to Facebook API. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases.
     */
    maxBatchSize?: pulumi.Input<number>;
    /**
     * Page size used when sending requests to Facebook API to specify number of records per page when response has pagination. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases.
     */
    pageSize?: pulumi.Input<number>;
    /**
     * must be one of ["facebook-marketing"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceFacebookMarketingConfigurationCustomInsight {
    actionBreakdowns?: pulumi.Input<pulumi.Input<string>[]>;
    actionReportTime?: pulumi.Input<string>;
    breakdowns?: pulumi.Input<pulumi.Input<string>[]>;
    endDate?: pulumi.Input<string>;
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    insightsLookbackWindow?: pulumi.Input<number>;
    level?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
    timeIncrement?: pulumi.Input<number>;
}

export interface SourceFacebookPagesConfiguration {
    /**
     * Facebook Page Access Token
     */
    accessToken: pulumi.Input<string>;
    /**
     * Page ID
     */
    pageId: pulumi.Input<string>;
    /**
     * must be one of ["facebook-pages"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceFakerConfiguration {
    /**
     * Should the updatedAt values for every record be new each sync?  Setting this to false will case the source to stop emitting records after COUNT records have been emitted.
     */
    alwaysUpdated?: pulumi.Input<boolean>;
    /**
     * How many users should be generated in total.  This setting does not apply to the purchases or products stream.
     */
    count: pulumi.Input<number>;
    /**
     * How many parallel workers should we use to generate fake data?  Choose a value equal to the number of CPUs you will allocate to this source.
     */
    parallelism?: pulumi.Input<number>;
    /**
     * How many fake records will be in each page (stream slice), before a state message is emitted?
     */
    recordsPerSlice?: pulumi.Input<number>;
    /**
     * Manually control the faker random seed to return the same values on subsequent runs (leave -1 for random)
     */
    seed?: pulumi.Input<number>;
    /**
     * must be one of ["faker"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceFaunaConfiguration {
    /**
     * Settings for the Fauna Collection.
     */
    collection?: pulumi.Input<inputs.SourceFaunaConfigurationCollection>;
    /**
     * Domain of Fauna to query. Defaults db.fauna.com. See \n\nthe docs\n\n.
     */
    domain: pulumi.Input<string>;
    /**
     * Endpoint port.
     */
    port: pulumi.Input<number>;
    /**
     * URL scheme.
     */
    scheme: pulumi.Input<string>;
    /**
     * Fauna secret, used when authenticating with the database.
     */
    secret: pulumi.Input<string>;
    /**
     * must be one of ["fauna"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceFaunaConfigurationCollection {
    deletions: pulumi.Input<inputs.SourceFaunaConfigurationCollectionDeletions>;
    pageSize: pulumi.Input<number>;
}

export interface SourceFaunaConfigurationCollectionDeletions {
    sourceFaunaCollectionDeletionModeDisabled?: pulumi.Input<inputs.SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled>;
    sourceFaunaCollectionDeletionModeEnabled?: pulumi.Input<inputs.SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled>;
    sourceFaunaUpdateCollectionDeletionModeDisabled?: pulumi.Input<inputs.SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled>;
    sourceFaunaUpdateCollectionDeletionModeEnabled?: pulumi.Input<inputs.SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled>;
}

export interface SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled {
    deletionMode: pulumi.Input<string>;
}

export interface SourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled {
    column: pulumi.Input<string>;
    deletionMode: pulumi.Input<string>;
}

export interface SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled {
    deletionMode: pulumi.Input<string>;
}

export interface SourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled {
    column: pulumi.Input<string>;
    deletionMode: pulumi.Input<string>;
}

export interface SourceFileSecureConfiguration {
    /**
     * The Name of the final table to replicate this file into (should include letters, numbers dash and underscores only).
     */
    datasetName: pulumi.Input<string>;
    /**
     * must be one of ["csv", "json", "jsonl", "excel", "excelBinary", "feather", "parquet", "yaml"]
     * The Format of the file which should be replicated (Warning: some formats may be experimental, please refer to the docs).
     */
    format: pulumi.Input<string>;
    /**
     * The storage Provider or Location of the file(s) which should be replicated.
     */
    provider: pulumi.Input<inputs.SourceFileSecureConfigurationProvider>;
    /**
     * This should be a string in JSON format. It depends on the chosen file format to provide additional options and tune its behavior.
     */
    readerOptions?: pulumi.Input<string>;
    /**
     * must be one of ["file-secure"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The URL path to access the file which should be replicated.
     */
    url: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProvider {
    sourceFileSecureStorageProviderAzBlobAzureBlobStorage?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage>;
    sourceFileSecureStorageProviderGcsGoogleCloudStorage?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage>;
    sourceFileSecureStorageProviderHttpsPublicWeb?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb>;
    sourceFileSecureStorageProviderS3AmazonWebServices?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices>;
    sourceFileSecureStorageProviderScpSecureCopyProtocol?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol>;
    sourceFileSecureStorageProviderSftpSecureFileTransferProtocol?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol>;
    sourceFileSecureStorageProviderSshSecureShell?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell>;
    sourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage>;
    sourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage>;
    sourceFileSecureUpdateStorageProviderHttpsPublicWeb?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb>;
    sourceFileSecureUpdateStorageProviderS3AmazonWebServices?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices>;
    sourceFileSecureUpdateStorageProviderScpSecureCopyProtocol?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol>;
    sourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol>;
    sourceFileSecureUpdateStorageProviderSshSecureShell?: pulumi.Input<inputs.SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage {
    sasToken?: pulumi.Input<string>;
    sharedKey?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
    storageAccount: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage {
    serviceAccountJson?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb {
    storage: pulumi.Input<string>;
    userAgent?: pulumi.Input<boolean>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices {
    awsAccessKeyId?: pulumi.Input<string>;
    awsSecretAccessKey?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol {
    host: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
    user: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol {
    host: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
    user: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell {
    host: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
    user: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage {
    sasToken?: pulumi.Input<string>;
    sharedKey?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
    storageAccount: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage {
    serviceAccountJson?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb {
    storage: pulumi.Input<string>;
    userAgent?: pulumi.Input<boolean>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices {
    awsAccessKeyId?: pulumi.Input<string>;
    awsSecretAccessKey?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol {
    host: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
    user: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol {
    host: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
    user: pulumi.Input<string>;
}

export interface SourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell {
    host: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    port?: pulumi.Input<string>;
    storage: pulumi.Input<string>;
    user: pulumi.Input<string>;
}

export interface SourceFireboltConfiguration {
    /**
     * Firebolt account to login.
     */
    account?: pulumi.Input<string>;
    /**
     * The database to connect to.
     */
    database: pulumi.Input<string>;
    /**
     * Engine name or url to connect to.
     */
    engine?: pulumi.Input<string>;
    /**
     * The host name of your Firebolt database.
     */
    host?: pulumi.Input<string>;
    /**
     * Firebolt password.
     */
    password: pulumi.Input<string>;
    /**
     * must be one of ["firebolt"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Firebolt email address you use to login.
     */
    username: pulumi.Input<string>;
}

export interface SourceFreshcallerConfiguration {
    /**
     * Freshcaller API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * Used to construct Base URL for the Freshcaller APIs
     */
    domain: pulumi.Input<string>;
    /**
     * The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account.
     */
    requestsPerMinute?: pulumi.Input<number>;
    /**
     * must be one of ["freshcaller"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time. Any data created after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
    /**
     * Lag in minutes for each sync, i.e., at time T, data for the time range [prev*sync*time, T-30] will be fetched
     */
    syncLagMinutes?: pulumi.Input<number>;
}

export interface SourceFreshdeskConfiguration {
    /**
     * Freshdesk API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * Freshdesk domain
     */
    domain: pulumi.Input<string>;
    /**
     * The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account.
     */
    requestsPerMinute?: pulumi.Input<number>;
    /**
     * must be one of ["freshdesk"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time. Any data created after this date will be replicated. If this parameter is not set, all data will be replicated.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceFreshsalesConfiguration {
    /**
     * Freshsales API Key. See \n\nhere\n\n. The key is case sensitive.
     */
    apiKey: pulumi.Input<string>;
    /**
     * The Name of your Freshsales domain
     */
    domainName: pulumi.Input<string>;
    /**
     * must be one of ["freshsales"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceGainsightPxConfiguration {
    /**
     * The Aptrinsic API Key which is recieved from the dashboard settings (ref - https://app.aptrinsic.com/settings/api-keys)
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["gainsight-px"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceGcsConfiguration {
    /**
     * GCS bucket name
     */
    gcsBucket: pulumi.Input<string>;
    /**
     * GCS path to data
     */
    gcsPath: pulumi.Input<string>;
    /**
     * Enter your Google Cloud \n\nservice account key\n\n in JSON format
     */
    serviceAccount: pulumi.Input<string>;
    /**
     * must be one of ["gcs"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceGetlagoConfiguration {
    /**
     * Your API Key. See \n\nhere\n\n.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["getlago"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceGithubConfiguration {
    /**
     * Space-delimited list of GitHub repository branches to pull commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified for a repository, the default branch will be pulled.
     */
    branch?: pulumi.Input<string>;
    /**
     * Choose how to authenticate to GitHub
     */
    credentials?: pulumi.Input<inputs.SourceGithubConfigurationCredentials>;
    /**
     * Space-delimited list of GitHub organizations/repositories, e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get all repositories from organization and `airbytehq/airbyte airbytehq/another-repo` for multiple repositories.
     */
    repository: pulumi.Input<string>;
    /**
     * The GitHub API allows for a maximum of 5000 requests per hour (15000 for Github Enterprise). You can specify a lower value to limit your use of the API quota.
     */
    requestsPerHour?: pulumi.Input<number>;
    /**
     * must be one of ["github"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data from GitHub in the format YYYY-MM-DDT00:00:00Z. For the streams which support this configuration, only data generated on or after the start date will be replicated. This field doesn't apply to all streams, see the \n\ndocs\n\n for more info
     */
    startDate: pulumi.Input<string>;
}

export interface SourceGithubConfigurationCredentials {
    sourceGithubAuthenticationOAuth?: pulumi.Input<inputs.SourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth>;
    sourceGithubAuthenticationPersonalAccessToken?: pulumi.Input<inputs.SourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken>;
    sourceGithubUpdateAuthenticationOAuth?: pulumi.Input<inputs.SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth>;
    sourceGithubUpdateAuthenticationPersonalAccessToken?: pulumi.Input<inputs.SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken>;
}

export interface SourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth {
    accessToken: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    optionTitle?: pulumi.Input<string>;
}

export interface SourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken {
    optionTitle?: pulumi.Input<string>;
    personalAccessToken: pulumi.Input<string>;
}

export interface SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth {
    accessToken: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    optionTitle?: pulumi.Input<string>;
}

export interface SourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken {
    optionTitle?: pulumi.Input<string>;
    personalAccessToken: pulumi.Input<string>;
}

export interface SourceGitlabConfiguration {
    /**
     * Please enter your basic URL from GitLab instance.
     */
    apiUrl?: pulumi.Input<string>;
    credentials: pulumi.Input<inputs.SourceGitlabConfigurationCredentials>;
    /**
     * Space-delimited list of groups. e.g. airbyte.io.
     */
    groups?: pulumi.Input<string>;
    /**
     * Space-delimited list of projects. e.g. airbyte.io/documentation meltano/tap-gitlab.
     */
    projects?: pulumi.Input<string>;
    /**
     * must be one of ["gitlab"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for GitLab API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceGitlabConfigurationCredentials {
    sourceGitlabAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20>;
    sourceGitlabAuthorizationMethodPrivateToken?: pulumi.Input<inputs.SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken>;
    sourceGitlabUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20>;
    sourceGitlabUpdateAuthorizationMethodPrivateToken?: pulumi.Input<inputs.SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken>;
}

export interface SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceGlassfrogConfiguration {
    /**
     * API key provided by Glassfrog
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["glassfrog"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceGnewsConfiguration {
    apiKey: pulumi.Input<string>;
    country?: pulumi.Input<string>;
    endDate?: pulumi.Input<string>;
    ins?: pulumi.Input<pulumi.Input<string>[]>;
    language?: pulumi.Input<string>;
    nullables?: pulumi.Input<pulumi.Input<string>[]>;
    query: pulumi.Input<string>;
    sortby?: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
    topHeadlinesQuery?: pulumi.Input<string>;
    topHeadlinesTopic?: pulumi.Input<string>;
}

export interface SourceGoogleAdsConfiguration {
    /**
     * A conversion window is the number of days after an ad interaction (such as an ad click or video view) during which a conversion, such as a purchase, is recorded in Google Ads. For more information, see \n\nGoogle's documentation\n\n.
     */
    conversionWindowDays?: pulumi.Input<number>;
    credentials: pulumi.Input<inputs.SourceGoogleAdsConfigurationCredentials>;
    customQueries?: pulumi.Input<pulumi.Input<inputs.SourceGoogleAdsConfigurationCustomQuery>[]>;
    /**
     * Comma-separated list of (client) customer IDs. Each customer ID must be specified as a 10-digit number without dashes. For detailed instructions on finding this value, refer to our \n\ndocumentation\n\n.
     */
    customerId: pulumi.Input<string>;
    /**
     * UTC date in the format YYYY-MM-DD. Any data after this date will not be replicated.
     */
    endDate?: pulumi.Input<string>;
    /**
     * If your access to the customer account is through a manager account, this field is required, and must be set to the 10-digit customer ID of the manager account. For more information about this field, refer to \n\nGoogle's documentation\n\n.
     */
    loginCustomerId?: pulumi.Input<string>;
    /**
     * must be one of ["google-ads"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceGoogleAdsConfigurationCredentials {
    accessToken?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    developerToken: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceGoogleAdsConfigurationCustomQuery {
    query: pulumi.Input<string>;
    tableName: pulumi.Input<string>;
}

export interface SourceGoogleAnalyticsDataApiConfiguration {
    /**
     * Credentials for the service
     */
    credentials?: pulumi.Input<inputs.SourceGoogleAnalyticsDataApiConfigurationCredentials>;
    /**
     * A JSON array describing the custom reports you want to sync from Google Analytics. See \n\nthe documentation\n\n for more information about the exact format you can use to fill out this field.
     */
    customReports?: pulumi.Input<string>;
    /**
     * The start date from which to replicate report data in the format YYYY-MM-DD. Data generated before this date will not be included in the report. Not applied to custom Cohort reports.
     */
    dateRangesStartDate: pulumi.Input<string>;
    /**
     * The Property ID is a unique number assigned to each property in Google Analytics, found in your GA4 property URL. This ID allows the connector to track the specific events associated with your property. Refer to the \n\nGoogle Analytics documentation\n\n to locate your property ID.
     */
    propertyId: pulumi.Input<string>;
    /**
     * must be one of ["google-analytics-data-api"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The interval in days for each data request made to the Google Analytics API. A larger value speeds up data sync, but increases the chance of data sampling, which may result in inaccuracies. We recommend a value of 1 to minimize sampling, unless speed is an absolute priority over accuracy. Acceptable values range from 1 to 364. Does not apply to custom Cohort reports. More information is available in \n\nthe documentation\n\n.
     */
    windowInDays?: pulumi.Input<number>;
}

export interface SourceGoogleAnalyticsDataApiConfigurationCredentials {
    sourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth?: pulumi.Input<inputs.SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth>;
    sourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication?: pulumi.Input<inputs.SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication>;
    sourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth?: pulumi.Input<inputs.SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth>;
    sourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication?: pulumi.Input<inputs.SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication>;
}

export interface SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth {
    accessToken?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication {
    authType?: pulumi.Input<string>;
    credentialsJson: pulumi.Input<string>;
}

export interface SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth {
    accessToken?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication {
    authType?: pulumi.Input<string>;
    credentialsJson: pulumi.Input<string>;
}

export interface SourceGoogleAnalyticsV4Configuration {
    /**
     * Credentials for the service
     */
    credentials?: pulumi.Input<inputs.SourceGoogleAnalyticsV4ConfigurationCredentials>;
    /**
     * A JSON array describing the custom reports you want to sync from Google Analytics. See \n\nthe docs\n\n for more information about the exact format you can use to fill out this field.
     */
    customReports?: pulumi.Input<string>;
    /**
     * must be one of ["google-analytics-v4"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date in the format YYYY-MM-DD. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
    /**
     * The ID for the Google Analytics View you want to fetch data from. This can be found from the \n\nGoogle Analytics Account Explorer\n\n.
     */
    viewId: pulumi.Input<string>;
    /**
     * The time increment used by the connector when requesting data from the Google Analytics API. More information is available in the \n\nthe docs\n\n. The bigger this value is, the faster the sync will be, but the more likely that sampling will be applied to your data, potentially causing inaccuracies in the returned results. We recommend setting this to 1 unless you have a hard requirement to make the sync faster at the expense of accuracy. The minimum allowed value for this field is 1, and the maximum is 364.
     */
    windowInDays?: pulumi.Input<number>;
}

export interface SourceGoogleAnalyticsV4ConfigurationCredentials {
    sourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth?: pulumi.Input<inputs.SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth>;
    sourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication?: pulumi.Input<inputs.SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication>;
    sourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth?: pulumi.Input<inputs.SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth>;
    sourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication?: pulumi.Input<inputs.SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication>;
}

export interface SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth {
    accessToken?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication {
    authType?: pulumi.Input<string>;
    credentialsJson: pulumi.Input<string>;
}

export interface SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth {
    accessToken?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication {
    authType?: pulumi.Input<string>;
    credentialsJson: pulumi.Input<string>;
}

export interface SourceGoogleDirectoryConfiguration {
    /**
     * Google APIs use the OAuth 2.0 protocol for authentication and authorization. The Source supports \n\nWeb server application\n\n and \n\nService accounts\n\n scenarios.
     */
    credentials?: pulumi.Input<inputs.SourceGoogleDirectoryConfigurationCredentials>;
    /**
     * must be one of ["google-directory"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceGoogleDirectoryConfigurationCredentials {
    sourceGoogleDirectoryGoogleCredentialsServiceAccountKey?: pulumi.Input<inputs.SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey>;
    sourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth?: pulumi.Input<inputs.SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth>;
    sourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey?: pulumi.Input<inputs.SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey>;
    sourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth?: pulumi.Input<inputs.SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth>;
}

export interface SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey {
    credentialsJson: pulumi.Input<string>;
    credentialsTitle?: pulumi.Input<string>;
    email: pulumi.Input<string>;
}

export interface SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    credentialsTitle?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey {
    credentialsJson: pulumi.Input<string>;
    credentialsTitle?: pulumi.Input<string>;
    email: pulumi.Input<string>;
}

export interface SourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    credentialsTitle?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceGooglePagespeedInsightsConfiguration {
    /**
     * Google PageSpeed API Key. See \n\nhere\n\n. The key is optional - however the API is heavily rate limited when using without API Key. Creating and using the API key therefore is recommended. The key is case sensitive.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * Defines which Lighthouse category to run. One or many of: "accessibility", "best-practices", "performance", "pwa", "seo".
     */
    categories: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * must be one of ["google-pagespeed-insights"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The analyses strategy to use. Either "desktop" or "mobile".
     */
    strategies: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URLs to retrieve pagespeed information from. The connector will attempt to sync PageSpeed reports for all the defined URLs. Format: https://(www.)url.domain
     */
    urls: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SourceGoogleSearchConsoleConfiguration {
    authorization: pulumi.Input<inputs.SourceGoogleSearchConsoleConfigurationAuthorization>;
    /**
     * A JSON array describing the custom reports you want to sync from Google Search Console. See \n\nthe docs\n\n for more information about the exact format you can use to fill out this field.
     */
    customReports?: pulumi.Input<string>;
    /**
     * must be one of ["final", "all"]
     * If "final" or if this parameter is omitted, the returned data will include only finalized data. Setting this parameter to "all" should not be used with Incremental Sync mode as it may cause data loss. If "all", data will include fresh data.
     */
    dataState?: pulumi.Input<string>;
    /**
     * UTC date in the format 2017-01-25. Any data after this date will not be replicated. Must be greater or equal to the start date field.
     */
    endDate?: pulumi.Input<string>;
    /**
     * The URLs of the website property attached to your GSC account. Read more \n\nhere\n\n.
     */
    siteUrls: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * must be one of ["google-search-console"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date in the format 2017-01-25. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceGoogleSearchConsoleConfigurationAuthorization {
    sourceGoogleSearchConsoleAuthenticationTypeOAuth?: pulumi.Input<inputs.SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth>;
    sourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication?: pulumi.Input<inputs.SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication>;
    sourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth?: pulumi.Input<inputs.SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth>;
    sourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication?: pulumi.Input<inputs.SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication>;
}

export interface SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth {
    accessToken?: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication {
    authType: pulumi.Input<string>;
    email: pulumi.Input<string>;
    serviceAccountInfo: pulumi.Input<string>;
}

export interface SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth {
    accessToken?: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication {
    authType: pulumi.Input<string>;
    email: pulumi.Input<string>;
    serviceAccountInfo: pulumi.Input<string>;
}

export interface SourceGoogleSheetsConfiguration {
    /**
     * Credentials for connecting to the Google Sheets API
     */
    credentials: pulumi.Input<inputs.SourceGoogleSheetsConfigurationCredentials>;
    /**
     * Enables the conversion of column names to a standardized, SQL-compliant format. For example, 'My Name' > 'my_name'. Enable this option if your destination is SQL-based.
     */
    namesConversion?: pulumi.Input<boolean>;
    /**
     * The number of rows fetched when making a Google Sheet API call. Defaults to 200.
     */
    rowBatchSize?: pulumi.Input<number>;
    /**
     * must be one of ["google-sheets"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Enter the link to the Google spreadsheet you want to sync. To copy the link, click the 'Share' button in the top-right corner of the spreadsheet, then click 'Copy link'.
     */
    spreadsheetId: pulumi.Input<string>;
}

export interface SourceGoogleSheetsConfigurationCredentials {
    sourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth?: pulumi.Input<inputs.SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth>;
    sourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication?: pulumi.Input<inputs.SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication>;
    sourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth?: pulumi.Input<inputs.SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth>;
    sourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication?: pulumi.Input<inputs.SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication>;
}

export interface SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth {
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication {
    authType: pulumi.Input<string>;
    serviceAccountInfo: pulumi.Input<string>;
}

export interface SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth {
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication {
    authType: pulumi.Input<string>;
    serviceAccountInfo: pulumi.Input<string>;
}

export interface SourceGoogleWebfontsConfiguration {
    /**
     * Optional, Available params- json, media, proto
     */
    alt?: pulumi.Input<string>;
    /**
     * API key is required to access google apis, For getting your's goto google console and generate api key for Webfonts
     */
    apiKey: pulumi.Input<string>;
    /**
     * Optional, boolean type
     */
    prettyPrint?: pulumi.Input<string>;
    /**
     * Optional, to find how to sort
     */
    sort?: pulumi.Input<string>;
    /**
     * must be one of ["google-webfonts"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceGoogleWorkspaceAdminReportsConfiguration {
    /**
     * The contents of the JSON service account key. See the \n\ndocs\n\n for more information on how to generate this key.
     */
    credentialsJson: pulumi.Input<string>;
    /**
     * The email of the user, which has permissions to access the Google Workspace Admin APIs.
     */
    email: pulumi.Input<string>;
    /**
     * Sets the range of time shown in the report. Reports API allows from up to 180 days ago.
     */
    lookback?: pulumi.Input<number>;
    /**
     * must be one of ["google-workspace-admin-reports"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceGreenhouseConfiguration {
    /**
     * Greenhouse API Key. See the \n\ndocs\n\n for more information on how to generate this key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["greenhouse"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceGridlyConfiguration {
    apiKey: pulumi.Input<string>;
    /**
     * ID of a grid, or can be ID of a branch
     */
    gridId: pulumi.Input<string>;
    /**
     * must be one of ["gridly"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceHarvestConfiguration {
    /**
     * Harvest account ID. Required for all Harvest requests in pair with Personal Access Token
     */
    accountId: pulumi.Input<string>;
    /**
     * Choose how to authenticate to Harvest.
     */
    credentials?: pulumi.Input<inputs.SourceHarvestConfigurationCredentials>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.
     */
    replicationEndDate?: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    replicationStartDate: pulumi.Input<string>;
    /**
     * must be one of ["harvest"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceHarvestConfigurationCredentials {
    sourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth?: pulumi.Input<inputs.SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth>;
    sourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken?: pulumi.Input<inputs.SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken>;
    sourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth?: pulumi.Input<inputs.SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth>;
    sourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken?: pulumi.Input<inputs.SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken>;
}

export interface SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth {
    additionalProperties?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken {
    additionalProperties?: pulumi.Input<string>;
    apiToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth {
    additionalProperties?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken {
    additionalProperties?: pulumi.Input<string>;
    apiToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceHubplannerConfiguration {
    /**
     * Hubplanner API key. See https://github.com/hubplanner/API#authentication for more details.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["hubplanner"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceHubspotConfiguration {
    /**
     * Choose how to authenticate to HubSpot.
     */
    credentials: pulumi.Input<inputs.SourceHubspotConfigurationCredentials>;
    /**
     * must be one of ["hubspot"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceHubspotConfigurationCredentials {
    sourceHubspotAuthenticationOAuth?: pulumi.Input<inputs.SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth>;
    sourceHubspotAuthenticationPrivateApp?: pulumi.Input<inputs.SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp>;
    sourceHubspotUpdateAuthenticationOAuth?: pulumi.Input<inputs.SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth>;
    sourceHubspotUpdateAuthenticationPrivateApp?: pulumi.Input<inputs.SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp>;
}

export interface SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    credentialsTitle: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp {
    accessToken: pulumi.Input<string>;
    credentialsTitle: pulumi.Input<string>;
}

export interface SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth {
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    credentialsTitle: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp {
    accessToken: pulumi.Input<string>;
    credentialsTitle: pulumi.Input<string>;
}

export interface SourceInsightlyConfiguration {
    /**
     * must be one of ["insightly"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for Insightly in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated. Note that it will be used only for incremental streams.
     */
    startDate: pulumi.Input<string>;
    /**
     * Your Insightly API token.
     */
    token: pulumi.Input<string>;
}

export interface SourceInstagramConfiguration {
    /**
     * The value of the access token generated with \n\ninstagram*basic, instagram*manage*insights, pages*show*list, pages*read_engagement, Instagram Public Content Access\n\n permissions. See the \n\ndocs\n\n for more information
     */
    accessToken: pulumi.Input<string>;
    /**
     * The Client ID for your Oauth application
     */
    clientId?: pulumi.Input<string>;
    /**
     * The Client Secret for your Oauth application
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * must be one of ["instagram"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for User Insights, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceInstatusConfiguration {
    /**
     * Instatus REST API key
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["instatus"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceIntercomConfiguration {
    /**
     * Access token for making authenticated requests. See the \n\nIntercom docs\n\n for more information.
     */
    accessToken: pulumi.Input<string>;
    /**
     * must be one of ["intercom"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceIp2whoisConfiguration {
    /**
     * Your API Key. See \n\nhere\n\n.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * Domain name. See \n\nhere\n\n.
     */
    domain?: pulumi.Input<string>;
    /**
     * must be one of ["ip2whois"]
     */
    sourceType?: pulumi.Input<string>;
}

export interface SourceIterableConfiguration {
    /**
     * Iterable API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["iterable"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for Iterable, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceJiraConfiguration {
    /**
     * Jira API Token. See the \n\ndocs\n\n for more information on how to generate this key. API Token is used for Authorization to your account by BasicAuth.
     */
    apiToken: pulumi.Input<string>;
    /**
     * The Domain for your Jira account, e.g. airbyteio.atlassian.net, airbyteio.jira.com, jira.your-domain.com
     */
    domain: pulumi.Input<string>;
    /**
     * The user email for your Jira account which you used to generate the API token. This field is used for Authorization to your account by BasicAuth.
     */
    email: pulumi.Input<string>;
    /**
     * Allow the use of experimental streams which rely on undocumented Jira API endpoints. See https://docs.airbyte.com/integrations/sources/jira#experimental-tables for more info.
     */
    enableExperimentalStreams?: pulumi.Input<boolean>;
    /**
     * Expand the changelog when replicating issues.
     */
    expandIssueChangelog?: pulumi.Input<boolean>;
    /**
     * List of Jira project keys to replicate data for, or leave it empty if you want to replicate data for all projects.
     */
    projects?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Render issue fields in HTML format in addition to Jira JSON-like format.
     */
    renderFields?: pulumi.Input<boolean>;
    /**
     * must be one of ["jira"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you want to replicate data from Jira, use the format YYYY-MM-DDT00:00:00Z. Note that this field only applies to certain streams, and only data generated on or after the start date will be replicated. Or leave it empty if you want to replicate all data. For more information, refer to the \n\ndocumentation\n\n.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceK6CloudConfiguration {
    /**
     * Your API Token. See \n\nhere\n\n. The key is case sensitive.
     */
    apiToken: pulumi.Input<string>;
    /**
     * must be one of ["k6-cloud"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceKlarnaConfiguration {
    /**
     * A string which is associated with your Merchant ID and is used to authorize use of Klarna's APIs (https://developers.klarna.com/api/#authentication)
     */
    password: pulumi.Input<string>;
    /**
     * Propertie defining if connector is used against playground or production environment
     */
    playground: pulumi.Input<boolean>;
    /**
     * must be one of ["eu", "us", "oc"]
     * Base url region (For playground eu https://docs.klarna.com/klarna-payments/api/payments-api/#tag/API-URLs). Supported 'eu', 'us', 'oc'
     */
    region: pulumi.Input<string>;
    /**
     * must be one of ["klarna"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Consists of your Merchant ID (eid) - a unique number that identifies your e-store, combined with a random string (https://developers.klarna.com/api/#authentication)
     */
    username: pulumi.Input<string>;
}

export interface SourceKlaviyoConfiguration {
    /**
     * Klaviyo API Key. See our \n\ndocs\n\n if you need help finding this key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["klaviyo"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceKustomerSingerConfiguration {
    /**
     * Kustomer API Token. See the \n\ndocs\n\n on how to obtain this
     */
    apiToken: pulumi.Input<string>;
    /**
     * must be one of ["kustomer-singer"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate the data
     */
    startDate: pulumi.Input<string>;
}

export interface SourceKyveConfiguration {
    /**
     * The maximum amount of pages to go trough. Set to 'null' for all pages.
     */
    maxPages?: pulumi.Input<number>;
    /**
     * The pagesize for pagination, smaller numbers are used in integration tests.
     */
    pageSize?: pulumi.Input<number>;
    /**
     * The IDs of the KYVE storage pool you want to archive. (Comma separated)
     */
    poolIds: pulumi.Input<string>;
    /**
     * must be one of ["kyve"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The start-id defines, from which bundle id the pipeline should start to extract the data (Comma separated)
     */
    startIds: pulumi.Input<string>;
    /**
     * URL to the KYVE Chain API.
     */
    urlBase?: pulumi.Input<string>;
}

export interface SourceLaunchdarklyConfiguration {
    /**
     * Your Access token. See \n\nhere\n\n.
     */
    accessToken: pulumi.Input<string>;
    /**
     * must be one of ["launchdarkly"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceLemlistConfiguration {
    /**
     * Lemlist API key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["lemlist"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceLeverHiringConfiguration {
    /**
     * Choose how to authenticate to Lever Hiring.
     */
    credentials?: pulumi.Input<inputs.SourceLeverHiringConfigurationCredentials>;
    /**
     * must be one of ["Production", "Sandbox"]
     * The environment in which you'd like to replicate data for Lever. This is used to determine which Lever API endpoint to use.
     */
    environment?: pulumi.Input<string>;
    /**
     * must be one of ["lever-hiring"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. Note that it will be used only in the following incremental streams: comments, commits, and issues.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceLeverHiringConfigurationCredentials {
    sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey?: pulumi.Input<inputs.SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey>;
    sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth?: pulumi.Input<inputs.SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth>;
    sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey?: pulumi.Input<inputs.SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey>;
    sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth?: pulumi.Input<inputs.SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth>;
}

export interface SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey {
    apiKey: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth {
    authType?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey {
    apiKey: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth {
    authType?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceLinkedinAdsConfiguration {
    /**
     * Specify the account IDs separated by a space, to pull the data from. Leave empty, if you want to pull the data from all associated accounts. See the \n\nLinkedIn Ads docs\n\n for more info.
     */
    accountIds?: pulumi.Input<pulumi.Input<number>[]>;
    adAnalyticsReports?: pulumi.Input<pulumi.Input<inputs.SourceLinkedinAdsConfigurationAdAnalyticsReport>[]>;
    credentials?: pulumi.Input<inputs.SourceLinkedinAdsConfigurationCredentials>;
    /**
     * must be one of ["linkedin-ads"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date in the format 2020-09-17. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceLinkedinAdsConfigurationAdAnalyticsReport {
    name: pulumi.Input<string>;
    pivotBy: pulumi.Input<string>;
    timeGranularity: pulumi.Input<string>;
}

export interface SourceLinkedinAdsConfigurationCredentials {
    sourceLinkedinAdsAuthenticationAccessToken?: pulumi.Input<inputs.SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken>;
    sourceLinkedinAdsAuthenticationOAuth20?: pulumi.Input<inputs.SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20>;
    sourceLinkedinAdsUpdateAuthenticationAccessToken?: pulumi.Input<inputs.SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken>;
    sourceLinkedinAdsUpdateAuthenticationOAuth20?: pulumi.Input<inputs.SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20>;
}

export interface SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken {
    accessToken: pulumi.Input<string>;
    authMethod?: pulumi.Input<string>;
}

export interface SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20 {
    authMethod?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken {
    accessToken: pulumi.Input<string>;
    authMethod?: pulumi.Input<string>;
}

export interface SourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20 {
    authMethod?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceLinkedinPagesConfiguration {
    credentials?: pulumi.Input<inputs.SourceLinkedinPagesConfigurationCredentials>;
    /**
     * Specify the Organization ID
     */
    orgId: pulumi.Input<string>;
    /**
     * must be one of ["linkedin-pages"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceLinkedinPagesConfigurationCredentials {
    sourceLinkedinPagesAuthenticationAccessToken?: pulumi.Input<inputs.SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken>;
    sourceLinkedinPagesAuthenticationOAuth20?: pulumi.Input<inputs.SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20>;
    sourceLinkedinPagesUpdateAuthenticationAccessToken?: pulumi.Input<inputs.SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken>;
    sourceLinkedinPagesUpdateAuthenticationOAuth20?: pulumi.Input<inputs.SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20>;
}

export interface SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken {
    accessToken: pulumi.Input<string>;
    authMethod?: pulumi.Input<string>;
}

export interface SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20 {
    authMethod?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken {
    accessToken: pulumi.Input<string>;
    authMethod?: pulumi.Input<string>;
}

export interface SourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20 {
    authMethod?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceLinnworksConfiguration {
    /**
     * Linnworks Application ID
     */
    applicationId: pulumi.Input<string>;
    /**
     * Linnworks Application Secret
     */
    applicationSecret: pulumi.Input<string>;
    /**
     * must be one of ["linnworks"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
    token: pulumi.Input<string>;
}

export interface SourceLokaliseConfiguration {
    /**
     * Lokalise API Key with read-access. Available at Profile settings > API tokens. See \n\nhere\n\n.
     */
    apiKey: pulumi.Input<string>;
    /**
     * Lokalise project ID. Available at Project Settings > General.
     */
    projectId: pulumi.Input<string>;
    /**
     * must be one of ["lokalise"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceMailchimpConfiguration {
    campaignId?: pulumi.Input<string>;
    credentials?: pulumi.Input<inputs.SourceMailchimpConfigurationCredentials>;
    /**
     * must be one of ["mailchimp"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceMailchimpConfigurationCredentials {
    sourceMailchimpAuthenticationApiKey?: pulumi.Input<inputs.SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey>;
    sourceMailchimpAuthenticationOAuth20?: pulumi.Input<inputs.SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20>;
    sourceMailchimpUpdateAuthenticationApiKey?: pulumi.Input<inputs.SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey>;
    sourceMailchimpUpdateAuthenticationOAuth20?: pulumi.Input<inputs.SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20>;
}

export interface SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey {
    apikey: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20 {
    accessToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
}

export interface SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey {
    apikey: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20 {
    accessToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
}

export interface SourceMailgunConfiguration {
    /**
     * Domain region code. 'EU' or 'US' are possible values. The default is 'US'.
     */
    domainRegion?: pulumi.Input<string>;
    /**
     * Primary account API key to access your Mailgun data.
     */
    privateKey: pulumi.Input<string>;
    /**
     * must be one of ["mailgun"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2020-10-01 00:00:00. Any data before this date will not be replicated. If omitted, defaults to 3 days ago.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceMailjetSmsConfiguration {
    /**
     * Retrieve SMS messages created before the specified timestamp. Required format - Unix timestamp.
     */
    endDate?: pulumi.Input<number>;
    /**
     * must be one of ["mailjet-sms"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Retrieve SMS messages created after the specified timestamp. Required format - Unix timestamp.
     */
    startDate?: pulumi.Input<number>;
    /**
     * Your access token. See \n\nhere\n\n.
     */
    token: pulumi.Input<string>;
}

export interface SourceMarketoConfiguration {
    /**
     * The Client ID of your Marketo developer application. See \n\n the docs \n\n for info on how to obtain this.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of your Marketo developer application. See \n\n the docs \n\n for info on how to obtain this.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Your Marketo Base URL. See \n\n the docs \n\n for info on how to obtain this.
     */
    domainUrl: pulumi.Input<string>;
    /**
     * must be one of ["marketo"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceMetabaseConfiguration {
    /**
     * URL to your metabase instance API
     */
    instanceApiUrl: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    /**
     * To generate your session token, you need to run the following command: `curl -X POST \
     * -H "Content-Type: application/json" \
     * -d '{"username": "person@metabase.com", "password": "fakepassword"}' \
     * http://localhost:3000/api/session
     * ` Then copy the value of the `id` field returned by a successful call to that API.
     * Note that by default, sessions are good for 14 days and needs to be regenerated.
     */
    sessionToken?: pulumi.Input<string>;
    /**
     * must be one of ["metabase"]
     */
    sourceType: pulumi.Input<string>;
    username?: pulumi.Input<string>;
}

export interface SourceMicrosoftTeamsConfiguration {
    /**
     * Choose how to authenticate to Microsoft
     */
    credentials?: pulumi.Input<inputs.SourceMicrosoftTeamsConfigurationCredentials>;
    /**
     * Specifies the length of time over which the Team Device Report stream is aggregated. The supported values are: D7, D30, D90, and D180.
     */
    period: pulumi.Input<string>;
    /**
     * must be one of ["microsoft-teams"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceMicrosoftTeamsConfigurationCredentials {
    sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft?: pulumi.Input<inputs.SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft>;
    sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20?: pulumi.Input<inputs.SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20>;
    sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft?: pulumi.Input<inputs.SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft>;
    sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20?: pulumi.Input<inputs.SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20>;
}

export interface SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft {
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20 {
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft {
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface SourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20 {
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tenantId: pulumi.Input<string>;
}

export interface SourceMixpanelConfiguration {
    /**
     * A period of time for attributing results to ads and the lookback period after those actions occur during which ad results are counted. Default attribution window is 5 days.
     */
    attributionWindow?: pulumi.Input<number>;
    /**
     * Choose how to authenticate to Mixpanel
     */
    credentials?: pulumi.Input<inputs.SourceMixpanelConfigurationCredentials>;
    /**
     * Defines window size in days, that used to slice through data. You can reduce it, if amount of data in each window is too big for your environment.
     */
    dateWindowSize?: pulumi.Input<number>;
    /**
     * The date in the format YYYY-MM-DD. Any data after this date will not be replicated. Left empty to always sync to most recent date
     */
    endDate?: pulumi.Input<string>;
    /**
     * Your project ID number. See the \n\ndocs\n\n for more information on how to obtain this.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Time zone in which integer date times are stored. The project timezone may be found in the project settings in the \n\nMixpanel console\n\n.
     */
    projectTimezone?: pulumi.Input<string>;
    /**
     * must be one of ["US", "EU"]
     * The region of mixpanel domain instance either US or EU.
     */
    region?: pulumi.Input<string>;
    /**
     * Setting this config parameter to TRUE ensures that new properties on events and engage records are captured. Otherwise new properties will be ignored.
     */
    selectPropertiesByDefault?: pulumi.Input<boolean>;
    /**
     * must be one of ["mixpanel"]
     */
    sourceType?: pulumi.Input<string>;
    /**
     * The date in the format YYYY-MM-DD. Any data before this date will not be replicated. If this option is not set, the connector will replicate data from up to one year ago by default.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceMixpanelConfigurationCredentials {
    sourceMixpanelAuthenticationWildcardProjectSecret?: pulumi.Input<inputs.SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret>;
    sourceMixpanelAuthenticationWildcardServiceAccount?: pulumi.Input<inputs.SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount>;
    sourceMixpanelUpdateAuthenticationWildcardProjectSecret?: pulumi.Input<inputs.SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret>;
    sourceMixpanelUpdateAuthenticationWildcardServiceAccount?: pulumi.Input<inputs.SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount>;
}

export interface SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret {
    apiSecret: pulumi.Input<string>;
    optionTitle?: pulumi.Input<string>;
}

export interface SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount {
    optionTitle?: pulumi.Input<string>;
    secret: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret {
    apiSecret: pulumi.Input<string>;
    optionTitle?: pulumi.Input<string>;
}

export interface SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount {
    optionTitle?: pulumi.Input<string>;
    secret: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SourceMondayConfiguration {
    credentials?: pulumi.Input<inputs.SourceMondayConfigurationCredentials>;
    /**
     * must be one of ["monday"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceMondayConfigurationCredentials {
    sourceMondayAuthorizationMethodApiToken?: pulumi.Input<inputs.SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken>;
    sourceMondayAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20>;
    sourceMondayUpdateAuthorizationMethodApiToken?: pulumi.Input<inputs.SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken>;
    sourceMondayUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20>;
}

export interface SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken {
    apiToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    subdomain?: pulumi.Input<string>;
}

export interface SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken {
    apiToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    subdomain?: pulumi.Input<string>;
}

export interface SourceMongodbConfiguration {
    /**
     * The authentication source where the user information is stored.
     */
    authSource?: pulumi.Input<string>;
    /**
     * The database you want to replicate.
     */
    database: pulumi.Input<string>;
    /**
     * The MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default.
     */
    instanceType?: pulumi.Input<inputs.SourceMongodbConfigurationInstanceType>;
    /**
     * The password associated with this username.
     */
    password?: pulumi.Input<string>;
    /**
     * must be one of ["mongodb"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The username which is used to access the database.
     */
    user?: pulumi.Input<string>;
}

export interface SourceMongodbConfigurationInstanceType {
    sourceMongodbMongoDbInstanceTypeMongoDbAtlas?: pulumi.Input<inputs.SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas>;
    sourceMongodbMongoDbInstanceTypeReplicaSet?: pulumi.Input<inputs.SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet>;
    sourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance?: pulumi.Input<inputs.SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance>;
    sourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas?: pulumi.Input<inputs.SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas>;
    sourceMongodbUpdateMongoDbInstanceTypeReplicaSet?: pulumi.Input<inputs.SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet>;
    sourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance?: pulumi.Input<inputs.SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance>;
}

export interface SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas {
    additionalProperties?: pulumi.Input<string>;
    clusterUrl: pulumi.Input<string>;
    instance: pulumi.Input<string>;
}

export interface SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet {
    instance: pulumi.Input<string>;
    replicaSet?: pulumi.Input<string>;
    serverAddresses: pulumi.Input<string>;
}

export interface SourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance {
    host: pulumi.Input<string>;
    instance: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas {
    additionalProperties?: pulumi.Input<string>;
    clusterUrl: pulumi.Input<string>;
    instance: pulumi.Input<string>;
}

export interface SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet {
    instance: pulumi.Input<string>;
    replicaSet?: pulumi.Input<string>;
    serverAddresses: pulumi.Input<string>;
}

export interface SourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance {
    host: pulumi.Input<string>;
    instance: pulumi.Input<string>;
    port: pulumi.Input<number>;
}

export interface SourceMongodbInternalPocConfiguration {
    /**
     * The authentication source where the user information is stored.
     */
    authSource?: pulumi.Input<string>;
    /**
     * The connection string of the database that you want to replicate..
     */
    connectionString?: pulumi.Input<string>;
    /**
     * The password associated with this username.
     */
    password?: pulumi.Input<string>;
    /**
     * The name of the replica set to be replicated.
     */
    replicaSet?: pulumi.Input<string>;
    /**
     * must be one of ["mongodb-internal-poc"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The username which is used to access the database.
     */
    user?: pulumi.Input<string>;
}

export interface SourceMssqlConfiguration {
    /**
     * The name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * The hostname of the database.
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * The password associated with the username.
     */
    password?: pulumi.Input<string>;
    /**
     * The port of the database.
     */
    port: pulumi.Input<number>;
    /**
     * The replication method used for extracting data from the database. STANDARD replication requires no setup on the DB side but will not be able to represent deletions incrementally. CDC uses {TBC} to detect inserts, updates, and deletes. This needs to be configured on the source database itself.
     */
    replicationMethod?: pulumi.Input<inputs.SourceMssqlConfigurationReplicationMethod>;
    /**
     * The list of schemas to sync from. Defaults to user. Case sensitive.
     */
    schemas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * must be one of ["mssql"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The encryption method which is used when communicating with the database.
     */
    sslMethod?: pulumi.Input<inputs.SourceMssqlConfigurationSslMethod>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.SourceMssqlConfigurationTunnelMethod>;
    /**
     * The username which is used to access the database.
     */
    username: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationReplicationMethod {
    sourceMssqlReplicationMethodLogicalReplicationCdc?: pulumi.Input<inputs.SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc>;
    sourceMssqlReplicationMethodStandard?: pulumi.Input<inputs.SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard>;
    sourceMssqlUpdateReplicationMethodLogicalReplicationCdc?: pulumi.Input<inputs.SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc>;
    sourceMssqlUpdateReplicationMethodStandard?: pulumi.Input<inputs.SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard>;
}

export interface SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc {
    dataToSync?: pulumi.Input<string>;
    initialWaitingSeconds?: pulumi.Input<number>;
    method: pulumi.Input<string>;
    snapshotIsolation?: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard {
    method: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc {
    dataToSync?: pulumi.Input<string>;
    initialWaitingSeconds?: pulumi.Input<number>;
    method: pulumi.Input<string>;
    snapshotIsolation?: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard {
    method: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationSslMethod {
    sourceMssqlSslMethodEncryptedTrustServerCertificate?: pulumi.Input<inputs.SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate>;
    sourceMssqlSslMethodEncryptedVerifyCertificate?: pulumi.Input<inputs.SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate>;
    sourceMssqlUpdateSslMethodEncryptedTrustServerCertificate?: pulumi.Input<inputs.SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate>;
    sourceMssqlUpdateSslMethodEncryptedVerifyCertificate?: pulumi.Input<inputs.SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate>;
}

export interface SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate {
    sslMethod: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate {
    hostNameInCertificate?: pulumi.Input<string>;
    sslMethod: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate {
    sslMethod: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate {
    hostNameInCertificate?: pulumi.Input<string>;
    sslMethod: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationTunnelMethod {
    sourceMssqlSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel>;
    sourceMssqlSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication>;
    sourceMssqlSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication>;
    sourceMssqlUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel>;
    sourceMssqlUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication>;
    sourceMssqlUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourceMyHoursConfiguration {
    /**
     * Your My Hours username
     */
    email: pulumi.Input<string>;
    /**
     * Pagination size used for retrieving logs in days
     */
    logsBatchSize?: pulumi.Input<number>;
    /**
     * The password associated to the username
     */
    password: pulumi.Input<string>;
    /**
     * must be one of ["my-hours"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Start date for collecting time logs
     */
    startDate: pulumi.Input<string>;
}

export interface SourceMysqlConfiguration {
    /**
     * The database name.
     */
    database: pulumi.Input<string>;
    /**
     * The host name of the database.
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3). For more information read about \n\nJDBC URL parameters\n\n.
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * The password associated with the username.
     */
    password?: pulumi.Input<string>;
    /**
     * The port to connect to.
     */
    port: pulumi.Input<number>;
    /**
     * Configures how data is extracted from the database.
     */
    replicationMethod: pulumi.Input<inputs.SourceMysqlConfigurationReplicationMethod>;
    /**
     * must be one of ["mysql"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * SSL connection modes. Read more \n\n in the docs\n\n.
     */
    sslMode?: pulumi.Input<inputs.SourceMysqlConfigurationSslMode>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.SourceMysqlConfigurationTunnelMethod>;
    /**
     * The username which is used to access the database.
     */
    username: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationReplicationMethod {
    sourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc?: pulumi.Input<inputs.SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc>;
    sourceMysqlUpdateMethodScanChangesWithUserDefinedCursor?: pulumi.Input<inputs.SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor>;
    sourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc?: pulumi.Input<inputs.SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc>;
    sourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor?: pulumi.Input<inputs.SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor>;
}

export interface SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc {
    initialWaitingSeconds?: pulumi.Input<number>;
    method: pulumi.Input<string>;
    serverTimeZone?: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor {
    method: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc {
    initialWaitingSeconds?: pulumi.Input<number>;
    method: pulumi.Input<string>;
    serverTimeZone?: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor {
    method: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationSslMode {
    sourceMysqlSslModesPreferred?: pulumi.Input<inputs.SourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred>;
    sourceMysqlSslModesRequired?: pulumi.Input<inputs.SourceMysqlConfigurationSslModeSourceMysqlSslModesRequired>;
    sourceMysqlSslModesVerifyCa?: pulumi.Input<inputs.SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa>;
    sourceMysqlSslModesVerifyIdentity?: pulumi.Input<inputs.SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity>;
    sourceMysqlUpdateSslModesPreferred?: pulumi.Input<inputs.SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred>;
    sourceMysqlUpdateSslModesRequired?: pulumi.Input<inputs.SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired>;
    sourceMysqlUpdateSslModesVerifyCa?: pulumi.Input<inputs.SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa>;
    sourceMysqlUpdateSslModesVerifyIdentity?: pulumi.Input<inputs.SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity>;
}

export interface SourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred {
    mode: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationSslModeSourceMysqlSslModesRequired {
    mode: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa {
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity {
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred {
    mode: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired {
    mode: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa {
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity {
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationTunnelMethod {
    sourceMysqlSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel>;
    sourceMysqlSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication>;
    sourceMysqlSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication>;
    sourceMysqlUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel>;
    sourceMysqlUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication>;
    sourceMysqlUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourceNetsuiteConfiguration {
    /**
     * Consumer key associated with your integration
     */
    consumerKey: pulumi.Input<string>;
    /**
     * Consumer secret associated with your integration
     */
    consumerSecret: pulumi.Input<string>;
    /**
     * The API names of the Netsuite objects you want to sync. Setting this speeds up the connection setup process by limiting the number of schemas that need to be retrieved from Netsuite.
     */
    objectTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Netsuite realm e.g. 2344535, as for `production` or 2344535_SB1, as for the `sandbox`
     */
    realm: pulumi.Input<string>;
    /**
     * must be one of ["netsuite"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Starting point for your data replication, in format of "YYYY-MM-DDTHH:mm:ssZ"
     */
    startDatetime: pulumi.Input<string>;
    /**
     * Access token key
     */
    tokenKey: pulumi.Input<string>;
    /**
     * Access token secret
     */
    tokenSecret: pulumi.Input<string>;
    /**
     * The amount of days used to query the data with date chunks. Set smaller value, if you have lots of data.
     */
    windowInDays?: pulumi.Input<number>;
}

export interface SourceNotionConfiguration {
    /**
     * Pick an authentication method.
     */
    credentials?: pulumi.Input<inputs.SourceNotionConfigurationCredentials>;
    /**
     * must be one of ["notion"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00.000Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceNotionConfigurationCredentials {
    sourceNotionAuthenticateUsingAccessToken?: pulumi.Input<inputs.SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken>;
    sourceNotionAuthenticateUsingOAuth20?: pulumi.Input<inputs.SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20>;
    sourceNotionUpdateAuthenticateUsingAccessToken?: pulumi.Input<inputs.SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken>;
    sourceNotionUpdateAuthenticateUsingOAuth20?: pulumi.Input<inputs.SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20>;
}

export interface SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken {
    authType: pulumi.Input<string>;
    token: pulumi.Input<string>;
}

export interface SourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20 {
    accessToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
}

export interface SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken {
    authType: pulumi.Input<string>;
    token: pulumi.Input<string>;
}

export interface SourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20 {
    accessToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
}

export interface SourceNytimesConfiguration {
    /**
     * API Key
     */
    apiKey: pulumi.Input<string>;
    /**
     * End date to stop the article retrieval (format YYYY-MM)
     */
    endDate?: pulumi.Input<string>;
    /**
     * must be one of ["1", "7", "30"]
     * Period of time (in days)
     */
    period: pulumi.Input<number>;
    /**
     * must be one of ["facebook"]
     * Share Type
     */
    shareType?: pulumi.Input<string>;
    /**
     * must be one of ["nytimes"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Start date to begin the article retrieval (format YYYY-MM)
     */
    startDate: pulumi.Input<string>;
}

export interface SourceOktaConfiguration {
    credentials?: pulumi.Input<inputs.SourceOktaConfigurationCredentials>;
    /**
     * The Okta domain. See the \n\ndocs\n\n for instructions on how to find it.
     */
    domain?: pulumi.Input<string>;
    /**
     * must be one of ["okta"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format YYYY-MM-DDTHH:MM:SSZ. Any data before this date will not be replicated.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceOktaConfigurationCredentials {
    sourceOktaAuthorizationMethodApiToken?: pulumi.Input<inputs.SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken>;
    sourceOktaAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20>;
    sourceOktaUpdateAuthorizationMethodApiToken?: pulumi.Input<inputs.SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken>;
    sourceOktaUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20>;
}

export interface SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken {
    apiToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20 {
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken {
    apiToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20 {
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceOmnisendConfiguration {
    /**
     * API Key
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["omnisend"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceOnesignalConfiguration {
    /**
     * Applications keys, see the \n\ndocs\n\n for more information on how to obtain this data
     */
    applications: pulumi.Input<pulumi.Input<inputs.SourceOnesignalConfigurationApplication>[]>;
    /**
     * Comma-separated list of names and the value (sum/count) for the returned outcome data. See the \n\ndocs\n\n for more details
     */
    outcomeNames: pulumi.Input<string>;
    /**
     * must be one of ["onesignal"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for OneSignal API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
    /**
     * OneSignal User Auth Key, see the \n\ndocs\n\n for more information on how to obtain this key.
     */
    userAuthKey: pulumi.Input<string>;
}

export interface SourceOnesignalConfigurationApplication {
    appApiKey: pulumi.Input<string>;
    appId: pulumi.Input<string>;
    appName?: pulumi.Input<string>;
}

export interface SourceOpenweatherConfiguration {
    /**
     * Your OpenWeather API Key. See \n\nhere\n\n. The key is case sensitive.
     */
    appid: pulumi.Input<string>;
    /**
     * must be one of ["af", "al", "ar", "az", "bg", "ca", "cz", "da", "de", "el", "en", "eu", "fa", "fi", "fr", "gl", "he", "hi", "hr", "hu", "id", "it", "ja", "kr", "la", "lt", "mk", "no", "nl", "pl", "pt", "pt*br", "ro", "ru", "sv", "se", "sk", "sl", "sp", "es", "sr", "th", "tr", "ua", "uk", "vi", "zh*cn", "zhTw", "zu"]
     * You can use lang parameter to get the output in your language. The contents of the description field will be translated. See \n\nhere\n\n for the list of supported languages.
     */
    lang?: pulumi.Input<string>;
    /**
     * Latitude for which you want to get weather condition from. (min -90, max 90)
     */
    lat: pulumi.Input<string>;
    /**
     * Longitude for which you want to get weather condition from. (min -180, max 180)
     */
    lon: pulumi.Input<string>;
    /**
     * must be one of ["openweather"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * must be one of ["standard", "metric", "imperial"]
     * Units of measurement. standard, metric and imperial units are available. If you do not use the units parameter, standard units will be applied by default.
     */
    units?: pulumi.Input<string>;
}

export interface SourceOracleConfiguration {
    /**
     * Connect data that will be used for DB connection
     */
    connectionData?: pulumi.Input<inputs.SourceOracleConfigurationConnectionData>;
    /**
     * The encryption method with is used when communicating with the database.
     */
    encryption: pulumi.Input<inputs.SourceOracleConfigurationEncryption>;
    /**
     * Hostname of the database.
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * The password associated with the username.
     */
    password?: pulumi.Input<string>;
    /**
     * Port of the database.
     * Oracle Corporations recommends the following port numbers:
     * 1521 - Default listening port for client connections to the listener.
     * 2484 - Recommended and officially registered listening port for client connections to the listener using TCP/IP with SSL
     */
    port: pulumi.Input<number>;
    /**
     * The list of schemas to sync from. Defaults to user. Case sensitive.
     */
    schemas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * must be one of ["oracle"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.SourceOracleConfigurationTunnelMethod>;
    /**
     * The username which is used to access the database.
     */
    username: pulumi.Input<string>;
}

export interface SourceOracleConfigurationConnectionData {
    sourceOracleConnectByServiceName?: pulumi.Input<inputs.SourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName>;
    sourceOracleConnectBySystemIdSid?: pulumi.Input<inputs.SourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid>;
    sourceOracleUpdateConnectByServiceName?: pulumi.Input<inputs.SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName>;
    sourceOracleUpdateConnectBySystemIdSid?: pulumi.Input<inputs.SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid>;
}

export interface SourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName {
    connectionType?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}

export interface SourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid {
    connectionType?: pulumi.Input<string>;
    sid: pulumi.Input<string>;
}

export interface SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName {
    connectionType?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}

export interface SourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid {
    connectionType?: pulumi.Input<string>;
    sid: pulumi.Input<string>;
}

export interface SourceOracleConfigurationEncryption {
    sourceOracleEncryptionNativeNetworkEncryptionNne?: pulumi.Input<inputs.SourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne>;
    sourceOracleEncryptionTlsEncryptedVerifyCertificate?: pulumi.Input<inputs.SourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate>;
    sourceOracleUpdateEncryptionNativeNetworkEncryptionNne?: pulumi.Input<inputs.SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne>;
    sourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate?: pulumi.Input<inputs.SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate>;
}

export interface SourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne {
    encryptionAlgorithm?: pulumi.Input<string>;
    encryptionMethod: pulumi.Input<string>;
}

export interface SourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate {
    encryptionMethod: pulumi.Input<string>;
    sslCertificate: pulumi.Input<string>;
}

export interface SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne {
    encryptionAlgorithm?: pulumi.Input<string>;
    encryptionMethod: pulumi.Input<string>;
}

export interface SourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate {
    encryptionMethod: pulumi.Input<string>;
    sslCertificate: pulumi.Input<string>;
}

export interface SourceOracleConfigurationTunnelMethod {
    sourceOracleSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel>;
    sourceOracleSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication>;
    sourceOracleSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication>;
    sourceOracleUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel>;
    sourceOracleUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication>;
    sourceOracleUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourceOrbConfiguration {
    /**
     * Orb API Key, issued from the Orb admin console.
     */
    apiKey: pulumi.Input<string>;
    /**
     * When set to N, the connector will always refresh resources created within the past N days. By default, updated objects that are not newly created are not incrementally synced.
     */
    lookbackWindowDays?: pulumi.Input<number>;
    /**
     * Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.
     */
    numericEventPropertiesKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Orb Plan ID to filter subscriptions that should have usage fetched.
     */
    planId?: pulumi.Input<string>;
    /**
     * must be one of ["orb"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2022-03-01T00:00:00Z. Any data with createdAt before this data will not be synced. For Subscription Usage, this becomes the `timeframeStart` API parameter.
     */
    startDate: pulumi.Input<string>;
    /**
     * Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.
     */
    stringEventPropertiesKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Property key name to group subscription usage by.
     */
    subscriptionUsageGroupingKey?: pulumi.Input<string>;
}

export interface SourceOrbitConfiguration {
    /**
     * Authorizes you to work with Orbit workspaces associated with the token.
     */
    apiToken: pulumi.Input<string>;
    /**
     * must be one of ["orbit"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Date in the format 2022-06-26. Only load members whose last activities are after this date.
     */
    startDate?: pulumi.Input<string>;
    /**
     * The unique name of the workspace that your API token is associated with.
     */
    workspace: pulumi.Input<string>;
}

export interface SourceOutbrainAmplifyConfiguration {
    /**
     * Credentials for making authenticated requests requires either username/password or access_token.
     */
    credentials: pulumi.Input<inputs.SourceOutbrainAmplifyConfigurationCredentials>;
    /**
     * Date in the format YYYY-MM-DD.
     */
    endDate?: pulumi.Input<string>;
    /**
     * must be one of ["country", "region", "subregion"]
     * The granularity used for geo location data in reports.
     */
    geoLocationBreakdown?: pulumi.Input<string>;
    /**
     * must be one of ["daily", "weekly", "monthly"]
     * The granularity used for periodic data in reports. See \n\nthe docs\n\n.
     */
    reportGranularity?: pulumi.Input<string>;
    /**
     * must be one of ["outbrain-amplify"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Date in the format YYYY-MM-DD eg. 2017-01-25. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceOutbrainAmplifyConfigurationCredentials {
    sourceOutbrainAmplifyAuthenticationMethodAccessToken?: pulumi.Input<inputs.SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken>;
    sourceOutbrainAmplifyAuthenticationMethodUsernamePassword?: pulumi.Input<inputs.SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword>;
    sourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken?: pulumi.Input<inputs.SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken>;
    sourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword?: pulumi.Input<inputs.SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword>;
}

export interface SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken {
    accessToken: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword {
    password: pulumi.Input<string>;
    type: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken {
    accessToken: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface SourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword {
    password: pulumi.Input<string>;
    type: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SourceOutreachConfiguration {
    /**
     * The Client ID of your Outreach developer application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of your Outreach developer application.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * A Redirect URI is the location where the authorization server sends the user once the app has been successfully authorized and granted an authorization code or access token.
     */
    redirectUri: pulumi.Input<string>;
    /**
     * The token for obtaining the new access token.
     */
    refreshToken: pulumi.Input<string>;
    /**
     * must be one of ["outreach"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for Outreach API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourcePaypalTransactionConfiguration {
    /**
     * The Client ID of your Paypal developer application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of your Paypal developer application.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Determines whether to use the sandbox or production environment.
     */
    isSandbox: pulumi.Input<boolean>;
    /**
     * The key to refresh the expired access token.
     */
    refreshToken?: pulumi.Input<string>;
    /**
     * must be one of ["paypal-transaction"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Start Date for data extraction in \n\nISO format\n\n. Date must be in range from 3 years till 12 hrs before present time.
     */
    startDate: pulumi.Input<string>;
}

export interface SourcePaystackConfiguration {
    /**
     * When set, the connector will always reload data from the past N days, where N is the value set here. This is useful if your data is updated after creation.
     */
    lookbackWindowDays?: pulumi.Input<number>;
    /**
     * The Paystack API key (usually starts with 'sk*live*'; find yours \n\nhere\n\n).
     */
    secretKey: pulumi.Input<string>;
    /**
     * must be one of ["paystack"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourcePendoConfiguration {
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["pendo"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourcePersistiqConfiguration {
    /**
     * PersistIq API Key. See the \n\ndocs\n\n for more information on where to find that key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["persistiq"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourcePexelsApiConfiguration {
    /**
     * API key is required to access pexels api, For getting your's goto https://www.pexels.com/api/documentation and create account for free.
     */
    apiKey: pulumi.Input<string>;
    /**
     * Optional, Desired photo color. Supported colors red, orange, yellow, green, turquoise, blue, violet, pink, brown, black, gray, white or any hexidecimal color code.
     */
    color?: pulumi.Input<string>;
    /**
     * Optional, The locale of the search you are performing. The current supported locales are 'en-US' 'pt-BR' 'es-ES' 'ca-ES' 'de-DE' 'it-IT' 'fr-FR' 'sv-SE' 'id-ID' 'pl-PL' 'ja-JP' 'zh-TW' 'zh-CN' 'ko-KR' 'th-TH' 'nl-NL' 'hu-HU' 'vi-VN' 'cs-CZ' 'da-DK' 'fi-FI' 'uk-UA' 'el-GR' 'ro-RO' 'nb-NO' 'sk-SK' 'tr-TR' 'ru-RU'.
     */
    locale?: pulumi.Input<string>;
    /**
     * Optional, Desired photo orientation. The current supported orientations are landscape, portrait or square
     */
    orientation?: pulumi.Input<string>;
    /**
     * Optional, the search query, Example Ocean, Tigers, Pears, etc.
     */
    query: pulumi.Input<string>;
    /**
     * Optional, Minimum photo size. The current supported sizes are large(24MP), medium(12MP) or small(4MP).
     */
    size?: pulumi.Input<string>;
    /**
     * must be one of ["pexels-api"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourcePinterestConfiguration {
    credentials?: pulumi.Input<inputs.SourcePinterestConfigurationCredentials>;
    /**
     * must be one of ["pinterest"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * A date in the format YYYY-MM-DD. If you have not set a date, it would be defaulted to latest allowed date by api (89 days from today).
     */
    startDate: pulumi.Input<string>;
    /**
     * Entity statuses based off of campaigns, ad_groups, and ads. If you do not have a status set, it will be ignored completely.
     */
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SourcePinterestConfigurationCredentials {
    sourcePinterestAuthorizationMethodAccessToken?: pulumi.Input<inputs.SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken>;
    sourcePinterestAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20>;
    sourcePinterestUpdateAuthorizationMethodAccessToken?: pulumi.Input<inputs.SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken>;
    sourcePinterestUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20>;
}

export interface SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken {
    accessToken: pulumi.Input<string>;
    authMethod: pulumi.Input<string>;
}

export interface SourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20 {
    authMethod: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken {
    accessToken: pulumi.Input<string>;
    authMethod: pulumi.Input<string>;
}

export interface SourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20 {
    authMethod: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourcePipedriveConfiguration {
    authorization?: pulumi.Input<inputs.SourcePipedriveConfigurationAuthorization>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. When specified and not None, then stream will behave as incremental
     */
    replicationStartDate: pulumi.Input<string>;
    /**
     * must be one of ["pipedrive"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourcePipedriveConfigurationAuthorization {
    apiToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourcePocketConfiguration {
    /**
     * The user's Pocket access token.
     */
    accessToken: pulumi.Input<string>;
    /**
     * Your application's Consumer Key.
     */
    consumerKey: pulumi.Input<string>;
    /**
     * must be one of ["article", "video", "image"]
     * Select the content type of the items to retrieve.
     */
    contentType?: pulumi.Input<string>;
    /**
     * must be one of ["simple", "complete"]
     * Select the granularity of the information about each item.
     */
    detailType?: pulumi.Input<string>;
    /**
     * Only return items from a particular `domain`.
     */
    domain?: pulumi.Input<string>;
    /**
     * Retrieve only favorited items.
     */
    favorite?: pulumi.Input<boolean>;
    /**
     * Only return items whose title or url contain the `search` string.
     */
    search?: pulumi.Input<string>;
    /**
     * Only return items modified since the given timestamp.
     */
    since?: pulumi.Input<string>;
    /**
     * must be one of ["newest", "oldest", "title", "site"]
     * Sort retrieved items by the given criteria.
     */
    sort?: pulumi.Input<string>;
    /**
     * must be one of ["pocket"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * must be one of ["unread", "archive", "all"]
     * Select the state of the items to retrieve.
     */
    state?: pulumi.Input<string>;
    /**
     * Return only items tagged with this tag name. Use *untagged* for retrieving only untagged items.
     */
    tag?: pulumi.Input<string>;
}

export interface SourcePokeapiConfiguration {
    /**
     * Pokemon requested from the API.
     */
    pokemonName: pulumi.Input<string>;
    /**
     * must be one of ["pokeapi"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourcePolygonStockApiConfiguration {
    /**
     * Determines whether or not the results are adjusted for splits. By default, results are adjusted and set to true. Set this to false to get results that are NOT adjusted for splits.
     */
    adjusted?: pulumi.Input<string>;
    /**
     * Your API ACCESS Key
     */
    apiKey: pulumi.Input<string>;
    /**
     * The target date for the aggregate window.
     */
    endDate: pulumi.Input<string>;
    /**
     * The target date for the aggregate window.
     */
    limit?: pulumi.Input<number>;
    /**
     * The size of the timespan multiplier.
     */
    multiplier: pulumi.Input<number>;
    /**
     * Sort the results by timestamp. asc will return results in ascending order (oldest at the top), desc will return results in descending order (newest at the top).
     */
    sort?: pulumi.Input<string>;
    /**
     * must be one of ["polygon-stock-api"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The beginning date for the aggregate window.
     */
    startDate: pulumi.Input<string>;
    /**
     * The exchange symbol that this item is traded under.
     */
    stocksTicker: pulumi.Input<string>;
    /**
     * The size of the time window.
     */
    timespan: pulumi.Input<string>;
}

export interface SourcePostgresConfiguration {
    /**
     * Name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * Hostname of the database.
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about \n\nJDBC URL parameters\n\n.
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * Password associated with the username.
     */
    password?: pulumi.Input<string>;
    /**
     * Port of the database.
     */
    port: pulumi.Input<number>;
    /**
     * Replication method for extracting data from the database.
     */
    replicationMethod?: pulumi.Input<inputs.SourcePostgresConfigurationReplicationMethod>;
    /**
     * The list of schemas (case sensitive) to sync from. Defaults to public.
     */
    schemas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * must be one of ["postgres"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * SSL connection modes.
     * Read more \n\n in the docs\n\n.
     */
    sslMode?: pulumi.Input<inputs.SourcePostgresConfigurationSslMode>;
    /**
     * Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
     */
    tunnelMethod?: pulumi.Input<inputs.SourcePostgresConfigurationTunnelMethod>;
    /**
     * Username to access the database.
     */
    username: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationReplicationMethod {
    sourcePostgresReplicationMethodLogicalReplicationCdc?: pulumi.Input<inputs.SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc>;
    sourcePostgresReplicationMethodStandard?: pulumi.Input<inputs.SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard>;
    sourcePostgresReplicationMethodStandardXmin?: pulumi.Input<inputs.SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin>;
    sourcePostgresUpdateReplicationMethodLogicalReplicationCdc?: pulumi.Input<inputs.SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc>;
    sourcePostgresUpdateReplicationMethodStandard?: pulumi.Input<inputs.SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard>;
    sourcePostgresUpdateReplicationMethodStandardXmin?: pulumi.Input<inputs.SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin>;
}

export interface SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc {
    additionalProperties?: pulumi.Input<string>;
    initialWaitingSeconds?: pulumi.Input<number>;
    lsnCommitBehaviour?: pulumi.Input<string>;
    method: pulumi.Input<string>;
    plugin?: pulumi.Input<string>;
    publication: pulumi.Input<string>;
    queueSize?: pulumi.Input<number>;
    replicationSlot: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard {
    method: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin {
    method: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc {
    additionalProperties?: pulumi.Input<string>;
    initialWaitingSeconds?: pulumi.Input<number>;
    lsnCommitBehaviour?: pulumi.Input<string>;
    method: pulumi.Input<string>;
    plugin?: pulumi.Input<string>;
    publication: pulumi.Input<string>;
    queueSize?: pulumi.Input<number>;
    replicationSlot: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard {
    method: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin {
    method: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslMode {
    sourcePostgresSslModesAllow?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresSslModesAllow>;
    sourcePostgresSslModesDisable?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresSslModesDisable>;
    sourcePostgresSslModesPrefer?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer>;
    sourcePostgresSslModesRequire?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresSslModesRequire>;
    sourcePostgresSslModesVerifyCa?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa>;
    sourcePostgresSslModesVerifyFull?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull>;
    sourcePostgresUpdateSslModesAllow?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow>;
    sourcePostgresUpdateSslModesDisable?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable>;
    sourcePostgresUpdateSslModesPrefer?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer>;
    sourcePostgresUpdateSslModesRequire?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire>;
    sourcePostgresUpdateSslModesVerifyCa?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa>;
    sourcePostgresUpdateSslModesVerifyFull?: pulumi.Input<inputs.SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresSslModesAllow {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresSslModesDisable {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresSslModesRequire {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa {
    additionalProperties?: pulumi.Input<string>;
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull {
    additionalProperties?: pulumi.Input<string>;
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire {
    additionalProperties?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa {
    additionalProperties?: pulumi.Input<string>;
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull {
    additionalProperties?: pulumi.Input<string>;
    caCertificate: pulumi.Input<string>;
    clientCertificate?: pulumi.Input<string>;
    clientKey?: pulumi.Input<string>;
    clientKeyPassword?: pulumi.Input<string>;
    mode: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationTunnelMethod {
    sourcePostgresSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel>;
    sourcePostgresSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication>;
    sourcePostgresSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication>;
    sourcePostgresUpdateSshTunnelMethodNoTunnel?: pulumi.Input<inputs.SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel>;
    sourcePostgresUpdateSshTunnelMethodPasswordAuthentication?: pulumi.Input<inputs.SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication>;
    sourcePostgresUpdateSshTunnelMethodSshKeyAuthentication?: pulumi.Input<inputs.SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication>;
}

export interface SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel {
    tunnelMethod: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication {
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
    tunnelUserPassword: pulumi.Input<string>;
}

export interface SourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication {
    sshKey: pulumi.Input<string>;
    tunnelHost: pulumi.Input<string>;
    tunnelMethod: pulumi.Input<string>;
    tunnelPort: pulumi.Input<number>;
    tunnelUser: pulumi.Input<string>;
}

export interface SourcePosthogConfiguration {
    /**
     * API Key. See the \n\ndocs\n\n for information on how to generate this key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * Base PostHog url. Defaults to PostHog Cloud (https://app.posthog.com).
     */
    baseUrl?: pulumi.Input<string>;
    /**
     * must be one of ["posthog"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate the data. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourcePostmarkappConfiguration {
    /**
     * must be one of ["postmarkapp"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * API Key for account
     */
    xPostmarkAccountToken: pulumi.Input<string>;
    /**
     * API Key for server
     */
    xPostmarkServerToken: pulumi.Input<string>;
}

export interface SourcePrestashopConfiguration {
    /**
     * Your PrestaShop access key. See \n\n the docs \n\n for info on how to obtain this.
     */
    accessKey: pulumi.Input<string>;
    /**
     * must be one of ["prestashop"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The Start date in the format YYYY-MM-DD.
     */
    startDate: pulumi.Input<string>;
    /**
     * Shop URL without trailing slash.
     */
    url: pulumi.Input<string>;
}

export interface SourcePublicApisConfiguration {
    /**
     * must be one of ["public-apis"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourcePunkApiConfiguration {
    /**
     * To extract specific data with Unique ID
     */
    brewedAfter: pulumi.Input<string>;
    /**
     * To extract specific data with Unique ID
     */
    brewedBefore: pulumi.Input<string>;
    /**
     * To extract specific data with Unique ID
     */
    id?: pulumi.Input<string>;
    /**
     * must be one of ["punk-api"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourcePypiConfiguration {
    /**
     * Name of the project/package. Can only be in lowercase with hyphen. This is the name used using pip command for installing the package.
     */
    projectName: pulumi.Input<string>;
    /**
     * must be one of ["pypi"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Version of the project/package.  Use it to find a particular release instead of all releases.
     */
    version?: pulumi.Input<string>;
}

export interface SourceQualarooConfiguration {
    /**
     * A Qualaroo token. See the \n\ndocs\n\n for instructions on how to generate it.
     */
    key: pulumi.Input<string>;
    /**
     * must be one of ["qualaroo"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
    /**
     * IDs of the surveys from which you'd like to replicate data. If left empty, data from all surveys to which you have access will be replicated.
     */
    surveyIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Qualaroo token. See the \n\ndocs\n\n for instructions on how to generate it.
     */
    token: pulumi.Input<string>;
}

export interface SourceQuickbooksConfiguration {
    credentials: pulumi.Input<inputs.SourceQuickbooksConfigurationCredentials>;
    /**
     * Determines whether to use the sandbox or production environment.
     */
    sandbox: pulumi.Input<boolean>;
    /**
     * must be one of ["quickbooks"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The default value to use if no bookmark exists for an endpoint (rfc3339 date string). E.g, 2021-03-20T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceQuickbooksConfigurationCredentials {
    sourceQuickbooksAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20>;
    sourceQuickbooksUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20>;
}

export interface SourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    realmId: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    realmId: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceRailzConfiguration {
    /**
     * Client ID (client_id)
     */
    clientId: pulumi.Input<string>;
    /**
     * Secret key (secret_key)
     */
    secretKey: pulumi.Input<string>;
    /**
     * must be one of ["railz"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Start date
     */
    startDate: pulumi.Input<string>;
}

export interface SourceRechargeConfiguration {
    /**
     * The value of the Access Token generated. See the \n\ndocs\n\n for more information.
     */
    accessToken: pulumi.Input<string>;
    /**
     * must be one of ["recharge"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for Recharge API, in the format YYYY-MM-DDT00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceRecreationConfiguration {
    /**
     * API Key
     */
    apikey: pulumi.Input<string>;
    queryCampsites?: pulumi.Input<string>;
    /**
     * must be one of ["recreation"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceRecruiteeConfiguration {
    /**
     * Recruitee API Key. See \n\nhere\n\n.
     */
    apiKey: pulumi.Input<string>;
    /**
     * Recruitee Company ID. You can also find this ID on the \n\nRecruitee API tokens page\n\n.
     */
    companyId: pulumi.Input<number>;
    /**
     * must be one of ["recruitee"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceRecurlyConfiguration {
    /**
     * Recurly API Key. See the  \n\ndocs\n\n for more information on how to generate this key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * ISO8601 timestamp from which the replication from Recurly API will start from.
     */
    beginTime?: pulumi.Input<string>;
    /**
     * ISO8601 timestamp to which the replication from Recurly API will stop. Records after that date won't be imported.
     */
    endTime?: pulumi.Input<string>;
    /**
     * must be one of ["recurly"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceRedshiftConfiguration {
    /**
     * Name of the database.
     */
    database: pulumi.Input<string>;
    /**
     * Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com).
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * Password associated with the username.
     */
    password: pulumi.Input<string>;
    /**
     * Port of the database.
     */
    port: pulumi.Input<number>;
    /**
     * The list of schemas to sync from. Specify one or more explicitly or keep empty to process all schemas. Schema names are case sensitive.
     */
    schemas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * must be one of ["redshift"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Username to use to access the database.
     */
    username: pulumi.Input<string>;
}

export interface SourceRetentlyConfiguration {
    /**
     * Choose how to authenticate to Retently
     */
    credentials?: pulumi.Input<inputs.SourceRetentlyConfigurationCredentials>;
    /**
     * must be one of ["retently"]
     */
    sourceType?: pulumi.Input<string>;
}

export interface SourceRetentlyConfigurationCredentials {
    sourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth?: pulumi.Input<inputs.SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth>;
    sourceRetentlyAuthenticationMechanismAuthenticateWithApiToken?: pulumi.Input<inputs.SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken>;
    sourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth?: pulumi.Input<inputs.SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth>;
    sourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken?: pulumi.Input<inputs.SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken>;
}

export interface SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth {
    additionalProperties?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken {
    additionalProperties?: pulumi.Input<string>;
    apiKey: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth {
    additionalProperties?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken {
    additionalProperties?: pulumi.Input<string>;
    apiKey: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceRkiCovidConfiguration {
    /**
     * must be one of ["rki-covid"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date in the format 2017-01-25. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceRssConfiguration {
    /**
     * must be one of ["rss"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * RSS Feed URL
     */
    url: pulumi.Input<string>;
}

export interface SourceS3Configuration {
    /**
     * The name of the stream you would like this source to output. Can contain letters, numbers, or underscores.
     */
    dataset: pulumi.Input<string>;
    /**
     * The format of the files you'd like to replicate
     */
    format?: pulumi.Input<inputs.SourceS3ConfigurationFormat>;
    /**
     * A regular expression which tells the connector which files to replicate. All files which match this pattern will be replicated. Use | to separate multiple patterns. See \n\nthis page\n\n to understand pattern syntax (GLOBSTAR and SPLIT flags are enabled). Use pattern \n\n**\n\n to pick up all files.
     */
    pathPattern: pulumi.Input<string>;
    /**
     * Use this to load files from S3 or S3-compatible services
     */
    provider: pulumi.Input<inputs.SourceS3ConfigurationProvider>;
    /**
     * Optionally provide a schema to enforce, as a valid JSON string. Ensure this is a mapping of \n\n{ "column" : "type" }\n\n, where types are valid \n\nJSON Schema datatypes\n\n. Leave as {} to auto-infer the schema.
     */
    schema?: pulumi.Input<string>;
    /**
     * must be one of ["s3"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceS3ConfigurationFormat {
    sourceS3FileFormatAvro?: pulumi.Input<inputs.SourceS3ConfigurationFormatSourceS3FileFormatAvro>;
    sourceS3FileFormatCsv?: pulumi.Input<inputs.SourceS3ConfigurationFormatSourceS3FileFormatCsv>;
    sourceS3FileFormatJsonl?: pulumi.Input<inputs.SourceS3ConfigurationFormatSourceS3FileFormatJsonl>;
    sourceS3FileFormatParquet?: pulumi.Input<inputs.SourceS3ConfigurationFormatSourceS3FileFormatParquet>;
    sourceS3UpdateFileFormatAvro?: pulumi.Input<inputs.SourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro>;
    sourceS3UpdateFileFormatCsv?: pulumi.Input<inputs.SourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv>;
    sourceS3UpdateFileFormatJsonl?: pulumi.Input<inputs.SourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl>;
    sourceS3UpdateFileFormatParquet?: pulumi.Input<inputs.SourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet>;
}

export interface SourceS3ConfigurationFormatSourceS3FileFormatAvro {
    filetype?: pulumi.Input<string>;
}

export interface SourceS3ConfigurationFormatSourceS3FileFormatCsv {
    additionalReaderOptions?: pulumi.Input<string>;
    advancedOptions?: pulumi.Input<string>;
    blockSize?: pulumi.Input<number>;
    delimiter?: pulumi.Input<string>;
    doubleQuote?: pulumi.Input<boolean>;
    encoding?: pulumi.Input<string>;
    escapeChar?: pulumi.Input<string>;
    filetype?: pulumi.Input<string>;
    inferDatatypes?: pulumi.Input<boolean>;
    newlinesInValues?: pulumi.Input<boolean>;
    quoteChar?: pulumi.Input<string>;
}

export interface SourceS3ConfigurationFormatSourceS3FileFormatJsonl {
    blockSize?: pulumi.Input<number>;
    filetype?: pulumi.Input<string>;
    newlinesInValues?: pulumi.Input<boolean>;
    unexpectedFieldBehavior?: pulumi.Input<string>;
}

export interface SourceS3ConfigurationFormatSourceS3FileFormatParquet {
    batchSize?: pulumi.Input<number>;
    bufferSize?: pulumi.Input<number>;
    columns?: pulumi.Input<pulumi.Input<string>[]>;
    filetype?: pulumi.Input<string>;
}

export interface SourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro {
    filetype?: pulumi.Input<string>;
}

export interface SourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv {
    additionalReaderOptions?: pulumi.Input<string>;
    advancedOptions?: pulumi.Input<string>;
    blockSize?: pulumi.Input<number>;
    delimiter?: pulumi.Input<string>;
    doubleQuote?: pulumi.Input<boolean>;
    encoding?: pulumi.Input<string>;
    escapeChar?: pulumi.Input<string>;
    filetype?: pulumi.Input<string>;
    inferDatatypes?: pulumi.Input<boolean>;
    newlinesInValues?: pulumi.Input<boolean>;
    quoteChar?: pulumi.Input<string>;
}

export interface SourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl {
    blockSize?: pulumi.Input<number>;
    filetype?: pulumi.Input<string>;
    newlinesInValues?: pulumi.Input<boolean>;
    unexpectedFieldBehavior?: pulumi.Input<string>;
}

export interface SourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet {
    batchSize?: pulumi.Input<number>;
    bufferSize?: pulumi.Input<number>;
    columns?: pulumi.Input<pulumi.Input<string>[]>;
    filetype?: pulumi.Input<string>;
}

export interface SourceS3ConfigurationProvider {
    awsAccessKeyId?: pulumi.Input<string>;
    awsSecretAccessKey?: pulumi.Input<string>;
    bucket: pulumi.Input<string>;
    endpoint?: pulumi.Input<string>;
    pathPrefix?: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
}

export interface SourceSalesforceConfiguration {
    /**
     * must be one of ["Client"]
     */
    authType?: pulumi.Input<string>;
    /**
     * Enter your Salesforce developer application's \n\nClient ID\n\n
     */
    clientId: pulumi.Input<string>;
    /**
     * Enter your Salesforce developer application's \n\nClient secret\n\n
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Toggle to use Bulk API (this might cause empty fields for some streams)
     */
    forceUseBulkApi?: pulumi.Input<boolean>;
    /**
     * Toggle if you're using a \n\nSalesforce Sandbox\n\n
     */
    isSandbox?: pulumi.Input<boolean>;
    /**
     * Enter your application's \n\nSalesforce Refresh Token\n\n used for Airbyte to access your Salesforce account.
     */
    refreshToken: pulumi.Input<string>;
    /**
     * must be one of ["salesforce"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Enter the date (or date-time) in the YYYY-MM-DD or YYYY-MM-DDTHH:mm:ssZ format. Airbyte will replicate the data updated on and after this date. If this field is blank, Airbyte will replicate the data for last two years.
     */
    startDate?: pulumi.Input<string>;
    /**
     * Add filters to select only required stream based on `SObject` name. Use this field to filter which tables are displayed by this connector. This is useful if your Salesforce account has a large number of tables (>1000), in which case you may find it easier to navigate the UI and speed up the connector's performance if you restrict the tables displayed by this connector.
     */
    streamsCriterias?: pulumi.Input<pulumi.Input<inputs.SourceSalesforceConfigurationStreamsCriteria>[]>;
}

export interface SourceSalesforceConfigurationStreamsCriteria {
    criteria: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface SourceSalesloftConfiguration {
    credentials: pulumi.Input<inputs.SourceSalesloftConfigurationCredentials>;
    /**
     * must be one of ["salesloft"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for Salesloft API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceSalesloftConfigurationCredentials {
    sourceSalesloftCredentialsAuthenticateViaApiKey?: pulumi.Input<inputs.SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey>;
    sourceSalesloftCredentialsAuthenticateViaOAuth?: pulumi.Input<inputs.SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth>;
    sourceSalesloftUpdateCredentialsAuthenticateViaApiKey?: pulumi.Input<inputs.SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey>;
    sourceSalesloftUpdateCredentialsAuthenticateViaOAuth?: pulumi.Input<inputs.SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth>;
}

export interface SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey {
    apiKey: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth {
    accessToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey {
    apiKey: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth {
    accessToken: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceSapFieldglassConfiguration {
    /**
     * API Key
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["sap-fieldglass"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceSecodaConfiguration {
    /**
     * Your API Access Key. See \n\nhere\n\n. The key is case sensitive.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["secoda"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceSendgridConfiguration {
    /**
     * API Key, use \n\nadmin\n\n to generate this key.
     */
    apikey: pulumi.Input<string>;
    /**
     * must be one of ["sendgrid"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Start time in ISO8601 format. Any data before this time point will not be replicated.
     */
    startTime?: pulumi.Input<string>;
}

export interface SourceSendinblueConfiguration {
    /**
     * Your API Key. See \n\nhere\n\n.
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["sendinblue"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceSenseforceConfiguration {
    /**
     * Your API access token. See \n\nhere\n\n. The toke is case sensitive.
     */
    accessToken: pulumi.Input<string>;
    /**
     * Your Senseforce API backend URL. This is the URL shown during the Login screen. See \n\nhere\n\n for more details. (Note: Most Senseforce backend APIs have the term 'galaxy' in their ULR)
     */
    backendUrl: pulumi.Input<string>;
    /**
     * The ID of the dataset you want to synchronize. The ID can be found in the URL when opening the dataset. See \n\nhere\n\n for more details. (Note: As the Senseforce API only allows to synchronize a specific dataset, each dataset you  want to synchronize needs to be implemented as a separate airbyte source).
     */
    datasetId: pulumi.Input<string>;
    /**
     * The time increment used by the connector when requesting data from the Senseforce API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted and the more likely one could run into rate limites.  Furthermore, consider that large chunks of time might take a long time for the Senseforce query to return data - meaning it could take in effect longer than with more smaller time slices. If there are a lot of data per day, set this setting to 1. If there is only very little data per day, you might change the setting to 10 or more.
     */
    sliceRange?: pulumi.Input<number>;
    /**
     * must be one of ["senseforce"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25. Only data with "Timestamp" after this date will be replicated. Important note: This start date must be set to the first day of where your dataset provides data.  If your dataset has data from 2020-10-10 10:21:10, set the startDate to 2020-10-10 or later
     */
    startDate: pulumi.Input<string>;
}

export interface SourceSentryConfiguration {
    /**
     * Log into Sentry and then \n\ncreate authentication tokens\n\n.For self-hosted, you can find or create authentication tokens by visiting "{instance*url*prefix}/settings/account/api/auth-tokens/"
     */
    authToken: pulumi.Input<string>;
    /**
     * Fields to retrieve when fetching discover events
     */
    discoverFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Host name of Sentry API server.For self-hosted, specify your host name here. Otherwise, leave it empty.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The slug of the organization the groups belong to.
     */
    organization: pulumi.Input<string>;
    /**
     * The name (slug) of the Project you want to sync.
     */
    project: pulumi.Input<string>;
    /**
     * must be one of ["sentry"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceSftpBulkConfiguration {
    /**
     * Sync only the most recent file for the configured folder path and file pattern
     */
    fileMostRecent?: pulumi.Input<boolean>;
    /**
     * The regular expression to specify files for sync in a chosen Folder Path
     */
    filePattern?: pulumi.Input<string>;
    /**
     * must be one of ["csv", "json"]
     * The file type you want to sync. Currently only 'csv' and 'json' files are supported.
     */
    fileType?: pulumi.Input<string>;
    /**
     * The directory to search files for sync
     */
    folderPath: pulumi.Input<string>;
    /**
     * The server host address
     */
    host: pulumi.Input<string>;
    /**
     * OS-level password for logging into the jump server host
     */
    password?: pulumi.Input<string>;
    /**
     * The server port
     */
    port: pulumi.Input<number>;
    /**
     * The private key
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The separator used in the CSV files. Define None if you want to use the Sniffer functionality
     */
    separator?: pulumi.Input<string>;
    /**
     * must be one of ["sftp-bulk"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
    /**
     * The name of the stream or table you want to create
     */
    streamName: pulumi.Input<string>;
    /**
     * The server user
     */
    username: pulumi.Input<string>;
}

export interface SourceSftpConfiguration {
    /**
     * The server authentication method
     */
    credentials?: pulumi.Input<inputs.SourceSftpConfigurationCredentials>;
    /**
     * The regular expression to specify files for sync in a chosen Folder Path
     */
    filePattern?: pulumi.Input<string>;
    /**
     * Coma separated file types. Currently only 'csv' and 'json' types are supported.
     */
    fileTypes?: pulumi.Input<string>;
    /**
     * The directory to search files for sync
     */
    folderPath?: pulumi.Input<string>;
    /**
     * The server host address
     */
    host: pulumi.Input<string>;
    /**
     * The server port
     */
    port: pulumi.Input<number>;
    /**
     * must be one of ["sftp"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The server user
     */
    user: pulumi.Input<string>;
}

export interface SourceSftpConfigurationCredentials {
    sourceSftpAuthenticationWildcardPasswordAuthentication?: pulumi.Input<inputs.SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication>;
    sourceSftpAuthenticationWildcardSshKeyAuthentication?: pulumi.Input<inputs.SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication>;
    sourceSftpUpdateAuthenticationWildcardPasswordAuthentication?: pulumi.Input<inputs.SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication>;
    sourceSftpUpdateAuthenticationWildcardSshKeyAuthentication?: pulumi.Input<inputs.SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication>;
}

export interface SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication {
    authMethod: pulumi.Input<string>;
    authUserPassword: pulumi.Input<string>;
}

export interface SourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication {
    authMethod: pulumi.Input<string>;
    authSshKey: pulumi.Input<string>;
}

export interface SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication {
    authMethod: pulumi.Input<string>;
    authUserPassword: pulumi.Input<string>;
}

export interface SourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication {
    authMethod: pulumi.Input<string>;
    authSshKey: pulumi.Input<string>;
}

export interface SourceShopifyConfiguration {
    /**
     * The authorization method to use to retrieve data from Shopify
     */
    credentials?: pulumi.Input<inputs.SourceShopifyConfigurationCredentials>;
    /**
     * The name of your Shopify store found in the URL. For example, if your URL was https://NAME.myshopify.com, then the name would be 'NAME' or 'NAME.myshopify.com'.
     */
    shop: pulumi.Input<string>;
    /**
     * must be one of ["shopify"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date you would like to replicate data from. Format: YYYY-MM-DD. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceShopifyConfigurationCredentials {
    sourceShopifyShopifyAuthorizationMethodApiPassword?: pulumi.Input<inputs.SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword>;
    sourceShopifyShopifyAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20>;
    sourceShopifyUpdateShopifyAuthorizationMethodApiPassword?: pulumi.Input<inputs.SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword>;
    sourceShopifyUpdateShopifyAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20>;
}

export interface SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword {
    apiPassword: pulumi.Input<string>;
    authMethod: pulumi.Input<string>;
}

export interface SourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20 {
    accessToken?: pulumi.Input<string>;
    authMethod: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
}

export interface SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword {
    apiPassword: pulumi.Input<string>;
    authMethod: pulumi.Input<string>;
}

export interface SourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20 {
    accessToken?: pulumi.Input<string>;
    authMethod: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
}

export interface SourceShortioConfiguration {
    domainId: pulumi.Input<string>;
    /**
     * Short.io Secret Key
     */
    secretKey: pulumi.Input<string>;
    /**
     * must be one of ["shortio"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceSlackConfiguration {
    /**
     * A channel name list (without leading '#' char) which limit the channels from which you'd like to sync. Empty list means no filter.
     */
    channelFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Choose how to authenticate into Slack
     */
    credentials?: pulumi.Input<inputs.SourceSlackConfigurationCredentials>;
    /**
     * Whether to join all channels or to sync data only from channels the bot is already in.  If false, you'll need to manually add the bot to all the channels from which you'd like to sync messages.
     */
    joinChannels: pulumi.Input<boolean>;
    /**
     * How far into the past to look for messages in threads, default is 0 days
     */
    lookbackWindow: pulumi.Input<number>;
    /**
     * must be one of ["slack"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceSlackConfigurationCredentials {
    sourceSlackAuthenticationMechanismApiToken?: pulumi.Input<inputs.SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken>;
    sourceSlackAuthenticationMechanismSignInViaSlackOAuth?: pulumi.Input<inputs.SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth>;
    sourceSlackUpdateAuthenticationMechanismApiToken?: pulumi.Input<inputs.SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken>;
    sourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth?: pulumi.Input<inputs.SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth>;
}

export interface SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken {
    apiToken: pulumi.Input<string>;
    optionTitle: pulumi.Input<string>;
}

export interface SourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth {
    accessToken: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    optionTitle: pulumi.Input<string>;
}

export interface SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken {
    apiToken: pulumi.Input<string>;
    optionTitle: pulumi.Input<string>;
}

export interface SourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth {
    accessToken: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    optionTitle: pulumi.Input<string>;
}

export interface SourceSmailyConfiguration {
    /**
     * API user password. See https://smaily.com/help/api/general/create-api-user/
     */
    apiPassword: pulumi.Input<string>;
    /**
     * API Subdomain. See https://smaily.com/help/api/general/create-api-user/
     */
    apiSubdomain: pulumi.Input<string>;
    /**
     * API user username. See https://smaily.com/help/api/general/create-api-user/
     */
    apiUsername: pulumi.Input<string>;
    /**
     * must be one of ["smaily"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceSmartengageConfiguration {
    /**
     * API Key
     */
    apiKey: pulumi.Input<string>;
    /**
     * must be one of ["smartengage"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceSmartsheetsConfiguration {
    credentials: pulumi.Input<inputs.SourceSmartsheetsConfigurationCredentials>;
    /**
     * A List of available columns which metadata can be pulled from.
     */
    metadataFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * must be one of ["smartsheets"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The spreadsheet ID. Find it by opening the spreadsheet then navigating to File > Properties
     */
    spreadsheetId: pulumi.Input<string>;
    /**
     * Only rows modified after this date/time will be replicated. This should be an ISO 8601 string, for instance: `2000-01-01T13:00:00`
     */
    startDatetime?: pulumi.Input<string>;
}

export interface SourceSmartsheetsConfigurationCredentials {
    sourceSmartsheetsAuthorizationMethodApiAccessToken?: pulumi.Input<inputs.SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken>;
    sourceSmartsheetsAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20>;
    sourceSmartsheetsUpdateAuthorizationMethodApiAccessToken?: pulumi.Input<inputs.SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken>;
    sourceSmartsheetsUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20>;
}

export interface SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceSnapchatMarketingConfiguration {
    /**
     * The Client ID of your Snapchat developer application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of your Snapchat developer application.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * Date in the format 2017-01-25. Any data after this date will not be replicated.
     */
    endDate?: pulumi.Input<string>;
    /**
     * Refresh Token to renew the expired Access Token.
     */
    refreshToken: pulumi.Input<string>;
    /**
     * must be one of ["snapchat-marketing"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Date in the format 2022-01-01. Any data before this date will not be replicated.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceSnowflakeConfiguration {
    credentials?: pulumi.Input<inputs.SourceSnowflakeConfigurationCredentials>;
    /**
     * The database you created for Airbyte to access data.
     */
    database: pulumi.Input<string>;
    /**
     * The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).
     */
    host: pulumi.Input<string>;
    /**
     * Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
     */
    jdbcUrlParams?: pulumi.Input<string>;
    /**
     * The role you created for Airbyte to access Snowflake.
     */
    role: pulumi.Input<string>;
    /**
     * The source Snowflake schema tables. Leave empty to access tables from multiple schemas.
     */
    schema?: pulumi.Input<string>;
    /**
     * must be one of ["snowflake"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The warehouse you created for Airbyte to access data.
     */
    warehouse: pulumi.Input<string>;
}

export interface SourceSnowflakeConfigurationCredentials {
    sourceSnowflakeAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20>;
    sourceSnowflakeAuthorizationMethodUsernameAndPassword?: pulumi.Input<inputs.SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword>;
    sourceSnowflakeUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20>;
    sourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword?: pulumi.Input<inputs.SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword>;
}

export interface SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20 {
    accessToken?: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken?: pulumi.Input<string>;
}

export interface SourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword {
    authType: pulumi.Input<string>;
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20 {
    accessToken?: pulumi.Input<string>;
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken?: pulumi.Input<string>;
}

export interface SourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword {
    authType: pulumi.Input<string>;
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SourceSonarCloudConfiguration {
    /**
     * Comma-separated list of component keys.
     */
    componentKeys: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * To retrieve issues created before the given date (inclusive).
     */
    endDate?: pulumi.Input<string>;
    /**
     * Organization key. See \n\nhere\n\n.
     */
    organization: pulumi.Input<string>;
    /**
     * must be one of ["sonar-cloud"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * To retrieve issues created after the given date (inclusive).
     */
    startDate?: pulumi.Input<string>;
    /**
     * Your User Token. See \n\nhere\n\n. The token is case sensitive.
     */
    userToken: pulumi.Input<string>;
}

export interface SourceSpaceXApiConfiguration {
    id?: pulumi.Input<string>;
    options?: pulumi.Input<string>;
    /**
     * must be one of ["spacex-api"]
     */
    sourceType?: pulumi.Input<string>;
}

export interface SourceSquareConfiguration {
    /**
     * Choose how to authenticate to Square.
     */
    credentials?: pulumi.Input<inputs.SourceSquareConfigurationCredentials>;
    /**
     * In some streams there is an option to include deleted objects (Items, Categories, Discounts, Taxes)
     */
    includeDeletedObjects?: pulumi.Input<boolean>;
    /**
     * Determines whether to use the sandbox or production environment.
     */
    isSandbox: pulumi.Input<boolean>;
    /**
     * must be one of ["square"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated. If not set, all data will be replicated.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceSquareConfigurationCredentials {
    sourceSquareAuthenticationApiKey?: pulumi.Input<inputs.SourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey>;
    sourceSquareAuthenticationOauthAuthentication?: pulumi.Input<inputs.SourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication>;
    sourceSquareUpdateAuthenticationApiKey?: pulumi.Input<inputs.SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey>;
    sourceSquareUpdateAuthenticationOauthAuthentication?: pulumi.Input<inputs.SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication>;
}

export interface SourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey {
    apiKey: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication {
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey {
    apiKey: pulumi.Input<string>;
    authType: pulumi.Input<string>;
}

export interface SourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication {
    authType: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceStravaConfiguration {
    /**
     * The Athlete ID of your Strava developer application.
     */
    athleteId: pulumi.Input<number>;
    /**
     * must be one of ["Client"]
     */
    authType?: pulumi.Input<string>;
    /**
     * The Client ID of your Strava developer application.
     */
    clientId: pulumi.Input<string>;
    /**
     * The Client Secret of your Strava developer application.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * The Refresh Token with the activity: readAll permissions.
     */
    refreshToken: pulumi.Input<string>;
    /**
     * must be one of ["strava"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceStripeConfiguration {
    /**
     * Your Stripe account ID (starts with 'acct_', find yours \n\nhere\n\n).
     */
    accountId: pulumi.Input<string>;
    /**
     * Stripe API key (usually starts with 'sk*live*'; find yours \n\nhere\n\n).
     */
    clientSecret: pulumi.Input<string>;
    /**
     * When set, the connector will always re-export data from the past N days, where N is the value set here. This is useful if your data is frequently updated after creation. More info \n\nhere\n\n
     */
    lookbackWindowDays?: pulumi.Input<number>;
    /**
     * The time increment used by the connector when requesting data from the Stripe API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted.
     */
    sliceRange?: pulumi.Input<number>;
    /**
     * must be one of ["stripe"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Only data generated after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceSurveySparrowConfiguration {
    /**
     * Your access token. See \n\nhere\n\n. The key is case sensitive.
     */
    accessToken: pulumi.Input<string>;
    /**
     * Is your account location is EU based? If yes, the base url to retrieve data will be different.
     */
    region?: pulumi.Input<inputs.SourceSurveySparrowConfigurationRegion>;
    /**
     * must be one of ["survey-sparrow"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * A List of your survey ids for survey-specific stream
     */
    surveyIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SourceSurveySparrowConfigurationRegion {
    sourceSurveySparrowBaseUrlEuBasedAccount?: pulumi.Input<inputs.SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount>;
    sourceSurveySparrowBaseUrlGlobalAccount?: pulumi.Input<inputs.SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount>;
    sourceSurveySparrowUpdateBaseUrlEuBasedAccount?: pulumi.Input<inputs.SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount>;
    sourceSurveySparrowUpdateBaseUrlGlobalAccount?: pulumi.Input<inputs.SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount>;
}

export interface SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount {
    urlBase?: pulumi.Input<string>;
}

export interface SourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount {
    urlBase?: pulumi.Input<string>;
}

export interface SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount {
    urlBase?: pulumi.Input<string>;
}

export interface SourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount {
    urlBase?: pulumi.Input<string>;
}

export interface SourceSurveymonkeyConfiguration {
    /**
     * The authorization method to use to retrieve data from SurveyMonkey
     */
    credentials?: pulumi.Input<inputs.SourceSurveymonkeyConfigurationCredentials>;
    /**
     * must be one of ["USA", "Europe", "Canada"]
     * Depending on the originating datacenter of the SurveyMonkey account, the API access URL may be different.
     */
    origin?: pulumi.Input<string>;
    /**
     * must be one of ["surveymonkey"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
    /**
     * IDs of the surveys from which you'd like to replicate data. If left empty, data from all boards to which you have access will be replicated.
     */
    surveyIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SourceSurveymonkeyConfigurationCredentials {
    accessToken: pulumi.Input<string>;
    authMethod: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
}

export interface SourceTempoConfiguration {
    /**
     * Tempo API Token. Go to Tempo>Settings, scroll down to Data Access and select API integration.
     */
    apiToken: pulumi.Input<string>;
    /**
     * must be one of ["tempo"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceTheGuardianApiConfiguration {
    /**
     * Your API Key. See \n\nhere\n\n. The key is case sensitive.
     */
    apiKey: pulumi.Input<string>;
    /**
     * (Optional) Use this to set the maximum date (YYYY-MM-DD) of the results. Results newer than the endDate will not be shown. Default is set to the current date (today) for incremental syncs.
     */
    endDate?: pulumi.Input<string>;
    /**
     * (Optional) The query (q) parameter filters the results to only those that include that search term. The q parameter supports AND, OR and NOT operators.
     */
    query?: pulumi.Input<string>;
    /**
     * (Optional) Use this to filter the results by a particular section. See \n\nhere\n\n for a list of all sections, and \n\nhere\n\n for the sections endpoint documentation.
     */
    section?: pulumi.Input<string>;
    /**
     * must be one of ["the-guardian-api"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Use this to set the minimum date (YYYY-MM-DD) of the results. Results older than the startDate will not be shown.
     */
    startDate: pulumi.Input<string>;
    /**
     * (Optional) A tag is a piece of data that is used by The Guardian to categorise content. Use this parameter to filter results by showing only the ones matching the entered tag. See \n\nhere\n\n for a list of all tags, and \n\nhere\n\n for the tags endpoint documentation.
     */
    tag?: pulumi.Input<string>;
}

export interface SourceTiktokMarketingConfiguration {
    /**
     * The attribution window in days.
     */
    attributionWindow?: pulumi.Input<number>;
    /**
     * Authentication method
     */
    credentials?: pulumi.Input<inputs.SourceTiktokMarketingConfigurationCredentials>;
    /**
     * The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DD. All data generated between startDate and this date will be replicated. Not setting this option will result in always syncing the data till the current date.
     */
    endDate?: pulumi.Input<string>;
    /**
     * Set to active if you want to include deleted data in reports.
     */
    includeDeleted?: pulumi.Input<boolean>;
    /**
     * must be one of ["tiktok-marketing"]
     */
    sourceType?: pulumi.Input<string>;
    /**
     * The Start Date in format: YYYY-MM-DD. Any data before this date will not be replicated. If this parameter is not set, all data will be replicated.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceTiktokMarketingConfigurationCredentials {
    sourceTiktokMarketingAuthenticationMethodOAuth20?: pulumi.Input<inputs.SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20>;
    sourceTiktokMarketingAuthenticationMethodSandboxAccessToken?: pulumi.Input<inputs.SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken>;
    sourceTiktokMarketingUpdateAuthenticationMethodOAuth20?: pulumi.Input<inputs.SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20>;
    sourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken?: pulumi.Input<inputs.SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken>;
}

export interface SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    advertiserId?: pulumi.Input<string>;
    appId: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    secret: pulumi.Input<string>;
}

export interface SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken {
    accessToken: pulumi.Input<string>;
    advertiserId: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    advertiserId?: pulumi.Input<string>;
    appId: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    secret: pulumi.Input<string>;
}

export interface SourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken {
    accessToken: pulumi.Input<string>;
    advertiserId: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceTodoistConfiguration {
    /**
     * must be one of ["todoist"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Your API Token. See \n\nhere\n\n. The token is case sensitive.
     */
    token: pulumi.Input<string>;
}

export interface SourceTrelloConfiguration {
    /**
     * IDs of the boards to replicate data from. If left empty, data from all boards to which you have access will be replicated.
     */
    boardIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Trello API key. See the \n\ndocs\n\n for instructions on how to generate it.
     */
    key: pulumi.Input<string>;
    /**
     * must be one of ["trello"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
    /**
     * Trello API token. See the \n\ndocs\n\n for instructions on how to generate it.
     */
    token: pulumi.Input<string>;
}

export interface SourceTrustpilotConfiguration {
    /**
     * The names of business units which shall be synchronized. Some streams e.g. configured*business*units or privateReviews use this configuration.
     */
    businessUnits: pulumi.Input<pulumi.Input<string>[]>;
    credentials: pulumi.Input<inputs.SourceTrustpilotConfigurationCredentials>;
    /**
     * must be one of ["trustpilot"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * For streams with sync. method incremental the start date time to be used
     */
    startDate: pulumi.Input<string>;
}

export interface SourceTrustpilotConfigurationCredentials {
    sourceTrustpilotAuthorizationMethodApiKey?: pulumi.Input<inputs.SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey>;
    sourceTrustpilotAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20>;
    sourceTrustpilotUpdateAuthorizationMethodApiKey?: pulumi.Input<inputs.SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey>;
    sourceTrustpilotUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20>;
}

export interface SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey {
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
}

export interface SourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey {
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
}

export interface SourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceTvmazeScheduleConfiguration {
    /**
     * Country code for domestic TV schedule retrieval.
     */
    domesticScheduleCountryCode: pulumi.Input<string>;
    /**
     * End date for TV schedule retrieval. May be in the future. Optional.
     */
    endDate?: pulumi.Input<string>;
    /**
     * must be one of ["tvmaze-schedule"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Start date for TV schedule retrieval. May be in the future.
     */
    startDate: pulumi.Input<string>;
    /**
     * ISO 3166-1 country code for web TV schedule retrieval. Leave blank for
     * all countries plus global web channels (e.g. Netflix). Alternatively,
     * set to 'global' for just global web channels.
     */
    webScheduleCountryCode?: pulumi.Input<string>;
}

export interface SourceTwilioConfiguration {
    /**
     * Twilio account SID
     */
    accountSid: pulumi.Input<string>;
    /**
     * Twilio Auth Token.
     */
    authToken: pulumi.Input<string>;
    /**
     * How far into the past to look for records. (in minutes)
     */
    lookbackWindow?: pulumi.Input<number>;
    /**
     * must be one of ["twilio"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format 2020-10-01T00:00:00Z. Any data before this date will not be replicated.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceTwilioTaskrouterConfiguration {
    /**
     * Twilio Account ID
     */
    accountSid: pulumi.Input<string>;
    /**
     * Twilio Auth Token
     */
    authToken: pulumi.Input<string>;
    /**
     * must be one of ["twilio-taskrouter"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceTwitterConfiguration {
    /**
     * App only Bearer Token. See the \n\ndocs\n\n for more information on how to obtain this token.
     */
    apiKey: pulumi.Input<string>;
    /**
     * The end date for retrieving tweets must be a minimum of 10 seconds prior to the request time.
     */
    endDate?: pulumi.Input<string>;
    /**
     * Query for matching Tweets. You can learn how to build this query by reading \n\n build a query guide \n\n.
     */
    query: pulumi.Input<string>;
    /**
     * must be one of ["twitter"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The start date for retrieving tweets cannot be more than 7 days in the past.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceTypeformConfiguration {
    credentials: pulumi.Input<inputs.SourceTypeformConfigurationCredentials>;
    /**
     * When this parameter is set, the connector will replicate data only from the input forms. Otherwise, all forms in your Typeform account will be replicated. You can find form IDs in your form URLs. For example, in the URL "https://mysite.typeform.com/to/u6nXL7" the formId is u6nXL7. You can find form URLs on Share panel
     */
    formIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * must be one of ["typeform"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for Typeform API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
     */
    startDate?: pulumi.Input<string>;
}

export interface SourceTypeformConfigurationCredentials {
    sourceTypeformAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20>;
    sourceTypeformAuthorizationMethodPrivateToken?: pulumi.Input<inputs.SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken>;
    sourceTypeformUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20>;
    sourceTypeformUpdateAuthorizationMethodPrivateToken?: pulumi.Input<inputs.SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken>;
}

export interface SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
}

export interface SourceUsCensusConfiguration {
    /**
     * Your API Key. Get your key \n\nhere\n\n.
     */
    apiKey: pulumi.Input<string>;
    /**
     * The query parameters portion of the GET request, without the api key
     */
    queryParams?: pulumi.Input<string>;
    /**
     * The path portion of the GET request
     */
    queryPath: pulumi.Input<string>;
    /**
     * must be one of ["us-census"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceVantageConfiguration {
    /**
     * Your API Access token. See \n\nhere\n\n.
     */
    accessToken: pulumi.Input<string>;
    /**
     * must be one of ["vantage"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceWebflowConfiguration {
    /**
     * The API token for authenticating to Webflow. See https://university.webflow.com/lesson/intro-to-the-webflow-api
     */
    apiKey: pulumi.Input<string>;
    /**
     * The id of the Webflow site you are requesting data from. See https://developers.webflow.com/#sites
     */
    siteId: pulumi.Input<string>;
    /**
     * must be one of ["webflow"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceWhiskyHunterConfiguration {
    /**
     * must be one of ["whisky-hunter"]
     */
    sourceType?: pulumi.Input<string>;
}

export interface SourceWikipediaPageviewsConfiguration {
    /**
     * If you want to filter by access method, use one of desktop, mobile-app or mobile-web. If you are interested in pageviews regardless of access method, use all-access.
     */
    access: pulumi.Input<string>;
    /**
     * If you want to filter by agent type, use one of user, automated or spider. If you are interested in pageviews regardless of agent type, use all-agents.
     */
    agent: pulumi.Input<string>;
    /**
     * The title of any article in the specified project. Any spaces should be replaced with underscores. It also should be URI-encoded, so that non-URI-safe characters like %, / or ? are accepted.
     */
    article: pulumi.Input<string>;
    /**
     * The ISO 3166-1 alpha-2 code of a country for which to retrieve top articles.
     */
    country: pulumi.Input<string>;
    /**
     * The date of the last day to include, in YYYYMMDD or YYYYMMDDHH format.
     */
    end: pulumi.Input<string>;
    /**
     * If you want to filter by project, use the domain of any Wikimedia project.
     */
    project: pulumi.Input<string>;
    /**
     * must be one of ["wikipedia-pageviews"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date of the first day to include, in YYYYMMDD or YYYYMMDDHH format.
     */
    start: pulumi.Input<string>;
}

export interface SourceWoocommerceConfiguration {
    /**
     * Customer Key for API in WooCommerce shop
     */
    apiKey: pulumi.Input<string>;
    /**
     * Customer Secret for API in WooCommerce shop
     */
    apiSecret: pulumi.Input<string>;
    /**
     * The name of the store. For https://EXAMPLE.com, the shop name is 'EXAMPLE.com'.
     */
    shop: pulumi.Input<string>;
    /**
     * must be one of ["woocommerce"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date you would like to replicate data from. Format: YYYY-MM-DD
     */
    startDate: pulumi.Input<string>;
}

export interface SourceXeroConfiguration {
    authentication: pulumi.Input<inputs.SourceXeroConfigurationAuthentication>;
    /**
     * must be one of ["xero"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * UTC date and time in the format YYYY-MM-DDTHH:mm:ssZ. Any data with createdAt before this data will not be synced.
     */
    startDate: pulumi.Input<string>;
    /**
     * Enter your Xero organization's Tenant ID
     */
    tenantId: pulumi.Input<string>;
}

export interface SourceXeroConfigurationAuthentication {
    accessToken: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
    tokenExpiryDate: pulumi.Input<string>;
}

export interface SourceXkcdConfiguration {
    /**
     * must be one of ["xkcd"]
     */
    sourceType?: pulumi.Input<string>;
}

export interface SourceYandexMetricaConfiguration {
    /**
     * Your Yandex Metrica API access token
     */
    authToken: pulumi.Input<string>;
    /**
     * Counter ID
     */
    counterId: pulumi.Input<string>;
    /**
     * Starting point for your data replication, in format of "YYYY-MM-DD". If not provided will sync till most recent date.
     */
    endDate?: pulumi.Input<string>;
    /**
     * must be one of ["yandex-metrica"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Starting point for your data replication, in format of "YYYY-MM-DD".
     */
    startDate: pulumi.Input<string>;
}

export interface SourceYotpoConfiguration {
    /**
     * Access token recieved as a result of API call to https://api.yotpo.com/oauth/token (Ref- https://apidocs.yotpo.com/reference/yotpo-authentication)
     */
    accessToken: pulumi.Input<string>;
    /**
     * App key found at settings (Ref- https://settings.yotpo.com/#/general_settings)
     */
    appKey: pulumi.Input<string>;
    /**
     * Email address registered with yotpo.
     */
    email: pulumi.Input<string>;
    /**
     * must be one of ["yotpo"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Date time filter for incremental filter, Specify which date to extract from.
     */
    startDate: pulumi.Input<string>;
}

export interface SourceYouniumConfiguration {
    /**
     * Legal Entity that data should be pulled from
     */
    legalEntity: pulumi.Input<string>;
    /**
     * Account password for younium account API key
     */
    password: pulumi.Input<string>;
    /**
     * Property defining if connector is used against playground or production environment
     */
    playground?: pulumi.Input<boolean>;
    /**
     * must be one of ["younium"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Username for Younium account
     */
    username: pulumi.Input<string>;
}

export interface SourceYoutubeAnalyticsConfiguration {
    credentials: pulumi.Input<inputs.SourceYoutubeAnalyticsConfigurationCredentials>;
    /**
     * must be one of ["youtube-analytics"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceYoutubeAnalyticsConfigurationCredentials {
    additionalProperties?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface SourceZendeskChatConfiguration {
    credentials?: pulumi.Input<inputs.SourceZendeskChatConfigurationCredentials>;
    /**
     * must be one of ["zendesk-chat"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for Zendesk Chat API, in the format YYYY-MM-DDT00:00:00Z.
     */
    startDate: pulumi.Input<string>;
    /**
     * Required if you access Zendesk Chat from a Zendesk Support subdomain.
     */
    subdomain?: pulumi.Input<string>;
}

export interface SourceZendeskChatConfigurationCredentials {
    sourceZendeskChatAuthorizationMethodAccessToken?: pulumi.Input<inputs.SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken>;
    sourceZendeskChatAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20>;
    sourceZendeskChatUpdateAuthorizationMethodAccessToken?: pulumi.Input<inputs.SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken>;
    sourceZendeskChatUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20>;
}

export interface SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken {
    accessToken: pulumi.Input<string>;
    credentials: pulumi.Input<string>;
}

export interface SourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20 {
    accessToken?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    credentials: pulumi.Input<string>;
    refreshToken?: pulumi.Input<string>;
}

export interface SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken {
    accessToken: pulumi.Input<string>;
    credentials: pulumi.Input<string>;
}

export interface SourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20 {
    accessToken?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    credentials: pulumi.Input<string>;
    refreshToken?: pulumi.Input<string>;
}

export interface SourceZendeskSunshineConfiguration {
    credentials?: pulumi.Input<inputs.SourceZendeskSunshineConfigurationCredentials>;
    /**
     * must be one of ["zendesk-sunshine"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for Zendesk Sunshine API, in the format YYYY-MM-DDT00:00:00Z.
     */
    startDate: pulumi.Input<string>;
    /**
     * The subdomain for your Zendesk Account.
     */
    subdomain: pulumi.Input<string>;
}

export interface SourceZendeskSunshineConfigurationCredentials {
    sourceZendeskSunshineAuthorizationMethodApiToken?: pulumi.Input<inputs.SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken>;
    sourceZendeskSunshineAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20>;
    sourceZendeskSunshineUpdateAuthorizationMethodApiToken?: pulumi.Input<inputs.SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken>;
    sourceZendeskSunshineUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20>;
}

export interface SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken {
    additionalProperties?: pulumi.Input<string>;
    apiToken: pulumi.Input<string>;
    authMethod: pulumi.Input<string>;
    email: pulumi.Input<string>;
}

export interface SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    authMethod: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
}

export interface SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken {
    additionalProperties?: pulumi.Input<string>;
    apiToken: pulumi.Input<string>;
    authMethod: pulumi.Input<string>;
    email: pulumi.Input<string>;
}

export interface SourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    authMethod: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
}

export interface SourceZendeskSupportConfiguration {
    /**
     * Zendesk allows two authentication methods. We recommend using `OAuth2.0` for Airbyte Cloud users and `API token` for Airbyte Open Source users.
     */
    credentials?: pulumi.Input<inputs.SourceZendeskSupportConfigurationCredentials>;
    /**
     * Makes each stream read a single page of data.
     */
    ignorePagination?: pulumi.Input<boolean>;
    /**
     * must be one of ["zendesk-support"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The UTC date and time from which you'd like to replicate data, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
    /**
     * This is your unique Zendesk subdomain that can be found in your account URL. For example, in https://MY*SUBDOMAIN.zendesk.com/, MY*SUBDOMAIN is the value of your subdomain.
     */
    subdomain: pulumi.Input<string>;
}

export interface SourceZendeskSupportConfigurationCredentials {
    sourceZendeskSupportAuthenticationApiToken?: pulumi.Input<inputs.SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken>;
    sourceZendeskSupportAuthenticationOAuth20?: pulumi.Input<inputs.SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20>;
    sourceZendeskSupportUpdateAuthenticationApiToken?: pulumi.Input<inputs.SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken>;
    sourceZendeskSupportUpdateAuthenticationOAuth20?: pulumi.Input<inputs.SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20>;
}

export interface SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken {
    additionalProperties?: pulumi.Input<string>;
    apiToken: pulumi.Input<string>;
    credentials?: pulumi.Input<string>;
    email: pulumi.Input<string>;
}

export interface SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20 {
    accessToken: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    credentials?: pulumi.Input<string>;
}

export interface SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken {
    additionalProperties?: pulumi.Input<string>;
    apiToken: pulumi.Input<string>;
    credentials?: pulumi.Input<string>;
    email: pulumi.Input<string>;
}

export interface SourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20 {
    accessToken: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    credentials?: pulumi.Input<string>;
}

export interface SourceZendeskTalkConfiguration {
    /**
     * Zendesk service provides two authentication methods. Choose between: `OAuth2.0` or `API token`.
     */
    credentials?: pulumi.Input<inputs.SourceZendeskTalkConfigurationCredentials>;
    /**
     * must be one of ["zendesk-talk"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * The date from which you'd like to replicate data for Zendesk Talk API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
     */
    startDate: pulumi.Input<string>;
    /**
     * This is your Zendesk subdomain that can be found in your account URL. For example, in https://{MY*SUBDOMAIN}.zendesk.com/, where MY*SUBDOMAIN is the value of your subdomain.
     */
    subdomain: pulumi.Input<string>;
}

export interface SourceZendeskTalkConfigurationCredentials {
    sourceZendeskTalkAuthenticationApiToken?: pulumi.Input<inputs.SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken>;
    sourceZendeskTalkAuthenticationOAuth20?: pulumi.Input<inputs.SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20>;
    sourceZendeskTalkUpdateAuthenticationApiToken?: pulumi.Input<inputs.SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken>;
    sourceZendeskTalkUpdateAuthenticationOAuth20?: pulumi.Input<inputs.SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20>;
}

export interface SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken {
    additionalProperties?: pulumi.Input<string>;
    apiToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    email: pulumi.Input<string>;
}

export interface SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20 {
    accessToken: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
}

export interface SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken {
    additionalProperties?: pulumi.Input<string>;
    apiToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    email: pulumi.Input<string>;
}

export interface SourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20 {
    accessToken: pulumi.Input<string>;
    additionalProperties?: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
}

export interface SourceZenloopConfiguration {
    /**
     * Zenloop API Token. You can get the API token in settings page \n\nhere\n\n
     */
    apiToken: pulumi.Input<string>;
    /**
     * Zenloop date_from. Format: 2021-10-24T03:30:30Z or 2021-10-24. Leave empty if only data from current data should be synced
     */
    dateFrom?: pulumi.Input<string>;
    /**
     * must be one of ["zenloop"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Zenloop Survey Group ID. Can be found by pulling All Survey Groups via SurveyGroups stream. Leave empty to pull answers from all survey groups
     */
    surveyGroupId?: pulumi.Input<string>;
    /**
     * Zenloop Survey ID. Can be found \n\nhere\n\n. Leave empty to pull answers from all surveys
     */
    surveyId?: pulumi.Input<string>;
}

export interface SourceZohoCrmConfiguration {
    /**
     * OAuth2.0 Client ID
     */
    clientId: pulumi.Input<string>;
    /**
     * OAuth2.0 Client Secret
     */
    clientSecret: pulumi.Input<string>;
    /**
     * must be one of ["US", "AU", "EU", "IN", "CN", "JP"]
     * Please choose the region of your Data Center location. More info by this \n\nLink\n\n
     */
    dcRegion: pulumi.Input<string>;
    /**
     * must be one of ["Free", "Standard", "Professional", "Enterprise", "Ultimate"]
     * Choose your Edition of Zoho CRM to determine API Concurrency Limits
     */
    edition: pulumi.Input<string>;
    /**
     * must be one of ["Production", "Developer", "Sandbox"]
     * Please choose the environment
     */
    environment: pulumi.Input<string>;
    /**
     * OAuth2.0 Refresh Token
     */
    refreshToken: pulumi.Input<string>;
    /**
     * must be one of ["zoho-crm"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * ISO 8601, for instance: `YYYY-MM-DD`, `YYYY-MM-DD HH:MM:SS+HH:MM`
     */
    startDatetime?: pulumi.Input<string>;
}

export interface SourceZoomConfiguration {
    /**
     * JWT Token
     */
    jwtToken: pulumi.Input<string>;
    /**
     * must be one of ["zoom"]
     */
    sourceType: pulumi.Input<string>;
}

export interface SourceZuoraConfiguration {
    /**
     * Your OAuth user Client ID
     */
    clientId: pulumi.Input<string>;
    /**
     * Your OAuth user Client Secret
     */
    clientSecret: pulumi.Input<string>;
    /**
     * must be one of ["Live", "Unlimited"]
     * Choose between `Live`, or `Unlimited` - the optimized, replicated database at 12 hours freshness for high volume extraction \n\nLink\n\n
     */
    dataQuery: pulumi.Input<string>;
    /**
     * must be one of ["zuora"]
     */
    sourceType: pulumi.Input<string>;
    /**
     * Start Date in format: YYYY-MM-DD
     */
    startDate: pulumi.Input<string>;
    /**
     * must be one of ["US Production", "US Cloud Production", "US API Sandbox", "US Cloud API Sandbox", "US Central Sandbox", "US Performance Test", "EU Production", "EU API Sandbox", "EU Central Sandbox"]
     * Please choose the right endpoint where your Tenant is located. More info by this \n\nLink\n\n
     */
    tenantEndpoint: pulumi.Input<string>;
    /**
     * The amount of days for each data-chunk begining from start_date. Bigger the value - faster the fetch. (0.1 - as for couple of hours, 1 - as for a Day; 364 - as for a Year).
     */
    windowInDays?: pulumi.Input<string>;
}
