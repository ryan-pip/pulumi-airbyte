// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface ConnectionConfigurations {
    streams?: pulumi.Input<pulumi.Input<inputs.ConnectionConfigurationsStream>[]>;
}

export interface ConnectionConfigurationsStream {
    cursorFields?: pulumi.Input<pulumi.Input<string>[]>;
    name: pulumi.Input<string>;
    primaryKeys?: pulumi.Input<pulumi.Input<pulumi.Input<string>[]>[]>;
    syncMode?: pulumi.Input<string>;
}

export interface ConnectionSchedule {
    basicTiming?: pulumi.Input<string>;
    cronExpression?: pulumi.Input<string>;
    scheduleType: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfiguration {
    credentials?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentials>;
    database: pulumi.Input<string>;
    destinationType: pulumi.Input<string>;
    host: pulumi.Input<string>;
    jdbcUrlParams?: pulumi.Input<string>;
    rawDataSchema?: pulumi.Input<string>;
    role: pulumi.Input<string>;
    schema: pulumi.Input<string>;
    use1s1tFormat?: pulumi.Input<boolean>;
    username: pulumi.Input<string>;
    warehouse: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentials {
    destinationSnowflakeAuthorizationMethodKeyPairAuthentication?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication>;
    destinationSnowflakeAuthorizationMethodOAuth20?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20>;
    destinationSnowflakeAuthorizationMethodUsernameAndPassword?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword>;
    destinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication>;
    destinationSnowflakeUpdateAuthorizationMethodOAuth20?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20>;
    destinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword?: pulumi.Input<inputs.DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication {
    authType?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
    privateKeyPassword?: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword {
    authType?: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication {
    authType?: pulumi.Input<string>;
    privateKey: pulumi.Input<string>;
    privateKeyPassword?: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20 {
    accessToken: pulumi.Input<string>;
    authType?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    refreshToken: pulumi.Input<string>;
}

export interface DestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword {
    authType?: pulumi.Input<string>;
    password: pulumi.Input<string>;
}

export interface SourceMixpanelConfiguration {
    attributionWindow?: pulumi.Input<number>;
    credentials?: pulumi.Input<inputs.SourceMixpanelConfigurationCredentials>;
    dateWindowSize?: pulumi.Input<number>;
    endDate?: pulumi.Input<string>;
    projectId?: pulumi.Input<number>;
    projectTimezone?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    selectPropertiesByDefault?: pulumi.Input<boolean>;
    sourceType?: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
}

export interface SourceMixpanelConfigurationCredentials {
    sourceMixpanelAuthenticationWildcardProjectSecret?: pulumi.Input<inputs.SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret>;
    sourceMixpanelAuthenticationWildcardServiceAccount?: pulumi.Input<inputs.SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount>;
    sourceMixpanelUpdateAuthenticationWildcardProjectSecret?: pulumi.Input<inputs.SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret>;
    sourceMixpanelUpdateAuthenticationWildcardServiceAccount?: pulumi.Input<inputs.SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount>;
}

export interface SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret {
    apiSecret: pulumi.Input<string>;
    optionTitle?: pulumi.Input<string>;
}

export interface SourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount {
    optionTitle?: pulumi.Input<string>;
    secret: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret {
    apiSecret: pulumi.Input<string>;
    optionTitle?: pulumi.Input<string>;
}

export interface SourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount {
    optionTitle?: pulumi.Input<string>;
    secret: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface SourceSalesforceConfiguration {
    authType?: pulumi.Input<string>;
    clientId: pulumi.Input<string>;
    clientSecret: pulumi.Input<string>;
    forceUseBulkApi?: pulumi.Input<boolean>;
    isSandbox?: pulumi.Input<boolean>;
    refreshToken: pulumi.Input<string>;
    sourceType: pulumi.Input<string>;
    startDate?: pulumi.Input<string>;
    streamsCriterias?: pulumi.Input<pulumi.Input<inputs.SourceSalesforceConfigurationStreamsCriteria>[]>;
}

export interface SourceSalesforceConfigurationStreamsCriteria {
    criteria: pulumi.Input<string>;
    value: pulumi.Input<string>;
}
