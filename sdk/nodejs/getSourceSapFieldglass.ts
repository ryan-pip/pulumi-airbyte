// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSourceSapFieldglass(args: GetSourceSapFieldglassArgs, opts?: pulumi.InvokeOptions): Promise<GetSourceSapFieldglassResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("airbyte:index/getSourceSapFieldglass:getSourceSapFieldglass", {
        "secretId": args.secretId,
        "sourceId": args.sourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSourceSapFieldglass.
 */
export interface GetSourceSapFieldglassArgs {
    secretId?: string;
    sourceId: string;
}

/**
 * A collection of values returned by getSourceSapFieldglass.
 */
export interface GetSourceSapFieldglassResult {
    readonly configuration: outputs.GetSourceSapFieldglassConfiguration;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly secretId?: string;
    readonly sourceId: string;
    readonly workspaceId: string;
}
export function getSourceSapFieldglassOutput(args: GetSourceSapFieldglassOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSourceSapFieldglassResult> {
    return pulumi.output(args).apply((a: any) => getSourceSapFieldglass(a, opts))
}

/**
 * A collection of arguments for invoking getSourceSapFieldglass.
 */
export interface GetSourceSapFieldglassOutputArgs {
    secretId?: pulumi.Input<string>;
    sourceId: pulumi.Input<string>;
}
