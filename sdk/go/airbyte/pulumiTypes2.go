// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"internal"
)

var _ = internal.GetEnvOrDefault

type GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake struct {
	Mode string `pulumi:"mode"`
}

type GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFakeOutput struct{ *pulumi.OutputState }

func (GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFakeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake)(nil)).Elem()
}

func (o GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFakeOutput) ToGetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFakeOutput() GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFakeOutput {
	return o
}

func (o GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFakeOutput) ToGetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFakeOutputWithContext(ctx context.Context) GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFakeOutput {
	return o
}

func (o GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFakeOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFake) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi struct {
	Mode      string `pulumi:"mode"`
	OpenaiKey string `pulumi:"openaiKey"`
}

type GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAiOutput struct{ *pulumi.OutputState }

func (GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi)(nil)).Elem()
}

func (o GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAiOutput) ToGetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAiOutput() GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAiOutput {
	return o
}

func (o GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAiOutput) ToGetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAiOutputWithContext(ctx context.Context) GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAiOutput {
	return o
}

func (o GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAiOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAiOutput) OpenaiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAi) string {
		return v.OpenaiKey
	}).(pulumi.StringOutput)
}

type GetDestinationLangchainConfigurationIndexing struct {
	DestinationLangchainIndexingChromaLocalPersistance       GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance       `pulumi:"destinationLangchainIndexingChromaLocalPersistance"`
	DestinationLangchainIndexingDocArrayHnswSearch           GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch           `pulumi:"destinationLangchainIndexingDocArrayHnswSearch"`
	DestinationLangchainIndexingPinecone                     GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone                     `pulumi:"destinationLangchainIndexingPinecone"`
	DestinationLangchainUpdateIndexingChromaLocalPersistance GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance `pulumi:"destinationLangchainUpdateIndexingChromaLocalPersistance"`
	DestinationLangchainUpdateIndexingDocArrayHnswSearch     GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch     `pulumi:"destinationLangchainUpdateIndexingDocArrayHnswSearch"`
	DestinationLangchainUpdateIndexingPinecone               GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone               `pulumi:"destinationLangchainUpdateIndexingPinecone"`
}

type GetDestinationLangchainConfigurationIndexingOutput struct{ *pulumi.OutputState }

func (GetDestinationLangchainConfigurationIndexingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationLangchainConfigurationIndexing)(nil)).Elem()
}

func (o GetDestinationLangchainConfigurationIndexingOutput) ToGetDestinationLangchainConfigurationIndexingOutput() GetDestinationLangchainConfigurationIndexingOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingOutput) ToGetDestinationLangchainConfigurationIndexingOutputWithContext(ctx context.Context) GetDestinationLangchainConfigurationIndexingOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingOutput) DestinationLangchainIndexingChromaLocalPersistance() GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexing) GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance {
		return v.DestinationLangchainIndexingChromaLocalPersistance
	}).(GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput)
}

func (o GetDestinationLangchainConfigurationIndexingOutput) DestinationLangchainIndexingDocArrayHnswSearch() GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexing) GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch {
		return v.DestinationLangchainIndexingDocArrayHnswSearch
	}).(GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput)
}

func (o GetDestinationLangchainConfigurationIndexingOutput) DestinationLangchainIndexingPinecone() GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexing) GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone {
		return v.DestinationLangchainIndexingPinecone
	}).(GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput)
}

func (o GetDestinationLangchainConfigurationIndexingOutput) DestinationLangchainUpdateIndexingChromaLocalPersistance() GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexing) GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance {
		return v.DestinationLangchainUpdateIndexingChromaLocalPersistance
	}).(GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput)
}

func (o GetDestinationLangchainConfigurationIndexingOutput) DestinationLangchainUpdateIndexingDocArrayHnswSearch() GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexing) GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch {
		return v.DestinationLangchainUpdateIndexingDocArrayHnswSearch
	}).(GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput)
}

func (o GetDestinationLangchainConfigurationIndexingOutput) DestinationLangchainUpdateIndexingPinecone() GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexing) GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone {
		return v.DestinationLangchainUpdateIndexingPinecone
	}).(GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput)
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance struct {
	CollectionName  string `pulumi:"collectionName"`
	DestinationPath string `pulumi:"destinationPath"`
	Mode            string `pulumi:"mode"`
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput struct{ *pulumi.OutputState }

func (GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance)(nil)).Elem()
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput() GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutputWithContext(ctx context.Context) GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance) string {
		return v.CollectionName
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput) DestinationPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance) string {
		return v.DestinationPath
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistance) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch struct {
	DestinationPath string `pulumi:"destinationPath"`
	Mode            string `pulumi:"mode"`
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput struct{ *pulumi.OutputState }

func (GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch)(nil)).Elem()
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput() GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutputWithContext(ctx context.Context) GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput) DestinationPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch) string {
		return v.DestinationPath
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearch) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone struct {
	Index               string `pulumi:"index"`
	Mode                string `pulumi:"mode"`
	PineconeEnvironment string `pulumi:"pineconeEnvironment"`
	PineconeKey         string `pulumi:"pineconeKey"`
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput struct{ *pulumi.OutputState }

func (GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone)(nil)).Elem()
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput() GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutputWithContext(ctx context.Context) GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone) string {
		return v.Index
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput) PineconeEnvironment() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone) string {
		return v.PineconeEnvironment
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput) PineconeKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPinecone) string {
		return v.PineconeKey
	}).(pulumi.StringOutput)
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance struct {
	CollectionName  string `pulumi:"collectionName"`
	DestinationPath string `pulumi:"destinationPath"`
	Mode            string `pulumi:"mode"`
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput struct{ *pulumi.OutputState }

func (GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance)(nil)).Elem()
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput() GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutputWithContext(ctx context.Context) GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance) string {
		return v.CollectionName
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput) DestinationPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance) string {
		return v.DestinationPath
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistance) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch struct {
	DestinationPath string `pulumi:"destinationPath"`
	Mode            string `pulumi:"mode"`
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput struct{ *pulumi.OutputState }

func (GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch)(nil)).Elem()
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput() GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutputWithContext(ctx context.Context) GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput) DestinationPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch) string {
		return v.DestinationPath
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearch) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone struct {
	Index               string `pulumi:"index"`
	Mode                string `pulumi:"mode"`
	PineconeEnvironment string `pulumi:"pineconeEnvironment"`
	PineconeKey         string `pulumi:"pineconeKey"`
}

type GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput struct{ *pulumi.OutputState }

func (GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone)(nil)).Elem()
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput() GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput) ToGetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutputWithContext(ctx context.Context) GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput {
	return o
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone) string {
		return v.Index
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput) PineconeEnvironment() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone) string {
		return v.PineconeEnvironment
	}).(pulumi.StringOutput)
}

func (o GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput) PineconeKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPinecone) string {
		return v.PineconeKey
	}).(pulumi.StringOutput)
}

type GetDestinationLangchainConfigurationProcessing struct {
	ChunkOverlap int      `pulumi:"chunkOverlap"`
	ChunkSize    int      `pulumi:"chunkSize"`
	TextFields   []string `pulumi:"textFields"`
}

type GetDestinationLangchainConfigurationProcessingOutput struct{ *pulumi.OutputState }

func (GetDestinationLangchainConfigurationProcessingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationLangchainConfigurationProcessing)(nil)).Elem()
}

func (o GetDestinationLangchainConfigurationProcessingOutput) ToGetDestinationLangchainConfigurationProcessingOutput() GetDestinationLangchainConfigurationProcessingOutput {
	return o
}

func (o GetDestinationLangchainConfigurationProcessingOutput) ToGetDestinationLangchainConfigurationProcessingOutputWithContext(ctx context.Context) GetDestinationLangchainConfigurationProcessingOutput {
	return o
}

func (o GetDestinationLangchainConfigurationProcessingOutput) ChunkOverlap() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationProcessing) int { return v.ChunkOverlap }).(pulumi.IntOutput)
}

func (o GetDestinationLangchainConfigurationProcessingOutput) ChunkSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationProcessing) int { return v.ChunkSize }).(pulumi.IntOutput)
}

func (o GetDestinationLangchainConfigurationProcessingOutput) TextFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDestinationLangchainConfigurationProcessing) []string { return v.TextFields }).(pulumi.StringArrayOutput)
}

type GetDestinationMSsqlConfiguration struct {
	// The name of the MSSQL database.
	Database string `pulumi:"database"`
	// must be one of ["mssql"]
	DestinationType string `pulumi:"destinationType"`
	// The host name of the MSSQL database.
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// The password associated with this username.
	Password string `pulumi:"password"`
	// The port of the MSSQL database.
	Port int `pulumi:"port"`
	// The default schema tables are written to if the source does not specify a namespace. The usual value for this field is "public".
	Schema string `pulumi:"schema"`
	// The encryption method which is used to communicate with the database.
	SslMethod GetDestinationMSsqlConfigurationSslMethod `pulumi:"sslMethod"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetDestinationMSsqlConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// The username which is used to access the database.
	Username string `pulumi:"username"`
}

type GetDestinationMSsqlConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfiguration)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationOutput) ToGetDestinationMSsqlConfigurationOutput() GetDestinationMSsqlConfigurationOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationOutput) ToGetDestinationMSsqlConfigurationOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationOutput {
	return o
}

// The name of the MSSQL database.
func (o GetDestinationMSsqlConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// must be one of ["mssql"]
func (o GetDestinationMSsqlConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// The host name of the MSSQL database.
func (o GetDestinationMSsqlConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
func (o GetDestinationMSsqlConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// The password associated with this username.
func (o GetDestinationMSsqlConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The port of the MSSQL database.
func (o GetDestinationMSsqlConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// The default schema tables are written to if the source does not specify a namespace. The usual value for this field is "public".
func (o GetDestinationMSsqlConfigurationOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfiguration) string { return v.Schema }).(pulumi.StringOutput)
}

// The encryption method which is used to communicate with the database.
func (o GetDestinationMSsqlConfigurationOutput) SslMethod() GetDestinationMSsqlConfigurationSslMethodOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfiguration) GetDestinationMSsqlConfigurationSslMethod { return v.SslMethod }).(GetDestinationMSsqlConfigurationSslMethodOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetDestinationMSsqlConfigurationOutput) TunnelMethod() GetDestinationMSsqlConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfiguration) GetDestinationMSsqlConfigurationTunnelMethod {
		return v.TunnelMethod
	}).(GetDestinationMSsqlConfigurationTunnelMethodOutput)
}

// The username which is used to access the database.
func (o GetDestinationMSsqlConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetDestinationMSsqlConfigurationSslMethod struct {
	DestinationMssqlSslMethodEncryptedTrustServerCertificate       GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate       `pulumi:"destinationMssqlSslMethodEncryptedTrustServerCertificate"`
	DestinationMssqlSslMethodEncryptedVerifyCertificate            GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate            `pulumi:"destinationMssqlSslMethodEncryptedVerifyCertificate"`
	DestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate `pulumi:"destinationMssqlUpdateSslMethodEncryptedTrustServerCertificate"`
	DestinationMssqlUpdateSslMethodEncryptedVerifyCertificate      GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate      `pulumi:"destinationMssqlUpdateSslMethodEncryptedVerifyCertificate"`
}

type GetDestinationMSsqlConfigurationSslMethodOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationSslMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationSslMethod)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationSslMethodOutput) ToGetDestinationMSsqlConfigurationSslMethodOutput() GetDestinationMSsqlConfigurationSslMethodOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationSslMethodOutput) ToGetDestinationMSsqlConfigurationSslMethodOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationSslMethodOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationSslMethodOutput) DestinationMssqlSslMethodEncryptedTrustServerCertificate() GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationSslMethod) GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate {
		return v.DestinationMssqlSslMethodEncryptedTrustServerCertificate
	}).(GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutput)
}

func (o GetDestinationMSsqlConfigurationSslMethodOutput) DestinationMssqlSslMethodEncryptedVerifyCertificate() GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationSslMethod) GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate {
		return v.DestinationMssqlSslMethodEncryptedVerifyCertificate
	}).(GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput)
}

func (o GetDestinationMSsqlConfigurationSslMethodOutput) DestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate() GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationSslMethod) GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate {
		return v.DestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate
	}).(GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput)
}

func (o GetDestinationMSsqlConfigurationSslMethodOutput) DestinationMssqlUpdateSslMethodEncryptedVerifyCertificate() GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationSslMethod) GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate {
		return v.DestinationMssqlUpdateSslMethodEncryptedVerifyCertificate
	}).(GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput)
}

type GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate struct {
	SslMethod string `pulumi:"sslMethod"`
}

type GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutput) ToGetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutput() GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutput) ToGetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutput) SslMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificate) string {
		return v.SslMethod
	}).(pulumi.StringOutput)
}

type GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate struct {
	HostNameInCertificate string `pulumi:"hostNameInCertificate"`
	SslMethod             string `pulumi:"sslMethod"`
}

type GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput) ToGetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput() GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput) ToGetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput) HostNameInCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate) string {
		return v.HostNameInCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput) SslMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificate) string {
		return v.SslMethod
	}).(pulumi.StringOutput)
}

type GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate struct {
	SslMethod string `pulumi:"sslMethod"`
}

type GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput) ToGetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput() GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput) ToGetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput) SslMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificate) string {
		return v.SslMethod
	}).(pulumi.StringOutput)
}

type GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate struct {
	HostNameInCertificate string `pulumi:"hostNameInCertificate"`
	SslMethod             string `pulumi:"sslMethod"`
}

type GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput) ToGetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput() GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput) ToGetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput) HostNameInCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate) string {
		return v.HostNameInCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput) SslMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificate) string {
		return v.SslMethod
	}).(pulumi.StringOutput)
}

type GetDestinationMSsqlConfigurationTunnelMethod struct {
	DestinationMssqlSshTunnelMethodNoTunnel                     GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel                     `pulumi:"destinationMssqlSshTunnelMethodNoTunnel"`
	DestinationMssqlSshTunnelMethodPasswordAuthentication       GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication       `pulumi:"destinationMssqlSshTunnelMethodPasswordAuthentication"`
	DestinationMssqlSshTunnelMethodSshKeyAuthentication         GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication         `pulumi:"destinationMssqlSshTunnelMethodSshKeyAuthentication"`
	DestinationMssqlUpdateSshTunnelMethodNoTunnel               GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel               `pulumi:"destinationMssqlUpdateSshTunnelMethodNoTunnel"`
	DestinationMssqlUpdateSshTunnelMethodPasswordAuthentication GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication `pulumi:"destinationMssqlUpdateSshTunnelMethodPasswordAuthentication"`
	DestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication   GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"destinationMssqlUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetDestinationMSsqlConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationTunnelMethodOutput) ToGetDestinationMSsqlConfigurationTunnelMethodOutput() GetDestinationMSsqlConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodOutput) ToGetDestinationMSsqlConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodOutput) DestinationMssqlSshTunnelMethodNoTunnel() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethod) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel {
		return v.DestinationMssqlSshTunnelMethodNoTunnel
	}).(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodOutput) DestinationMssqlSshTunnelMethodPasswordAuthentication() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethod) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication {
		return v.DestinationMssqlSshTunnelMethodPasswordAuthentication
	}).(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodOutput) DestinationMssqlSshTunnelMethodSshKeyAuthentication() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethod) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication {
		return v.DestinationMssqlSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodOutput) DestinationMssqlUpdateSshTunnelMethodNoTunnel() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethod) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel {
		return v.DestinationMssqlUpdateSshTunnelMethodNoTunnel
	}).(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodOutput) DestinationMssqlUpdateSshTunnelMethodPasswordAuthentication() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethod) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication {
		return v.DestinationMssqlUpdateSshTunnelMethodPasswordAuthentication
	}).(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodOutput) DestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethod) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication {
		return v.DestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutput() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutput() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfiguration struct {
	// Authorization type.
	AuthType GetDestinationMongodbConfigurationAuthType `pulumi:"authType"`
	// Name of the database.
	Database string `pulumi:"database"`
	// must be one of ["mongodb"]
	DestinationType string `pulumi:"destinationType"`
	// MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default.
	InstanceType GetDestinationMongodbConfigurationInstanceType `pulumi:"instanceType"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetDestinationMongodbConfigurationTunnelMethod `pulumi:"tunnelMethod"`
}

type GetDestinationMongodbConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfiguration)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationOutput) ToGetDestinationMongodbConfigurationOutput() GetDestinationMongodbConfigurationOutput {
	return o
}

func (o GetDestinationMongodbConfigurationOutput) ToGetDestinationMongodbConfigurationOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationOutput {
	return o
}

// Authorization type.
func (o GetDestinationMongodbConfigurationOutput) AuthType() GetDestinationMongodbConfigurationAuthTypeOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfiguration) GetDestinationMongodbConfigurationAuthType {
		return v.AuthType
	}).(GetDestinationMongodbConfigurationAuthTypeOutput)
}

// Name of the database.
func (o GetDestinationMongodbConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// must be one of ["mongodb"]
func (o GetDestinationMongodbConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default.
func (o GetDestinationMongodbConfigurationOutput) InstanceType() GetDestinationMongodbConfigurationInstanceTypeOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfiguration) GetDestinationMongodbConfigurationInstanceType {
		return v.InstanceType
	}).(GetDestinationMongodbConfigurationInstanceTypeOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetDestinationMongodbConfigurationOutput) TunnelMethod() GetDestinationMongodbConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfiguration) GetDestinationMongodbConfigurationTunnelMethod {
		return v.TunnelMethod
	}).(GetDestinationMongodbConfigurationTunnelMethodOutput)
}

type GetDestinationMongodbConfigurationAuthType struct {
	DestinationMongodbAuthorizationTypeLoginPassword       GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword       `pulumi:"destinationMongodbAuthorizationTypeLoginPassword"`
	DestinationMongodbAuthorizationTypeNone                GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone                `pulumi:"destinationMongodbAuthorizationTypeNone"`
	DestinationMongodbUpdateAuthorizationTypeLoginPassword GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword `pulumi:"destinationMongodbUpdateAuthorizationTypeLoginPassword"`
	DestinationMongodbUpdateAuthorizationTypeNone          GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone          `pulumi:"destinationMongodbUpdateAuthorizationTypeNone"`
}

type GetDestinationMongodbConfigurationAuthTypeOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationAuthTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationAuthType)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationAuthTypeOutput) ToGetDestinationMongodbConfigurationAuthTypeOutput() GetDestinationMongodbConfigurationAuthTypeOutput {
	return o
}

func (o GetDestinationMongodbConfigurationAuthTypeOutput) ToGetDestinationMongodbConfigurationAuthTypeOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationAuthTypeOutput {
	return o
}

func (o GetDestinationMongodbConfigurationAuthTypeOutput) DestinationMongodbAuthorizationTypeLoginPassword() GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthType) GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword {
		return v.DestinationMongodbAuthorizationTypeLoginPassword
	}).(GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput)
}

func (o GetDestinationMongodbConfigurationAuthTypeOutput) DestinationMongodbAuthorizationTypeNone() GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthType) GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone {
		return v.DestinationMongodbAuthorizationTypeNone
	}).(GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutput)
}

func (o GetDestinationMongodbConfigurationAuthTypeOutput) DestinationMongodbUpdateAuthorizationTypeLoginPassword() GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthType) GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword {
		return v.DestinationMongodbUpdateAuthorizationTypeLoginPassword
	}).(GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput)
}

func (o GetDestinationMongodbConfigurationAuthTypeOutput) DestinationMongodbUpdateAuthorizationTypeNone() GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthType) GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone {
		return v.DestinationMongodbUpdateAuthorizationTypeNone
	}).(GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutput)
}

type GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword struct {
	Authorization string `pulumi:"authorization"`
	Password      string `pulumi:"password"`
	Username      string `pulumi:"username"`
}

type GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput) ToGetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput() GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput {
	return o
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput) ToGetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput {
	return o
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput) Authorization() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword) string {
		return v.Authorization
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPassword) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone struct {
	Authorization string `pulumi:"authorization"`
}

type GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutput) ToGetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutput() GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutput {
	return o
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutput) ToGetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutput {
	return o
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutput) Authorization() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNone) string {
		return v.Authorization
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword struct {
	Authorization string `pulumi:"authorization"`
	Password      string `pulumi:"password"`
	Username      string `pulumi:"username"`
}

type GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput) ToGetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput() GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput {
	return o
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput) ToGetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput {
	return o
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput) Authorization() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword) string {
		return v.Authorization
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPassword) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone struct {
	Authorization string `pulumi:"authorization"`
}

type GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutput) ToGetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutput() GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutput {
	return o
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutput) ToGetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutput {
	return o
}

func (o GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutput) Authorization() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNone) string {
		return v.Authorization
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationInstanceType struct {
	DestinationMongodbMongoDbInstanceTypeMongoDbAtlas                    GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas                    `pulumi:"destinationMongodbMongoDbInstanceTypeMongoDbAtlas"`
	DestinationMongodbMongoDbInstanceTypeReplicaSet                      GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet                      `pulumi:"destinationMongodbMongoDbInstanceTypeReplicaSet"`
	DestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance       GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance       `pulumi:"destinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance"`
	DestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas              GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas              `pulumi:"destinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas"`
	DestinationMongodbUpdateMongoDbInstanceTypeReplicaSet                GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet                `pulumi:"destinationMongodbUpdateMongoDbInstanceTypeReplicaSet"`
	DestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance `pulumi:"destinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance"`
}

type GetDestinationMongodbConfigurationInstanceTypeOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationInstanceType)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationInstanceTypeOutput) ToGetDestinationMongodbConfigurationInstanceTypeOutput() GetDestinationMongodbConfigurationInstanceTypeOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeOutput) ToGetDestinationMongodbConfigurationInstanceTypeOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationInstanceTypeOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeOutput) DestinationMongodbMongoDbInstanceTypeMongoDbAtlas() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceType) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas {
		return v.DestinationMongodbMongoDbInstanceTypeMongoDbAtlas
	}).(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeOutput) DestinationMongodbMongoDbInstanceTypeReplicaSet() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceType) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet {
		return v.DestinationMongodbMongoDbInstanceTypeReplicaSet
	}).(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeOutput) DestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceType) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance {
		return v.DestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance
	}).(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeOutput) DestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceType) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas {
		return v.DestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas
	}).(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeOutput) DestinationMongodbUpdateMongoDbInstanceTypeReplicaSet() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceType) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet {
		return v.DestinationMongodbUpdateMongoDbInstanceTypeReplicaSet
	}).(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeOutput) DestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceType) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance {
		return v.DestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance
	}).(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput)
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas struct {
	ClusterUrl string `pulumi:"clusterUrl"`
	Instance   string `pulumi:"instance"`
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput) ClusterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas) string {
		return v.ClusterUrl
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlas) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet struct {
	Instance        string `pulumi:"instance"`
	ReplicaSet      string `pulumi:"replicaSet"`
	ServerAddresses string `pulumi:"serverAddresses"`
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput) ReplicaSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet) string {
		return v.ReplicaSet
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput) ServerAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSet) string {
		return v.ServerAddresses
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance struct {
	Host     string `pulumi:"host"`
	Instance string `pulumi:"instance"`
	Port     int    `pulumi:"port"`
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance) string {
		return v.Host
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstance) int {
		return v.Port
	}).(pulumi.IntOutput)
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas struct {
	ClusterUrl string `pulumi:"clusterUrl"`
	Instance   string `pulumi:"instance"`
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput) ClusterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas) string {
		return v.ClusterUrl
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlas) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet struct {
	Instance        string `pulumi:"instance"`
	ReplicaSet      string `pulumi:"replicaSet"`
	ServerAddresses string `pulumi:"serverAddresses"`
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) ReplicaSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet) string {
		return v.ReplicaSet
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) ServerAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSet) string {
		return v.ServerAddresses
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance struct {
	Host     string `pulumi:"host"`
	Instance string `pulumi:"instance"`
	Port     int    `pulumi:"port"`
}

type GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput() GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ToGetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance) string {
		return v.Host
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance) int {
		return v.Port
	}).(pulumi.IntOutput)
}

type GetDestinationMongodbConfigurationTunnelMethod struct {
	DestinationMongodbSshTunnelMethodNoTunnel                     GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel                     `pulumi:"destinationMongodbSshTunnelMethodNoTunnel"`
	DestinationMongodbSshTunnelMethodPasswordAuthentication       GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication       `pulumi:"destinationMongodbSshTunnelMethodPasswordAuthentication"`
	DestinationMongodbSshTunnelMethodSshKeyAuthentication         GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication         `pulumi:"destinationMongodbSshTunnelMethodSshKeyAuthentication"`
	DestinationMongodbUpdateSshTunnelMethodNoTunnel               GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel               `pulumi:"destinationMongodbUpdateSshTunnelMethodNoTunnel"`
	DestinationMongodbUpdateSshTunnelMethodPasswordAuthentication GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication `pulumi:"destinationMongodbUpdateSshTunnelMethodPasswordAuthentication"`
	DestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication   GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"destinationMongodbUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetDestinationMongodbConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationTunnelMethodOutput) ToGetDestinationMongodbConfigurationTunnelMethodOutput() GetDestinationMongodbConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodOutput) ToGetDestinationMongodbConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodOutput) DestinationMongodbSshTunnelMethodNoTunnel() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethod) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel {
		return v.DestinationMongodbSshTunnelMethodNoTunnel
	}).(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodOutput) DestinationMongodbSshTunnelMethodPasswordAuthentication() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethod) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication {
		return v.DestinationMongodbSshTunnelMethodPasswordAuthentication
	}).(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodOutput) DestinationMongodbSshTunnelMethodSshKeyAuthentication() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethod) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication {
		return v.DestinationMongodbSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodOutput) DestinationMongodbUpdateSshTunnelMethodNoTunnel() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethod) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel {
		return v.DestinationMongodbUpdateSshTunnelMethodNoTunnel
	}).(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodOutput) DestinationMongodbUpdateSshTunnelMethodPasswordAuthentication() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethod) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication {
		return v.DestinationMongodbUpdateSshTunnelMethodPasswordAuthentication
	}).(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodOutput) DestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethod) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication {
		return v.DestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutput() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutput() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationMysqlConfiguration struct {
	// Name of the database.
	Database string `pulumi:"database"`
	// must be one of ["mysql"]
	DestinationType string `pulumi:"destinationType"`
	// Hostname of the database.
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// Password associated with the username.
	Password string `pulumi:"password"`
	// Port of the database.
	Port int `pulumi:"port"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetDestinationMysqlConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// Username to use to access the database.
	Username string `pulumi:"username"`
}

type GetDestinationMysqlConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationMysqlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMysqlConfiguration)(nil)).Elem()
}

func (o GetDestinationMysqlConfigurationOutput) ToGetDestinationMysqlConfigurationOutput() GetDestinationMysqlConfigurationOutput {
	return o
}

func (o GetDestinationMysqlConfigurationOutput) ToGetDestinationMysqlConfigurationOutputWithContext(ctx context.Context) GetDestinationMysqlConfigurationOutput {
	return o
}

// Name of the database.
func (o GetDestinationMysqlConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// must be one of ["mysql"]
func (o GetDestinationMysqlConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Hostname of the database.
func (o GetDestinationMysqlConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
func (o GetDestinationMysqlConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// Password associated with the username.
func (o GetDestinationMysqlConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Port of the database.
func (o GetDestinationMysqlConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetDestinationMysqlConfigurationOutput) TunnelMethod() GetDestinationMysqlConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfiguration) GetDestinationMysqlConfigurationTunnelMethod {
		return v.TunnelMethod
	}).(GetDestinationMysqlConfigurationTunnelMethodOutput)
}

// Username to use to access the database.
func (o GetDestinationMysqlConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetDestinationMysqlConfigurationTunnelMethod struct {
	DestinationMysqlSshTunnelMethodNoTunnel                     GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel                     `pulumi:"destinationMysqlSshTunnelMethodNoTunnel"`
	DestinationMysqlSshTunnelMethodPasswordAuthentication       GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication       `pulumi:"destinationMysqlSshTunnelMethodPasswordAuthentication"`
	DestinationMysqlSshTunnelMethodSshKeyAuthentication         GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication         `pulumi:"destinationMysqlSshTunnelMethodSshKeyAuthentication"`
	DestinationMysqlUpdateSshTunnelMethodNoTunnel               GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel               `pulumi:"destinationMysqlUpdateSshTunnelMethodNoTunnel"`
	DestinationMysqlUpdateSshTunnelMethodPasswordAuthentication GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication `pulumi:"destinationMysqlUpdateSshTunnelMethodPasswordAuthentication"`
	DestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication   GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"destinationMysqlUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetDestinationMysqlConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetDestinationMysqlConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMysqlConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetDestinationMysqlConfigurationTunnelMethodOutput) ToGetDestinationMysqlConfigurationTunnelMethodOutput() GetDestinationMysqlConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodOutput) ToGetDestinationMysqlConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetDestinationMysqlConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodOutput) DestinationMysqlSshTunnelMethodNoTunnel() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethod) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel {
		return v.DestinationMysqlSshTunnelMethodNoTunnel
	}).(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodOutput) DestinationMysqlSshTunnelMethodPasswordAuthentication() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethod) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication {
		return v.DestinationMysqlSshTunnelMethodPasswordAuthentication
	}).(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodOutput) DestinationMysqlSshTunnelMethodSshKeyAuthentication() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethod) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication {
		return v.DestinationMysqlSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodOutput) DestinationMysqlUpdateSshTunnelMethodNoTunnel() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethod) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel {
		return v.DestinationMysqlUpdateSshTunnelMethodNoTunnel
	}).(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodOutput) DestinationMysqlUpdateSshTunnelMethodPasswordAuthentication() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethod) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication {
		return v.DestinationMysqlUpdateSshTunnelMethodPasswordAuthentication
	}).(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodOutput) DestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethod) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication {
		return v.DestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutput() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutput() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationOracleConfiguration struct {
	// must be one of ["oracle"]
	DestinationType string `pulumi:"destinationType"`
	// The hostname of the database.
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// The password associated with the username.
	Password string `pulumi:"password"`
	// The port of the database.
	Port int `pulumi:"port"`
	// The default schema is used as the target schema for all statements issued from the connection that do not explicitly specify a schema name. The usual value for this field is "airbyte".  In Oracle, schemas and users are the same thing, so the "user" parameter is used as the login credentials and this is used for the default Airbyte message schema.
	Schema string `pulumi:"schema"`
	// The System Identifier uniquely distinguishes the instance from any other instance on the same computer.
	Sid string `pulumi:"sid"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetDestinationOracleConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// The username to access the database. This user must have CREATE USER privileges in the database.
	Username string `pulumi:"username"`
}

type GetDestinationOracleConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationOracleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationOracleConfiguration)(nil)).Elem()
}

func (o GetDestinationOracleConfigurationOutput) ToGetDestinationOracleConfigurationOutput() GetDestinationOracleConfigurationOutput {
	return o
}

func (o GetDestinationOracleConfigurationOutput) ToGetDestinationOracleConfigurationOutputWithContext(ctx context.Context) GetDestinationOracleConfigurationOutput {
	return o
}

// must be one of ["oracle"]
func (o GetDestinationOracleConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// The hostname of the database.
func (o GetDestinationOracleConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
func (o GetDestinationOracleConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// The password associated with the username.
func (o GetDestinationOracleConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The port of the database.
func (o GetDestinationOracleConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationOracleConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// The default schema is used as the target schema for all statements issued from the connection that do not explicitly specify a schema name. The usual value for this field is "airbyte".  In Oracle, schemas and users are the same thing, so the "user" parameter is used as the login credentials and this is used for the default Airbyte message schema.
func (o GetDestinationOracleConfigurationOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfiguration) string { return v.Schema }).(pulumi.StringOutput)
}

// The System Identifier uniquely distinguishes the instance from any other instance on the same computer.
func (o GetDestinationOracleConfigurationOutput) Sid() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfiguration) string { return v.Sid }).(pulumi.StringOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetDestinationOracleConfigurationOutput) TunnelMethod() GetDestinationOracleConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetDestinationOracleConfiguration) GetDestinationOracleConfigurationTunnelMethod {
		return v.TunnelMethod
	}).(GetDestinationOracleConfigurationTunnelMethodOutput)
}

// The username to access the database. This user must have CREATE USER privileges in the database.
func (o GetDestinationOracleConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetDestinationOracleConfigurationTunnelMethod struct {
	DestinationOracleSshTunnelMethodNoTunnel                     GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel                     `pulumi:"destinationOracleSshTunnelMethodNoTunnel"`
	DestinationOracleSshTunnelMethodPasswordAuthentication       GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication       `pulumi:"destinationOracleSshTunnelMethodPasswordAuthentication"`
	DestinationOracleSshTunnelMethodSshKeyAuthentication         GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication         `pulumi:"destinationOracleSshTunnelMethodSshKeyAuthentication"`
	DestinationOracleUpdateSshTunnelMethodNoTunnel               GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel               `pulumi:"destinationOracleUpdateSshTunnelMethodNoTunnel"`
	DestinationOracleUpdateSshTunnelMethodPasswordAuthentication GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication `pulumi:"destinationOracleUpdateSshTunnelMethodPasswordAuthentication"`
	DestinationOracleUpdateSshTunnelMethodSshKeyAuthentication   GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"destinationOracleUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetDestinationOracleConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetDestinationOracleConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationOracleConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetDestinationOracleConfigurationTunnelMethodOutput) ToGetDestinationOracleConfigurationTunnelMethodOutput() GetDestinationOracleConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodOutput) ToGetDestinationOracleConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetDestinationOracleConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodOutput) DestinationOracleSshTunnelMethodNoTunnel() GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethod) GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel {
		return v.DestinationOracleSshTunnelMethodNoTunnel
	}).(GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodOutput) DestinationOracleSshTunnelMethodPasswordAuthentication() GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethod) GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication {
		return v.DestinationOracleSshTunnelMethodPasswordAuthentication
	}).(GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodOutput) DestinationOracleSshTunnelMethodSshKeyAuthentication() GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethod) GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication {
		return v.DestinationOracleSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodOutput) DestinationOracleUpdateSshTunnelMethodNoTunnel() GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethod) GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel {
		return v.DestinationOracleUpdateSshTunnelMethodNoTunnel
	}).(GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodOutput) DestinationOracleUpdateSshTunnelMethodPasswordAuthentication() GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethod) GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication {
		return v.DestinationOracleUpdateSshTunnelMethodPasswordAuthentication
	}).(GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodOutput) DestinationOracleUpdateSshTunnelMethodSshKeyAuthentication() GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethod) GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication {
		return v.DestinationOracleUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutput() GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput() GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutput() GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput() GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfiguration struct {
	// Name of the database.
	Database string `pulumi:"database"`
	// must be one of ["postgres"]
	DestinationType string `pulumi:"destinationType"`
	// Hostname of the database.
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// Password associated with the username.
	Password string `pulumi:"password"`
	// Port of the database.
	Port int `pulumi:"port"`
	// The default schema tables are written to if the source does not specify a namespace. The usual value for this field is "public".
	Schema string `pulumi:"schema"`
	// SSL connection modes.
	// \n\ndisable\n\n - Chose this mode to disable encryption of communication between Airbyte and destination database
	// \n\nallow\n\n - Chose this mode to enable encryption only when required by the source database
	// \n\nprefer\n\n - Chose this mode to allow unencrypted connection only if the source database does not support encryption
	// \n\nrequire\n\n - Chose this mode to always require encryption. If the source database server does not support encryption, connection will fail
	// \n\nverify-ca\n\n - Chose this mode to always require encryption and to verify that the source database server has a valid SSL certificate
	// \n\nverify-full\n\n - This is the most secure mode. Chose this mode to always require encryption and to verify the identity of the source database server
	// See more information - \n\n in the docs\n\n.
	SslMode GetDestinationPostgresConfigurationSslMode `pulumi:"sslMode"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetDestinationPostgresConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// Username to use to access the database.
	Username string `pulumi:"username"`
}

type GetDestinationPostgresConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfiguration)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationOutput) ToGetDestinationPostgresConfigurationOutput() GetDestinationPostgresConfigurationOutput {
	return o
}

func (o GetDestinationPostgresConfigurationOutput) ToGetDestinationPostgresConfigurationOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationOutput {
	return o
}

// Name of the database.
func (o GetDestinationPostgresConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// must be one of ["postgres"]
func (o GetDestinationPostgresConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Hostname of the database.
func (o GetDestinationPostgresConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
func (o GetDestinationPostgresConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// Password associated with the username.
func (o GetDestinationPostgresConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Port of the database.
func (o GetDestinationPostgresConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// The default schema tables are written to if the source does not specify a namespace. The usual value for this field is "public".
func (o GetDestinationPostgresConfigurationOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfiguration) string { return v.Schema }).(pulumi.StringOutput)
}

// SSL connection modes.
// \n\ndisable\n\n - Chose this mode to disable encryption of communication between Airbyte and destination database
// \n\nallow\n\n - Chose this mode to enable encryption only when required by the source database
// \n\nprefer\n\n - Chose this mode to allow unencrypted connection only if the source database does not support encryption
// \n\nrequire\n\n - Chose this mode to always require encryption. If the source database server does not support encryption, connection will fail
// \n\nverify-ca\n\n - Chose this mode to always require encryption and to verify that the source database server has a valid SSL certificate
// \n\nverify-full\n\n - This is the most secure mode. Chose this mode to always require encryption and to verify the identity of the source database server
// See more information - \n\n in the docs\n\n.
func (o GetDestinationPostgresConfigurationOutput) SslMode() GetDestinationPostgresConfigurationSslModeOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfiguration) GetDestinationPostgresConfigurationSslMode {
		return v.SslMode
	}).(GetDestinationPostgresConfigurationSslModeOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetDestinationPostgresConfigurationOutput) TunnelMethod() GetDestinationPostgresConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfiguration) GetDestinationPostgresConfigurationTunnelMethod {
		return v.TunnelMethod
	}).(GetDestinationPostgresConfigurationTunnelMethodOutput)
}

// Username to use to access the database.
func (o GetDestinationPostgresConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslMode struct {
	DestinationPostgresSslModesAllow            GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow            `pulumi:"destinationPostgresSslModesAllow"`
	DestinationPostgresSslModesDisable          GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable          `pulumi:"destinationPostgresSslModesDisable"`
	DestinationPostgresSslModesPrefer           GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer           `pulumi:"destinationPostgresSslModesPrefer"`
	DestinationPostgresSslModesRequire          GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire          `pulumi:"destinationPostgresSslModesRequire"`
	DestinationPostgresSslModesVerifyCa         GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa         `pulumi:"destinationPostgresSslModesVerifyCa"`
	DestinationPostgresSslModesVerifyFull       GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull       `pulumi:"destinationPostgresSslModesVerifyFull"`
	DestinationPostgresUpdateSslModesAllow      GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow      `pulumi:"destinationPostgresUpdateSslModesAllow"`
	DestinationPostgresUpdateSslModesDisable    GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable    `pulumi:"destinationPostgresUpdateSslModesDisable"`
	DestinationPostgresUpdateSslModesPrefer     GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer     `pulumi:"destinationPostgresUpdateSslModesPrefer"`
	DestinationPostgresUpdateSslModesRequire    GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire    `pulumi:"destinationPostgresUpdateSslModesRequire"`
	DestinationPostgresUpdateSslModesVerifyCa   GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa   `pulumi:"destinationPostgresUpdateSslModesVerifyCa"`
	DestinationPostgresUpdateSslModesVerifyFull GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull `pulumi:"destinationPostgresUpdateSslModesVerifyFull"`
}

type GetDestinationPostgresConfigurationSslModeOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslMode)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeOutput) ToGetDestinationPostgresConfigurationSslModeOutput() GetDestinationPostgresConfigurationSslModeOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeOutput) ToGetDestinationPostgresConfigurationSslModeOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresSslModesAllow() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow {
		return v.DestinationPostgresSslModesAllow
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutput)
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresSslModesDisable() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable {
		return v.DestinationPostgresSslModesDisable
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutput)
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresSslModesPrefer() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer {
		return v.DestinationPostgresSslModesPrefer
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutput)
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresSslModesRequire() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire {
		return v.DestinationPostgresSslModesRequire
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutput)
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresSslModesVerifyCa() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa {
		return v.DestinationPostgresSslModesVerifyCa
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput)
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresSslModesVerifyFull() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull {
		return v.DestinationPostgresSslModesVerifyFull
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput)
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresUpdateSslModesAllow() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow {
		return v.DestinationPostgresUpdateSslModesAllow
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutput)
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresUpdateSslModesDisable() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable {
		return v.DestinationPostgresUpdateSslModesDisable
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutput)
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresUpdateSslModesPrefer() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer {
		return v.DestinationPostgresUpdateSslModesPrefer
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutput)
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresUpdateSslModesRequire() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire {
		return v.DestinationPostgresUpdateSslModesRequire
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutput)
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresUpdateSslModesVerifyCa() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa {
		return v.DestinationPostgresUpdateSslModesVerifyCa
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput)
}

func (o GetDestinationPostgresConfigurationSslModeOutput) DestinationPostgresUpdateSslModesVerifyFull() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslMode) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull {
		return v.DestinationPostgresUpdateSslModesVerifyFull
	}).(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow struct {
	Mode string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllow) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable struct {
	Mode string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisable) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer struct {
	Mode string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPrefer) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire struct {
	Mode string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequire) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa struct {
	CaCertificate     string `pulumi:"caCertificate"`
	ClientKeyPassword string `pulumi:"clientKeyPassword"`
	Mode              string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCa) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull struct {
	CaCertificate     string `pulumi:"caCertificate"`
	ClientCertificate string `pulumi:"clientCertificate"`
	ClientKey         string `pulumi:"clientKey"`
	ClientKeyPassword string `pulumi:"clientKeyPassword"`
	Mode              string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull) string {
		return v.ClientKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFull) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow struct {
	Mode string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllow) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable struct {
	Mode string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisable) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer struct {
	Mode string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPrefer) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire struct {
	Mode string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequire) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa struct {
	CaCertificate     string `pulumi:"caCertificate"`
	ClientKeyPassword string `pulumi:"clientKeyPassword"`
	Mode              string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCa) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull struct {
	CaCertificate     string `pulumi:"caCertificate"`
	ClientCertificate string `pulumi:"clientCertificate"`
	ClientKey         string `pulumi:"clientKey"`
	ClientKeyPassword string `pulumi:"clientKeyPassword"`
	Mode              string `pulumi:"mode"`
}

type GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput() GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput) ToGetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput {
	return o
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull) string {
		return v.ClientKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFull) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationTunnelMethod struct {
	DestinationPostgresSshTunnelMethodNoTunnel                     GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel                     `pulumi:"destinationPostgresSshTunnelMethodNoTunnel"`
	DestinationPostgresSshTunnelMethodPasswordAuthentication       GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication       `pulumi:"destinationPostgresSshTunnelMethodPasswordAuthentication"`
	DestinationPostgresSshTunnelMethodSshKeyAuthentication         GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication         `pulumi:"destinationPostgresSshTunnelMethodSshKeyAuthentication"`
	DestinationPostgresUpdateSshTunnelMethodNoTunnel               GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel               `pulumi:"destinationPostgresUpdateSshTunnelMethodNoTunnel"`
	DestinationPostgresUpdateSshTunnelMethodPasswordAuthentication GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication `pulumi:"destinationPostgresUpdateSshTunnelMethodPasswordAuthentication"`
	DestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication   GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"destinationPostgresUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetDestinationPostgresConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationTunnelMethodOutput) ToGetDestinationPostgresConfigurationTunnelMethodOutput() GetDestinationPostgresConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodOutput) ToGetDestinationPostgresConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodOutput) DestinationPostgresSshTunnelMethodNoTunnel() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethod) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel {
		return v.DestinationPostgresSshTunnelMethodNoTunnel
	}).(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodOutput) DestinationPostgresSshTunnelMethodPasswordAuthentication() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethod) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication {
		return v.DestinationPostgresSshTunnelMethodPasswordAuthentication
	}).(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodOutput) DestinationPostgresSshTunnelMethodSshKeyAuthentication() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethod) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication {
		return v.DestinationPostgresSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodOutput) DestinationPostgresUpdateSshTunnelMethodNoTunnel() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethod) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel {
		return v.DestinationPostgresUpdateSshTunnelMethodNoTunnel
	}).(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodOutput) DestinationPostgresUpdateSshTunnelMethodPasswordAuthentication() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethod) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication {
		return v.DestinationPostgresUpdateSshTunnelMethodPasswordAuthentication
	}).(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodOutput) DestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethod) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication {
		return v.DestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutput() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutput() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationPubsubConfiguration struct {
	// Number of ms before the buffer is flushed
	BatchingDelayThreshold int `pulumi:"batchingDelayThreshold"`
	// Number of messages before the buffer is flushed
	BatchingElementCountThreshold int `pulumi:"batchingElementCountThreshold"`
	// If TRUE messages will be buffered instead of sending them one by one
	BatchingEnabled bool `pulumi:"batchingEnabled"`
	// Number of bytes before the buffer is flushed
	BatchingRequestBytesThreshold int `pulumi:"batchingRequestBytesThreshold"`
	// The contents of the JSON service account key. Check out the \n\ndocs\n\n if you need help generating this key.
	CredentialsJson string `pulumi:"credentialsJson"`
	// must be one of ["pubsub"]
	DestinationType string `pulumi:"destinationType"`
	// If TRUE PubSub publisher will have \n\nmessage ordering\n\n enabled. Every message will have an ordering key of stream
	OrderingEnabled bool `pulumi:"orderingEnabled"`
	// The GCP project ID for the project containing the target PubSub.
	ProjectId string `pulumi:"projectId"`
	// The PubSub topic ID in the given GCP project ID.
	TopicId string `pulumi:"topicId"`
}

type GetDestinationPubsubConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationPubsubConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationPubsubConfiguration)(nil)).Elem()
}

func (o GetDestinationPubsubConfigurationOutput) ToGetDestinationPubsubConfigurationOutput() GetDestinationPubsubConfigurationOutput {
	return o
}

func (o GetDestinationPubsubConfigurationOutput) ToGetDestinationPubsubConfigurationOutputWithContext(ctx context.Context) GetDestinationPubsubConfigurationOutput {
	return o
}

// Number of ms before the buffer is flushed
func (o GetDestinationPubsubConfigurationOutput) BatchingDelayThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationPubsubConfiguration) int { return v.BatchingDelayThreshold }).(pulumi.IntOutput)
}

// Number of messages before the buffer is flushed
func (o GetDestinationPubsubConfigurationOutput) BatchingElementCountThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationPubsubConfiguration) int { return v.BatchingElementCountThreshold }).(pulumi.IntOutput)
}

// If TRUE messages will be buffered instead of sending them one by one
func (o GetDestinationPubsubConfigurationOutput) BatchingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDestinationPubsubConfiguration) bool { return v.BatchingEnabled }).(pulumi.BoolOutput)
}

// Number of bytes before the buffer is flushed
func (o GetDestinationPubsubConfigurationOutput) BatchingRequestBytesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationPubsubConfiguration) int { return v.BatchingRequestBytesThreshold }).(pulumi.IntOutput)
}

// The contents of the JSON service account key. Check out the \n\ndocs\n\n if you need help generating this key.
func (o GetDestinationPubsubConfigurationOutput) CredentialsJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPubsubConfiguration) string { return v.CredentialsJson }).(pulumi.StringOutput)
}

// must be one of ["pubsub"]
func (o GetDestinationPubsubConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPubsubConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// If TRUE PubSub publisher will have \n\nmessage ordering\n\n enabled. Every message will have an ordering key of stream
func (o GetDestinationPubsubConfigurationOutput) OrderingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDestinationPubsubConfiguration) bool { return v.OrderingEnabled }).(pulumi.BoolOutput)
}

// The GCP project ID for the project containing the target PubSub.
func (o GetDestinationPubsubConfigurationOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPubsubConfiguration) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The PubSub topic ID in the given GCP project ID.
func (o GetDestinationPubsubConfigurationOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationPubsubConfiguration) string { return v.TopicId }).(pulumi.StringOutput)
}

type GetDestinationRedisConfiguration struct {
	// must be one of ["hash"]
	// Redis cache type to store data in.
	CacheType string `pulumi:"cacheType"`
	// must be one of ["redis"]
	DestinationType string `pulumi:"destinationType"`
	// Redis host to connect to.
	Host string `pulumi:"host"`
	// Password associated with Redis.
	Password string `pulumi:"password"`
	// Port of Redis.
	Port int `pulumi:"port"`
	// Indicates whether SSL encryption protocol will be used to connect to Redis. It is recommended to use SSL connection if possible.
	Ssl bool `pulumi:"ssl"`
	// SSL connection modes.
	// \n\n\n\nverify-full\n\n - This is the most secure mode. Always require encryption and verifies the identity of the source database server
	SslMode GetDestinationRedisConfigurationSslMode `pulumi:"sslMode"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetDestinationRedisConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// Username associated with Redis.
	Username string `pulumi:"username"`
}

type GetDestinationRedisConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfiguration)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationOutput) ToGetDestinationRedisConfigurationOutput() GetDestinationRedisConfigurationOutput {
	return o
}

func (o GetDestinationRedisConfigurationOutput) ToGetDestinationRedisConfigurationOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationOutput {
	return o
}

// must be one of ["hash"]
// Redis cache type to store data in.
func (o GetDestinationRedisConfigurationOutput) CacheType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfiguration) string { return v.CacheType }).(pulumi.StringOutput)
}

// must be one of ["redis"]
func (o GetDestinationRedisConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Redis host to connect to.
func (o GetDestinationRedisConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Password associated with Redis.
func (o GetDestinationRedisConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Port of Redis.
func (o GetDestinationRedisConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedisConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// Indicates whether SSL encryption protocol will be used to connect to Redis. It is recommended to use SSL connection if possible.
func (o GetDestinationRedisConfigurationOutput) Ssl() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDestinationRedisConfiguration) bool { return v.Ssl }).(pulumi.BoolOutput)
}

// SSL connection modes.
// \n\n\n\nverify-full\n\n - This is the most secure mode. Always require encryption and verifies the identity of the source database server
func (o GetDestinationRedisConfigurationOutput) SslMode() GetDestinationRedisConfigurationSslModeOutput {
	return o.ApplyT(func(v GetDestinationRedisConfiguration) GetDestinationRedisConfigurationSslMode { return v.SslMode }).(GetDestinationRedisConfigurationSslModeOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetDestinationRedisConfigurationOutput) TunnelMethod() GetDestinationRedisConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetDestinationRedisConfiguration) GetDestinationRedisConfigurationTunnelMethod {
		return v.TunnelMethod
	}).(GetDestinationRedisConfigurationTunnelMethodOutput)
}

// Username associated with Redis.
func (o GetDestinationRedisConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetDestinationRedisConfigurationSslMode struct {
	DestinationRedisSslModesDisable          GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisable          `pulumi:"destinationRedisSslModesDisable"`
	DestinationRedisSslModesVerifyFull       GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull       `pulumi:"destinationRedisSslModesVerifyFull"`
	DestinationRedisUpdateSslModesDisable    GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable    `pulumi:"destinationRedisUpdateSslModesDisable"`
	DestinationRedisUpdateSslModesVerifyFull GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull `pulumi:"destinationRedisUpdateSslModesVerifyFull"`
}

type GetDestinationRedisConfigurationSslModeOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationSslModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationSslMode)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationSslModeOutput) ToGetDestinationRedisConfigurationSslModeOutput() GetDestinationRedisConfigurationSslModeOutput {
	return o
}

func (o GetDestinationRedisConfigurationSslModeOutput) ToGetDestinationRedisConfigurationSslModeOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationSslModeOutput {
	return o
}

func (o GetDestinationRedisConfigurationSslModeOutput) DestinationRedisSslModesDisable() GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslMode) GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisable {
		return v.DestinationRedisSslModesDisable
	}).(GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutput)
}

func (o GetDestinationRedisConfigurationSslModeOutput) DestinationRedisSslModesVerifyFull() GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslMode) GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull {
		return v.DestinationRedisSslModesVerifyFull
	}).(GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput)
}

func (o GetDestinationRedisConfigurationSslModeOutput) DestinationRedisUpdateSslModesDisable() GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslMode) GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable {
		return v.DestinationRedisUpdateSslModesDisable
	}).(GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutput)
}

func (o GetDestinationRedisConfigurationSslModeOutput) DestinationRedisUpdateSslModesVerifyFull() GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslMode) GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull {
		return v.DestinationRedisUpdateSslModesVerifyFull
	}).(GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput)
}

type GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisable struct {
	Mode string `pulumi:"mode"`
}

type GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisable)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutput) ToGetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutput() GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutput {
	return o
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutput) ToGetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutput {
	return o
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisable) string { return v.Mode }).(pulumi.StringOutput)
}

type GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull struct {
	CaCertificate     string `pulumi:"caCertificate"`
	ClientCertificate string `pulumi:"clientCertificate"`
	ClientKey         string `pulumi:"clientKey"`
	ClientKeyPassword string `pulumi:"clientKeyPassword"`
	Mode              string `pulumi:"mode"`
}

type GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput) ToGetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput() GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput {
	return o
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput) ToGetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput {
	return o
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull) string {
		return v.ClientKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFull) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable struct {
	Mode string `pulumi:"mode"`
}

type GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutput) ToGetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutput() GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutput {
	return o
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutput) ToGetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutput {
	return o
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisable) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull struct {
	CaCertificate     string `pulumi:"caCertificate"`
	ClientCertificate string `pulumi:"clientCertificate"`
	ClientKey         string `pulumi:"clientKey"`
	ClientKeyPassword string `pulumi:"clientKeyPassword"`
	Mode              string `pulumi:"mode"`
}

type GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput) ToGetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput() GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput {
	return o
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput) ToGetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput {
	return o
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull) string {
		return v.ClientKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFull) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetDestinationRedisConfigurationTunnelMethod struct {
	DestinationRedisSshTunnelMethodNoTunnel                     GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel                     `pulumi:"destinationRedisSshTunnelMethodNoTunnel"`
	DestinationRedisSshTunnelMethodPasswordAuthentication       GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication       `pulumi:"destinationRedisSshTunnelMethodPasswordAuthentication"`
	DestinationRedisSshTunnelMethodSshKeyAuthentication         GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication         `pulumi:"destinationRedisSshTunnelMethodSshKeyAuthentication"`
	DestinationRedisUpdateSshTunnelMethodNoTunnel               GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel               `pulumi:"destinationRedisUpdateSshTunnelMethodNoTunnel"`
	DestinationRedisUpdateSshTunnelMethodPasswordAuthentication GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication `pulumi:"destinationRedisUpdateSshTunnelMethodPasswordAuthentication"`
	DestinationRedisUpdateSshTunnelMethodSshKeyAuthentication   GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"destinationRedisUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetDestinationRedisConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationTunnelMethodOutput) ToGetDestinationRedisConfigurationTunnelMethodOutput() GetDestinationRedisConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodOutput) ToGetDestinationRedisConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodOutput) DestinationRedisSshTunnelMethodNoTunnel() GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethod) GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel {
		return v.DestinationRedisSshTunnelMethodNoTunnel
	}).(GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodOutput) DestinationRedisSshTunnelMethodPasswordAuthentication() GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethod) GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication {
		return v.DestinationRedisSshTunnelMethodPasswordAuthentication
	}).(GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodOutput) DestinationRedisSshTunnelMethodSshKeyAuthentication() GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethod) GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication {
		return v.DestinationRedisSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodOutput) DestinationRedisUpdateSshTunnelMethodNoTunnel() GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethod) GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel {
		return v.DestinationRedisUpdateSshTunnelMethodNoTunnel
	}).(GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodOutput) DestinationRedisUpdateSshTunnelMethodPasswordAuthentication() GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethod) GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication {
		return v.DestinationRedisUpdateSshTunnelMethodPasswordAuthentication
	}).(GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodOutput) DestinationRedisUpdateSshTunnelMethodSshKeyAuthentication() GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethod) GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication {
		return v.DestinationRedisUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutput() GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput() GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutput() GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput() GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfiguration struct {
	// Name of the database.
	Database string `pulumi:"database"`
	// must be one of ["redshift"]
	DestinationType string `pulumi:"destinationType"`
	// Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com)
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// Password associated with the username.
	Password string `pulumi:"password"`
	// Port of the database.
	Port int `pulumi:"port"`
	// The default schema tables are written to if the source does not specify a namespace. Unless specifically configured, the usual value for this field is "public".
	Schema string `pulumi:"schema"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetDestinationRedshiftConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// The method how the data will be uploaded to the database.
	UploadingMethod GetDestinationRedshiftConfigurationUploadingMethod `pulumi:"uploadingMethod"`
	// Username to use to access the database.
	Username string `pulumi:"username"`
}

type GetDestinationRedshiftConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfiguration)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationOutput) ToGetDestinationRedshiftConfigurationOutput() GetDestinationRedshiftConfigurationOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationOutput) ToGetDestinationRedshiftConfigurationOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationOutput {
	return o
}

// Name of the database.
func (o GetDestinationRedshiftConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// must be one of ["redshift"]
func (o GetDestinationRedshiftConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com)
func (o GetDestinationRedshiftConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
func (o GetDestinationRedshiftConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// Password associated with the username.
func (o GetDestinationRedshiftConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Port of the database.
func (o GetDestinationRedshiftConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// The default schema tables are written to if the source does not specify a namespace. Unless specifically configured, the usual value for this field is "public".
func (o GetDestinationRedshiftConfigurationOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfiguration) string { return v.Schema }).(pulumi.StringOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetDestinationRedshiftConfigurationOutput) TunnelMethod() GetDestinationRedshiftConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfiguration) GetDestinationRedshiftConfigurationTunnelMethod {
		return v.TunnelMethod
	}).(GetDestinationRedshiftConfigurationTunnelMethodOutput)
}

// The method how the data will be uploaded to the database.
func (o GetDestinationRedshiftConfigurationOutput) UploadingMethod() GetDestinationRedshiftConfigurationUploadingMethodOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfiguration) GetDestinationRedshiftConfigurationUploadingMethod {
		return v.UploadingMethod
	}).(GetDestinationRedshiftConfigurationUploadingMethodOutput)
}

// Username to use to access the database.
func (o GetDestinationRedshiftConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationTunnelMethod struct {
	DestinationRedshiftSshTunnelMethodNoTunnel                     GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel                     `pulumi:"destinationRedshiftSshTunnelMethodNoTunnel"`
	DestinationRedshiftSshTunnelMethodPasswordAuthentication       GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication       `pulumi:"destinationRedshiftSshTunnelMethodPasswordAuthentication"`
	DestinationRedshiftSshTunnelMethodSshKeyAuthentication         GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication         `pulumi:"destinationRedshiftSshTunnelMethodSshKeyAuthentication"`
	DestinationRedshiftUpdateSshTunnelMethodNoTunnel               GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel               `pulumi:"destinationRedshiftUpdateSshTunnelMethodNoTunnel"`
	DestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication `pulumi:"destinationRedshiftUpdateSshTunnelMethodPasswordAuthentication"`
	DestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication   GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"destinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetDestinationRedshiftConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationTunnelMethodOutput) ToGetDestinationRedshiftConfigurationTunnelMethodOutput() GetDestinationRedshiftConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodOutput) ToGetDestinationRedshiftConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodOutput) DestinationRedshiftSshTunnelMethodNoTunnel() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethod) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel {
		return v.DestinationRedshiftSshTunnelMethodNoTunnel
	}).(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodOutput) DestinationRedshiftSshTunnelMethodPasswordAuthentication() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethod) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication {
		return v.DestinationRedshiftSshTunnelMethodPasswordAuthentication
	}).(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodOutput) DestinationRedshiftSshTunnelMethodSshKeyAuthentication() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethod) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication {
		return v.DestinationRedshiftSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodOutput) DestinationRedshiftUpdateSshTunnelMethodNoTunnel() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethod) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel {
		return v.DestinationRedshiftUpdateSshTunnelMethodNoTunnel
	}).(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodOutput) DestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethod) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication {
		return v.DestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication
	}).(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodOutput) DestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethod) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication {
		return v.DestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutput() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutput() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationUploadingMethod struct {
	DestinationRedshiftUpdateUploadingMethodS3Staging GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging `pulumi:"destinationRedshiftUpdateUploadingMethodS3Staging"`
	DestinationRedshiftUpdateUploadingMethodStandard  GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard  `pulumi:"destinationRedshiftUpdateUploadingMethodStandard"`
	DestinationRedshiftUploadingMethodS3Staging       GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging       `pulumi:"destinationRedshiftUploadingMethodS3Staging"`
	DestinationRedshiftUploadingMethodStandard        GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard        `pulumi:"destinationRedshiftUploadingMethodStandard"`
}

type GetDestinationRedshiftConfigurationUploadingMethodOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationUploadingMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationUploadingMethod)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationUploadingMethodOutput) ToGetDestinationRedshiftConfigurationUploadingMethodOutput() GetDestinationRedshiftConfigurationUploadingMethodOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodOutput) ToGetDestinationRedshiftConfigurationUploadingMethodOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationUploadingMethodOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodOutput) DestinationRedshiftUpdateUploadingMethodS3Staging() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethod) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging {
		return v.DestinationRedshiftUpdateUploadingMethodS3Staging
	}).(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodOutput) DestinationRedshiftUpdateUploadingMethodStandard() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethod) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard {
		return v.DestinationRedshiftUpdateUploadingMethodStandard
	}).(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodOutput) DestinationRedshiftUploadingMethodS3Staging() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethod) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging {
		return v.DestinationRedshiftUploadingMethodS3Staging
	}).(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodOutput) DestinationRedshiftUploadingMethodStandard() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethod) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard {
		return v.DestinationRedshiftUploadingMethodStandard
	}).(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutput)
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging struct {
	AccessKeyId      string                                                                                                        `pulumi:"accessKeyId"`
	Encryption       GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption `pulumi:"encryption"`
	FileBufferCount  int                                                                                                           `pulumi:"fileBufferCount"`
	FileNamePattern  string                                                                                                        `pulumi:"fileNamePattern"`
	Method           string                                                                                                        `pulumi:"method"`
	PurgeStagingData bool                                                                                                          `pulumi:"purgeStagingData"`
	S3BucketName     string                                                                                                        `pulumi:"s3BucketName"`
	S3BucketPath     string                                                                                                        `pulumi:"s3BucketPath"`
	S3BucketRegion   string                                                                                                        `pulumi:"s3BucketRegion"`
	SecretAccessKey  string                                                                                                        `pulumi:"secretAccessKey"`
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging) string {
		return v.AccessKeyId
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) Encryption() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption {
		return v.Encryption
	}).(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) FileBufferCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging) int {
		return v.FileBufferCount
	}).(pulumi.IntOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) FileNamePattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging) string {
		return v.FileNamePattern
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging) string {
		return v.Method
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) PurgeStagingData() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging) bool {
		return v.PurgeStagingData
	}).(pulumi.BoolOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging) string {
		return v.S3BucketName
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) S3BucketPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging) string {
		return v.S3BucketPath
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) S3BucketRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging) string {
		return v.S3BucketRegion
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging) string {
		return v.SecretAccessKey
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption struct {
	DestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption `pulumi:"destinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption"`
	DestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption             GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption             `pulumi:"destinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption"`
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput) DestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption {
		return v.DestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption
	}).(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput) DestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption {
		return v.DestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption
	}).(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutput)
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption struct {
	EncryptionType   string `pulumi:"encryptionType"`
	KeyEncryptingKey string `pulumi:"keyEncryptingKey"`
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput) EncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption) string {
		return v.EncryptionType
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput) KeyEncryptingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption) string {
		return v.KeyEncryptingKey
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption struct {
	EncryptionType string `pulumi:"encryptionType"`
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutput() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutput) EncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryption) string {
		return v.EncryptionType
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard struct {
	Method string `pulumi:"method"`
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutput() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandard) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging struct {
	AccessKeyId      string                                                                                                  `pulumi:"accessKeyId"`
	Encryption       GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption `pulumi:"encryption"`
	FileBufferCount  int                                                                                                     `pulumi:"fileBufferCount"`
	FileNamePattern  string                                                                                                  `pulumi:"fileNamePattern"`
	Method           string                                                                                                  `pulumi:"method"`
	PurgeStagingData bool                                                                                                    `pulumi:"purgeStagingData"`
	S3BucketName     string                                                                                                  `pulumi:"s3BucketName"`
	S3BucketPath     string                                                                                                  `pulumi:"s3BucketPath"`
	S3BucketRegion   string                                                                                                  `pulumi:"s3BucketRegion"`
	SecretAccessKey  string                                                                                                  `pulumi:"secretAccessKey"`
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging) string {
		return v.AccessKeyId
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) Encryption() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption {
		return v.Encryption
	}).(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) FileBufferCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging) int {
		return v.FileBufferCount
	}).(pulumi.IntOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) FileNamePattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging) string {
		return v.FileNamePattern
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging) string {
		return v.Method
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) PurgeStagingData() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging) bool {
		return v.PurgeStagingData
	}).(pulumi.BoolOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging) string {
		return v.S3BucketName
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) S3BucketPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging) string {
		return v.S3BucketPath
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) S3BucketRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging) string {
		return v.S3BucketRegion
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3Staging) string {
		return v.SecretAccessKey
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption struct {
	DestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption `pulumi:"destinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption"`
	DestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption             GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption             `pulumi:"destinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption"`
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput) DestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption {
		return v.DestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption
	}).(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput) DestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryption) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption {
		return v.DestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption
	}).(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutput)
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption struct {
	EncryptionType   string `pulumi:"encryptionType"`
	KeyEncryptingKey string `pulumi:"keyEncryptingKey"`
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput) EncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption) string {
		return v.EncryptionType
	}).(pulumi.StringOutput)
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput) KeyEncryptingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryption) string {
		return v.KeyEncryptingKey
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption struct {
	EncryptionType string `pulumi:"encryptionType"`
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutput() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutput) EncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryption) string {
		return v.EncryptionType
	}).(pulumi.StringOutput)
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard struct {
	Method string `pulumi:"method"`
}

type GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutput struct{ *pulumi.OutputState }

func (GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard)(nil)).Elem()
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutput() GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutput) ToGetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutputWithContext(ctx context.Context) GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutput {
	return o
}

func (o GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandard) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetDestinationS3Configuration struct {
	// The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more \n\nhere\n\n.
	AccessKeyId string `pulumi:"accessKeyId"`
	// must be one of ["s3"]
	DestinationType string `pulumi:"destinationType"`
	// The pattern allows you to set the file-name format for the S3 staging file(s)
	FileNamePattern string `pulumi:"fileNamePattern"`
	// Format of the data output. See \n\nhere\n\n for more details
	Format GetDestinationS3ConfigurationFormat `pulumi:"format"`
	// The name of the S3 bucket. Read more \n\nhere\n\n.
	S3BucketName string `pulumi:"s3BucketName"`
	// Directory under the S3 bucket where data will be written. Read more \n\nhere\n\n
	S3BucketPath string `pulumi:"s3BucketPath"`
	// must be one of ["", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
	// The region of the S3 bucket. See \n\nhere\n\n for all region codes.
	S3BucketRegion string `pulumi:"s3BucketRegion"`
	// Your S3 endpoint url. Read more \n\nhere\n\n
	S3Endpoint string `pulumi:"s3Endpoint"`
	// Format string on how data will be organized inside the S3 bucket directory. Read more \n\nhere\n\n
	S3PathFormat string `pulumi:"s3PathFormat"`
	// The corresponding secret to the access key ID. Read more \n\nhere\n\n
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

type GetDestinationS3ConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3Configuration)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationOutput) ToGetDestinationS3ConfigurationOutput() GetDestinationS3ConfigurationOutput {
	return o
}

func (o GetDestinationS3ConfigurationOutput) ToGetDestinationS3ConfigurationOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationOutput {
	return o
}

// The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more \n\nhere\n\n.
func (o GetDestinationS3ConfigurationOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3Configuration) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// must be one of ["s3"]
func (o GetDestinationS3ConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3Configuration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// The pattern allows you to set the file-name format for the S3 staging file(s)
func (o GetDestinationS3ConfigurationOutput) FileNamePattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3Configuration) string { return v.FileNamePattern }).(pulumi.StringOutput)
}

// Format of the data output. See \n\nhere\n\n for more details
func (o GetDestinationS3ConfigurationOutput) Format() GetDestinationS3ConfigurationFormatOutput {
	return o.ApplyT(func(v GetDestinationS3Configuration) GetDestinationS3ConfigurationFormat { return v.Format }).(GetDestinationS3ConfigurationFormatOutput)
}

// The name of the S3 bucket. Read more \n\nhere\n\n.
func (o GetDestinationS3ConfigurationOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3Configuration) string { return v.S3BucketName }).(pulumi.StringOutput)
}

// Directory under the S3 bucket where data will be written. Read more \n\nhere\n\n
func (o GetDestinationS3ConfigurationOutput) S3BucketPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3Configuration) string { return v.S3BucketPath }).(pulumi.StringOutput)
}

// must be one of ["", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
// The region of the S3 bucket. See \n\nhere\n\n for all region codes.
func (o GetDestinationS3ConfigurationOutput) S3BucketRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3Configuration) string { return v.S3BucketRegion }).(pulumi.StringOutput)
}

// Your S3 endpoint url. Read more \n\nhere\n\n
func (o GetDestinationS3ConfigurationOutput) S3Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3Configuration) string { return v.S3Endpoint }).(pulumi.StringOutput)
}

// Format string on how data will be organized inside the S3 bucket directory. Read more \n\nhere\n\n
func (o GetDestinationS3ConfigurationOutput) S3PathFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3Configuration) string { return v.S3PathFormat }).(pulumi.StringOutput)
}

// The corresponding secret to the access key ID. Read more \n\nhere\n\n
func (o GetDestinationS3ConfigurationOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3Configuration) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormat struct {
	DestinationS3OutputFormatAvroApacheAvro                      GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro                      `pulumi:"destinationS3OutputFormatAvroApacheAvro"`
	DestinationS3OutputFormatCsvCommaSeparatedValues             GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues             `pulumi:"destinationS3OutputFormatCsvCommaSeparatedValues"`
	DestinationS3OutputFormatJsonLinesNewlineDelimitedJson       GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson       `pulumi:"destinationS3OutputFormatJsonLinesNewlineDelimitedJson"`
	DestinationS3OutputFormatParquetColumnarStorage              GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage              `pulumi:"destinationS3OutputFormatParquetColumnarStorage"`
	DestinationS3UpdateOutputFormatAvroApacheAvro                GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro                `pulumi:"destinationS3UpdateOutputFormatAvroApacheAvro"`
	DestinationS3UpdateOutputFormatCsvCommaSeparatedValues       GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues       `pulumi:"destinationS3UpdateOutputFormatCsvCommaSeparatedValues"`
	DestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson `pulumi:"destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson"`
	DestinationS3UpdateOutputFormatParquetColumnarStorage        GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage        `pulumi:"destinationS3UpdateOutputFormatParquetColumnarStorage"`
}

type GetDestinationS3ConfigurationFormatOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormat)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatOutput) ToGetDestinationS3ConfigurationFormatOutput() GetDestinationS3ConfigurationFormatOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatOutput) ToGetDestinationS3ConfigurationFormatOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatOutput) DestinationS3OutputFormatAvroApacheAvro() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormat) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro {
		return v.DestinationS3OutputFormatAvroApacheAvro
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput)
}

func (o GetDestinationS3ConfigurationFormatOutput) DestinationS3OutputFormatCsvCommaSeparatedValues() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormat) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues {
		return v.DestinationS3OutputFormatCsvCommaSeparatedValues
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput)
}

func (o GetDestinationS3ConfigurationFormatOutput) DestinationS3OutputFormatJsonLinesNewlineDelimitedJson() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormat) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson {
		return v.DestinationS3OutputFormatJsonLinesNewlineDelimitedJson
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput)
}

func (o GetDestinationS3ConfigurationFormatOutput) DestinationS3OutputFormatParquetColumnarStorage() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormat) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage {
		return v.DestinationS3OutputFormatParquetColumnarStorage
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput)
}

func (o GetDestinationS3ConfigurationFormatOutput) DestinationS3UpdateOutputFormatAvroApacheAvro() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormat) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro {
		return v.DestinationS3UpdateOutputFormatAvroApacheAvro
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput)
}

func (o GetDestinationS3ConfigurationFormatOutput) DestinationS3UpdateOutputFormatCsvCommaSeparatedValues() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormat) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues {
		return v.DestinationS3UpdateOutputFormatCsvCommaSeparatedValues
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput)
}

func (o GetDestinationS3ConfigurationFormatOutput) DestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormat) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson {
		return v.DestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput)
}

func (o GetDestinationS3ConfigurationFormatOutput) DestinationS3UpdateOutputFormatParquetColumnarStorage() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormat) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage {
		return v.DestinationS3UpdateOutputFormatParquetColumnarStorage
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro struct {
	CompressionCodec GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec `pulumi:"compressionCodec"`
	FormatType       string                                                                                     `pulumi:"formatType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput) CompressionCodec() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec {
		return v.CompressionCodec
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvro) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec struct {
	DestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2         GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2         `pulumi:"destinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2"`
	DestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate       GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate       `pulumi:"destinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate"`
	DestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression `pulumi:"destinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression"`
	DestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy        GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy        `pulumi:"destinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy"`
	DestinationS3OutputFormatAvroApacheAvroCompressionCodecXz            GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz            `pulumi:"destinationS3OutputFormatAvroApacheAvroCompressionCodecXz"`
	DestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard     GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard     `pulumi:"destinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2Output {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2 {
		return v.DestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2Output)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate {
		return v.DestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression {
		return v.DestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy {
		return v.DestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3OutputFormatAvroApacheAvroCompressionCodecXz() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz {
		return v.DestinationS3OutputFormatAvroApacheAvroCompressionCodecXz
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard {
		return v.DestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2 struct {
	Codec string `pulumi:"codec"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2Output struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2Output) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2Output() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2Output {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2Output) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2OutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2Output {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2Output) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate struct {
	Codec            string `pulumi:"codec"`
	CompressionLevel int    `pulumi:"compressionLevel"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput) CompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflate) int {
		return v.CompressionLevel
	}).(pulumi.IntOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression struct {
	Codec string `pulumi:"codec"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompression) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy struct {
	Codec string `pulumi:"codec"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappy) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz struct {
	Codec            string `pulumi:"codec"`
	CompressionLevel int    `pulumi:"compressionLevel"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput) CompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXz) int {
		return v.CompressionLevel
	}).(pulumi.IntOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard struct {
	Codec            string `pulumi:"codec"`
	CompressionLevel int    `pulumi:"compressionLevel"`
	IncludeChecksum  bool   `pulumi:"includeChecksum"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput) CompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard) int {
		return v.CompressionLevel
	}).(pulumi.IntOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput) IncludeChecksum() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandard) bool {
		return v.IncludeChecksum
	}).(pulumi.BoolOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues struct {
	Compression GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression `pulumi:"compression"`
	Flattening  string                                                                                         `pulumi:"flattening"`
	FormatType  string                                                                                         `pulumi:"formatType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput) Compression() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression {
		return v.Compression
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput) Flattening() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues) string {
		return v.Flattening
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValues) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression struct {
	DestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip          GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip          `pulumi:"destinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip"`
	DestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression `pulumi:"destinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput) DestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip {
		return v.DestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput) DestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompression) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression {
		return v.DestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzip) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompression) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson struct {
	Compression GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression `pulumi:"compression"`
	Flattening  string                                                                                               `pulumi:"flattening"`
	FormatType  string                                                                                               `pulumi:"formatType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput) Compression() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression {
		return v.Compression
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput) Flattening() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson) string {
		return v.Flattening
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJson) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression struct {
	DestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip          GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip          `pulumi:"destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"`
	DestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression `pulumi:"destinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) DestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip {
		return v.DestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) DestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompression) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression {
		return v.DestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression
	}).(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage struct {
	BlockSizeMb          int    `pulumi:"blockSizeMb"`
	CompressionCodec     string `pulumi:"compressionCodec"`
	DictionaryEncoding   bool   `pulumi:"dictionaryEncoding"`
	DictionaryPageSizeKb int    `pulumi:"dictionaryPageSizeKb"`
	FormatType           string `pulumi:"formatType"`
	MaxPaddingSizeMb     int    `pulumi:"maxPaddingSizeMb"`
	PageSizeKb           int    `pulumi:"pageSizeKb"`
}

type GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput() GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput) ToGetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput) BlockSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage) int {
		return v.BlockSizeMb
	}).(pulumi.IntOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput) CompressionCodec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage) string {
		return v.CompressionCodec
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput) DictionaryEncoding() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage) bool {
		return v.DictionaryEncoding
	}).(pulumi.BoolOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput) DictionaryPageSizeKb() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage) int {
		return v.DictionaryPageSizeKb
	}).(pulumi.IntOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput) MaxPaddingSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage) int {
		return v.MaxPaddingSizeMb
	}).(pulumi.IntOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput) PageSizeKb() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorage) int {
		return v.PageSizeKb
	}).(pulumi.IntOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro struct {
	CompressionCodec GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec `pulumi:"compressionCodec"`
	FormatType       string                                                                                           `pulumi:"formatType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput) CompressionCodec() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec {
		return v.CompressionCodec
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvro) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec struct {
	DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2         GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2         `pulumi:"destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2"`
	DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate       GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate       `pulumi:"destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate"`
	DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression `pulumi:"destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression"`
	DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy        GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy        `pulumi:"destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy"`
	DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz            GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz            `pulumi:"destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz"`
	DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard     GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard     `pulumi:"destinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2Output {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2 {
		return v.DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2Output)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate {
		return v.DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression {
		return v.DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy {
		return v.DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz {
		return v.DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput) DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodec) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard {
		return v.DestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2 struct {
	Codec string `pulumi:"codec"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2Output struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2Output) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2Output() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2Output {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2Output) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2OutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2Output {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2Output) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate struct {
	Codec            string `pulumi:"codec"`
	CompressionLevel int    `pulumi:"compressionLevel"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput) CompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflate) int {
		return v.CompressionLevel
	}).(pulumi.IntOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression struct {
	Codec string `pulumi:"codec"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompression) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy struct {
	Codec string `pulumi:"codec"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappy) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz struct {
	Codec            string `pulumi:"codec"`
	CompressionLevel int    `pulumi:"compressionLevel"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput) CompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXz) int {
		return v.CompressionLevel
	}).(pulumi.IntOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard struct {
	Codec            string `pulumi:"codec"`
	CompressionLevel int    `pulumi:"compressionLevel"`
	IncludeChecksum  bool   `pulumi:"includeChecksum"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput) Codec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard) string {
		return v.Codec
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput) CompressionLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard) int {
		return v.CompressionLevel
	}).(pulumi.IntOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput) IncludeChecksum() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandard) bool {
		return v.IncludeChecksum
	}).(pulumi.BoolOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues struct {
	Compression GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression `pulumi:"compression"`
	Flattening  string                                                                                               `pulumi:"flattening"`
	FormatType  string                                                                                               `pulumi:"formatType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput) Compression() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression {
		return v.Compression
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput) Flattening() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues) string {
		return v.Flattening
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValues) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression struct {
	DestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip          GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip          `pulumi:"destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip"`
	DestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression `pulumi:"destinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput) DestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip {
		return v.DestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput) DestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompression) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression {
		return v.DestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzip) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompression) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson struct {
	Compression GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression `pulumi:"compression"`
	Flattening  string                                                                                                     `pulumi:"flattening"`
	FormatType  string                                                                                                     `pulumi:"formatType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) Compression() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression {
		return v.Compression
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) Flattening() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson) string {
		return v.Flattening
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJson) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression struct {
	DestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip          GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip          `pulumi:"destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"`
	DestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression `pulumi:"destinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) DestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip {
		return v.DestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) DestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression {
		return v.DestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression
	}).(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage struct {
	BlockSizeMb          int    `pulumi:"blockSizeMb"`
	CompressionCodec     string `pulumi:"compressionCodec"`
	DictionaryEncoding   bool   `pulumi:"dictionaryEncoding"`
	DictionaryPageSizeKb int    `pulumi:"dictionaryPageSizeKb"`
	FormatType           string `pulumi:"formatType"`
	MaxPaddingSizeMb     int    `pulumi:"maxPaddingSizeMb"`
	PageSizeKb           int    `pulumi:"pageSizeKb"`
}

type GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput struct{ *pulumi.OutputState }

func (GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage)(nil)).Elem()
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput() GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput) ToGetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutputWithContext(ctx context.Context) GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput {
	return o
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput) BlockSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage) int {
		return v.BlockSizeMb
	}).(pulumi.IntOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput) CompressionCodec() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage) string {
		return v.CompressionCodec
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput) DictionaryEncoding() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage) bool {
		return v.DictionaryEncoding
	}).(pulumi.BoolOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput) DictionaryPageSizeKb() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage) int {
		return v.DictionaryPageSizeKb
	}).(pulumi.IntOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput) MaxPaddingSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage) int {
		return v.MaxPaddingSizeMb
	}).(pulumi.IntOutput)
}

func (o GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput) PageSizeKb() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorage) int {
		return v.PageSizeKb
	}).(pulumi.IntOutput)
}

type GetDestinationS3GlueConfiguration struct {
	// The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more \n\nhere\n\n.
	AccessKeyId string `pulumi:"accessKeyId"`
	// must be one of ["s3-glue"]
	DestinationType string `pulumi:"destinationType"`
	// The pattern allows you to set the file-name format for the S3 staging file(s)
	FileNamePattern string `pulumi:"fileNamePattern"`
	// Format of the data output. See \n\nhere\n\n for more details
	Format GetDestinationS3GlueConfigurationFormat `pulumi:"format"`
	// Name of the glue database for creating the tables, leave blank if no integration
	GlueDatabase string `pulumi:"glueDatabase"`
	// must be one of ["org.openx.data.jsonserde.JsonSerDe", "org.apache.hive.hcatalog.data.JsonSerDe"]
	// The library that your query engine will use for reading and writing data in your lake.
	GlueSerializationLibrary string `pulumi:"glueSerializationLibrary"`
	// The name of the S3 bucket. Read more \n\nhere\n\n.
	S3BucketName string `pulumi:"s3BucketName"`
	// Directory under the S3 bucket where data will be written. Read more \n\nhere\n\n
	S3BucketPath string `pulumi:"s3BucketPath"`
	// must be one of ["", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
	// The region of the S3 bucket. See \n\nhere\n\n for all region codes.
	S3BucketRegion string `pulumi:"s3BucketRegion"`
	// Your S3 endpoint url. Read more \n\nhere\n\n
	S3Endpoint string `pulumi:"s3Endpoint"`
	// Format string on how data will be organized inside the S3 bucket directory. Read more \n\nhere\n\n
	S3PathFormat string `pulumi:"s3PathFormat"`
	// The corresponding secret to the access key ID. Read more \n\nhere\n\n
	SecretAccessKey string `pulumi:"secretAccessKey"`
}

type GetDestinationS3GlueConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationS3GlueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3GlueConfiguration)(nil)).Elem()
}

func (o GetDestinationS3GlueConfigurationOutput) ToGetDestinationS3GlueConfigurationOutput() GetDestinationS3GlueConfigurationOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationOutput) ToGetDestinationS3GlueConfigurationOutputWithContext(ctx context.Context) GetDestinationS3GlueConfigurationOutput {
	return o
}

// The access key ID to access the S3 bucket. Airbyte requires Read and Write permissions to the given bucket. Read more \n\nhere\n\n.
func (o GetDestinationS3GlueConfigurationOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// must be one of ["s3-glue"]
func (o GetDestinationS3GlueConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// The pattern allows you to set the file-name format for the S3 staging file(s)
func (o GetDestinationS3GlueConfigurationOutput) FileNamePattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) string { return v.FileNamePattern }).(pulumi.StringOutput)
}

// Format of the data output. See \n\nhere\n\n for more details
func (o GetDestinationS3GlueConfigurationOutput) Format() GetDestinationS3GlueConfigurationFormatOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) GetDestinationS3GlueConfigurationFormat { return v.Format }).(GetDestinationS3GlueConfigurationFormatOutput)
}

// Name of the glue database for creating the tables, leave blank if no integration
func (o GetDestinationS3GlueConfigurationOutput) GlueDatabase() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) string { return v.GlueDatabase }).(pulumi.StringOutput)
}

// must be one of ["org.openx.data.jsonserde.JsonSerDe", "org.apache.hive.hcatalog.data.JsonSerDe"]
// The library that your query engine will use for reading and writing data in your lake.
func (o GetDestinationS3GlueConfigurationOutput) GlueSerializationLibrary() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) string { return v.GlueSerializationLibrary }).(pulumi.StringOutput)
}

// The name of the S3 bucket. Read more \n\nhere\n\n.
func (o GetDestinationS3GlueConfigurationOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) string { return v.S3BucketName }).(pulumi.StringOutput)
}

// Directory under the S3 bucket where data will be written. Read more \n\nhere\n\n
func (o GetDestinationS3GlueConfigurationOutput) S3BucketPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) string { return v.S3BucketPath }).(pulumi.StringOutput)
}

// must be one of ["", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
// The region of the S3 bucket. See \n\nhere\n\n for all region codes.
func (o GetDestinationS3GlueConfigurationOutput) S3BucketRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) string { return v.S3BucketRegion }).(pulumi.StringOutput)
}

// Your S3 endpoint url. Read more \n\nhere\n\n
func (o GetDestinationS3GlueConfigurationOutput) S3Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) string { return v.S3Endpoint }).(pulumi.StringOutput)
}

// Format string on how data will be organized inside the S3 bucket directory. Read more \n\nhere\n\n
func (o GetDestinationS3GlueConfigurationOutput) S3PathFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) string { return v.S3PathFormat }).(pulumi.StringOutput)
}

// The corresponding secret to the access key ID. Read more \n\nhere\n\n
func (o GetDestinationS3GlueConfigurationOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfiguration) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

type GetDestinationS3GlueConfigurationFormat struct {
	DestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson       GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson       `pulumi:"destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson"`
	DestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson `pulumi:"destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson"`
}

type GetDestinationS3GlueConfigurationFormatOutput struct{ *pulumi.OutputState }

func (GetDestinationS3GlueConfigurationFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3GlueConfigurationFormat)(nil)).Elem()
}

func (o GetDestinationS3GlueConfigurationFormatOutput) ToGetDestinationS3GlueConfigurationFormatOutput() GetDestinationS3GlueConfigurationFormatOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatOutput) ToGetDestinationS3GlueConfigurationFormatOutputWithContext(ctx context.Context) GetDestinationS3GlueConfigurationFormatOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatOutput) DestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson() GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormat) GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson {
		return v.DestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson
	}).(GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput)
}

func (o GetDestinationS3GlueConfigurationFormatOutput) DestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson() GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormat) GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson {
		return v.DestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson
	}).(GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput)
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson struct {
	Compression GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression `pulumi:"compression"`
	Flattening  string                                                                                                       `pulumi:"flattening"`
	FormatType  string                                                                                                       `pulumi:"formatType"`
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput struct{ *pulumi.OutputState }

func (GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson)(nil)).Elem()
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput() GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutputWithContext(ctx context.Context) GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput) Compression() GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson) GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression {
		return v.Compression
	}).(GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput)
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput) Flattening() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson) string {
		return v.Flattening
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJson) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression struct {
	DestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip          GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip          `pulumi:"destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"`
	DestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression `pulumi:"destinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"`
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression)(nil)).Elem()
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput() GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutputWithContext(ctx context.Context) GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) DestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip() GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression) GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip {
		return v.DestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip
	}).(GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput)
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) DestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression() GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompression) GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression {
		return v.DestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression
	}).(GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput)
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput struct{ *pulumi.OutputState }

func (GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip)(nil)).Elem()
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput() GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutputWithContext(ctx context.Context) GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression)(nil)).Elem()
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput() GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutputWithContext(ctx context.Context) GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson struct {
	Compression GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression `pulumi:"compression"`
	Flattening  string                                                                                                             `pulumi:"flattening"`
	FormatType  string                                                                                                             `pulumi:"formatType"`
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput struct{ *pulumi.OutputState }

func (GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson)(nil)).Elem()
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput() GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutputWithContext(ctx context.Context) GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) Compression() GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson) GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression {
		return v.Compression
	}).(GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput)
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) Flattening() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson) string {
		return v.Flattening
	}).(pulumi.StringOutput)
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJson) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression struct {
	DestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip          GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip          `pulumi:"destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip"`
	DestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression `pulumi:"destinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression"`
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression)(nil)).Elem()
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput() GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutputWithContext(ctx context.Context) GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) DestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip() GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression) GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip {
		return v.DestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip
	}).(GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput)
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput) DestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression() GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompression) GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression {
		return v.DestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression
	}).(GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput)
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput struct{ *pulumi.OutputState }

func (GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip)(nil)).Elem()
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput() GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutputWithContext(ctx context.Context) GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzip) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression struct {
	CompressionType string `pulumi:"compressionType"`
}

type GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput struct{ *pulumi.OutputState }

func (GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression)(nil)).Elem()
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput() GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) ToGetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutputWithContext(ctx context.Context) GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput {
	return o
}

func (o GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput) CompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompression) string {
		return v.CompressionType
	}).(pulumi.StringOutput)
}

type GetDestinationSftpJsonConfiguration struct {
	// Path to the directory where json files will be written.
	DestinationPath string `pulumi:"destinationPath"`
	// must be one of ["sftp-json"]
	DestinationType string `pulumi:"destinationType"`
	// Hostname of the SFTP server.
	Host string `pulumi:"host"`
	// Password associated with the username.
	Password string `pulumi:"password"`
	// Port of the SFTP server.
	Port int `pulumi:"port"`
	// Username to use to access the SFTP server.
	Username string `pulumi:"username"`
}

type GetDestinationSftpJsonConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationSftpJsonConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationSftpJsonConfiguration)(nil)).Elem()
}

func (o GetDestinationSftpJsonConfigurationOutput) ToGetDestinationSftpJsonConfigurationOutput() GetDestinationSftpJsonConfigurationOutput {
	return o
}

func (o GetDestinationSftpJsonConfigurationOutput) ToGetDestinationSftpJsonConfigurationOutputWithContext(ctx context.Context) GetDestinationSftpJsonConfigurationOutput {
	return o
}

// Path to the directory where json files will be written.
func (o GetDestinationSftpJsonConfigurationOutput) DestinationPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSftpJsonConfiguration) string { return v.DestinationPath }).(pulumi.StringOutput)
}

// must be one of ["sftp-json"]
func (o GetDestinationSftpJsonConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSftpJsonConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Hostname of the SFTP server.
func (o GetDestinationSftpJsonConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSftpJsonConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Password associated with the username.
func (o GetDestinationSftpJsonConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSftpJsonConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Port of the SFTP server.
func (o GetDestinationSftpJsonConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationSftpJsonConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// Username to use to access the SFTP server.
func (o GetDestinationSftpJsonConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSftpJsonConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetDestinationSnowflakeConfiguration struct {
	Credentials GetDestinationSnowflakeConfigurationCredentials `pulumi:"credentials"`
	// Enter the name of the \n\ndatabase\n\n you want to sync data into
	Database string `pulumi:"database"`
	// must be one of ["snowflake"]
	DestinationType string `pulumi:"destinationType"`
	// Enter your Snowflake account's \n\nlocator\n\n (in the format \n\n.\n\n.\n\n.snowflakecomputing.com)
	Host string `pulumi:"host"`
	// Enter the additional properties to pass to the JDBC URL string when connecting to the database (formatted as key=value pairs separated by the symbol &). Example: key1=value1&key2=value2&key3=value3
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// (Beta) The schema to write raw tables into
	RawDataSchema string `pulumi:"rawDataSchema"`
	// Enter the \n\nrole\n\n that you want to use to access Snowflake
	Role string `pulumi:"role"`
	// Enter the name of the default \n\nschema\n\n
	Schema string `pulumi:"schema"`
	// (Beta) Use \n\nDestinations V2\n\n. Contact Airbyte Support to participate in the beta program.
	Use1s1tFormat bool `pulumi:"use1s1tFormat"`
	// Enter the name of the user you want to use to access the database
	Username string `pulumi:"username"`
	// Enter the name of the \n\nwarehouse\n\n that you want to sync data into
	Warehouse string `pulumi:"warehouse"`
}

type GetDestinationSnowflakeConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationSnowflakeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationSnowflakeConfiguration)(nil)).Elem()
}

func (o GetDestinationSnowflakeConfigurationOutput) ToGetDestinationSnowflakeConfigurationOutput() GetDestinationSnowflakeConfigurationOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationOutput) ToGetDestinationSnowflakeConfigurationOutputWithContext(ctx context.Context) GetDestinationSnowflakeConfigurationOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationOutput) Credentials() GetDestinationSnowflakeConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfiguration) GetDestinationSnowflakeConfigurationCredentials {
		return v.Credentials
	}).(GetDestinationSnowflakeConfigurationCredentialsOutput)
}

// Enter the name of the \n\ndatabase\n\n you want to sync data into
func (o GetDestinationSnowflakeConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// must be one of ["snowflake"]
func (o GetDestinationSnowflakeConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Enter your Snowflake account's \n\nlocator\n\n (in the format \n\n.\n\n.\n\n.snowflakecomputing.com)
func (o GetDestinationSnowflakeConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Enter the additional properties to pass to the JDBC URL string when connecting to the database (formatted as key=value pairs separated by the symbol &). Example: key1=value1&key2=value2&key3=value3
func (o GetDestinationSnowflakeConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// (Beta) The schema to write raw tables into
func (o GetDestinationSnowflakeConfigurationOutput) RawDataSchema() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfiguration) string { return v.RawDataSchema }).(pulumi.StringOutput)
}

// Enter the \n\nrole\n\n that you want to use to access Snowflake
func (o GetDestinationSnowflakeConfigurationOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfiguration) string { return v.Role }).(pulumi.StringOutput)
}

// Enter the name of the default \n\nschema\n\n
func (o GetDestinationSnowflakeConfigurationOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfiguration) string { return v.Schema }).(pulumi.StringOutput)
}

// (Beta) Use \n\nDestinations V2\n\n. Contact Airbyte Support to participate in the beta program.
func (o GetDestinationSnowflakeConfigurationOutput) Use1s1tFormat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfiguration) bool { return v.Use1s1tFormat }).(pulumi.BoolOutput)
}

// Enter the name of the user you want to use to access the database
func (o GetDestinationSnowflakeConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

// Enter the name of the \n\nwarehouse\n\n that you want to sync data into
func (o GetDestinationSnowflakeConfigurationOutput) Warehouse() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfiguration) string { return v.Warehouse }).(pulumi.StringOutput)
}

type GetDestinationSnowflakeConfigurationCredentials struct {
	DestinationSnowflakeAuthorizationMethodKeyPairAuthentication       GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication       `pulumi:"destinationSnowflakeAuthorizationMethodKeyPairAuthentication"`
	DestinationSnowflakeAuthorizationMethodOAuth20                     GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20                     `pulumi:"destinationSnowflakeAuthorizationMethodOAuth20"`
	DestinationSnowflakeAuthorizationMethodUsernameAndPassword         GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword         `pulumi:"destinationSnowflakeAuthorizationMethodUsernameAndPassword"`
	DestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication `pulumi:"destinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication"`
	DestinationSnowflakeUpdateAuthorizationMethodOAuth20               GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20               `pulumi:"destinationSnowflakeUpdateAuthorizationMethodOAuth20"`
	DestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword   GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword   `pulumi:"destinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword"`
}

type GetDestinationSnowflakeConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetDestinationSnowflakeConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationSnowflakeConfigurationCredentials)(nil)).Elem()
}

func (o GetDestinationSnowflakeConfigurationCredentialsOutput) ToGetDestinationSnowflakeConfigurationCredentialsOutput() GetDestinationSnowflakeConfigurationCredentialsOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsOutput) ToGetDestinationSnowflakeConfigurationCredentialsOutputWithContext(ctx context.Context) GetDestinationSnowflakeConfigurationCredentialsOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsOutput) DestinationSnowflakeAuthorizationMethodKeyPairAuthentication() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentials) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication {
		return v.DestinationSnowflakeAuthorizationMethodKeyPairAuthentication
	}).(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsOutput) DestinationSnowflakeAuthorizationMethodOAuth20() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentials) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20 {
		return v.DestinationSnowflakeAuthorizationMethodOAuth20
	}).(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output)
}

func (o GetDestinationSnowflakeConfigurationCredentialsOutput) DestinationSnowflakeAuthorizationMethodUsernameAndPassword() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentials) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword {
		return v.DestinationSnowflakeAuthorizationMethodUsernameAndPassword
	}).(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsOutput) DestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentials) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication {
		return v.DestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication
	}).(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsOutput) DestinationSnowflakeUpdateAuthorizationMethodOAuth20() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentials) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20 {
		return v.DestinationSnowflakeUpdateAuthorizationMethodOAuth20
	}).(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output)
}

func (o GetDestinationSnowflakeConfigurationCredentialsOutput) DestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentials) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword {
		return v.DestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword
	}).(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput)
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication struct {
	AuthType           string `pulumi:"authType"`
	PrivateKey         string `pulumi:"privateKey"`
	PrivateKeyPassword string `pulumi:"privateKeyPassword"`
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication)(nil)).Elem()
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutputWithContext(ctx context.Context) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication) string {
		return v.PrivateKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput) PrivateKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthentication) string {
		return v.PrivateKeyPassword
	}).(pulumi.StringOutput)
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword struct {
	AuthType string `pulumi:"authType"`
	Password string `pulumi:"password"`
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput struct{ *pulumi.OutputState }

func (GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword)(nil)).Elem()
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutputWithContext(ctx context.Context) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPassword) string {
		return v.Password
	}).(pulumi.StringOutput)
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication struct {
	AuthType           string `pulumi:"authType"`
	PrivateKey         string `pulumi:"privateKey"`
	PrivateKeyPassword string `pulumi:"privateKeyPassword"`
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication)(nil)).Elem()
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutputWithContext(ctx context.Context) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication) string {
		return v.PrivateKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput) PrivateKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthentication) string {
		return v.PrivateKeyPassword
	}).(pulumi.StringOutput)
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword struct {
	AuthType string `pulumi:"authType"`
	Password string `pulumi:"password"`
}

type GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput struct{ *pulumi.OutputState }

func (GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword)(nil)).Elem()
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput() GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput) ToGetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutputWithContext(ctx context.Context) GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput {
	return o
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPassword) string {
		return v.Password
	}).(pulumi.StringOutput)
}

type GetDestinationTimeplusConfiguration struct {
	// Personal API key
	Apikey string `pulumi:"apikey"`
	// must be one of ["timeplus"]
	DestinationType string `pulumi:"destinationType"`
	// Timeplus workspace endpoint
	Endpoint string `pulumi:"endpoint"`
}

type GetDestinationTimeplusConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationTimeplusConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationTimeplusConfiguration)(nil)).Elem()
}

func (o GetDestinationTimeplusConfigurationOutput) ToGetDestinationTimeplusConfigurationOutput() GetDestinationTimeplusConfigurationOutput {
	return o
}

func (o GetDestinationTimeplusConfigurationOutput) ToGetDestinationTimeplusConfigurationOutputWithContext(ctx context.Context) GetDestinationTimeplusConfigurationOutput {
	return o
}

// Personal API key
func (o GetDestinationTimeplusConfigurationOutput) Apikey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationTimeplusConfiguration) string { return v.Apikey }).(pulumi.StringOutput)
}

// must be one of ["timeplus"]
func (o GetDestinationTimeplusConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationTimeplusConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Timeplus workspace endpoint
func (o GetDestinationTimeplusConfigurationOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationTimeplusConfiguration) string { return v.Endpoint }).(pulumi.StringOutput)
}

type GetDestinationTypesenseConfiguration struct {
	// Typesense API Key
	ApiKey string `pulumi:"apiKey"`
	// How many documents should be imported together. Default 1000
	BatchSize string `pulumi:"batchSize"`
	// must be one of ["typesense"]
	DestinationType string `pulumi:"destinationType"`
	// Hostname of the Typesense instance without protocol.
	Host string `pulumi:"host"`
	// Port of the Typesense instance. Ex: 8108, 80, 443. Default is 443
	Port string `pulumi:"port"`
	// Protocol of the Typesense instance. Ex: http or https. Default is https
	Protocol string `pulumi:"protocol"`
}

type GetDestinationTypesenseConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationTypesenseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationTypesenseConfiguration)(nil)).Elem()
}

func (o GetDestinationTypesenseConfigurationOutput) ToGetDestinationTypesenseConfigurationOutput() GetDestinationTypesenseConfigurationOutput {
	return o
}

func (o GetDestinationTypesenseConfigurationOutput) ToGetDestinationTypesenseConfigurationOutputWithContext(ctx context.Context) GetDestinationTypesenseConfigurationOutput {
	return o
}

// Typesense API Key
func (o GetDestinationTypesenseConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationTypesenseConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// How many documents should be imported together. Default 1000
func (o GetDestinationTypesenseConfigurationOutput) BatchSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationTypesenseConfiguration) string { return v.BatchSize }).(pulumi.StringOutput)
}

// must be one of ["typesense"]
func (o GetDestinationTypesenseConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationTypesenseConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Hostname of the Typesense instance without protocol.
func (o GetDestinationTypesenseConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationTypesenseConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Port of the Typesense instance. Ex: 8108, 80, 443. Default is 443
func (o GetDestinationTypesenseConfigurationOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationTypesenseConfiguration) string { return v.Port }).(pulumi.StringOutput)
}

// Protocol of the Typesense instance. Ex: http or https. Default is https
func (o GetDestinationTypesenseConfigurationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationTypesenseConfiguration) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetDestinationVerticaConfiguration struct {
	// Name of the database.
	Database string `pulumi:"database"`
	// must be one of ["vertica"]
	DestinationType string `pulumi:"destinationType"`
	// Hostname of the database.
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// Password associated with the username.
	Password string `pulumi:"password"`
	// Port of the database.
	Port int `pulumi:"port"`
	// Schema for vertica destination
	Schema string `pulumi:"schema"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetDestinationVerticaConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// Username to use to access the database.
	Username string `pulumi:"username"`
}

type GetDestinationVerticaConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationVerticaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationVerticaConfiguration)(nil)).Elem()
}

func (o GetDestinationVerticaConfigurationOutput) ToGetDestinationVerticaConfigurationOutput() GetDestinationVerticaConfigurationOutput {
	return o
}

func (o GetDestinationVerticaConfigurationOutput) ToGetDestinationVerticaConfigurationOutputWithContext(ctx context.Context) GetDestinationVerticaConfigurationOutput {
	return o
}

// Name of the database.
func (o GetDestinationVerticaConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// must be one of ["vertica"]
func (o GetDestinationVerticaConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Hostname of the database.
func (o GetDestinationVerticaConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
func (o GetDestinationVerticaConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// Password associated with the username.
func (o GetDestinationVerticaConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Port of the database.
func (o GetDestinationVerticaConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// Schema for vertica destination
func (o GetDestinationVerticaConfigurationOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfiguration) string { return v.Schema }).(pulumi.StringOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetDestinationVerticaConfigurationOutput) TunnelMethod() GetDestinationVerticaConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfiguration) GetDestinationVerticaConfigurationTunnelMethod {
		return v.TunnelMethod
	}).(GetDestinationVerticaConfigurationTunnelMethodOutput)
}

// Username to use to access the database.
func (o GetDestinationVerticaConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetDestinationVerticaConfigurationTunnelMethod struct {
	DestinationVerticaSshTunnelMethodNoTunnel                     GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel                     `pulumi:"destinationVerticaSshTunnelMethodNoTunnel"`
	DestinationVerticaSshTunnelMethodPasswordAuthentication       GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication       `pulumi:"destinationVerticaSshTunnelMethodPasswordAuthentication"`
	DestinationVerticaSshTunnelMethodSshKeyAuthentication         GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication         `pulumi:"destinationVerticaSshTunnelMethodSshKeyAuthentication"`
	DestinationVerticaUpdateSshTunnelMethodNoTunnel               GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel               `pulumi:"destinationVerticaUpdateSshTunnelMethodNoTunnel"`
	DestinationVerticaUpdateSshTunnelMethodPasswordAuthentication GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication `pulumi:"destinationVerticaUpdateSshTunnelMethodPasswordAuthentication"`
	DestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication   GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"destinationVerticaUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetDestinationVerticaConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetDestinationVerticaConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationVerticaConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetDestinationVerticaConfigurationTunnelMethodOutput) ToGetDestinationVerticaConfigurationTunnelMethodOutput() GetDestinationVerticaConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodOutput) ToGetDestinationVerticaConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetDestinationVerticaConfigurationTunnelMethodOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodOutput) DestinationVerticaSshTunnelMethodNoTunnel() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethod) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel {
		return v.DestinationVerticaSshTunnelMethodNoTunnel
	}).(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodOutput) DestinationVerticaSshTunnelMethodPasswordAuthentication() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethod) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication {
		return v.DestinationVerticaSshTunnelMethodPasswordAuthentication
	}).(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodOutput) DestinationVerticaSshTunnelMethodSshKeyAuthentication() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethod) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication {
		return v.DestinationVerticaSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodOutput) DestinationVerticaUpdateSshTunnelMethodNoTunnel() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethod) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel {
		return v.DestinationVerticaUpdateSshTunnelMethodNoTunnel
	}).(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodOutput) DestinationVerticaUpdateSshTunnelMethodPasswordAuthentication() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethod) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication {
		return v.DestinationVerticaUpdateSshTunnelMethodPasswordAuthentication
	}).(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodOutput) DestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethod) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication {
		return v.DestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutput() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutput() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetDestinationXataConfiguration struct {
	// API Key to connect.
	ApiKey string `pulumi:"apiKey"`
	// URL pointing to your workspace.
	DbUrl string `pulumi:"dbUrl"`
	// must be one of ["xata"]
	DestinationType string `pulumi:"destinationType"`
}

type GetDestinationXataConfigurationOutput struct{ *pulumi.OutputState }

func (GetDestinationXataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDestinationXataConfiguration)(nil)).Elem()
}

func (o GetDestinationXataConfigurationOutput) ToGetDestinationXataConfigurationOutput() GetDestinationXataConfigurationOutput {
	return o
}

func (o GetDestinationXataConfigurationOutput) ToGetDestinationXataConfigurationOutputWithContext(ctx context.Context) GetDestinationXataConfigurationOutput {
	return o
}

// API Key to connect.
func (o GetDestinationXataConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationXataConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// URL pointing to your workspace.
func (o GetDestinationXataConfigurationOutput) DbUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationXataConfiguration) string { return v.DbUrl }).(pulumi.StringOutput)
}

// must be one of ["xata"]
func (o GetDestinationXataConfigurationOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDestinationXataConfiguration) string { return v.DestinationType }).(pulumi.StringOutput)
}

type GetSourceAhaConfiguration struct {
	// API Key
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["aha"]
	SourceType string `pulumi:"sourceType"`
	// URL
	Url string `pulumi:"url"`
}

type GetSourceAhaConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAhaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAhaConfiguration)(nil)).Elem()
}

func (o GetSourceAhaConfigurationOutput) ToGetSourceAhaConfigurationOutput() GetSourceAhaConfigurationOutput {
	return o
}

func (o GetSourceAhaConfigurationOutput) ToGetSourceAhaConfigurationOutputWithContext(ctx context.Context) GetSourceAhaConfigurationOutput {
	return o
}

// API Key
func (o GetSourceAhaConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAhaConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["aha"]
func (o GetSourceAhaConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAhaConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// URL
func (o GetSourceAhaConfigurationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAhaConfiguration) string { return v.Url }).(pulumi.StringOutput)
}

type GetSourceAircallConfiguration struct {
	// App ID found at settings https://dashboard.aircall.io/integrations/api-keys
	ApiId string `pulumi:"apiId"`
	// App token found at settings (Ref- https://dashboard.aircall.io/integrations/api-keys)
	ApiToken string `pulumi:"apiToken"`
	// must be one of ["aircall"]
	SourceType string `pulumi:"sourceType"`
	// Date time filter for incremental filter, Specify which date to extract from.
	StartDate string `pulumi:"startDate"`
}

type GetSourceAircallConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAircallConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAircallConfiguration)(nil)).Elem()
}

func (o GetSourceAircallConfigurationOutput) ToGetSourceAircallConfigurationOutput() GetSourceAircallConfigurationOutput {
	return o
}

func (o GetSourceAircallConfigurationOutput) ToGetSourceAircallConfigurationOutputWithContext(ctx context.Context) GetSourceAircallConfigurationOutput {
	return o
}

// App ID found at settings https://dashboard.aircall.io/integrations/api-keys
func (o GetSourceAircallConfigurationOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAircallConfiguration) string { return v.ApiId }).(pulumi.StringOutput)
}

// App token found at settings (Ref- https://dashboard.aircall.io/integrations/api-keys)
func (o GetSourceAircallConfigurationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAircallConfiguration) string { return v.ApiToken }).(pulumi.StringOutput)
}

// must be one of ["aircall"]
func (o GetSourceAircallConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAircallConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Date time filter for incremental filter, Specify which date to extract from.
func (o GetSourceAircallConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAircallConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceAirtableConfiguration struct {
	Credentials GetSourceAirtableConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["airtable"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceAirtableConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAirtableConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAirtableConfiguration)(nil)).Elem()
}

func (o GetSourceAirtableConfigurationOutput) ToGetSourceAirtableConfigurationOutput() GetSourceAirtableConfigurationOutput {
	return o
}

func (o GetSourceAirtableConfigurationOutput) ToGetSourceAirtableConfigurationOutputWithContext(ctx context.Context) GetSourceAirtableConfigurationOutput {
	return o
}

func (o GetSourceAirtableConfigurationOutput) Credentials() GetSourceAirtableConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceAirtableConfiguration) GetSourceAirtableConfigurationCredentials { return v.Credentials }).(GetSourceAirtableConfigurationCredentialsOutput)
}

// must be one of ["airtable"]
func (o GetSourceAirtableConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceAirtableConfigurationCredentials struct {
	SourceAirtableAuthenticationOAuth20                   GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20                   `pulumi:"sourceAirtableAuthenticationOAuth20"`
	SourceAirtableAuthenticationPersonalAccessToken       GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken       `pulumi:"sourceAirtableAuthenticationPersonalAccessToken"`
	SourceAirtableUpdateAuthenticationOAuth20             GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20             `pulumi:"sourceAirtableUpdateAuthenticationOAuth20"`
	SourceAirtableUpdateAuthenticationPersonalAccessToken GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken `pulumi:"sourceAirtableUpdateAuthenticationPersonalAccessToken"`
}

type GetSourceAirtableConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceAirtableConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAirtableConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceAirtableConfigurationCredentialsOutput) ToGetSourceAirtableConfigurationCredentialsOutput() GetSourceAirtableConfigurationCredentialsOutput {
	return o
}

func (o GetSourceAirtableConfigurationCredentialsOutput) ToGetSourceAirtableConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceAirtableConfigurationCredentialsOutput {
	return o
}

func (o GetSourceAirtableConfigurationCredentialsOutput) SourceAirtableAuthenticationOAuth20() GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentials) GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20 {
		return v.SourceAirtableAuthenticationOAuth20
	}).(GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output)
}

func (o GetSourceAirtableConfigurationCredentialsOutput) SourceAirtableAuthenticationPersonalAccessToken() GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentials) GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken {
		return v.SourceAirtableAuthenticationPersonalAccessToken
	}).(GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput)
}

func (o GetSourceAirtableConfigurationCredentialsOutput) SourceAirtableUpdateAuthenticationOAuth20() GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentials) GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20 {
		return v.SourceAirtableUpdateAuthenticationOAuth20
	}).(GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output)
}

func (o GetSourceAirtableConfigurationCredentialsOutput) SourceAirtableUpdateAuthenticationPersonalAccessToken() GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentials) GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken {
		return v.SourceAirtableUpdateAuthenticationPersonalAccessToken
	}).(GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput)
}

type GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthMethod      string `pulumi:"authMethod"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output) ToGetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output() GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output {
	return o
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output) ToGetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output {
	return o
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken struct {
	ApiKey     string `pulumi:"apiKey"`
	AuthMethod string `pulumi:"authMethod"`
}

type GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken)(nil)).Elem()
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput) ToGetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput() GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput {
	return o
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput) ToGetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutputWithContext(ctx context.Context) GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput {
	return o
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessToken) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

type GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthMethod      string `pulumi:"authMethod"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output) ToGetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output() GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output) ToGetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken struct {
	ApiKey     string `pulumi:"apiKey"`
	AuthMethod string `pulumi:"authMethod"`
}

type GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken)(nil)).Elem()
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput) ToGetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput() GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput {
	return o
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput) ToGetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutputWithContext(ctx context.Context) GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput {
	return o
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

func (o GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessToken) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfiguration struct {
	// Name of the database.
	Database string `pulumi:"database"`
	// Hostname of the database.
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about \n\nJDBC URL parameters\n\n.
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// Password associated with the username.
	Password string `pulumi:"password"`
	// Port of the database.
	Port int `pulumi:"port"`
	// Replication method for extracting data from the database.
	ReplicationMethod GetSourceAlloydbConfigurationReplicationMethod `pulumi:"replicationMethod"`
	// The list of schemas (case sensitive) to sync from. Defaults to public.
	Schemas []string `pulumi:"schemas"`
	// must be one of ["alloydb"]
	SourceType string `pulumi:"sourceType"`
	// SSL connection modes.
	// Read more \n\n in the docs\n\n.
	SslMode GetSourceAlloydbConfigurationSslMode `pulumi:"sslMode"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetSourceAlloydbConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// Username to access the database.
	Username string `pulumi:"username"`
}

type GetSourceAlloydbConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfiguration)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationOutput) ToGetSourceAlloydbConfigurationOutput() GetSourceAlloydbConfigurationOutput {
	return o
}

func (o GetSourceAlloydbConfigurationOutput) ToGetSourceAlloydbConfigurationOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationOutput {
	return o
}

// Name of the database.
func (o GetSourceAlloydbConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// Hostname of the database.
func (o GetSourceAlloydbConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about \n\nJDBC URL parameters\n\n.
func (o GetSourceAlloydbConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// Password associated with the username.
func (o GetSourceAlloydbConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Port of the database.
func (o GetSourceAlloydbConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// Replication method for extracting data from the database.
func (o GetSourceAlloydbConfigurationOutput) ReplicationMethod() GetSourceAlloydbConfigurationReplicationMethodOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfiguration) GetSourceAlloydbConfigurationReplicationMethod {
		return v.ReplicationMethod
	}).(GetSourceAlloydbConfigurationReplicationMethodOutput)
}

// The list of schemas (case sensitive) to sync from. Defaults to public.
func (o GetSourceAlloydbConfigurationOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfiguration) []string { return v.Schemas }).(pulumi.StringArrayOutput)
}

// must be one of ["alloydb"]
func (o GetSourceAlloydbConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// SSL connection modes.
// Read more \n\n in the docs\n\n.
func (o GetSourceAlloydbConfigurationOutput) SslMode() GetSourceAlloydbConfigurationSslModeOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfiguration) GetSourceAlloydbConfigurationSslMode { return v.SslMode }).(GetSourceAlloydbConfigurationSslModeOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetSourceAlloydbConfigurationOutput) TunnelMethod() GetSourceAlloydbConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfiguration) GetSourceAlloydbConfigurationTunnelMethod { return v.TunnelMethod }).(GetSourceAlloydbConfigurationTunnelMethodOutput)
}

// Username to access the database.
func (o GetSourceAlloydbConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationReplicationMethod struct {
	SourceAlloydbReplicationMethodLogicalReplicationCdc       GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc       `pulumi:"sourceAlloydbReplicationMethodLogicalReplicationCdc"`
	SourceAlloydbReplicationMethodStandard                    GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard                    `pulumi:"sourceAlloydbReplicationMethodStandard"`
	SourceAlloydbReplicationMethodStandardXmin                GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin                `pulumi:"sourceAlloydbReplicationMethodStandardXmin"`
	SourceAlloydbUpdateReplicationMethodLogicalReplicationCdc GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc `pulumi:"sourceAlloydbUpdateReplicationMethodLogicalReplicationCdc"`
	SourceAlloydbUpdateReplicationMethodStandard              GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard              `pulumi:"sourceAlloydbUpdateReplicationMethodStandard"`
	SourceAlloydbUpdateReplicationMethodStandardXmin          GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin          `pulumi:"sourceAlloydbUpdateReplicationMethodStandardXmin"`
}

type GetSourceAlloydbConfigurationReplicationMethodOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationReplicationMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationReplicationMethod)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationReplicationMethodOutput) ToGetSourceAlloydbConfigurationReplicationMethodOutput() GetSourceAlloydbConfigurationReplicationMethodOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodOutput) ToGetSourceAlloydbConfigurationReplicationMethodOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationReplicationMethodOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodOutput) SourceAlloydbReplicationMethodLogicalReplicationCdc() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethod) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc {
		return v.SourceAlloydbReplicationMethodLogicalReplicationCdc
	}).(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodOutput) SourceAlloydbReplicationMethodStandard() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethod) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard {
		return v.SourceAlloydbReplicationMethodStandard
	}).(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodOutput) SourceAlloydbReplicationMethodStandardXmin() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethod) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin {
		return v.SourceAlloydbReplicationMethodStandardXmin
	}).(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodOutput) SourceAlloydbUpdateReplicationMethodLogicalReplicationCdc() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethod) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc {
		return v.SourceAlloydbUpdateReplicationMethodLogicalReplicationCdc
	}).(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodOutput) SourceAlloydbUpdateReplicationMethodStandard() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethod) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard {
		return v.SourceAlloydbUpdateReplicationMethodStandard
	}).(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodOutput) SourceAlloydbUpdateReplicationMethodStandardXmin() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethod) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin {
		return v.SourceAlloydbUpdateReplicationMethodStandardXmin
	}).(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutput)
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc struct {
	AdditionalProperties  *string `pulumi:"additionalProperties"`
	InitialWaitingSeconds int     `pulumi:"initialWaitingSeconds"`
	LsnCommitBehaviour    string  `pulumi:"lsnCommitBehaviour"`
	Method                string  `pulumi:"method"`
	Plugin                string  `pulumi:"plugin"`
	Publication           string  `pulumi:"publication"`
	QueueSize             int     `pulumi:"queueSize"`
	ReplicationSlot       string  `pulumi:"replicationSlot"`
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput) InitialWaitingSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc) int {
		return v.InitialWaitingSeconds
	}).(pulumi.IntOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput) LsnCommitBehaviour() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc) string {
		return v.LsnCommitBehaviour
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc) string {
		return v.Method
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput) Plugin() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc) string {
		return v.Plugin
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput) Publication() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc) string {
		return v.Publication
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput) QueueSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc) int {
		return v.QueueSize
	}).(pulumi.IntOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput) ReplicationSlot() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdc) string {
		return v.ReplicationSlot
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard struct {
	Method string `pulumi:"method"`
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutput() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandard) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin struct {
	Method string `pulumi:"method"`
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutput() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXmin) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc struct {
	AdditionalProperties  *string `pulumi:"additionalProperties"`
	InitialWaitingSeconds int     `pulumi:"initialWaitingSeconds"`
	LsnCommitBehaviour    string  `pulumi:"lsnCommitBehaviour"`
	Method                string  `pulumi:"method"`
	Plugin                string  `pulumi:"plugin"`
	Publication           string  `pulumi:"publication"`
	QueueSize             int     `pulumi:"queueSize"`
	ReplicationSlot       string  `pulumi:"replicationSlot"`
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput) InitialWaitingSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc) int {
		return v.InitialWaitingSeconds
	}).(pulumi.IntOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput) LsnCommitBehaviour() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.LsnCommitBehaviour
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.Method
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput) Plugin() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.Plugin
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput) Publication() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.Publication
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput) QueueSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc) int {
		return v.QueueSize
	}).(pulumi.IntOutput)
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput) ReplicationSlot() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.ReplicationSlot
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard struct {
	Method string `pulumi:"method"`
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutput() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandard) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin struct {
	Method string `pulumi:"method"`
}

type GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutput() GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutput) ToGetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutput {
	return o
}

func (o GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXmin) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslMode struct {
	SourceAlloydbSslModesAllow            GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow            `pulumi:"sourceAlloydbSslModesAllow"`
	SourceAlloydbSslModesDisable          GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable          `pulumi:"sourceAlloydbSslModesDisable"`
	SourceAlloydbSslModesPrefer           GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer           `pulumi:"sourceAlloydbSslModesPrefer"`
	SourceAlloydbSslModesRequire          GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire          `pulumi:"sourceAlloydbSslModesRequire"`
	SourceAlloydbSslModesVerifyCa         GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa         `pulumi:"sourceAlloydbSslModesVerifyCa"`
	SourceAlloydbSslModesVerifyFull       GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull       `pulumi:"sourceAlloydbSslModesVerifyFull"`
	SourceAlloydbUpdateSslModesAllow      GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow      `pulumi:"sourceAlloydbUpdateSslModesAllow"`
	SourceAlloydbUpdateSslModesDisable    GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable    `pulumi:"sourceAlloydbUpdateSslModesDisable"`
	SourceAlloydbUpdateSslModesPrefer     GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer     `pulumi:"sourceAlloydbUpdateSslModesPrefer"`
	SourceAlloydbUpdateSslModesRequire    GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire    `pulumi:"sourceAlloydbUpdateSslModesRequire"`
	SourceAlloydbUpdateSslModesVerifyCa   GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa   `pulumi:"sourceAlloydbUpdateSslModesVerifyCa"`
	SourceAlloydbUpdateSslModesVerifyFull GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull `pulumi:"sourceAlloydbUpdateSslModesVerifyFull"`
}

type GetSourceAlloydbConfigurationSslModeOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslMode)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeOutput) ToGetSourceAlloydbConfigurationSslModeOutput() GetSourceAlloydbConfigurationSslModeOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeOutput) ToGetSourceAlloydbConfigurationSslModeOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbSslModesAllow() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow {
		return v.SourceAlloydbSslModesAllow
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput)
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbSslModesDisable() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable {
		return v.SourceAlloydbSslModesDisable
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput)
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbSslModesPrefer() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer {
		return v.SourceAlloydbSslModesPrefer
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput)
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbSslModesRequire() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire {
		return v.SourceAlloydbSslModesRequire
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput)
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbSslModesVerifyCa() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa {
		return v.SourceAlloydbSslModesVerifyCa
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput)
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbSslModesVerifyFull() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull {
		return v.SourceAlloydbSslModesVerifyFull
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput)
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbUpdateSslModesAllow() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow {
		return v.SourceAlloydbUpdateSslModesAllow
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput)
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbUpdateSslModesDisable() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable {
		return v.SourceAlloydbUpdateSslModesDisable
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput)
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbUpdateSslModesPrefer() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer {
		return v.SourceAlloydbUpdateSslModesPrefer
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput)
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbUpdateSslModesRequire() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire {
		return v.SourceAlloydbUpdateSslModesRequire
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput)
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbUpdateSslModesVerifyCa() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa {
		return v.SourceAlloydbUpdateSslModesVerifyCa
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput)
}

func (o GetSourceAlloydbConfigurationSslModeOutput) SourceAlloydbUpdateSslModesVerifyFull() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslMode) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull {
		return v.SourceAlloydbUpdateSslModesVerifyFull
	}).(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllow) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisable) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPrefer) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequire) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	CaCertificate        string  `pulumi:"caCertificate"`
	ClientCertificate    string  `pulumi:"clientCertificate"`
	ClientKey            string  `pulumi:"clientKey"`
	ClientKeyPassword    string  `pulumi:"clientKeyPassword"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCa) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	CaCertificate        string  `pulumi:"caCertificate"`
	ClientCertificate    string  `pulumi:"clientCertificate"`
	ClientKey            string  `pulumi:"clientKey"`
	ClientKeyPassword    string  `pulumi:"clientKeyPassword"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFull) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllow) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisable) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPrefer) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequire) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	CaCertificate        string  `pulumi:"caCertificate"`
	ClientCertificate    string  `pulumi:"clientCertificate"`
	ClientKey            string  `pulumi:"clientKey"`
	ClientKeyPassword    string  `pulumi:"clientKeyPassword"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa) string {
		return v.ClientKey
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCa) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	CaCertificate        string  `pulumi:"caCertificate"`
	ClientCertificate    string  `pulumi:"clientCertificate"`
	ClientKey            string  `pulumi:"clientKey"`
	ClientKeyPassword    string  `pulumi:"clientKeyPassword"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput() GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput) ToGetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput {
	return o
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull) string {
		return v.ClientKey
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFull) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationTunnelMethod struct {
	SourceAlloydbSshTunnelMethodNoTunnel                     GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel                     `pulumi:"sourceAlloydbSshTunnelMethodNoTunnel"`
	SourceAlloydbSshTunnelMethodPasswordAuthentication       GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication       `pulumi:"sourceAlloydbSshTunnelMethodPasswordAuthentication"`
	SourceAlloydbSshTunnelMethodSshKeyAuthentication         GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication         `pulumi:"sourceAlloydbSshTunnelMethodSshKeyAuthentication"`
	SourceAlloydbUpdateSshTunnelMethodNoTunnel               GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel               `pulumi:"sourceAlloydbUpdateSshTunnelMethodNoTunnel"`
	SourceAlloydbUpdateSshTunnelMethodPasswordAuthentication GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication `pulumi:"sourceAlloydbUpdateSshTunnelMethodPasswordAuthentication"`
	SourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication   GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"sourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetSourceAlloydbConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationTunnelMethodOutput) ToGetSourceAlloydbConfigurationTunnelMethodOutput() GetSourceAlloydbConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodOutput) ToGetSourceAlloydbConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodOutput) SourceAlloydbSshTunnelMethodNoTunnel() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethod) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel {
		return v.SourceAlloydbSshTunnelMethodNoTunnel
	}).(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodOutput) SourceAlloydbSshTunnelMethodPasswordAuthentication() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethod) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication {
		return v.SourceAlloydbSshTunnelMethodPasswordAuthentication
	}).(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodOutput) SourceAlloydbSshTunnelMethodSshKeyAuthentication() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethod) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication {
		return v.SourceAlloydbSshTunnelMethodSshKeyAuthentication
	}).(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodOutput) SourceAlloydbUpdateSshTunnelMethodNoTunnel() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethod) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel {
		return v.SourceAlloydbUpdateSshTunnelMethodNoTunnel
	}).(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodOutput) SourceAlloydbUpdateSshTunnelMethodPasswordAuthentication() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethod) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication {
		return v.SourceAlloydbUpdateSshTunnelMethodPasswordAuthentication
	}).(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodOutput) SourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethod) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication {
		return v.SourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutput() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutput() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourceAmazonAdsConfiguration struct {
	// must be one of ["oauth2.0"]
	AuthType string `pulumi:"authType"`
	// The client ID of your Amazon Ads developer application. See the \n\ndocs\n\n for more information.
	ClientId string `pulumi:"clientId"`
	// The client secret of your Amazon Ads developer application. See the \n\ndocs\n\n for more information.
	ClientSecret string `pulumi:"clientSecret"`
	// The amount of days to go back in time to get the updated data from Amazon Ads
	LookBackWindow int `pulumi:"lookBackWindow"`
	// Profile IDs you want to fetch data for. See \n\ndocs\n\n for more details.
	Profiles []int `pulumi:"profiles"`
	// Amazon Ads refresh token. See the \n\ndocs\n\n for more information on how to obtain this token.
	RefreshToken string `pulumi:"refreshToken"`
	// must be one of ["NA", "EU", "FE"]
	// Region to pull data from (EU/NA/FE). See \n\ndocs\n\n for more details.
	Region string `pulumi:"region"`
	// Optional configuration which accepts an array of string of record types. Leave blank for default behaviour to pull all report types. Use this config option only if you want to pull specific report type(s). See \n\ndocs\n\n for more details
	ReportRecordTypes []string `pulumi:"reportRecordTypes"`
	// must be one of ["amazon-ads"]
	SourceType string `pulumi:"sourceType"`
	// The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format
	StartDate string `pulumi:"startDate"`
	// Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.
	StateFilters []string `pulumi:"stateFilters"`
}

type GetSourceAmazonAdsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAmazonAdsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAmazonAdsConfiguration)(nil)).Elem()
}

func (o GetSourceAmazonAdsConfigurationOutput) ToGetSourceAmazonAdsConfigurationOutput() GetSourceAmazonAdsConfigurationOutput {
	return o
}

func (o GetSourceAmazonAdsConfigurationOutput) ToGetSourceAmazonAdsConfigurationOutputWithContext(ctx context.Context) GetSourceAmazonAdsConfigurationOutput {
	return o
}

// must be one of ["oauth2.0"]
func (o GetSourceAmazonAdsConfigurationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonAdsConfiguration) string { return v.AuthType }).(pulumi.StringOutput)
}

// The client ID of your Amazon Ads developer application. See the \n\ndocs\n\n for more information.
func (o GetSourceAmazonAdsConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonAdsConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret of your Amazon Ads developer application. See the \n\ndocs\n\n for more information.
func (o GetSourceAmazonAdsConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonAdsConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The amount of days to go back in time to get the updated data from Amazon Ads
func (o GetSourceAmazonAdsConfigurationOutput) LookBackWindow() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAmazonAdsConfiguration) int { return v.LookBackWindow }).(pulumi.IntOutput)
}

// Profile IDs you want to fetch data for. See \n\ndocs\n\n for more details.
func (o GetSourceAmazonAdsConfigurationOutput) Profiles() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetSourceAmazonAdsConfiguration) []int { return v.Profiles }).(pulumi.IntArrayOutput)
}

// Amazon Ads refresh token. See the \n\ndocs\n\n for more information on how to obtain this token.
func (o GetSourceAmazonAdsConfigurationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonAdsConfiguration) string { return v.RefreshToken }).(pulumi.StringOutput)
}

// must be one of ["NA", "EU", "FE"]
// Region to pull data from (EU/NA/FE). See \n\ndocs\n\n for more details.
func (o GetSourceAmazonAdsConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonAdsConfiguration) string { return v.Region }).(pulumi.StringOutput)
}

// Optional configuration which accepts an array of string of record types. Leave blank for default behaviour to pull all report types. Use this config option only if you want to pull specific report type(s). See \n\ndocs\n\n for more details
func (o GetSourceAmazonAdsConfigurationOutput) ReportRecordTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceAmazonAdsConfiguration) []string { return v.ReportRecordTypes }).(pulumi.StringArrayOutput)
}

// must be one of ["amazon-ads"]
func (o GetSourceAmazonAdsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonAdsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The Start date for collecting reports, should not be more than 60 days in the past. In YYYY-MM-DD format
func (o GetSourceAmazonAdsConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonAdsConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Reflects the state of the Display, Product, and Brand Campaign streams as enabled, paused, or archived. If you do not populate this field, it will be ignored completely.
func (o GetSourceAmazonAdsConfigurationOutput) StateFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceAmazonAdsConfiguration) []string { return v.StateFilters }).(pulumi.StringArrayOutput)
}

type GetSourceAmazonSellerPartnerConfiguration struct {
	// Additional information to configure report options. This varies by report type, not every report implement this kind of feature. Must be a valid json string.
	AdvancedStreamOptions string `pulumi:"advancedStreamOptions"`
	// must be one of ["oauth2.0"]
	AuthType string `pulumi:"authType"`
	// Specifies the AWS access key used as part of the credentials to authenticate the user.
	AwsAccessKey string `pulumi:"awsAccessKey"`
	// must be one of ["PRODUCTION", "SANDBOX"]
	// Select the AWS Environment.
	AwsEnvironment string `pulumi:"awsEnvironment"`
	// Specifies the AWS secret key used as part of the credentials to authenticate the user.
	AwsSecretKey string `pulumi:"awsSecretKey"`
	// Your Login with Amazon Client ID.
	LwaAppId string `pulumi:"lwaAppId"`
	// Your Login with Amazon Client Secret.
	LwaClientSecret string `pulumi:"lwaClientSecret"`
	// Sometimes report can take up to 30 minutes to generate. This will set the limit for how long to wait for a successful report.
	MaxWaitSeconds int `pulumi:"maxWaitSeconds"`
	// Will be used for stream slicing for initial fullRefresh sync when no updated state is present for reports that support sliced incremental sync.
	PeriodInDays int `pulumi:"periodInDays"`
	// The Refresh Token obtained via OAuth flow authorization.
	RefreshToken string `pulumi:"refreshToken"`
	// must be one of ["AE", "AU", "BE", "BR", "CA", "DE", "EG", "ES", "FR", "GB", "IN", "IT", "JP", "MX", "NL", "PL", "SA", "SE", "SG", "TR", "UK", "US"]
	// Select the AWS Region.
	Region string `pulumi:"region"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.
	ReplicationEndDate string `pulumi:"replicationEndDate"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	ReplicationStartDate string `pulumi:"replicationStartDate"`
	// Additional information passed to reports. This varies by report type. Must be a valid json string.
	ReportOptions string `pulumi:"reportOptions"`
	// Specifies the Amazon Resource Name (ARN) of an IAM role that you want to use to perform operations requested using this profile. (Needs permission to 'Assume Role' STS).
	RoleArn string `pulumi:"roleArn"`
	// must be one of ["amazon-seller-partner"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceAmazonSellerPartnerConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAmazonSellerPartnerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAmazonSellerPartnerConfiguration)(nil)).Elem()
}

func (o GetSourceAmazonSellerPartnerConfigurationOutput) ToGetSourceAmazonSellerPartnerConfigurationOutput() GetSourceAmazonSellerPartnerConfigurationOutput {
	return o
}

func (o GetSourceAmazonSellerPartnerConfigurationOutput) ToGetSourceAmazonSellerPartnerConfigurationOutputWithContext(ctx context.Context) GetSourceAmazonSellerPartnerConfigurationOutput {
	return o
}

// Additional information to configure report options. This varies by report type, not every report implement this kind of feature. Must be a valid json string.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) AdvancedStreamOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.AdvancedStreamOptions }).(pulumi.StringOutput)
}

// must be one of ["oauth2.0"]
func (o GetSourceAmazonSellerPartnerConfigurationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.AuthType }).(pulumi.StringOutput)
}

// Specifies the AWS access key used as part of the credentials to authenticate the user.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) AwsAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.AwsAccessKey }).(pulumi.StringOutput)
}

// must be one of ["PRODUCTION", "SANDBOX"]
// Select the AWS Environment.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) AwsEnvironment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.AwsEnvironment }).(pulumi.StringOutput)
}

// Specifies the AWS secret key used as part of the credentials to authenticate the user.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) AwsSecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.AwsSecretKey }).(pulumi.StringOutput)
}

// Your Login with Amazon Client ID.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) LwaAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.LwaAppId }).(pulumi.StringOutput)
}

// Your Login with Amazon Client Secret.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) LwaClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.LwaClientSecret }).(pulumi.StringOutput)
}

// Sometimes report can take up to 30 minutes to generate. This will set the limit for how long to wait for a successful report.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) MaxWaitSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) int { return v.MaxWaitSeconds }).(pulumi.IntOutput)
}

// Will be used for stream slicing for initial fullRefresh sync when no updated state is present for reports that support sliced incremental sync.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) PeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) int { return v.PeriodInDays }).(pulumi.IntOutput)
}

// The Refresh Token obtained via OAuth flow authorization.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.RefreshToken }).(pulumi.StringOutput)
}

// must be one of ["AE", "AU", "BE", "BR", "CA", "DE", "EG", "ES", "FR", "GB", "IN", "IT", "JP", "MX", "NL", "PL", "SA", "SE", "SG", "TR", "UK", "US"]
// Select the AWS Region.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.Region }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) ReplicationEndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.ReplicationEndDate }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) ReplicationStartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.ReplicationStartDate }).(pulumi.StringOutput)
}

// Additional information passed to reports. This varies by report type. Must be a valid json string.
func (o GetSourceAmazonSellerPartnerConfigurationOutput) ReportOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.ReportOptions }).(pulumi.StringOutput)
}

// Specifies the Amazon Resource Name (ARN) of an IAM role that you want to use to perform operations requested using this profile. (Needs permission to 'Assume Role' STS).
func (o GetSourceAmazonSellerPartnerConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// must be one of ["amazon-seller-partner"]
func (o GetSourceAmazonSellerPartnerConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSellerPartnerConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceAmazonSqsConfiguration struct {
	// The Access Key ID of the AWS IAM Role to use for pulling messages
	AccessKey string `pulumi:"accessKey"`
	// Comma separated list of Mesage Attribute names to return
	AttributesToReturn string `pulumi:"attributesToReturn"`
	// If Enabled, messages will be deleted from the SQS Queue after being read. If Disabled, messages are left in the queue and can be read more than once. WARNING: Enabling this option can result in data loss in cases of failure, use with caution, see documentation for more detail.
	DeleteMessages bool `pulumi:"deleteMessages"`
	// Max amount of messages to get in one batch (10 max)
	MaxBatchSize int `pulumi:"maxBatchSize"`
	// Max amount of time in seconds to wait for messages in a single poll (20 max)
	MaxWaitTime int `pulumi:"maxWaitTime"`
	// URL of the SQS Queue
	QueueUrl string `pulumi:"queueUrl"`
	// must be one of ["us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
	// AWS Region of the SQS Queue
	Region string `pulumi:"region"`
	// The Secret Key of the AWS IAM Role to use for pulling messages
	SecretKey string `pulumi:"secretKey"`
	// must be one of ["amazon-sqs"]
	SourceType string `pulumi:"sourceType"`
	// Modify the Visibility Timeout of the individual message from the Queue's default (seconds).
	VisibilityTimeout int `pulumi:"visibilityTimeout"`
}

type GetSourceAmazonSqsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAmazonSqsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAmazonSqsConfiguration)(nil)).Elem()
}

func (o GetSourceAmazonSqsConfigurationOutput) ToGetSourceAmazonSqsConfigurationOutput() GetSourceAmazonSqsConfigurationOutput {
	return o
}

func (o GetSourceAmazonSqsConfigurationOutput) ToGetSourceAmazonSqsConfigurationOutputWithContext(ctx context.Context) GetSourceAmazonSqsConfigurationOutput {
	return o
}

// The Access Key ID of the AWS IAM Role to use for pulling messages
func (o GetSourceAmazonSqsConfigurationOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSqsConfiguration) string { return v.AccessKey }).(pulumi.StringOutput)
}

// Comma separated list of Mesage Attribute names to return
func (o GetSourceAmazonSqsConfigurationOutput) AttributesToReturn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSqsConfiguration) string { return v.AttributesToReturn }).(pulumi.StringOutput)
}

// If Enabled, messages will be deleted from the SQS Queue after being read. If Disabled, messages are left in the queue and can be read more than once. WARNING: Enabling this option can result in data loss in cases of failure, use with caution, see documentation for more detail.
func (o GetSourceAmazonSqsConfigurationOutput) DeleteMessages() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceAmazonSqsConfiguration) bool { return v.DeleteMessages }).(pulumi.BoolOutput)
}

// Max amount of messages to get in one batch (10 max)
func (o GetSourceAmazonSqsConfigurationOutput) MaxBatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAmazonSqsConfiguration) int { return v.MaxBatchSize }).(pulumi.IntOutput)
}

// Max amount of time in seconds to wait for messages in a single poll (20 max)
func (o GetSourceAmazonSqsConfigurationOutput) MaxWaitTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAmazonSqsConfiguration) int { return v.MaxWaitTime }).(pulumi.IntOutput)
}

// URL of the SQS Queue
func (o GetSourceAmazonSqsConfigurationOutput) QueueUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSqsConfiguration) string { return v.QueueUrl }).(pulumi.StringOutput)
}

// must be one of ["us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
// AWS Region of the SQS Queue
func (o GetSourceAmazonSqsConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSqsConfiguration) string { return v.Region }).(pulumi.StringOutput)
}

// The Secret Key of the AWS IAM Role to use for pulling messages
func (o GetSourceAmazonSqsConfigurationOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSqsConfiguration) string { return v.SecretKey }).(pulumi.StringOutput)
}

// must be one of ["amazon-sqs"]
func (o GetSourceAmazonSqsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmazonSqsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Modify the Visibility Timeout of the individual message from the Queue's default (seconds).
func (o GetSourceAmazonSqsConfigurationOutput) VisibilityTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAmazonSqsConfiguration) int { return v.VisibilityTimeout }).(pulumi.IntOutput)
}

type GetSourceAmplitudeConfiguration struct {
	// Amplitude API Key. See the \n\nsetup guide\n\n for more information on how to obtain this key.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["Standard Server", "EU Residency Server"]
	// Amplitude data region server
	DataRegion string `pulumi:"dataRegion"`
	// According to \n\nConsiderations\n\n too big time range in request can cause a timeout error. In this case, set shorter time interval in hours.
	RequestTimeRange int `pulumi:"requestTimeRange"`
	// Amplitude Secret Key. See the \n\nsetup guide\n\n for more information on how to obtain this key.
	SecretKey string `pulumi:"secretKey"`
	// must be one of ["amplitude"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2021-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceAmplitudeConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAmplitudeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAmplitudeConfiguration)(nil)).Elem()
}

func (o GetSourceAmplitudeConfigurationOutput) ToGetSourceAmplitudeConfigurationOutput() GetSourceAmplitudeConfigurationOutput {
	return o
}

func (o GetSourceAmplitudeConfigurationOutput) ToGetSourceAmplitudeConfigurationOutputWithContext(ctx context.Context) GetSourceAmplitudeConfigurationOutput {
	return o
}

// Amplitude API Key. See the \n\nsetup guide\n\n for more information on how to obtain this key.
func (o GetSourceAmplitudeConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmplitudeConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["Standard Server", "EU Residency Server"]
// Amplitude data region server
func (o GetSourceAmplitudeConfigurationOutput) DataRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmplitudeConfiguration) string { return v.DataRegion }).(pulumi.StringOutput)
}

// According to \n\nConsiderations\n\n too big time range in request can cause a timeout error. In this case, set shorter time interval in hours.
func (o GetSourceAmplitudeConfigurationOutput) RequestTimeRange() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAmplitudeConfiguration) int { return v.RequestTimeRange }).(pulumi.IntOutput)
}

// Amplitude Secret Key. See the \n\nsetup guide\n\n for more information on how to obtain this key.
func (o GetSourceAmplitudeConfigurationOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmplitudeConfiguration) string { return v.SecretKey }).(pulumi.StringOutput)
}

// must be one of ["amplitude"]
func (o GetSourceAmplitudeConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmplitudeConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2021-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceAmplitudeConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAmplitudeConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceApifyDatasetConfiguration struct {
	// If set to true, only clean items will be downloaded from the dataset. See description of what clean means in \n\nApify API docs\n\n. If not sure, set clean to false.
	Clean bool `pulumi:"clean"`
	// ID of the dataset you would like to load to Airbyte.
	DatasetId string `pulumi:"datasetId"`
	// must be one of ["apify-dataset"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceApifyDatasetConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceApifyDatasetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceApifyDatasetConfiguration)(nil)).Elem()
}

func (o GetSourceApifyDatasetConfigurationOutput) ToGetSourceApifyDatasetConfigurationOutput() GetSourceApifyDatasetConfigurationOutput {
	return o
}

func (o GetSourceApifyDatasetConfigurationOutput) ToGetSourceApifyDatasetConfigurationOutputWithContext(ctx context.Context) GetSourceApifyDatasetConfigurationOutput {
	return o
}

// If set to true, only clean items will be downloaded from the dataset. See description of what clean means in \n\nApify API docs\n\n. If not sure, set clean to false.
func (o GetSourceApifyDatasetConfigurationOutput) Clean() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceApifyDatasetConfiguration) bool { return v.Clean }).(pulumi.BoolOutput)
}

// ID of the dataset you would like to load to Airbyte.
func (o GetSourceApifyDatasetConfigurationOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceApifyDatasetConfiguration) string { return v.DatasetId }).(pulumi.StringOutput)
}

// must be one of ["apify-dataset"]
func (o GetSourceApifyDatasetConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceApifyDatasetConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceAppfollowConfiguration struct {
	// API Key provided by Appfollow
	ApiSecret string `pulumi:"apiSecret"`
	// must be one of ["appfollow"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceAppfollowConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAppfollowConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAppfollowConfiguration)(nil)).Elem()
}

func (o GetSourceAppfollowConfigurationOutput) ToGetSourceAppfollowConfigurationOutput() GetSourceAppfollowConfigurationOutput {
	return o
}

func (o GetSourceAppfollowConfigurationOutput) ToGetSourceAppfollowConfigurationOutputWithContext(ctx context.Context) GetSourceAppfollowConfigurationOutput {
	return o
}

// API Key provided by Appfollow
func (o GetSourceAppfollowConfigurationOutput) ApiSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAppfollowConfiguration) string { return v.ApiSecret }).(pulumi.StringOutput)
}

// must be one of ["appfollow"]
func (o GetSourceAppfollowConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAppfollowConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceAsanaConfiguration struct {
	// Choose how to authenticate to Github
	Credentials GetSourceAsanaConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["asana"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceAsanaConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAsanaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAsanaConfiguration)(nil)).Elem()
}

func (o GetSourceAsanaConfigurationOutput) ToGetSourceAsanaConfigurationOutput() GetSourceAsanaConfigurationOutput {
	return o
}

func (o GetSourceAsanaConfigurationOutput) ToGetSourceAsanaConfigurationOutputWithContext(ctx context.Context) GetSourceAsanaConfigurationOutput {
	return o
}

// Choose how to authenticate to Github
func (o GetSourceAsanaConfigurationOutput) Credentials() GetSourceAsanaConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceAsanaConfiguration) GetSourceAsanaConfigurationCredentials { return v.Credentials }).(GetSourceAsanaConfigurationCredentialsOutput)
}

// must be one of ["asana"]
func (o GetSourceAsanaConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceAsanaConfigurationCredentials struct {
	SourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth                 GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth                 `pulumi:"sourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth"`
	SourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken       GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken       `pulumi:"sourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken"`
	SourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth           GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth           `pulumi:"sourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth"`
	SourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken `pulumi:"sourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken"`
}

type GetSourceAsanaConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceAsanaConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAsanaConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceAsanaConfigurationCredentialsOutput) ToGetSourceAsanaConfigurationCredentialsOutput() GetSourceAsanaConfigurationCredentialsOutput {
	return o
}

func (o GetSourceAsanaConfigurationCredentialsOutput) ToGetSourceAsanaConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceAsanaConfigurationCredentialsOutput {
	return o
}

func (o GetSourceAsanaConfigurationCredentialsOutput) SourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth() GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentials) GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth {
		return v.SourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth
	}).(GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput)
}

func (o GetSourceAsanaConfigurationCredentialsOutput) SourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken() GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentials) GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken {
		return v.SourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken
	}).(GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput)
}

func (o GetSourceAsanaConfigurationCredentialsOutput) SourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth() GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentials) GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth {
		return v.SourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth
	}).(GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput)
}

func (o GetSourceAsanaConfigurationCredentialsOutput) SourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken() GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentials) GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken {
		return v.SourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken
	}).(GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput)
}

type GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth struct {
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	OptionTitle  string `pulumi:"optionTitle"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput struct{ *pulumi.OutputState }

func (GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth)(nil)).Elem()
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput) ToGetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput() GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput {
	return o
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput) ToGetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutputWithContext(ctx context.Context) GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput {
	return o
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken struct {
	OptionTitle         string `pulumi:"optionTitle"`
	PersonalAccessToken string `pulumi:"personalAccessToken"`
}

type GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken)(nil)).Elem()
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ToGetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput() GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ToGetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutputWithContext(ctx context.Context) GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) PersonalAccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessToken) string {
		return v.PersonalAccessToken
	}).(pulumi.StringOutput)
}

type GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth struct {
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	OptionTitle  string `pulumi:"optionTitle"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput struct{ *pulumi.OutputState }

func (GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth)(nil)).Elem()
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput) ToGetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput() GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput {
	return o
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput) ToGetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutputWithContext(ctx context.Context) GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput {
	return o
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken struct {
	OptionTitle         string `pulumi:"optionTitle"`
	PersonalAccessToken string `pulumi:"personalAccessToken"`
}

type GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken)(nil)).Elem()
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ToGetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput() GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ToGetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutputWithContext(ctx context.Context) GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) PersonalAccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken) string {
		return v.PersonalAccessToken
	}).(pulumi.StringOutput)
}

type GetSourceAuth0Configuration struct {
	// The Authentication API is served over HTTPS. All URLs referenced in the documentation have the following base `https://YOUR_DOMAIN`
	BaseUrl     string                                 `pulumi:"baseUrl"`
	Credentials GetSourceAuth0ConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["auth0"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceAuth0ConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAuth0ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAuth0Configuration)(nil)).Elem()
}

func (o GetSourceAuth0ConfigurationOutput) ToGetSourceAuth0ConfigurationOutput() GetSourceAuth0ConfigurationOutput {
	return o
}

func (o GetSourceAuth0ConfigurationOutput) ToGetSourceAuth0ConfigurationOutputWithContext(ctx context.Context) GetSourceAuth0ConfigurationOutput {
	return o
}

// The Authentication API is served over HTTPS. All URLs referenced in the documentation have the following base `https://YOUR_DOMAIN`
func (o GetSourceAuth0ConfigurationOutput) BaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0Configuration) string { return v.BaseUrl }).(pulumi.StringOutput)
}

func (o GetSourceAuth0ConfigurationOutput) Credentials() GetSourceAuth0ConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceAuth0Configuration) GetSourceAuth0ConfigurationCredentials { return v.Credentials }).(GetSourceAuth0ConfigurationCredentialsOutput)
}

// must be one of ["auth0"]
func (o GetSourceAuth0ConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0Configuration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceAuth0ConfigurationCredentials struct {
	SourceAuth0AuthenticationMethodOAuth2AccessToken                   GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken                   `pulumi:"sourceAuth0AuthenticationMethodOAuth2AccessToken"`
	SourceAuth0AuthenticationMethodOAuth2ConfidentialApplication       GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication       `pulumi:"sourceAuth0AuthenticationMethodOAuth2ConfidentialApplication"`
	SourceAuth0UpdateAuthenticationMethodOAuth2AccessToken             GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken             `pulumi:"sourceAuth0UpdateAuthenticationMethodOAuth2AccessToken"`
	SourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication `pulumi:"sourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication"`
}

type GetSourceAuth0ConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceAuth0ConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAuth0ConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceAuth0ConfigurationCredentialsOutput) ToGetSourceAuth0ConfigurationCredentialsOutput() GetSourceAuth0ConfigurationCredentialsOutput {
	return o
}

func (o GetSourceAuth0ConfigurationCredentialsOutput) ToGetSourceAuth0ConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceAuth0ConfigurationCredentialsOutput {
	return o
}

func (o GetSourceAuth0ConfigurationCredentialsOutput) SourceAuth0AuthenticationMethodOAuth2AccessToken() GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentials) GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken {
		return v.SourceAuth0AuthenticationMethodOAuth2AccessToken
	}).(GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput)
}

func (o GetSourceAuth0ConfigurationCredentialsOutput) SourceAuth0AuthenticationMethodOAuth2ConfidentialApplication() GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentials) GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication {
		return v.SourceAuth0AuthenticationMethodOAuth2ConfidentialApplication
	}).(GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput)
}

func (o GetSourceAuth0ConfigurationCredentialsOutput) SourceAuth0UpdateAuthenticationMethodOAuth2AccessToken() GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentials) GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken {
		return v.SourceAuth0UpdateAuthenticationMethodOAuth2AccessToken
	}).(GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput)
}

func (o GetSourceAuth0ConfigurationCredentialsOutput) SourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication() GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentials) GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication {
		return v.SourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication
	}).(GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput)
}

type GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthType    string `pulumi:"authType"`
}

type GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken)(nil)).Elem()
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput) ToGetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput() GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput {
	return o
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput) ToGetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutputWithContext(ctx context.Context) GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput {
	return o
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication struct {
	Audience     string `pulumi:"audience"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
}

type GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput struct{ *pulumi.OutputState }

func (GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication)(nil)).Elem()
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput) ToGetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput() GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput {
	return o
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput) ToGetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutputWithContext(ctx context.Context) GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput {
	return o
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication) string {
		return v.Audience
	}).(pulumi.StringOutput)
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplication) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthType    string `pulumi:"authType"`
}

type GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken)(nil)).Elem()
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput) ToGetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput() GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput {
	return o
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput) ToGetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutputWithContext(ctx context.Context) GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput {
	return o
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication struct {
	Audience     string `pulumi:"audience"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
}

type GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput struct{ *pulumi.OutputState }

func (GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication)(nil)).Elem()
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput) ToGetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput() GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput {
	return o
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput) ToGetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutputWithContext(ctx context.Context) GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput {
	return o
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication) string {
		return v.Audience
	}).(pulumi.StringOutput)
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplication) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceAwsCloudtrailConfiguration struct {
	// AWS CloudTrail Access Key ID. See the \n\ndocs\n\n for more information on how to obtain this key.
	AwsKeyId string `pulumi:"awsKeyId"`
	// The default AWS Region to use, for example, us-west-1 or us-west-2. When specifying a Region inline during client initialization, this property is named region_name.
	AwsRegionName string `pulumi:"awsRegionName"`
	// AWS CloudTrail Access Key ID. See the \n\ndocs\n\n for more information on how to obtain this key.
	AwsSecretKey string `pulumi:"awsSecretKey"`
	// must be one of ["aws-cloudtrail"]
	SourceType string `pulumi:"sourceType"`
	// The date you would like to replicate data. Data in AWS CloudTrail is available for last 90 days only. Format: YYYY-MM-DD.
	StartDate string `pulumi:"startDate"`
}

type GetSourceAwsCloudtrailConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAwsCloudtrailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAwsCloudtrailConfiguration)(nil)).Elem()
}

func (o GetSourceAwsCloudtrailConfigurationOutput) ToGetSourceAwsCloudtrailConfigurationOutput() GetSourceAwsCloudtrailConfigurationOutput {
	return o
}

func (o GetSourceAwsCloudtrailConfigurationOutput) ToGetSourceAwsCloudtrailConfigurationOutputWithContext(ctx context.Context) GetSourceAwsCloudtrailConfigurationOutput {
	return o
}

// AWS CloudTrail Access Key ID. See the \n\ndocs\n\n for more information on how to obtain this key.
func (o GetSourceAwsCloudtrailConfigurationOutput) AwsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAwsCloudtrailConfiguration) string { return v.AwsKeyId }).(pulumi.StringOutput)
}

// The default AWS Region to use, for example, us-west-1 or us-west-2. When specifying a Region inline during client initialization, this property is named region_name.
func (o GetSourceAwsCloudtrailConfigurationOutput) AwsRegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAwsCloudtrailConfiguration) string { return v.AwsRegionName }).(pulumi.StringOutput)
}

// AWS CloudTrail Access Key ID. See the \n\ndocs\n\n for more information on how to obtain this key.
func (o GetSourceAwsCloudtrailConfigurationOutput) AwsSecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAwsCloudtrailConfiguration) string { return v.AwsSecretKey }).(pulumi.StringOutput)
}

// must be one of ["aws-cloudtrail"]
func (o GetSourceAwsCloudtrailConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAwsCloudtrailConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date you would like to replicate data. Data in AWS CloudTrail is available for last 90 days only. Format: YYYY-MM-DD.
func (o GetSourceAwsCloudtrailConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAwsCloudtrailConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceAzureBlobStorageConfiguration struct {
	// The Azure blob storage account key.
	AzureBlobStorageAccountKey string `pulumi:"azureBlobStorageAccountKey"`
	// The account's name of the Azure Blob Storage.
	AzureBlobStorageAccountName string `pulumi:"azureBlobStorageAccountName"`
	// The Azure blob storage prefix to be applied
	AzureBlobStorageBlobsPrefix string `pulumi:"azureBlobStorageBlobsPrefix"`
	// The name of the Azure blob storage container.
	AzureBlobStorageContainerName string `pulumi:"azureBlobStorageContainerName"`
	// This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.
	AzureBlobStorageEndpoint string `pulumi:"azureBlobStorageEndpoint"`
	// The Azure blob storage blobs to scan for inferring the schema, useful on large amounts of data with consistent structure
	AzureBlobStorageSchemaInferenceLimit int `pulumi:"azureBlobStorageSchemaInferenceLimit"`
	// Input data format
	Format GetSourceAzureBlobStorageConfigurationFormat `pulumi:"format"`
	// must be one of ["azure-blob-storage"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceAzureBlobStorageConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAzureBlobStorageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAzureBlobStorageConfiguration)(nil)).Elem()
}

func (o GetSourceAzureBlobStorageConfigurationOutput) ToGetSourceAzureBlobStorageConfigurationOutput() GetSourceAzureBlobStorageConfigurationOutput {
	return o
}

func (o GetSourceAzureBlobStorageConfigurationOutput) ToGetSourceAzureBlobStorageConfigurationOutputWithContext(ctx context.Context) GetSourceAzureBlobStorageConfigurationOutput {
	return o
}

// The Azure blob storage account key.
func (o GetSourceAzureBlobStorageConfigurationOutput) AzureBlobStorageAccountKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfiguration) string { return v.AzureBlobStorageAccountKey }).(pulumi.StringOutput)
}

// The account's name of the Azure Blob Storage.
func (o GetSourceAzureBlobStorageConfigurationOutput) AzureBlobStorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfiguration) string { return v.AzureBlobStorageAccountName }).(pulumi.StringOutput)
}

// The Azure blob storage prefix to be applied
func (o GetSourceAzureBlobStorageConfigurationOutput) AzureBlobStorageBlobsPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfiguration) string { return v.AzureBlobStorageBlobsPrefix }).(pulumi.StringOutput)
}

// The name of the Azure blob storage container.
func (o GetSourceAzureBlobStorageConfigurationOutput) AzureBlobStorageContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfiguration) string { return v.AzureBlobStorageContainerName }).(pulumi.StringOutput)
}

// This is Azure Blob Storage endpoint domain name. Leave default value (or leave it empty if run container from command line) to use Microsoft native from example.
func (o GetSourceAzureBlobStorageConfigurationOutput) AzureBlobStorageEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfiguration) string { return v.AzureBlobStorageEndpoint }).(pulumi.StringOutput)
}

// The Azure blob storage blobs to scan for inferring the schema, useful on large amounts of data with consistent structure
func (o GetSourceAzureBlobStorageConfigurationOutput) AzureBlobStorageSchemaInferenceLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfiguration) int { return v.AzureBlobStorageSchemaInferenceLimit }).(pulumi.IntOutput)
}

// Input data format
func (o GetSourceAzureBlobStorageConfigurationOutput) Format() GetSourceAzureBlobStorageConfigurationFormatOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfiguration) GetSourceAzureBlobStorageConfigurationFormat {
		return v.Format
	}).(GetSourceAzureBlobStorageConfigurationFormatOutput)
}

// must be one of ["azure-blob-storage"]
func (o GetSourceAzureBlobStorageConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceAzureBlobStorageConfigurationFormat struct {
	SourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson       GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson       `pulumi:"sourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson"`
	SourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson `pulumi:"sourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson"`
}

type GetSourceAzureBlobStorageConfigurationFormatOutput struct{ *pulumi.OutputState }

func (GetSourceAzureBlobStorageConfigurationFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAzureBlobStorageConfigurationFormat)(nil)).Elem()
}

func (o GetSourceAzureBlobStorageConfigurationFormatOutput) ToGetSourceAzureBlobStorageConfigurationFormatOutput() GetSourceAzureBlobStorageConfigurationFormatOutput {
	return o
}

func (o GetSourceAzureBlobStorageConfigurationFormatOutput) ToGetSourceAzureBlobStorageConfigurationFormatOutputWithContext(ctx context.Context) GetSourceAzureBlobStorageConfigurationFormatOutput {
	return o
}

func (o GetSourceAzureBlobStorageConfigurationFormatOutput) SourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson() GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfigurationFormat) GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson {
		return v.SourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson
	}).(GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutput)
}

func (o GetSourceAzureBlobStorageConfigurationFormatOutput) SourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson() GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfigurationFormat) GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson {
		return v.SourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson
	}).(GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutput)
}

type GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson struct {
	FormatType string `pulumi:"formatType"`
}

type GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutput struct{ *pulumi.OutputState }

func (GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson)(nil)).Elem()
}

func (o GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutput() GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutputWithContext(ctx context.Context) GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJson) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

type GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson struct {
	FormatType string `pulumi:"formatType"`
}

type GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutput struct{ *pulumi.OutputState }

func (GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson)(nil)).Elem()
}

func (o GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutput() GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutput) ToGetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutputWithContext(ctx context.Context) GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutput {
	return o
}

func (o GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutput) FormatType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJson) string {
		return v.FormatType
	}).(pulumi.StringOutput)
}

type GetSourceAzureTableConfiguration struct {
	// must be one of ["azure-table"]
	SourceType string `pulumi:"sourceType"`
	// Azure Table Storage Access Key. See the \n\ndocs\n\n for more information on how to obtain this key.
	StorageAccessKey string `pulumi:"storageAccessKey"`
	// The name of your storage account.
	StorageAccountName string `pulumi:"storageAccountName"`
	// Azure Table Storage service account URL suffix. See the \n\ndocs\n\n for more information on how to obtain endpoint suffix
	StorageEndpointSuffix string `pulumi:"storageEndpointSuffix"`
}

type GetSourceAzureTableConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceAzureTableConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceAzureTableConfiguration)(nil)).Elem()
}

func (o GetSourceAzureTableConfigurationOutput) ToGetSourceAzureTableConfigurationOutput() GetSourceAzureTableConfigurationOutput {
	return o
}

func (o GetSourceAzureTableConfigurationOutput) ToGetSourceAzureTableConfigurationOutputWithContext(ctx context.Context) GetSourceAzureTableConfigurationOutput {
	return o
}

// must be one of ["azure-table"]
func (o GetSourceAzureTableConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureTableConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Azure Table Storage Access Key. See the \n\ndocs\n\n for more information on how to obtain this key.
func (o GetSourceAzureTableConfigurationOutput) StorageAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureTableConfiguration) string { return v.StorageAccessKey }).(pulumi.StringOutput)
}

// The name of your storage account.
func (o GetSourceAzureTableConfigurationOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureTableConfiguration) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// Azure Table Storage service account URL suffix. See the \n\ndocs\n\n for more information on how to obtain endpoint suffix
func (o GetSourceAzureTableConfigurationOutput) StorageEndpointSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceAzureTableConfiguration) string { return v.StorageEndpointSuffix }).(pulumi.StringOutput)
}

type GetSourceBambooHrConfiguration struct {
	// Api key of bamboo hr
	ApiKey string `pulumi:"apiKey"`
	// Comma-separated list of fields to include in custom reports.
	CustomReportsFields string `pulumi:"customReportsFields"`
	// If true, the custom reports endpoint will include the default fields defined here: https://documentation.bamboohr.com/docs/list-of-field-names.
	CustomReportsIncludeDefaultFields bool `pulumi:"customReportsIncludeDefaultFields"`
	// must be one of ["bamboo-hr"]
	SourceType string `pulumi:"sourceType"`
	// Sub Domain of bamboo hr
	Subdomain string `pulumi:"subdomain"`
}

type GetSourceBambooHrConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceBambooHrConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceBambooHrConfiguration)(nil)).Elem()
}

func (o GetSourceBambooHrConfigurationOutput) ToGetSourceBambooHrConfigurationOutput() GetSourceBambooHrConfigurationOutput {
	return o
}

func (o GetSourceBambooHrConfigurationOutput) ToGetSourceBambooHrConfigurationOutputWithContext(ctx context.Context) GetSourceBambooHrConfigurationOutput {
	return o
}

// Api key of bamboo hr
func (o GetSourceBambooHrConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBambooHrConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Comma-separated list of fields to include in custom reports.
func (o GetSourceBambooHrConfigurationOutput) CustomReportsFields() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBambooHrConfiguration) string { return v.CustomReportsFields }).(pulumi.StringOutput)
}

// If true, the custom reports endpoint will include the default fields defined here: https://documentation.bamboohr.com/docs/list-of-field-names.
func (o GetSourceBambooHrConfigurationOutput) CustomReportsIncludeDefaultFields() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceBambooHrConfiguration) bool { return v.CustomReportsIncludeDefaultFields }).(pulumi.BoolOutput)
}

// must be one of ["bamboo-hr"]
func (o GetSourceBambooHrConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBambooHrConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Sub Domain of bamboo hr
func (o GetSourceBambooHrConfigurationOutput) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBambooHrConfiguration) string { return v.Subdomain }).(pulumi.StringOutput)
}

type GetSourceBigcommerceConfiguration struct {
	// Access Token for making authenticated requests.
	AccessToken string `pulumi:"accessToken"`
	// must be one of ["bigcommerce"]
	SourceType string `pulumi:"sourceType"`
	// The date you would like to replicate data. Format: YYYY-MM-DD.
	StartDate string `pulumi:"startDate"`
	// The hash code of the store. For https://api.bigcommerce.com/stores/HASH*CODE/v3/, The store's hash code is 'HASH*CODE'.
	StoreHash string `pulumi:"storeHash"`
}

type GetSourceBigcommerceConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceBigcommerceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceBigcommerceConfiguration)(nil)).Elem()
}

func (o GetSourceBigcommerceConfigurationOutput) ToGetSourceBigcommerceConfigurationOutput() GetSourceBigcommerceConfigurationOutput {
	return o
}

func (o GetSourceBigcommerceConfigurationOutput) ToGetSourceBigcommerceConfigurationOutputWithContext(ctx context.Context) GetSourceBigcommerceConfigurationOutput {
	return o
}

// Access Token for making authenticated requests.
func (o GetSourceBigcommerceConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBigcommerceConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// must be one of ["bigcommerce"]
func (o GetSourceBigcommerceConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBigcommerceConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date you would like to replicate data. Format: YYYY-MM-DD.
func (o GetSourceBigcommerceConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBigcommerceConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// The hash code of the store. For https://api.bigcommerce.com/stores/HASH*CODE/v3/, The store's hash code is 'HASH*CODE'.
func (o GetSourceBigcommerceConfigurationOutput) StoreHash() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBigcommerceConfiguration) string { return v.StoreHash }).(pulumi.StringOutput)
}

type GetSourceBigqueryConfiguration struct {
	// The contents of your Service Account Key JSON file. See the \n\ndocs\n\n for more information on how to obtain this key.
	CredentialsJson string `pulumi:"credentialsJson"`
	// The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.
	DatasetId string `pulumi:"datasetId"`
	// The GCP project ID for the project containing the target BigQuery dataset.
	ProjectId string `pulumi:"projectId"`
	// must be one of ["bigquery"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceBigqueryConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceBigqueryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceBigqueryConfiguration)(nil)).Elem()
}

func (o GetSourceBigqueryConfigurationOutput) ToGetSourceBigqueryConfigurationOutput() GetSourceBigqueryConfigurationOutput {
	return o
}

func (o GetSourceBigqueryConfigurationOutput) ToGetSourceBigqueryConfigurationOutputWithContext(ctx context.Context) GetSourceBigqueryConfigurationOutput {
	return o
}

// The contents of your Service Account Key JSON file. See the \n\ndocs\n\n for more information on how to obtain this key.
func (o GetSourceBigqueryConfigurationOutput) CredentialsJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBigqueryConfiguration) string { return v.CredentialsJson }).(pulumi.StringOutput)
}

// The dataset ID to search for tables and views. If you are only loading data from one dataset, setting this option could result in much faster schema discovery.
func (o GetSourceBigqueryConfigurationOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBigqueryConfiguration) string { return v.DatasetId }).(pulumi.StringOutput)
}

// The GCP project ID for the project containing the target BigQuery dataset.
func (o GetSourceBigqueryConfigurationOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBigqueryConfiguration) string { return v.ProjectId }).(pulumi.StringOutput)
}

// must be one of ["bigquery"]
func (o GetSourceBigqueryConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBigqueryConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceBingAdsConfiguration struct {
	// must be one of ["oauth2.0"]
	AuthMethod string `pulumi:"authMethod"`
	// The Client ID of your Microsoft Advertising developer application.
	ClientId string `pulumi:"clientId"`
	// The Client Secret of your Microsoft Advertising developer application.
	ClientSecret string `pulumi:"clientSecret"`
	// Developer token associated with user. See more info \n\n in the docs\n\n.
	DeveloperToken string `pulumi:"developerToken"`
	// Also known as attribution or conversion window. How far into the past to look for records (in days). If your conversion window has an hours/minutes granularity, round it up to the number of days exceeding. Used only for performance report streams in incremental mode.
	LookbackWindow int `pulumi:"lookbackWindow"`
	// Refresh Token to renew the expired Access Token.
	RefreshToken string `pulumi:"refreshToken"`
	// The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format.
	ReportsStartDate string `pulumi:"reportsStartDate"`
	// must be one of ["bing-ads"]
	SourceType string `pulumi:"sourceType"`
	// The Tenant ID of your Microsoft Advertising developer application. Set this to "common" unless you know you need a different value.
	TenantId string `pulumi:"tenantId"`
}

type GetSourceBingAdsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceBingAdsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceBingAdsConfiguration)(nil)).Elem()
}

func (o GetSourceBingAdsConfigurationOutput) ToGetSourceBingAdsConfigurationOutput() GetSourceBingAdsConfigurationOutput {
	return o
}

func (o GetSourceBingAdsConfigurationOutput) ToGetSourceBingAdsConfigurationOutputWithContext(ctx context.Context) GetSourceBingAdsConfigurationOutput {
	return o
}

// must be one of ["oauth2.0"]
func (o GetSourceBingAdsConfigurationOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBingAdsConfiguration) string { return v.AuthMethod }).(pulumi.StringOutput)
}

// The Client ID of your Microsoft Advertising developer application.
func (o GetSourceBingAdsConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBingAdsConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret of your Microsoft Advertising developer application.
func (o GetSourceBingAdsConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBingAdsConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// Developer token associated with user. See more info \n\n in the docs\n\n.
func (o GetSourceBingAdsConfigurationOutput) DeveloperToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBingAdsConfiguration) string { return v.DeveloperToken }).(pulumi.StringOutput)
}

// Also known as attribution or conversion window. How far into the past to look for records (in days). If your conversion window has an hours/minutes granularity, round it up to the number of days exceeding. Used only for performance report streams in incremental mode.
func (o GetSourceBingAdsConfigurationOutput) LookbackWindow() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceBingAdsConfiguration) int { return v.LookbackWindow }).(pulumi.IntOutput)
}

// Refresh Token to renew the expired Access Token.
func (o GetSourceBingAdsConfigurationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBingAdsConfiguration) string { return v.RefreshToken }).(pulumi.StringOutput)
}

// The start date from which to begin replicating report data. Any data generated before this date will not be replicated in reports. This is a UTC date in YYYY-MM-DD format.
func (o GetSourceBingAdsConfigurationOutput) ReportsStartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBingAdsConfiguration) string { return v.ReportsStartDate }).(pulumi.StringOutput)
}

// must be one of ["bing-ads"]
func (o GetSourceBingAdsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBingAdsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The Tenant ID of your Microsoft Advertising developer application. Set this to "common" unless you know you need a different value.
func (o GetSourceBingAdsConfigurationOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBingAdsConfiguration) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetSourceBraintreeConfiguration struct {
	// must be one of ["Development", "Sandbox", "Qa", "Production"]
	// Environment specifies where the data will come from.
	Environment string `pulumi:"environment"`
	// The unique identifier for your entire gateway account. See the \n\ndocs\n\n for more information on how to obtain this ID.
	MerchantId string `pulumi:"merchantId"`
	// Braintree Private Key. See the \n\ndocs\n\n for more information on how to obtain this key.
	PrivateKey string `pulumi:"privateKey"`
	// Braintree Public Key. See the \n\ndocs\n\n for more information on how to obtain this key.
	PublicKey string `pulumi:"publicKey"`
	// must be one of ["braintree"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceBraintreeConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceBraintreeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceBraintreeConfiguration)(nil)).Elem()
}

func (o GetSourceBraintreeConfigurationOutput) ToGetSourceBraintreeConfigurationOutput() GetSourceBraintreeConfigurationOutput {
	return o
}

func (o GetSourceBraintreeConfigurationOutput) ToGetSourceBraintreeConfigurationOutputWithContext(ctx context.Context) GetSourceBraintreeConfigurationOutput {
	return o
}

// must be one of ["Development", "Sandbox", "Qa", "Production"]
// Environment specifies where the data will come from.
func (o GetSourceBraintreeConfigurationOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBraintreeConfiguration) string { return v.Environment }).(pulumi.StringOutput)
}

// The unique identifier for your entire gateway account. See the \n\ndocs\n\n for more information on how to obtain this ID.
func (o GetSourceBraintreeConfigurationOutput) MerchantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBraintreeConfiguration) string { return v.MerchantId }).(pulumi.StringOutput)
}

// Braintree Private Key. See the \n\ndocs\n\n for more information on how to obtain this key.
func (o GetSourceBraintreeConfigurationOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBraintreeConfiguration) string { return v.PrivateKey }).(pulumi.StringOutput)
}

// Braintree Public Key. See the \n\ndocs\n\n for more information on how to obtain this key.
func (o GetSourceBraintreeConfigurationOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBraintreeConfiguration) string { return v.PublicKey }).(pulumi.StringOutput)
}

// must be one of ["braintree"]
func (o GetSourceBraintreeConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBraintreeConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceBraintreeConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBraintreeConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceBrazeConfiguration struct {
	// Braze REST API key
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["braze"]
	SourceType string `pulumi:"sourceType"`
	// Rows after this date will be synced
	StartDate string `pulumi:"startDate"`
	// Braze REST API endpoint
	Url string `pulumi:"url"`
}

type GetSourceBrazeConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceBrazeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceBrazeConfiguration)(nil)).Elem()
}

func (o GetSourceBrazeConfigurationOutput) ToGetSourceBrazeConfigurationOutput() GetSourceBrazeConfigurationOutput {
	return o
}

func (o GetSourceBrazeConfigurationOutput) ToGetSourceBrazeConfigurationOutputWithContext(ctx context.Context) GetSourceBrazeConfigurationOutput {
	return o
}

// Braze REST API key
func (o GetSourceBrazeConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBrazeConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["braze"]
func (o GetSourceBrazeConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBrazeConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Rows after this date will be synced
func (o GetSourceBrazeConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBrazeConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Braze REST API endpoint
func (o GetSourceBrazeConfigurationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceBrazeConfiguration) string { return v.Url }).(pulumi.StringOutput)
}

type GetSourceChargebeeConfiguration struct {
	// must be one of ["1.0", "2.0"]
	// Product Catalog version of your Chargebee site. Instructions on how to find your version you may find \n\nhere\n\n under `API Version` section.
	ProductCatalog string `pulumi:"productCatalog"`
	// The site prefix for your Chargebee instance.
	Site string `pulumi:"site"`
	// Chargebee API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
	SiteApiKey string `pulumi:"siteApiKey"`
	// must be one of ["chargebee"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2021-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceChargebeeConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceChargebeeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceChargebeeConfiguration)(nil)).Elem()
}

func (o GetSourceChargebeeConfigurationOutput) ToGetSourceChargebeeConfigurationOutput() GetSourceChargebeeConfigurationOutput {
	return o
}

func (o GetSourceChargebeeConfigurationOutput) ToGetSourceChargebeeConfigurationOutputWithContext(ctx context.Context) GetSourceChargebeeConfigurationOutput {
	return o
}

// must be one of ["1.0", "2.0"]
// Product Catalog version of your Chargebee site. Instructions on how to find your version you may find \n\nhere\n\n under `API Version` section.
func (o GetSourceChargebeeConfigurationOutput) ProductCatalog() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceChargebeeConfiguration) string { return v.ProductCatalog }).(pulumi.StringOutput)
}

// The site prefix for your Chargebee instance.
func (o GetSourceChargebeeConfigurationOutput) Site() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceChargebeeConfiguration) string { return v.Site }).(pulumi.StringOutput)
}

// Chargebee API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
func (o GetSourceChargebeeConfigurationOutput) SiteApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceChargebeeConfiguration) string { return v.SiteApiKey }).(pulumi.StringOutput)
}

// must be one of ["chargebee"]
func (o GetSourceChargebeeConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceChargebeeConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2021-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceChargebeeConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceChargebeeConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceChartmogulConfiguration struct {
	// Your Chartmogul API key. See \n\n the docs \n\n for info on how to obtain this.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["day", "week", "month", "quarter"]
	// Some APIs such as \n\nMetrics\n\n require intervals to cluster data.
	Interval string `pulumi:"interval"`
	// must be one of ["chartmogul"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. When feasible, any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceChartmogulConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceChartmogulConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceChartmogulConfiguration)(nil)).Elem()
}

func (o GetSourceChartmogulConfigurationOutput) ToGetSourceChartmogulConfigurationOutput() GetSourceChartmogulConfigurationOutput {
	return o
}

func (o GetSourceChartmogulConfigurationOutput) ToGetSourceChartmogulConfigurationOutputWithContext(ctx context.Context) GetSourceChartmogulConfigurationOutput {
	return o
}

// Your Chartmogul API key. See \n\n the docs \n\n for info on how to obtain this.
func (o GetSourceChartmogulConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceChartmogulConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["day", "week", "month", "quarter"]
// Some APIs such as \n\nMetrics\n\n require intervals to cluster data.
func (o GetSourceChartmogulConfigurationOutput) Interval() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceChartmogulConfiguration) string { return v.Interval }).(pulumi.StringOutput)
}

// must be one of ["chartmogul"]
func (o GetSourceChartmogulConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceChartmogulConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. When feasible, any data before this date will not be replicated.
func (o GetSourceChartmogulConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceChartmogulConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceClickhouseConfiguration struct {
	// The name of the database.
	Database string `pulumi:"database"`
	// The host endpoint of the Clickhouse cluster.
	Host string `pulumi:"host"`
	// The password associated with this username.
	Password string `pulumi:"password"`
	// The port of the database.
	Port int `pulumi:"port"`
	// must be one of ["clickhouse"]
	SourceType string `pulumi:"sourceType"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetSourceClickhouseConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// The username which is used to access the database.
	Username string `pulumi:"username"`
}

type GetSourceClickhouseConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceClickhouseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceClickhouseConfiguration)(nil)).Elem()
}

func (o GetSourceClickhouseConfigurationOutput) ToGetSourceClickhouseConfigurationOutput() GetSourceClickhouseConfigurationOutput {
	return o
}

func (o GetSourceClickhouseConfigurationOutput) ToGetSourceClickhouseConfigurationOutputWithContext(ctx context.Context) GetSourceClickhouseConfigurationOutput {
	return o
}

// The name of the database.
func (o GetSourceClickhouseConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// The host endpoint of the Clickhouse cluster.
func (o GetSourceClickhouseConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// The password associated with this username.
func (o GetSourceClickhouseConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The port of the database.
func (o GetSourceClickhouseConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// must be one of ["clickhouse"]
func (o GetSourceClickhouseConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetSourceClickhouseConfigurationOutput) TunnelMethod() GetSourceClickhouseConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfiguration) GetSourceClickhouseConfigurationTunnelMethod {
		return v.TunnelMethod
	}).(GetSourceClickhouseConfigurationTunnelMethodOutput)
}

// The username which is used to access the database.
func (o GetSourceClickhouseConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceClickhouseConfigurationTunnelMethod struct {
	SourceClickhouseSshTunnelMethodNoTunnel                     GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel                     `pulumi:"sourceClickhouseSshTunnelMethodNoTunnel"`
	SourceClickhouseSshTunnelMethodPasswordAuthentication       GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication       `pulumi:"sourceClickhouseSshTunnelMethodPasswordAuthentication"`
	SourceClickhouseSshTunnelMethodSshKeyAuthentication         GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication         `pulumi:"sourceClickhouseSshTunnelMethodSshKeyAuthentication"`
	SourceClickhouseUpdateSshTunnelMethodNoTunnel               GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel               `pulumi:"sourceClickhouseUpdateSshTunnelMethodNoTunnel"`
	SourceClickhouseUpdateSshTunnelMethodPasswordAuthentication GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication `pulumi:"sourceClickhouseUpdateSshTunnelMethodPasswordAuthentication"`
	SourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication   GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"sourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetSourceClickhouseConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetSourceClickhouseConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceClickhouseConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetSourceClickhouseConfigurationTunnelMethodOutput) ToGetSourceClickhouseConfigurationTunnelMethodOutput() GetSourceClickhouseConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodOutput) ToGetSourceClickhouseConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetSourceClickhouseConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodOutput) SourceClickhouseSshTunnelMethodNoTunnel() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethod) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel {
		return v.SourceClickhouseSshTunnelMethodNoTunnel
	}).(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodOutput) SourceClickhouseSshTunnelMethodPasswordAuthentication() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethod) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication {
		return v.SourceClickhouseSshTunnelMethodPasswordAuthentication
	}).(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodOutput) SourceClickhouseSshTunnelMethodSshKeyAuthentication() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethod) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication {
		return v.SourceClickhouseSshTunnelMethodSshKeyAuthentication
	}).(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodOutput) SourceClickhouseUpdateSshTunnelMethodNoTunnel() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethod) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel {
		return v.SourceClickhouseUpdateSshTunnelMethodNoTunnel
	}).(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodOutput) SourceClickhouseUpdateSshTunnelMethodPasswordAuthentication() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethod) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication {
		return v.SourceClickhouseUpdateSshTunnelMethodPasswordAuthentication
	}).(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodOutput) SourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethod) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication {
		return v.SourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutput() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutput() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourceClickupApiConfiguration struct {
	// Every ClickUp API call required authentication. This field is your personal API token. See \n\nhere\n\n.
	ApiToken string `pulumi:"apiToken"`
	// The ID of your folder in your space. Retrieve it from the `/space/{space_id}/folder` of the ClickUp API. See \n\nhere\n\n.
	FolderId string `pulumi:"folderId"`
	// Include or exclude closed tasks. By default, they are excluded. See \n\nhere\n\n.
	IncludeClosedTasks bool `pulumi:"includeClosedTasks"`
	// The ID of your list in your folder. Retrieve it from the `/folder/{folder_id}/list` of the ClickUp API. See \n\nhere\n\n.
	ListId string `pulumi:"listId"`
	// must be one of ["clickup-api"]
	SourceType string `pulumi:"sourceType"`
	// The ID of your space in your workspace. Retrieve it from the `/team/{team_id}/space` of the ClickUp API. See \n\nhere\n\n.
	SpaceId string `pulumi:"spaceId"`
	// The ID of your team in ClickUp. Retrieve it from the `/team` of the ClickUp API. See \n\nhere\n\n.
	TeamId string `pulumi:"teamId"`
}

type GetSourceClickupApiConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceClickupApiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceClickupApiConfiguration)(nil)).Elem()
}

func (o GetSourceClickupApiConfigurationOutput) ToGetSourceClickupApiConfigurationOutput() GetSourceClickupApiConfigurationOutput {
	return o
}

func (o GetSourceClickupApiConfigurationOutput) ToGetSourceClickupApiConfigurationOutputWithContext(ctx context.Context) GetSourceClickupApiConfigurationOutput {
	return o
}

// Every ClickUp API call required authentication. This field is your personal API token. See \n\nhere\n\n.
func (o GetSourceClickupApiConfigurationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickupApiConfiguration) string { return v.ApiToken }).(pulumi.StringOutput)
}

// The ID of your folder in your space. Retrieve it from the `/space/{space_id}/folder` of the ClickUp API. See \n\nhere\n\n.
func (o GetSourceClickupApiConfigurationOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickupApiConfiguration) string { return v.FolderId }).(pulumi.StringOutput)
}

// Include or exclude closed tasks. By default, they are excluded. See \n\nhere\n\n.
func (o GetSourceClickupApiConfigurationOutput) IncludeClosedTasks() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceClickupApiConfiguration) bool { return v.IncludeClosedTasks }).(pulumi.BoolOutput)
}

// The ID of your list in your folder. Retrieve it from the `/folder/{folder_id}/list` of the ClickUp API. See \n\nhere\n\n.
func (o GetSourceClickupApiConfigurationOutput) ListId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickupApiConfiguration) string { return v.ListId }).(pulumi.StringOutput)
}

// must be one of ["clickup-api"]
func (o GetSourceClickupApiConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickupApiConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The ID of your space in your workspace. Retrieve it from the `/team/{team_id}/space` of the ClickUp API. See \n\nhere\n\n.
func (o GetSourceClickupApiConfigurationOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickupApiConfiguration) string { return v.SpaceId }).(pulumi.StringOutput)
}

// The ID of your team in ClickUp. Retrieve it from the `/team` of the ClickUp API. See \n\nhere\n\n.
func (o GetSourceClickupApiConfigurationOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClickupApiConfiguration) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetSourceClockifyConfiguration struct {
	// You can get your api accessKey \n\nhere\n\n This API is Case Sensitive.
	ApiKey string `pulumi:"apiKey"`
	// The URL for the Clockify API. This should only need to be modified if connecting to an enterprise version of Clockify.
	ApiUrl string `pulumi:"apiUrl"`
	// must be one of ["clockify"]
	SourceType string `pulumi:"sourceType"`
	// WorkSpace Id
	WorkspaceId string `pulumi:"workspaceId"`
}

type GetSourceClockifyConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceClockifyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceClockifyConfiguration)(nil)).Elem()
}

func (o GetSourceClockifyConfigurationOutput) ToGetSourceClockifyConfigurationOutput() GetSourceClockifyConfigurationOutput {
	return o
}

func (o GetSourceClockifyConfigurationOutput) ToGetSourceClockifyConfigurationOutputWithContext(ctx context.Context) GetSourceClockifyConfigurationOutput {
	return o
}

// You can get your api accessKey \n\nhere\n\n This API is Case Sensitive.
func (o GetSourceClockifyConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClockifyConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// The URL for the Clockify API. This should only need to be modified if connecting to an enterprise version of Clockify.
func (o GetSourceClockifyConfigurationOutput) ApiUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClockifyConfiguration) string { return v.ApiUrl }).(pulumi.StringOutput)
}

// must be one of ["clockify"]
func (o GetSourceClockifyConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClockifyConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// WorkSpace Id
func (o GetSourceClockifyConfigurationOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceClockifyConfiguration) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type GetSourceCloseComConfiguration struct {
	// Close.com API key (usually starts with 'api_'; find yours \n\nhere\n\n).
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["close-com"]
	SourceType string `pulumi:"sourceType"`
	// The start date to sync data; all data after this date will be replicated. Leave blank to retrieve all the data available in the account. Format: YYYY-MM-DD.
	StartDate string `pulumi:"startDate"`
}

type GetSourceCloseComConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceCloseComConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceCloseComConfiguration)(nil)).Elem()
}

func (o GetSourceCloseComConfigurationOutput) ToGetSourceCloseComConfigurationOutput() GetSourceCloseComConfigurationOutput {
	return o
}

func (o GetSourceCloseComConfigurationOutput) ToGetSourceCloseComConfigurationOutputWithContext(ctx context.Context) GetSourceCloseComConfigurationOutput {
	return o
}

// Close.com API key (usually starts with 'api_'; find yours \n\nhere\n\n).
func (o GetSourceCloseComConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCloseComConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["close-com"]
func (o GetSourceCloseComConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCloseComConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The start date to sync data; all data after this date will be replicated. Leave blank to retrieve all the data available in the account. Format: YYYY-MM-DD.
func (o GetSourceCloseComConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCloseComConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceCodaConfiguration struct {
	// Bearer token
	AuthToken string `pulumi:"authToken"`
	// must be one of ["coda"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceCodaConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceCodaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceCodaConfiguration)(nil)).Elem()
}

func (o GetSourceCodaConfigurationOutput) ToGetSourceCodaConfigurationOutput() GetSourceCodaConfigurationOutput {
	return o
}

func (o GetSourceCodaConfigurationOutput) ToGetSourceCodaConfigurationOutputWithContext(ctx context.Context) GetSourceCodaConfigurationOutput {
	return o
}

// Bearer token
func (o GetSourceCodaConfigurationOutput) AuthToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCodaConfiguration) string { return v.AuthToken }).(pulumi.StringOutput)
}

// must be one of ["coda"]
func (o GetSourceCodaConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCodaConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceCoinApiConfiguration struct {
	// API Key
	ApiKey string `pulumi:"apiKey"`
	// The end date in ISO 8601 format. If not supplied, data will be returned
	// from the start date to the current time, or when the count of result
	// elements reaches its limit.
	EndDate string `pulumi:"endDate"`
	// must be one of ["sandbox", "production"]
	// The environment to use. Either sandbox or production.
	Environment string `pulumi:"environment"`
	// The maximum number of elements to return. If not supplied, the default
	// is 100. For numbers larger than 100, each 100 items is counted as one
	// request for pricing purposes. Maximum value is 100000.
	Limit int `pulumi:"limit"`
	// The period to use. See the documentation for a list. https://docs.coinapi.io/#list-all-periods-get
	Period string `pulumi:"period"`
	// must be one of ["coin-api"]
	SourceType string `pulumi:"sourceType"`
	// The start date in ISO 8601 format.
	StartDate string `pulumi:"startDate"`
	// The symbol ID to use. See the documentation for a list.
	// https://docs.coinapi.io/#list-all-symbols-get
	SymbolId string `pulumi:"symbolId"`
}

type GetSourceCoinApiConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceCoinApiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceCoinApiConfiguration)(nil)).Elem()
}

func (o GetSourceCoinApiConfigurationOutput) ToGetSourceCoinApiConfigurationOutput() GetSourceCoinApiConfigurationOutput {
	return o
}

func (o GetSourceCoinApiConfigurationOutput) ToGetSourceCoinApiConfigurationOutputWithContext(ctx context.Context) GetSourceCoinApiConfigurationOutput {
	return o
}

// API Key
func (o GetSourceCoinApiConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCoinApiConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// The end date in ISO 8601 format. If not supplied, data will be returned
// from the start date to the current time, or when the count of result
// elements reaches its limit.
func (o GetSourceCoinApiConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCoinApiConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// must be one of ["sandbox", "production"]
// The environment to use. Either sandbox or production.
func (o GetSourceCoinApiConfigurationOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCoinApiConfiguration) string { return v.Environment }).(pulumi.StringOutput)
}

// The maximum number of elements to return. If not supplied, the default
// is 100. For numbers larger than 100, each 100 items is counted as one
// request for pricing purposes. Maximum value is 100000.
func (o GetSourceCoinApiConfigurationOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceCoinApiConfiguration) int { return v.Limit }).(pulumi.IntOutput)
}

// The period to use. See the documentation for a list. https://docs.coinapi.io/#list-all-periods-get
func (o GetSourceCoinApiConfigurationOutput) Period() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCoinApiConfiguration) string { return v.Period }).(pulumi.StringOutput)
}

// must be one of ["coin-api"]
func (o GetSourceCoinApiConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCoinApiConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The start date in ISO 8601 format.
func (o GetSourceCoinApiConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCoinApiConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// The symbol ID to use. See the documentation for a list.
// https://docs.coinapi.io/#list-all-symbols-get
func (o GetSourceCoinApiConfigurationOutput) SymbolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCoinApiConfiguration) string { return v.SymbolId }).(pulumi.StringOutput)
}

type GetSourceCoinmarketcapConfiguration struct {
	// Your API Key. See \n\nhere\n\n. The token is case sensitive.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["latest", "historical"]
	// /latest: Latest market ticker quotes and averages for cryptocurrencies and exchanges. /historical: Intervals of historic market data like OHLCV data or data for use in charting libraries. See \n\nhere\n\n.
	DataType string `pulumi:"dataType"`
	// must be one of ["coinmarketcap"]
	SourceType string `pulumi:"sourceType"`
	// Cryptocurrency symbols. (only used for quotes stream)
	Symbols []string `pulumi:"symbols"`
}

type GetSourceCoinmarketcapConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceCoinmarketcapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceCoinmarketcapConfiguration)(nil)).Elem()
}

func (o GetSourceCoinmarketcapConfigurationOutput) ToGetSourceCoinmarketcapConfigurationOutput() GetSourceCoinmarketcapConfigurationOutput {
	return o
}

func (o GetSourceCoinmarketcapConfigurationOutput) ToGetSourceCoinmarketcapConfigurationOutputWithContext(ctx context.Context) GetSourceCoinmarketcapConfigurationOutput {
	return o
}

// Your API Key. See \n\nhere\n\n. The token is case sensitive.
func (o GetSourceCoinmarketcapConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCoinmarketcapConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["latest", "historical"]
// /latest: Latest market ticker quotes and averages for cryptocurrencies and exchanges. /historical: Intervals of historic market data like OHLCV data or data for use in charting libraries. See \n\nhere\n\n.
func (o GetSourceCoinmarketcapConfigurationOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCoinmarketcapConfiguration) string { return v.DataType }).(pulumi.StringOutput)
}

// must be one of ["coinmarketcap"]
func (o GetSourceCoinmarketcapConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceCoinmarketcapConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Cryptocurrency symbols. (only used for quotes stream)
func (o GetSourceCoinmarketcapConfigurationOutput) Symbols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceCoinmarketcapConfiguration) []string { return v.Symbols }).(pulumi.StringArrayOutput)
}

type GetSourceConfigcatConfiguration struct {
	// Basic auth password. See \n\nhere\n\n.
	Password string `pulumi:"password"`
	// must be one of ["configcat"]
	SourceType string `pulumi:"sourceType"`
	// Basic auth user name. See \n\nhere\n\n.
	Username string `pulumi:"username"`
}

type GetSourceConfigcatConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceConfigcatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceConfigcatConfiguration)(nil)).Elem()
}

func (o GetSourceConfigcatConfigurationOutput) ToGetSourceConfigcatConfigurationOutput() GetSourceConfigcatConfigurationOutput {
	return o
}

func (o GetSourceConfigcatConfigurationOutput) ToGetSourceConfigcatConfigurationOutputWithContext(ctx context.Context) GetSourceConfigcatConfigurationOutput {
	return o
}

// Basic auth password. See \n\nhere\n\n.
func (o GetSourceConfigcatConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceConfigcatConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// must be one of ["configcat"]
func (o GetSourceConfigcatConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceConfigcatConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Basic auth user name. See \n\nhere\n\n.
func (o GetSourceConfigcatConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceConfigcatConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceConfluenceConfiguration struct {
	// Please follow the Jira confluence for generating an API token: \n\ngenerating an API token\n\n.
	ApiToken string `pulumi:"apiToken"`
	// Your Confluence domain name
	DomainName string `pulumi:"domainName"`
	// Your Confluence login email
	Email string `pulumi:"email"`
	// must be one of ["confluence"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceConfluenceConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceConfluenceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceConfluenceConfiguration)(nil)).Elem()
}

func (o GetSourceConfluenceConfigurationOutput) ToGetSourceConfluenceConfigurationOutput() GetSourceConfluenceConfigurationOutput {
	return o
}

func (o GetSourceConfluenceConfigurationOutput) ToGetSourceConfluenceConfigurationOutputWithContext(ctx context.Context) GetSourceConfluenceConfigurationOutput {
	return o
}

// Please follow the Jira confluence for generating an API token: \n\ngenerating an API token\n\n.
func (o GetSourceConfluenceConfigurationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceConfluenceConfiguration) string { return v.ApiToken }).(pulumi.StringOutput)
}

// Your Confluence domain name
func (o GetSourceConfluenceConfigurationOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceConfluenceConfiguration) string { return v.DomainName }).(pulumi.StringOutput)
}

// Your Confluence login email
func (o GetSourceConfluenceConfigurationOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceConfluenceConfiguration) string { return v.Email }).(pulumi.StringOutput)
}

// must be one of ["confluence"]
func (o GetSourceConfluenceConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceConfluenceConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceConvexConfiguration struct {
	// API access key used to retrieve data from Convex.
	AccessKey     string `pulumi:"accessKey"`
	DeploymentUrl string `pulumi:"deploymentUrl"`
	// must be one of ["convex"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceConvexConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceConvexConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceConvexConfiguration)(nil)).Elem()
}

func (o GetSourceConvexConfigurationOutput) ToGetSourceConvexConfigurationOutput() GetSourceConvexConfigurationOutput {
	return o
}

func (o GetSourceConvexConfigurationOutput) ToGetSourceConvexConfigurationOutputWithContext(ctx context.Context) GetSourceConvexConfigurationOutput {
	return o
}

// API access key used to retrieve data from Convex.
func (o GetSourceConvexConfigurationOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceConvexConfiguration) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o GetSourceConvexConfigurationOutput) DeploymentUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceConvexConfiguration) string { return v.DeploymentUrl }).(pulumi.StringOutput)
}

// must be one of ["convex"]
func (o GetSourceConvexConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceConvexConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceDatadogConfiguration struct {
	// Datadog API key
	ApiKey string `pulumi:"apiKey"`
	// Datadog application key
	ApplicationKey string `pulumi:"applicationKey"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Data after this date will  not be replicated. An empty value will represent the current datetime for each  execution. This just applies to Incremental syncs.
	EndDate string `pulumi:"endDate"`
	// Maximum number of records to collect per request.
	MaxRecordsPerRequest int `pulumi:"maxRecordsPerRequest"`
	// List of queries to be run and used as inputs.
	Queries []GetSourceDatadogConfigurationQuery `pulumi:"queries"`
	// The search query. This just applies to Incremental syncs. If empty, it'll collect all logs.
	Query string `pulumi:"query"`
	// must be one of ["datadoghq.com", "us3.datadoghq.com", "us5.datadoghq.com", "datadoghq.eu", "ddog-gov.com"]
	// The site where Datadog data resides in.
	Site string `pulumi:"site"`
	// must be one of ["datadog"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. This just applies to Incremental syncs.
	StartDate string `pulumi:"startDate"`
}

type GetSourceDatadogConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceDatadogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceDatadogConfiguration)(nil)).Elem()
}

func (o GetSourceDatadogConfigurationOutput) ToGetSourceDatadogConfigurationOutput() GetSourceDatadogConfigurationOutput {
	return o
}

func (o GetSourceDatadogConfigurationOutput) ToGetSourceDatadogConfigurationOutputWithContext(ctx context.Context) GetSourceDatadogConfigurationOutput {
	return o
}

// Datadog API key
func (o GetSourceDatadogConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatadogConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Datadog application key
func (o GetSourceDatadogConfigurationOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatadogConfiguration) string { return v.ApplicationKey }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Data after this date will  not be replicated. An empty value will represent the current datetime for each  execution. This just applies to Incremental syncs.
func (o GetSourceDatadogConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatadogConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// Maximum number of records to collect per request.
func (o GetSourceDatadogConfigurationOutput) MaxRecordsPerRequest() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceDatadogConfiguration) int { return v.MaxRecordsPerRequest }).(pulumi.IntOutput)
}

// List of queries to be run and used as inputs.
func (o GetSourceDatadogConfigurationOutput) Queries() GetSourceDatadogConfigurationQueryArrayOutput {
	return o.ApplyT(func(v GetSourceDatadogConfiguration) []GetSourceDatadogConfigurationQuery { return v.Queries }).(GetSourceDatadogConfigurationQueryArrayOutput)
}

// The search query. This just applies to Incremental syncs. If empty, it'll collect all logs.
func (o GetSourceDatadogConfigurationOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatadogConfiguration) string { return v.Query }).(pulumi.StringOutput)
}

// must be one of ["datadoghq.com", "us3.datadoghq.com", "us5.datadoghq.com", "datadoghq.eu", "ddog-gov.com"]
// The site where Datadog data resides in.
func (o GetSourceDatadogConfigurationOutput) Site() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatadogConfiguration) string { return v.Site }).(pulumi.StringOutput)
}

// must be one of ["datadog"]
func (o GetSourceDatadogConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatadogConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. This just applies to Incremental syncs.
func (o GetSourceDatadogConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatadogConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceDatadogConfigurationQuery struct {
	DataSource string `pulumi:"dataSource"`
	Name       string `pulumi:"name"`
	Query      string `pulumi:"query"`
}

type GetSourceDatadogConfigurationQueryOutput struct{ *pulumi.OutputState }

func (GetSourceDatadogConfigurationQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceDatadogConfigurationQuery)(nil)).Elem()
}

func (o GetSourceDatadogConfigurationQueryOutput) ToGetSourceDatadogConfigurationQueryOutput() GetSourceDatadogConfigurationQueryOutput {
	return o
}

func (o GetSourceDatadogConfigurationQueryOutput) ToGetSourceDatadogConfigurationQueryOutputWithContext(ctx context.Context) GetSourceDatadogConfigurationQueryOutput {
	return o
}

func (o GetSourceDatadogConfigurationQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatadogConfigurationQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

func (o GetSourceDatadogConfigurationQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatadogConfigurationQuery) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSourceDatadogConfigurationQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatadogConfigurationQuery) string { return v.Query }).(pulumi.StringOutput)
}

type GetSourceDatadogConfigurationQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSourceDatadogConfigurationQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSourceDatadogConfigurationQuery)(nil)).Elem()
}

func (o GetSourceDatadogConfigurationQueryArrayOutput) ToGetSourceDatadogConfigurationQueryArrayOutput() GetSourceDatadogConfigurationQueryArrayOutput {
	return o
}

func (o GetSourceDatadogConfigurationQueryArrayOutput) ToGetSourceDatadogConfigurationQueryArrayOutputWithContext(ctx context.Context) GetSourceDatadogConfigurationQueryArrayOutput {
	return o
}

func (o GetSourceDatadogConfigurationQueryArrayOutput) Index(i pulumi.IntInput) GetSourceDatadogConfigurationQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSourceDatadogConfigurationQuery {
		return vs[0].([]GetSourceDatadogConfigurationQuery)[vs[1].(int)]
	}).(GetSourceDatadogConfigurationQueryOutput)
}

type GetSourceDatascopeConfiguration struct {
	// API Key
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["datascope"]
	SourceType string `pulumi:"sourceType"`
	// Start date for the data to be replicated
	StartDate string `pulumi:"startDate"`
}

type GetSourceDatascopeConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceDatascopeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceDatascopeConfiguration)(nil)).Elem()
}

func (o GetSourceDatascopeConfigurationOutput) ToGetSourceDatascopeConfigurationOutput() GetSourceDatascopeConfigurationOutput {
	return o
}

func (o GetSourceDatascopeConfigurationOutput) ToGetSourceDatascopeConfigurationOutputWithContext(ctx context.Context) GetSourceDatascopeConfigurationOutput {
	return o
}

// API Key
func (o GetSourceDatascopeConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatascopeConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["datascope"]
func (o GetSourceDatascopeConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatascopeConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Start date for the data to be replicated
func (o GetSourceDatascopeConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDatascopeConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceDelightedConfiguration struct {
	// A Delighted API key.
	ApiKey string `pulumi:"apiKey"`
	// The date from which you'd like to replicate the data
	Since string `pulumi:"since"`
	// must be one of ["delighted"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceDelightedConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceDelightedConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceDelightedConfiguration)(nil)).Elem()
}

func (o GetSourceDelightedConfigurationOutput) ToGetSourceDelightedConfigurationOutput() GetSourceDelightedConfigurationOutput {
	return o
}

func (o GetSourceDelightedConfigurationOutput) ToGetSourceDelightedConfigurationOutputWithContext(ctx context.Context) GetSourceDelightedConfigurationOutput {
	return o
}

// A Delighted API key.
func (o GetSourceDelightedConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDelightedConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate the data
func (o GetSourceDelightedConfigurationOutput) Since() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDelightedConfiguration) string { return v.Since }).(pulumi.StringOutput)
}

// must be one of ["delighted"]
func (o GetSourceDelightedConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDelightedConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceDixaConfiguration struct {
	// Dixa API token
	ApiToken string `pulumi:"apiToken"`
	// Number of days to batch into one request. Max 31.
	BatchSize int `pulumi:"batchSize"`
	// must be one of ["dixa"]
	SourceType string `pulumi:"sourceType"`
	// The connector pulls records updated from this date onwards.
	StartDate string `pulumi:"startDate"`
}

type GetSourceDixaConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceDixaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceDixaConfiguration)(nil)).Elem()
}

func (o GetSourceDixaConfigurationOutput) ToGetSourceDixaConfigurationOutput() GetSourceDixaConfigurationOutput {
	return o
}

func (o GetSourceDixaConfigurationOutput) ToGetSourceDixaConfigurationOutputWithContext(ctx context.Context) GetSourceDixaConfigurationOutput {
	return o
}

// Dixa API token
func (o GetSourceDixaConfigurationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDixaConfiguration) string { return v.ApiToken }).(pulumi.StringOutput)
}

// Number of days to batch into one request. Max 31.
func (o GetSourceDixaConfigurationOutput) BatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceDixaConfiguration) int { return v.BatchSize }).(pulumi.IntOutput)
}

// must be one of ["dixa"]
func (o GetSourceDixaConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDixaConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The connector pulls records updated from this date onwards.
func (o GetSourceDixaConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDixaConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceDockerhubConfiguration struct {
	// Username of DockerHub person or organization (for https://hub.docker.com/v2/repositories/USERNAME/ API call)
	DockerUsername string `pulumi:"dockerUsername"`
	// must be one of ["dockerhub"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceDockerhubConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceDockerhubConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceDockerhubConfiguration)(nil)).Elem()
}

func (o GetSourceDockerhubConfigurationOutput) ToGetSourceDockerhubConfigurationOutput() GetSourceDockerhubConfigurationOutput {
	return o
}

func (o GetSourceDockerhubConfigurationOutput) ToGetSourceDockerhubConfigurationOutputWithContext(ctx context.Context) GetSourceDockerhubConfigurationOutput {
	return o
}

// Username of DockerHub person or organization (for https://hub.docker.com/v2/repositories/USERNAME/ API call)
func (o GetSourceDockerhubConfigurationOutput) DockerUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDockerhubConfiguration) string { return v.DockerUsername }).(pulumi.StringOutput)
}

// must be one of ["dockerhub"]
func (o GetSourceDockerhubConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDockerhubConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceDremioConfiguration struct {
	// API Key that is generated when you authenticate to Dremio API
	ApiKey string `pulumi:"apiKey"`
	// URL of your Dremio instance
	BaseUrl string `pulumi:"baseUrl"`
	// must be one of ["dremio"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceDremioConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceDremioConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceDremioConfiguration)(nil)).Elem()
}

func (o GetSourceDremioConfigurationOutput) ToGetSourceDremioConfigurationOutput() GetSourceDremioConfigurationOutput {
	return o
}

func (o GetSourceDremioConfigurationOutput) ToGetSourceDremioConfigurationOutputWithContext(ctx context.Context) GetSourceDremioConfigurationOutput {
	return o
}

// API Key that is generated when you authenticate to Dremio API
func (o GetSourceDremioConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDremioConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// URL of your Dremio instance
func (o GetSourceDremioConfigurationOutput) BaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDremioConfiguration) string { return v.BaseUrl }).(pulumi.StringOutput)
}

// must be one of ["dremio"]
func (o GetSourceDremioConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDremioConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceDynamodbConfiguration struct {
	// The access key id to access Dynamodb. Airbyte requires read permissions to the database
	AccessKeyId string `pulumi:"accessKeyId"`
	// the URL of the Dynamodb database
	Endpoint string `pulumi:"endpoint"`
	// must be one of ["", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
	// The region of the Dynamodb database
	Region string `pulumi:"region"`
	// Comma separated reserved attribute names present in your tables
	ReservedAttributeNames string `pulumi:"reservedAttributeNames"`
	// The corresponding secret to the access key id.
	SecretAccessKey string `pulumi:"secretAccessKey"`
	// must be one of ["dynamodb"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceDynamodbConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceDynamodbConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceDynamodbConfiguration)(nil)).Elem()
}

func (o GetSourceDynamodbConfigurationOutput) ToGetSourceDynamodbConfigurationOutput() GetSourceDynamodbConfigurationOutput {
	return o
}

func (o GetSourceDynamodbConfigurationOutput) ToGetSourceDynamodbConfigurationOutputWithContext(ctx context.Context) GetSourceDynamodbConfigurationOutput {
	return o
}

// The access key id to access Dynamodb. Airbyte requires read permissions to the database
func (o GetSourceDynamodbConfigurationOutput) AccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDynamodbConfiguration) string { return v.AccessKeyId }).(pulumi.StringOutput)
}

// the URL of the Dynamodb database
func (o GetSourceDynamodbConfigurationOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDynamodbConfiguration) string { return v.Endpoint }).(pulumi.StringOutput)
}

// must be one of ["", "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "cn-north-1", "cn-northwest-1", "eu-central-1", "eu-north-1", "eu-south-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "me-south-1", "us-gov-east-1", "us-gov-west-1"]
// The region of the Dynamodb database
func (o GetSourceDynamodbConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDynamodbConfiguration) string { return v.Region }).(pulumi.StringOutput)
}

// Comma separated reserved attribute names present in your tables
func (o GetSourceDynamodbConfigurationOutput) ReservedAttributeNames() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDynamodbConfiguration) string { return v.ReservedAttributeNames }).(pulumi.StringOutput)
}

// The corresponding secret to the access key id.
func (o GetSourceDynamodbConfigurationOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDynamodbConfiguration) string { return v.SecretAccessKey }).(pulumi.StringOutput)
}

// must be one of ["dynamodb"]
func (o GetSourceDynamodbConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceDynamodbConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceE2eTestCloudConfiguration struct {
	// Number of records to emit per stream. Min 1. Max 100 billion.
	MaxMessages int `pulumi:"maxMessages"`
	// Interval between messages in ms. Min 0 ms. Max 60000 ms (1 minute).
	MessageIntervalMs int                                           `pulumi:"messageIntervalMs"`
	MockCatalog       GetSourceE2eTestCloudConfigurationMockCatalog `pulumi:"mockCatalog"`
	// When the seed is unspecified, the current time millis will be used as the seed. Range: [0, 1000000].
	Seed int `pulumi:"seed"`
	// must be one of ["e2e-test-cloud"]
	SourceType string `pulumi:"sourceType"`
	// must be one of ["CONTINUOUS_FEED"]
	Type string `pulumi:"type"`
}

type GetSourceE2eTestCloudConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceE2eTestCloudConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceE2eTestCloudConfiguration)(nil)).Elem()
}

func (o GetSourceE2eTestCloudConfigurationOutput) ToGetSourceE2eTestCloudConfigurationOutput() GetSourceE2eTestCloudConfigurationOutput {
	return o
}

func (o GetSourceE2eTestCloudConfigurationOutput) ToGetSourceE2eTestCloudConfigurationOutputWithContext(ctx context.Context) GetSourceE2eTestCloudConfigurationOutput {
	return o
}

// Number of records to emit per stream. Min 1. Max 100 billion.
func (o GetSourceE2eTestCloudConfigurationOutput) MaxMessages() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfiguration) int { return v.MaxMessages }).(pulumi.IntOutput)
}

// Interval between messages in ms. Min 0 ms. Max 60000 ms (1 minute).
func (o GetSourceE2eTestCloudConfigurationOutput) MessageIntervalMs() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfiguration) int { return v.MessageIntervalMs }).(pulumi.IntOutput)
}

func (o GetSourceE2eTestCloudConfigurationOutput) MockCatalog() GetSourceE2eTestCloudConfigurationMockCatalogOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfiguration) GetSourceE2eTestCloudConfigurationMockCatalog {
		return v.MockCatalog
	}).(GetSourceE2eTestCloudConfigurationMockCatalogOutput)
}

// When the seed is unspecified, the current time millis will be used as the seed. Range: [0, 1000000].
func (o GetSourceE2eTestCloudConfigurationOutput) Seed() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfiguration) int { return v.Seed }).(pulumi.IntOutput)
}

// must be one of ["e2e-test-cloud"]
func (o GetSourceE2eTestCloudConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// must be one of ["CONTINUOUS_FEED"]
func (o GetSourceE2eTestCloudConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

type GetSourceE2eTestCloudConfigurationMockCatalog struct {
	SourceE2eTestCloudMockCatalogMultiSchema        GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema        `pulumi:"sourceE2eTestCloudMockCatalogMultiSchema"`
	SourceE2eTestCloudMockCatalogSingleSchema       GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema       `pulumi:"sourceE2eTestCloudMockCatalogSingleSchema"`
	SourceE2eTestCloudUpdateMockCatalogMultiSchema  GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema  `pulumi:"sourceE2eTestCloudUpdateMockCatalogMultiSchema"`
	SourceE2eTestCloudUpdateMockCatalogSingleSchema GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema `pulumi:"sourceE2eTestCloudUpdateMockCatalogSingleSchema"`
}

type GetSourceE2eTestCloudConfigurationMockCatalogOutput struct{ *pulumi.OutputState }

func (GetSourceE2eTestCloudConfigurationMockCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceE2eTestCloudConfigurationMockCatalog)(nil)).Elem()
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogOutput) ToGetSourceE2eTestCloudConfigurationMockCatalogOutput() GetSourceE2eTestCloudConfigurationMockCatalogOutput {
	return o
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogOutput) ToGetSourceE2eTestCloudConfigurationMockCatalogOutputWithContext(ctx context.Context) GetSourceE2eTestCloudConfigurationMockCatalogOutput {
	return o
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogOutput) SourceE2eTestCloudMockCatalogMultiSchema() GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalog) GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema {
		return v.SourceE2eTestCloudMockCatalogMultiSchema
	}).(GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput)
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogOutput) SourceE2eTestCloudMockCatalogSingleSchema() GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalog) GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema {
		return v.SourceE2eTestCloudMockCatalogSingleSchema
	}).(GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput)
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogOutput) SourceE2eTestCloudUpdateMockCatalogMultiSchema() GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalog) GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema {
		return v.SourceE2eTestCloudUpdateMockCatalogMultiSchema
	}).(GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput)
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogOutput) SourceE2eTestCloudUpdateMockCatalogSingleSchema() GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalog) GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema {
		return v.SourceE2eTestCloudUpdateMockCatalogSingleSchema
	}).(GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput)
}

type GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema struct {
	StreamSchemas string `pulumi:"streamSchemas"`
	Type          string `pulumi:"type"`
}

type GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput struct{ *pulumi.OutputState }

func (GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema)(nil)).Elem()
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput) ToGetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput() GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput {
	return o
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput) ToGetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutputWithContext(ctx context.Context) GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput {
	return o
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput) StreamSchemas() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema) string {
		return v.StreamSchemas
	}).(pulumi.StringOutput)
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchema) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema struct {
	StreamDuplication int    `pulumi:"streamDuplication"`
	StreamName        string `pulumi:"streamName"`
	StreamSchema      string `pulumi:"streamSchema"`
	Type              string `pulumi:"type"`
}

type GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput struct{ *pulumi.OutputState }

func (GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema)(nil)).Elem()
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput) ToGetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput() GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput {
	return o
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput) ToGetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutputWithContext(ctx context.Context) GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput {
	return o
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput) StreamDuplication() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema) int {
		return v.StreamDuplication
	}).(pulumi.IntOutput)
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema) string {
		return v.StreamName
	}).(pulumi.StringOutput)
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput) StreamSchema() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema) string {
		return v.StreamSchema
	}).(pulumi.StringOutput)
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchema) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema struct {
	StreamSchemas string `pulumi:"streamSchemas"`
	Type          string `pulumi:"type"`
}

type GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput struct{ *pulumi.OutputState }

func (GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema)(nil)).Elem()
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput) ToGetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput() GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput {
	return o
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput) ToGetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutputWithContext(ctx context.Context) GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput {
	return o
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput) StreamSchemas() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema) string {
		return v.StreamSchemas
	}).(pulumi.StringOutput)
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchema) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema struct {
	StreamDuplication int    `pulumi:"streamDuplication"`
	StreamName        string `pulumi:"streamName"`
	StreamSchema      string `pulumi:"streamSchema"`
	Type              string `pulumi:"type"`
}

type GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput struct{ *pulumi.OutputState }

func (GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema)(nil)).Elem()
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput) ToGetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput() GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput {
	return o
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput) ToGetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutputWithContext(ctx context.Context) GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput {
	return o
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput) StreamDuplication() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema) int {
		return v.StreamDuplication
	}).(pulumi.IntOutput)
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema) string {
		return v.StreamName
	}).(pulumi.StringOutput)
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput) StreamSchema() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema) string {
		return v.StreamSchema
	}).(pulumi.StringOutput)
}

func (o GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchema) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetSourceEmailoctopusConfiguration struct {
	// EmailOctopus API Key. See the \n\ndocs\n\n for information on how to generate this key.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["emailoctopus"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceEmailoctopusConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceEmailoctopusConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceEmailoctopusConfiguration)(nil)).Elem()
}

func (o GetSourceEmailoctopusConfigurationOutput) ToGetSourceEmailoctopusConfigurationOutput() GetSourceEmailoctopusConfigurationOutput {
	return o
}

func (o GetSourceEmailoctopusConfigurationOutput) ToGetSourceEmailoctopusConfigurationOutputWithContext(ctx context.Context) GetSourceEmailoctopusConfigurationOutput {
	return o
}

// EmailOctopus API Key. See the \n\ndocs\n\n for information on how to generate this key.
func (o GetSourceEmailoctopusConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceEmailoctopusConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["emailoctopus"]
func (o GetSourceEmailoctopusConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceEmailoctopusConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceExchangeRatesConfiguration struct {
	// Your API Key. See \n\nhere\n\n. The key is case sensitive.
	AccessKey string `pulumi:"accessKey"`
	// ISO reference currency. See \n\nhere\n\n. Free plan doesn't support Source Currency Switching, default base currency is EUR
	Base string `pulumi:"base"`
	// Ignore weekends? (Exchanges don't run on weekends)
	IgnoreWeekends bool `pulumi:"ignoreWeekends"`
	// must be one of ["exchange-rates"]
	SourceType string `pulumi:"sourceType"`
	// Start getting data from that date.
	StartDate string `pulumi:"startDate"`
}

type GetSourceExchangeRatesConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceExchangeRatesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceExchangeRatesConfiguration)(nil)).Elem()
}

func (o GetSourceExchangeRatesConfigurationOutput) ToGetSourceExchangeRatesConfigurationOutput() GetSourceExchangeRatesConfigurationOutput {
	return o
}

func (o GetSourceExchangeRatesConfigurationOutput) ToGetSourceExchangeRatesConfigurationOutputWithContext(ctx context.Context) GetSourceExchangeRatesConfigurationOutput {
	return o
}

// Your API Key. See \n\nhere\n\n. The key is case sensitive.
func (o GetSourceExchangeRatesConfigurationOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceExchangeRatesConfiguration) string { return v.AccessKey }).(pulumi.StringOutput)
}

// ISO reference currency. See \n\nhere\n\n. Free plan doesn't support Source Currency Switching, default base currency is EUR
func (o GetSourceExchangeRatesConfigurationOutput) Base() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceExchangeRatesConfiguration) string { return v.Base }).(pulumi.StringOutput)
}

// Ignore weekends? (Exchanges don't run on weekends)
func (o GetSourceExchangeRatesConfigurationOutput) IgnoreWeekends() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceExchangeRatesConfiguration) bool { return v.IgnoreWeekends }).(pulumi.BoolOutput)
}

// must be one of ["exchange-rates"]
func (o GetSourceExchangeRatesConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceExchangeRatesConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Start getting data from that date.
func (o GetSourceExchangeRatesConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceExchangeRatesConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceFacebookMarketingConfiguration struct {
	// The value of the generated access token. From your App’s Dashboard, click on "Marketing API" then "Tools". Select permissions \n\nads*management, ads*read, read*insights, business*management\n\n. Then click on "Get token". See the \n\ndocs\n\n for more information.
	AccessToken string `pulumi:"accessToken"`
	// The Facebook Ad account ID to use when pulling data from the Facebook Marketing API. Open your Meta Ads Manager. The Ad account ID number is in the account dropdown menu or in your browser's address bar. See the \n\ndocs\n\n for more information.
	AccountId string `pulumi:"accountId"`
	// Allows actionBreakdowns to be an empty list
	ActionBreakdownsAllowEmpty bool `pulumi:"actionBreakdownsAllowEmpty"`
	// The Client Id for your OAuth app
	ClientId string `pulumi:"clientId"`
	// The Client Secret for your OAuth app
	ClientSecret string `pulumi:"clientSecret"`
	// A list which contains ad statistics entries, each entry must have a name and can contains fields, breakdowns or action*breakdowns. Click on "add" to fill this field.
	CustomInsights []GetSourceFacebookMarketingConfigurationCustomInsight `pulumi:"customInsights"`
	// The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.
	EndDate string `pulumi:"endDate"`
	// Set to active if you want to fetch the thumbnail*url and store the result in thumbnail*data_url for each Ad Creative.
	FetchThumbnailImages bool `pulumi:"fetchThumbnailImages"`
	// Set to active if you want to include data from deleted Campaigns, Ads, and AdSets.
	IncludeDeleted bool `pulumi:"includeDeleted"`
	// The attribution window. Facebook freezes insight data 28 days after it was generated, which means that all data from the past 28 days may have changed since we last emitted it, so you can retrieve refreshed insights from the past by setting this parameter. If you set a custom lookback window value in Facebook account, please provide the same value here.
	InsightsLookbackWindow int `pulumi:"insightsLookbackWindow"`
	// Maximum batch size used when sending batch requests to Facebook API. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases.
	MaxBatchSize int `pulumi:"maxBatchSize"`
	// Page size used when sending requests to Facebook API to specify number of records per page when response has pagination. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases.
	PageSize int `pulumi:"pageSize"`
	// must be one of ["facebook-marketing"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceFacebookMarketingConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceFacebookMarketingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFacebookMarketingConfiguration)(nil)).Elem()
}

func (o GetSourceFacebookMarketingConfigurationOutput) ToGetSourceFacebookMarketingConfigurationOutput() GetSourceFacebookMarketingConfigurationOutput {
	return o
}

func (o GetSourceFacebookMarketingConfigurationOutput) ToGetSourceFacebookMarketingConfigurationOutputWithContext(ctx context.Context) GetSourceFacebookMarketingConfigurationOutput {
	return o
}

// The value of the generated access token. From your App’s Dashboard, click on "Marketing API" then "Tools". Select permissions \n\nads*management, ads*read, read*insights, business*management\n\n. Then click on "Get token". See the \n\ndocs\n\n for more information.
func (o GetSourceFacebookMarketingConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// The Facebook Ad account ID to use when pulling data from the Facebook Marketing API. Open your Meta Ads Manager. The Ad account ID number is in the account dropdown menu or in your browser's address bar. See the \n\ndocs\n\n for more information.
func (o GetSourceFacebookMarketingConfigurationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) string { return v.AccountId }).(pulumi.StringOutput)
}

// Allows actionBreakdowns to be an empty list
func (o GetSourceFacebookMarketingConfigurationOutput) ActionBreakdownsAllowEmpty() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) bool { return v.ActionBreakdownsAllowEmpty }).(pulumi.BoolOutput)
}

// The Client Id for your OAuth app
func (o GetSourceFacebookMarketingConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret for your OAuth app
func (o GetSourceFacebookMarketingConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// A list which contains ad statistics entries, each entry must have a name and can contains fields, breakdowns or action*breakdowns. Click on "add" to fill this field.
func (o GetSourceFacebookMarketingConfigurationOutput) CustomInsights() GetSourceFacebookMarketingConfigurationCustomInsightArrayOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) []GetSourceFacebookMarketingConfigurationCustomInsight {
		return v.CustomInsights
	}).(GetSourceFacebookMarketingConfigurationCustomInsightArrayOutput)
}

// The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated between the start date and this end date will be replicated. Not setting this option will result in always syncing the latest data.
func (o GetSourceFacebookMarketingConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// Set to active if you want to fetch the thumbnail*url and store the result in thumbnail*data_url for each Ad Creative.
func (o GetSourceFacebookMarketingConfigurationOutput) FetchThumbnailImages() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) bool { return v.FetchThumbnailImages }).(pulumi.BoolOutput)
}

// Set to active if you want to include data from deleted Campaigns, Ads, and AdSets.
func (o GetSourceFacebookMarketingConfigurationOutput) IncludeDeleted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) bool { return v.IncludeDeleted }).(pulumi.BoolOutput)
}

// The attribution window. Facebook freezes insight data 28 days after it was generated, which means that all data from the past 28 days may have changed since we last emitted it, so you can retrieve refreshed insights from the past by setting this parameter. If you set a custom lookback window value in Facebook account, please provide the same value here.
func (o GetSourceFacebookMarketingConfigurationOutput) InsightsLookbackWindow() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) int { return v.InsightsLookbackWindow }).(pulumi.IntOutput)
}

// Maximum batch size used when sending batch requests to Facebook API. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases.
func (o GetSourceFacebookMarketingConfigurationOutput) MaxBatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) int { return v.MaxBatchSize }).(pulumi.IntOutput)
}

// Page size used when sending requests to Facebook API to specify number of records per page when response has pagination. Most users do not need to set this field unless they specifically need to tune the connector to address specific issues or use cases.
func (o GetSourceFacebookMarketingConfigurationOutput) PageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) int { return v.PageSize }).(pulumi.IntOutput)
}

// must be one of ["facebook-marketing"]
func (o GetSourceFacebookMarketingConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
func (o GetSourceFacebookMarketingConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceFacebookMarketingConfigurationCustomInsight struct {
	ActionBreakdowns       []string `pulumi:"actionBreakdowns"`
	ActionReportTime       string   `pulumi:"actionReportTime"`
	Breakdowns             []string `pulumi:"breakdowns"`
	EndDate                string   `pulumi:"endDate"`
	Fields                 []string `pulumi:"fields"`
	InsightsLookbackWindow int      `pulumi:"insightsLookbackWindow"`
	Level                  string   `pulumi:"level"`
	Name                   string   `pulumi:"name"`
	StartDate              string   `pulumi:"startDate"`
	TimeIncrement          int      `pulumi:"timeIncrement"`
}

type GetSourceFacebookMarketingConfigurationCustomInsightOutput struct{ *pulumi.OutputState }

func (GetSourceFacebookMarketingConfigurationCustomInsightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFacebookMarketingConfigurationCustomInsight)(nil)).Elem()
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) ToGetSourceFacebookMarketingConfigurationCustomInsightOutput() GetSourceFacebookMarketingConfigurationCustomInsightOutput {
	return o
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) ToGetSourceFacebookMarketingConfigurationCustomInsightOutputWithContext(ctx context.Context) GetSourceFacebookMarketingConfigurationCustomInsightOutput {
	return o
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) ActionBreakdowns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfigurationCustomInsight) []string { return v.ActionBreakdowns }).(pulumi.StringArrayOutput)
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) ActionReportTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfigurationCustomInsight) string { return v.ActionReportTime }).(pulumi.StringOutput)
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) Breakdowns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfigurationCustomInsight) []string { return v.Breakdowns }).(pulumi.StringArrayOutput)
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfigurationCustomInsight) string { return v.EndDate }).(pulumi.StringOutput)
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfigurationCustomInsight) []string { return v.Fields }).(pulumi.StringArrayOutput)
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) InsightsLookbackWindow() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfigurationCustomInsight) int { return v.InsightsLookbackWindow }).(pulumi.IntOutput)
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfigurationCustomInsight) string { return v.Level }).(pulumi.StringOutput)
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfigurationCustomInsight) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfigurationCustomInsight) string { return v.StartDate }).(pulumi.StringOutput)
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightOutput) TimeIncrement() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFacebookMarketingConfigurationCustomInsight) int { return v.TimeIncrement }).(pulumi.IntOutput)
}

type GetSourceFacebookMarketingConfigurationCustomInsightArrayOutput struct{ *pulumi.OutputState }

func (GetSourceFacebookMarketingConfigurationCustomInsightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSourceFacebookMarketingConfigurationCustomInsight)(nil)).Elem()
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightArrayOutput) ToGetSourceFacebookMarketingConfigurationCustomInsightArrayOutput() GetSourceFacebookMarketingConfigurationCustomInsightArrayOutput {
	return o
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightArrayOutput) ToGetSourceFacebookMarketingConfigurationCustomInsightArrayOutputWithContext(ctx context.Context) GetSourceFacebookMarketingConfigurationCustomInsightArrayOutput {
	return o
}

func (o GetSourceFacebookMarketingConfigurationCustomInsightArrayOutput) Index(i pulumi.IntInput) GetSourceFacebookMarketingConfigurationCustomInsightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSourceFacebookMarketingConfigurationCustomInsight {
		return vs[0].([]GetSourceFacebookMarketingConfigurationCustomInsight)[vs[1].(int)]
	}).(GetSourceFacebookMarketingConfigurationCustomInsightOutput)
}

type GetSourceFacebookPagesConfiguration struct {
	// Facebook Page Access Token
	AccessToken string `pulumi:"accessToken"`
	// Page ID
	PageId string `pulumi:"pageId"`
	// must be one of ["facebook-pages"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceFacebookPagesConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceFacebookPagesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFacebookPagesConfiguration)(nil)).Elem()
}

func (o GetSourceFacebookPagesConfigurationOutput) ToGetSourceFacebookPagesConfigurationOutput() GetSourceFacebookPagesConfigurationOutput {
	return o
}

func (o GetSourceFacebookPagesConfigurationOutput) ToGetSourceFacebookPagesConfigurationOutputWithContext(ctx context.Context) GetSourceFacebookPagesConfigurationOutput {
	return o
}

// Facebook Page Access Token
func (o GetSourceFacebookPagesConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookPagesConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// Page ID
func (o GetSourceFacebookPagesConfigurationOutput) PageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookPagesConfiguration) string { return v.PageId }).(pulumi.StringOutput)
}

// must be one of ["facebook-pages"]
func (o GetSourceFacebookPagesConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFacebookPagesConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceFakerConfiguration struct {
	// Should the updatedAt values for every record be new each sync?  Setting this to false will case the source to stop emitting records after COUNT records have been emitted.
	AlwaysUpdated bool `pulumi:"alwaysUpdated"`
	// How many users should be generated in total.  This setting does not apply to the purchases or products stream.
	Count int `pulumi:"count"`
	// How many parallel workers should we use to generate fake data?  Choose a value equal to the number of CPUs you will allocate to this source.
	Parallelism int `pulumi:"parallelism"`
	// How many fake records will be in each page (stream slice), before a state message is emitted?
	RecordsPerSlice int `pulumi:"recordsPerSlice"`
	// Manually control the faker random seed to return the same values on subsequent runs (leave -1 for random)
	Seed int `pulumi:"seed"`
	// must be one of ["faker"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceFakerConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceFakerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFakerConfiguration)(nil)).Elem()
}

func (o GetSourceFakerConfigurationOutput) ToGetSourceFakerConfigurationOutput() GetSourceFakerConfigurationOutput {
	return o
}

func (o GetSourceFakerConfigurationOutput) ToGetSourceFakerConfigurationOutputWithContext(ctx context.Context) GetSourceFakerConfigurationOutput {
	return o
}

// Should the updatedAt values for every record be new each sync?  Setting this to false will case the source to stop emitting records after COUNT records have been emitted.
func (o GetSourceFakerConfigurationOutput) AlwaysUpdated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceFakerConfiguration) bool { return v.AlwaysUpdated }).(pulumi.BoolOutput)
}

// How many users should be generated in total.  This setting does not apply to the purchases or products stream.
func (o GetSourceFakerConfigurationOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFakerConfiguration) int { return v.Count }).(pulumi.IntOutput)
}

// How many parallel workers should we use to generate fake data?  Choose a value equal to the number of CPUs you will allocate to this source.
func (o GetSourceFakerConfigurationOutput) Parallelism() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFakerConfiguration) int { return v.Parallelism }).(pulumi.IntOutput)
}

// How many fake records will be in each page (stream slice), before a state message is emitted?
func (o GetSourceFakerConfigurationOutput) RecordsPerSlice() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFakerConfiguration) int { return v.RecordsPerSlice }).(pulumi.IntOutput)
}

// Manually control the faker random seed to return the same values on subsequent runs (leave -1 for random)
func (o GetSourceFakerConfigurationOutput) Seed() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFakerConfiguration) int { return v.Seed }).(pulumi.IntOutput)
}

// must be one of ["faker"]
func (o GetSourceFakerConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFakerConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceFaunaConfiguration struct {
	// Settings for the Fauna Collection.
	Collection GetSourceFaunaConfigurationCollection `pulumi:"collection"`
	// Domain of Fauna to query. Defaults db.fauna.com. See \n\nthe docs\n\n.
	Domain string `pulumi:"domain"`
	// Endpoint port.
	Port int `pulumi:"port"`
	// URL scheme.
	Scheme string `pulumi:"scheme"`
	// Fauna secret, used when authenticating with the database.
	Secret string `pulumi:"secret"`
	// must be one of ["fauna"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceFaunaConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceFaunaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFaunaConfiguration)(nil)).Elem()
}

func (o GetSourceFaunaConfigurationOutput) ToGetSourceFaunaConfigurationOutput() GetSourceFaunaConfigurationOutput {
	return o
}

func (o GetSourceFaunaConfigurationOutput) ToGetSourceFaunaConfigurationOutputWithContext(ctx context.Context) GetSourceFaunaConfigurationOutput {
	return o
}

// Settings for the Fauna Collection.
func (o GetSourceFaunaConfigurationOutput) Collection() GetSourceFaunaConfigurationCollectionOutput {
	return o.ApplyT(func(v GetSourceFaunaConfiguration) GetSourceFaunaConfigurationCollection { return v.Collection }).(GetSourceFaunaConfigurationCollectionOutput)
}

// Domain of Fauna to query. Defaults db.fauna.com. See \n\nthe docs\n\n.
func (o GetSourceFaunaConfigurationOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFaunaConfiguration) string { return v.Domain }).(pulumi.StringOutput)
}

// Endpoint port.
func (o GetSourceFaunaConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFaunaConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// URL scheme.
func (o GetSourceFaunaConfigurationOutput) Scheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFaunaConfiguration) string { return v.Scheme }).(pulumi.StringOutput)
}

// Fauna secret, used when authenticating with the database.
func (o GetSourceFaunaConfigurationOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFaunaConfiguration) string { return v.Secret }).(pulumi.StringOutput)
}

// must be one of ["fauna"]
func (o GetSourceFaunaConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFaunaConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceFaunaConfigurationCollection struct {
	Deletions GetSourceFaunaConfigurationCollectionDeletions `pulumi:"deletions"`
	PageSize  int                                            `pulumi:"pageSize"`
}

type GetSourceFaunaConfigurationCollectionOutput struct{ *pulumi.OutputState }

func (GetSourceFaunaConfigurationCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFaunaConfigurationCollection)(nil)).Elem()
}

func (o GetSourceFaunaConfigurationCollectionOutput) ToGetSourceFaunaConfigurationCollectionOutput() GetSourceFaunaConfigurationCollectionOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionOutput) ToGetSourceFaunaConfigurationCollectionOutputWithContext(ctx context.Context) GetSourceFaunaConfigurationCollectionOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionOutput) Deletions() GetSourceFaunaConfigurationCollectionDeletionsOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollection) GetSourceFaunaConfigurationCollectionDeletions {
		return v.Deletions
	}).(GetSourceFaunaConfigurationCollectionDeletionsOutput)
}

func (o GetSourceFaunaConfigurationCollectionOutput) PageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollection) int { return v.PageSize }).(pulumi.IntOutput)
}

type GetSourceFaunaConfigurationCollectionDeletions struct {
	SourceFaunaCollectionDeletionModeDisabled       GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled       `pulumi:"sourceFaunaCollectionDeletionModeDisabled"`
	SourceFaunaCollectionDeletionModeEnabled        GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled        `pulumi:"sourceFaunaCollectionDeletionModeEnabled"`
	SourceFaunaUpdateCollectionDeletionModeDisabled GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled `pulumi:"sourceFaunaUpdateCollectionDeletionModeDisabled"`
	SourceFaunaUpdateCollectionDeletionModeEnabled  GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled  `pulumi:"sourceFaunaUpdateCollectionDeletionModeEnabled"`
}

type GetSourceFaunaConfigurationCollectionDeletionsOutput struct{ *pulumi.OutputState }

func (GetSourceFaunaConfigurationCollectionDeletionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFaunaConfigurationCollectionDeletions)(nil)).Elem()
}

func (o GetSourceFaunaConfigurationCollectionDeletionsOutput) ToGetSourceFaunaConfigurationCollectionDeletionsOutput() GetSourceFaunaConfigurationCollectionDeletionsOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionDeletionsOutput) ToGetSourceFaunaConfigurationCollectionDeletionsOutputWithContext(ctx context.Context) GetSourceFaunaConfigurationCollectionDeletionsOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionDeletionsOutput) SourceFaunaCollectionDeletionModeDisabled() GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollectionDeletions) GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled {
		return v.SourceFaunaCollectionDeletionModeDisabled
	}).(GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutput)
}

func (o GetSourceFaunaConfigurationCollectionDeletionsOutput) SourceFaunaCollectionDeletionModeEnabled() GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollectionDeletions) GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled {
		return v.SourceFaunaCollectionDeletionModeEnabled
	}).(GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput)
}

func (o GetSourceFaunaConfigurationCollectionDeletionsOutput) SourceFaunaUpdateCollectionDeletionModeDisabled() GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollectionDeletions) GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled {
		return v.SourceFaunaUpdateCollectionDeletionModeDisabled
	}).(GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutput)
}

func (o GetSourceFaunaConfigurationCollectionDeletionsOutput) SourceFaunaUpdateCollectionDeletionModeEnabled() GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollectionDeletions) GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled {
		return v.SourceFaunaUpdateCollectionDeletionModeEnabled
	}).(GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput)
}

type GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled struct {
	DeletionMode string `pulumi:"deletionMode"`
}

type GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutput struct{ *pulumi.OutputState }

func (GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled)(nil)).Elem()
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutput) ToGetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutput() GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutput) ToGetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutputWithContext(ctx context.Context) GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutput) DeletionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabled) string {
		return v.DeletionMode
	}).(pulumi.StringOutput)
}

type GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled struct {
	Column       string `pulumi:"column"`
	DeletionMode string `pulumi:"deletionMode"`
}

type GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput struct{ *pulumi.OutputState }

func (GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled)(nil)).Elem()
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput) ToGetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput() GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput) ToGetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutputWithContext(ctx context.Context) GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled) string {
		return v.Column
	}).(pulumi.StringOutput)
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput) DeletionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabled) string {
		return v.DeletionMode
	}).(pulumi.StringOutput)
}

type GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled struct {
	DeletionMode string `pulumi:"deletionMode"`
}

type GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutput struct{ *pulumi.OutputState }

func (GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled)(nil)).Elem()
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutput) ToGetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutput() GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutput) ToGetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutputWithContext(ctx context.Context) GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutput) DeletionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabled) string {
		return v.DeletionMode
	}).(pulumi.StringOutput)
}

type GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled struct {
	Column       string `pulumi:"column"`
	DeletionMode string `pulumi:"deletionMode"`
}

type GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput struct{ *pulumi.OutputState }

func (GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled)(nil)).Elem()
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput) ToGetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput() GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput) ToGetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutputWithContext(ctx context.Context) GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput {
	return o
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled) string {
		return v.Column
	}).(pulumi.StringOutput)
}

func (o GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput) DeletionMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabled) string {
		return v.DeletionMode
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfiguration struct {
	// The Name of the final table to replicate this file into (should include letters, numbers dash and underscores only).
	DatasetName string `pulumi:"datasetName"`
	// must be one of ["csv", "json", "jsonl", "excel", "excelBinary", "feather", "parquet", "yaml"]
	// The Format of the file which should be replicated (Warning: some formats may be experimental, please refer to the docs).
	Format string `pulumi:"format"`
	// The storage Provider or Location of the file(s) which should be replicated.
	Provider GetSourceFileSecureConfigurationProvider `pulumi:"provider"`
	// This should be a string in JSON format. It depends on the chosen file format to provide additional options and tune its behavior.
	ReaderOptions string `pulumi:"readerOptions"`
	// must be one of ["file-secure"]
	SourceType string `pulumi:"sourceType"`
	// The URL path to access the file which should be replicated.
	Url string `pulumi:"url"`
}

type GetSourceFileSecureConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfiguration)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationOutput) ToGetSourceFileSecureConfigurationOutput() GetSourceFileSecureConfigurationOutput {
	return o
}

func (o GetSourceFileSecureConfigurationOutput) ToGetSourceFileSecureConfigurationOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationOutput {
	return o
}

// The Name of the final table to replicate this file into (should include letters, numbers dash and underscores only).
func (o GetSourceFileSecureConfigurationOutput) DatasetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfiguration) string { return v.DatasetName }).(pulumi.StringOutput)
}

// must be one of ["csv", "json", "jsonl", "excel", "excelBinary", "feather", "parquet", "yaml"]
// The Format of the file which should be replicated (Warning: some formats may be experimental, please refer to the docs).
func (o GetSourceFileSecureConfigurationOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfiguration) string { return v.Format }).(pulumi.StringOutput)
}

// The storage Provider or Location of the file(s) which should be replicated.
func (o GetSourceFileSecureConfigurationOutput) Provider() GetSourceFileSecureConfigurationProviderOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfiguration) GetSourceFileSecureConfigurationProvider { return v.Provider }).(GetSourceFileSecureConfigurationProviderOutput)
}

// This should be a string in JSON format. It depends on the chosen file format to provide additional options and tune its behavior.
func (o GetSourceFileSecureConfigurationOutput) ReaderOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfiguration) string { return v.ReaderOptions }).(pulumi.StringOutput)
}

// must be one of ["file-secure"]
func (o GetSourceFileSecureConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The URL path to access the file which should be replicated.
func (o GetSourceFileSecureConfigurationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfiguration) string { return v.Url }).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProvider struct {
	SourceFileSecureStorageProviderAzBlobAzureBlobStorage               GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage               `pulumi:"sourceFileSecureStorageProviderAzBlobAzureBlobStorage"`
	SourceFileSecureStorageProviderGcsGoogleCloudStorage                GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage                `pulumi:"sourceFileSecureStorageProviderGcsGoogleCloudStorage"`
	SourceFileSecureStorageProviderHttpsPublicWeb                       GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb                       `pulumi:"sourceFileSecureStorageProviderHttpsPublicWeb"`
	SourceFileSecureStorageProviderS3AmazonWebServices                  GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices                  `pulumi:"sourceFileSecureStorageProviderS3AmazonWebServices"`
	SourceFileSecureStorageProviderScpSecureCopyProtocol                GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol                `pulumi:"sourceFileSecureStorageProviderScpSecureCopyProtocol"`
	SourceFileSecureStorageProviderSftpSecureFileTransferProtocol       GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol       `pulumi:"sourceFileSecureStorageProviderSftpSecureFileTransferProtocol"`
	SourceFileSecureStorageProviderSshSecureShell                       GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell                       `pulumi:"sourceFileSecureStorageProviderSshSecureShell"`
	SourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage         GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage         `pulumi:"sourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage"`
	SourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage          GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage          `pulumi:"sourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage"`
	SourceFileSecureUpdateStorageProviderHttpsPublicWeb                 GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb                 `pulumi:"sourceFileSecureUpdateStorageProviderHttpsPublicWeb"`
	SourceFileSecureUpdateStorageProviderS3AmazonWebServices            GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices            `pulumi:"sourceFileSecureUpdateStorageProviderS3AmazonWebServices"`
	SourceFileSecureUpdateStorageProviderScpSecureCopyProtocol          GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol          `pulumi:"sourceFileSecureUpdateStorageProviderScpSecureCopyProtocol"`
	SourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol `pulumi:"sourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol"`
	SourceFileSecureUpdateStorageProviderSshSecureShell                 GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell                 `pulumi:"sourceFileSecureUpdateStorageProviderSshSecureShell"`
}

type GetSourceFileSecureConfigurationProviderOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProvider)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderOutput) ToGetSourceFileSecureConfigurationProviderOutput() GetSourceFileSecureConfigurationProviderOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderOutput) ToGetSourceFileSecureConfigurationProviderOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureStorageProviderAzBlobAzureBlobStorage() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage {
		return v.SourceFileSecureStorageProviderAzBlobAzureBlobStorage
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureStorageProviderGcsGoogleCloudStorage() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage {
		return v.SourceFileSecureStorageProviderGcsGoogleCloudStorage
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureStorageProviderHttpsPublicWeb() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb {
		return v.SourceFileSecureStorageProviderHttpsPublicWeb
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureStorageProviderS3AmazonWebServices() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices {
		return v.SourceFileSecureStorageProviderS3AmazonWebServices
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureStorageProviderScpSecureCopyProtocol() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol {
		return v.SourceFileSecureStorageProviderScpSecureCopyProtocol
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureStorageProviderSftpSecureFileTransferProtocol() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol {
		return v.SourceFileSecureStorageProviderSftpSecureFileTransferProtocol
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureStorageProviderSshSecureShell() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell {
		return v.SourceFileSecureStorageProviderSshSecureShell
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage {
		return v.SourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage {
		return v.SourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureUpdateStorageProviderHttpsPublicWeb() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb {
		return v.SourceFileSecureUpdateStorageProviderHttpsPublicWeb
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureUpdateStorageProviderS3AmazonWebServices() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices {
		return v.SourceFileSecureUpdateStorageProviderS3AmazonWebServices
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureUpdateStorageProviderScpSecureCopyProtocol() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol {
		return v.SourceFileSecureUpdateStorageProviderScpSecureCopyProtocol
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol {
		return v.SourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput)
}

func (o GetSourceFileSecureConfigurationProviderOutput) SourceFileSecureUpdateStorageProviderSshSecureShell() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProvider) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell {
		return v.SourceFileSecureUpdateStorageProviderSshSecureShell
	}).(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage struct {
	SasToken       string `pulumi:"sasToken"`
	SharedKey      string `pulumi:"sharedKey"`
	Storage        string `pulumi:"storage"`
	StorageAccount string `pulumi:"storageAccount"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput) SasToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage) string {
		return v.SasToken
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput) SharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage) string {
		return v.SharedKey
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput) StorageAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorage) string {
		return v.StorageAccount
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage struct {
	ServiceAccountJson string `pulumi:"serviceAccountJson"`
	Storage            string `pulumi:"storage"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput) ServiceAccountJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage) string {
		return v.ServiceAccountJson
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorage) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb struct {
	Storage   string `pulumi:"storage"`
	UserAgent bool   `pulumi:"userAgent"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput) UserAgent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWeb) bool {
		return v.UserAgent
	}).(pulumi.BoolOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices struct {
	AwsAccessKeyId     string `pulumi:"awsAccessKeyId"`
	AwsSecretAccessKey string `pulumi:"awsSecretAccessKey"`
	Storage            string `pulumi:"storage"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput) AwsAccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices) string {
		return v.AwsAccessKeyId
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput) AwsSecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices) string {
		return v.AwsSecretAccessKey
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServices) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol struct {
	Host     string `pulumi:"host"`
	Password string `pulumi:"password"`
	Port     string `pulumi:"port"`
	Storage  string `pulumi:"storage"`
	User     string `pulumi:"user"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol) string {
		return v.Host
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol) string {
		return v.Port
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocol) string {
		return v.User
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol struct {
	Host     string `pulumi:"host"`
	Password string `pulumi:"password"`
	Port     string `pulumi:"port"`
	Storage  string `pulumi:"storage"`
	User     string `pulumi:"user"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol) string {
		return v.Host
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol) string {
		return v.Port
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocol) string {
		return v.User
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell struct {
	Host     string `pulumi:"host"`
	Password string `pulumi:"password"`
	Port     string `pulumi:"port"`
	Storage  string `pulumi:"storage"`
	User     string `pulumi:"user"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell) string {
		return v.Host
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell) string {
		return v.Port
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShell) string {
		return v.User
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage struct {
	SasToken       string `pulumi:"sasToken"`
	SharedKey      string `pulumi:"sharedKey"`
	Storage        string `pulumi:"storage"`
	StorageAccount string `pulumi:"storageAccount"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput) SasToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage) string {
		return v.SasToken
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput) SharedKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage) string {
		return v.SharedKey
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput) StorageAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorage) string {
		return v.StorageAccount
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage struct {
	ServiceAccountJson string `pulumi:"serviceAccountJson"`
	Storage            string `pulumi:"storage"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput) ServiceAccountJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage) string {
		return v.ServiceAccountJson
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorage) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb struct {
	Storage   string `pulumi:"storage"`
	UserAgent bool   `pulumi:"userAgent"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput) UserAgent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWeb) bool {
		return v.UserAgent
	}).(pulumi.BoolOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices struct {
	AwsAccessKeyId     string `pulumi:"awsAccessKeyId"`
	AwsSecretAccessKey string `pulumi:"awsSecretAccessKey"`
	Storage            string `pulumi:"storage"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput) AwsAccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices) string {
		return v.AwsAccessKeyId
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput) AwsSecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices) string {
		return v.AwsSecretAccessKey
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServices) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol struct {
	Host     string `pulumi:"host"`
	Password string `pulumi:"password"`
	Port     string `pulumi:"port"`
	Storage  string `pulumi:"storage"`
	User     string `pulumi:"user"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol) string {
		return v.Host
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol) string {
		return v.Port
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocol) string {
		return v.User
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol struct {
	Host     string `pulumi:"host"`
	Password string `pulumi:"password"`
	Port     string `pulumi:"port"`
	Storage  string `pulumi:"storage"`
	User     string `pulumi:"user"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol) string {
		return v.Host
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol) string {
		return v.Port
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocol) string {
		return v.User
	}).(pulumi.StringOutput)
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell struct {
	Host     string `pulumi:"host"`
	Password string `pulumi:"password"`
	Port     string `pulumi:"port"`
	Storage  string `pulumi:"storage"`
	User     string `pulumi:"user"`
}

type GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput struct{ *pulumi.OutputState }

func (GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell)(nil)).Elem()
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput() GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput) ToGetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutputWithContext(ctx context.Context) GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput {
	return o
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell) string {
		return v.Host
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell) string {
		return v.Port
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell) string {
		return v.Storage
	}).(pulumi.StringOutput)
}

func (o GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShell) string {
		return v.User
	}).(pulumi.StringOutput)
}

type GetSourceFireboltConfiguration struct {
	// Firebolt account to login.
	Account string `pulumi:"account"`
	// The database to connect to.
	Database string `pulumi:"database"`
	// Engine name or url to connect to.
	Engine string `pulumi:"engine"`
	// The host name of your Firebolt database.
	Host string `pulumi:"host"`
	// Firebolt password.
	Password string `pulumi:"password"`
	// must be one of ["firebolt"]
	SourceType string `pulumi:"sourceType"`
	// Firebolt email address you use to login.
	Username string `pulumi:"username"`
}

type GetSourceFireboltConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceFireboltConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFireboltConfiguration)(nil)).Elem()
}

func (o GetSourceFireboltConfigurationOutput) ToGetSourceFireboltConfigurationOutput() GetSourceFireboltConfigurationOutput {
	return o
}

func (o GetSourceFireboltConfigurationOutput) ToGetSourceFireboltConfigurationOutputWithContext(ctx context.Context) GetSourceFireboltConfigurationOutput {
	return o
}

// Firebolt account to login.
func (o GetSourceFireboltConfigurationOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFireboltConfiguration) string { return v.Account }).(pulumi.StringOutput)
}

// The database to connect to.
func (o GetSourceFireboltConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFireboltConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// Engine name or url to connect to.
func (o GetSourceFireboltConfigurationOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFireboltConfiguration) string { return v.Engine }).(pulumi.StringOutput)
}

// The host name of your Firebolt database.
func (o GetSourceFireboltConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFireboltConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Firebolt password.
func (o GetSourceFireboltConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFireboltConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// must be one of ["firebolt"]
func (o GetSourceFireboltConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFireboltConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Firebolt email address you use to login.
func (o GetSourceFireboltConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFireboltConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceFreshcallerConfiguration struct {
	// Freshcaller API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
	ApiKey string `pulumi:"apiKey"`
	// Used to construct Base URL for the Freshcaller APIs
	Domain string `pulumi:"domain"`
	// The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account.
	RequestsPerMinute int `pulumi:"requestsPerMinute"`
	// must be one of ["freshcaller"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time. Any data created after this date will be replicated.
	StartDate string `pulumi:"startDate"`
	// Lag in minutes for each sync, i.e., at time T, data for the time range [prev*sync*time, T-30] will be fetched
	SyncLagMinutes int `pulumi:"syncLagMinutes"`
}

type GetSourceFreshcallerConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceFreshcallerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFreshcallerConfiguration)(nil)).Elem()
}

func (o GetSourceFreshcallerConfigurationOutput) ToGetSourceFreshcallerConfigurationOutput() GetSourceFreshcallerConfigurationOutput {
	return o
}

func (o GetSourceFreshcallerConfigurationOutput) ToGetSourceFreshcallerConfigurationOutputWithContext(ctx context.Context) GetSourceFreshcallerConfigurationOutput {
	return o
}

// Freshcaller API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
func (o GetSourceFreshcallerConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFreshcallerConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Used to construct Base URL for the Freshcaller APIs
func (o GetSourceFreshcallerConfigurationOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFreshcallerConfiguration) string { return v.Domain }).(pulumi.StringOutput)
}

// The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account.
func (o GetSourceFreshcallerConfigurationOutput) RequestsPerMinute() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFreshcallerConfiguration) int { return v.RequestsPerMinute }).(pulumi.IntOutput)
}

// must be one of ["freshcaller"]
func (o GetSourceFreshcallerConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFreshcallerConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time. Any data created after this date will be replicated.
func (o GetSourceFreshcallerConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFreshcallerConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Lag in minutes for each sync, i.e., at time T, data for the time range [prev*sync*time, T-30] will be fetched
func (o GetSourceFreshcallerConfigurationOutput) SyncLagMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFreshcallerConfiguration) int { return v.SyncLagMinutes }).(pulumi.IntOutput)
}

type GetSourceFreshdeskConfiguration struct {
	// Freshdesk API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
	ApiKey string `pulumi:"apiKey"`
	// Freshdesk domain
	Domain string `pulumi:"domain"`
	// The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account.
	RequestsPerMinute int `pulumi:"requestsPerMinute"`
	// must be one of ["freshdesk"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time. Any data created after this date will be replicated. If this parameter is not set, all data will be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceFreshdeskConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceFreshdeskConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFreshdeskConfiguration)(nil)).Elem()
}

func (o GetSourceFreshdeskConfigurationOutput) ToGetSourceFreshdeskConfigurationOutput() GetSourceFreshdeskConfigurationOutput {
	return o
}

func (o GetSourceFreshdeskConfigurationOutput) ToGetSourceFreshdeskConfigurationOutputWithContext(ctx context.Context) GetSourceFreshdeskConfigurationOutput {
	return o
}

// Freshdesk API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
func (o GetSourceFreshdeskConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFreshdeskConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Freshdesk domain
func (o GetSourceFreshdeskConfigurationOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFreshdeskConfiguration) string { return v.Domain }).(pulumi.StringOutput)
}

// The number of requests per minute that this source allowed to use. There is a rate limit of 50 requests per minute per app per account.
func (o GetSourceFreshdeskConfigurationOutput) RequestsPerMinute() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceFreshdeskConfiguration) int { return v.RequestsPerMinute }).(pulumi.IntOutput)
}

// must be one of ["freshdesk"]
func (o GetSourceFreshdeskConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFreshdeskConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time. Any data created after this date will be replicated. If this parameter is not set, all data will be replicated.
func (o GetSourceFreshdeskConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFreshdeskConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceFreshsalesConfiguration struct {
	// Freshsales API Key. See \n\nhere\n\n. The key is case sensitive.
	ApiKey string `pulumi:"apiKey"`
	// The Name of your Freshsales domain
	DomainName string `pulumi:"domainName"`
	// must be one of ["freshsales"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceFreshsalesConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceFreshsalesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceFreshsalesConfiguration)(nil)).Elem()
}

func (o GetSourceFreshsalesConfigurationOutput) ToGetSourceFreshsalesConfigurationOutput() GetSourceFreshsalesConfigurationOutput {
	return o
}

func (o GetSourceFreshsalesConfigurationOutput) ToGetSourceFreshsalesConfigurationOutputWithContext(ctx context.Context) GetSourceFreshsalesConfigurationOutput {
	return o
}

// Freshsales API Key. See \n\nhere\n\n. The key is case sensitive.
func (o GetSourceFreshsalesConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFreshsalesConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// The Name of your Freshsales domain
func (o GetSourceFreshsalesConfigurationOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFreshsalesConfiguration) string { return v.DomainName }).(pulumi.StringOutput)
}

// must be one of ["freshsales"]
func (o GetSourceFreshsalesConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceFreshsalesConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceGainsightPxConfiguration struct {
	// The Aptrinsic API Key which is recieved from the dashboard settings (ref - https://app.aptrinsic.com/settings/api-keys)
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["gainsight-px"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceGainsightPxConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGainsightPxConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGainsightPxConfiguration)(nil)).Elem()
}

func (o GetSourceGainsightPxConfigurationOutput) ToGetSourceGainsightPxConfigurationOutput() GetSourceGainsightPxConfigurationOutput {
	return o
}

func (o GetSourceGainsightPxConfigurationOutput) ToGetSourceGainsightPxConfigurationOutputWithContext(ctx context.Context) GetSourceGainsightPxConfigurationOutput {
	return o
}

// The Aptrinsic API Key which is recieved from the dashboard settings (ref - https://app.aptrinsic.com/settings/api-keys)
func (o GetSourceGainsightPxConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGainsightPxConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["gainsight-px"]
func (o GetSourceGainsightPxConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGainsightPxConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceGcsConfiguration struct {
	// GCS bucket name
	GcsBucket string `pulumi:"gcsBucket"`
	// GCS path to data
	GcsPath string `pulumi:"gcsPath"`
	// Enter your Google Cloud \n\nservice account key\n\n in JSON format
	ServiceAccount string `pulumi:"serviceAccount"`
	// must be one of ["gcs"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceGcsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGcsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGcsConfiguration)(nil)).Elem()
}

func (o GetSourceGcsConfigurationOutput) ToGetSourceGcsConfigurationOutput() GetSourceGcsConfigurationOutput {
	return o
}

func (o GetSourceGcsConfigurationOutput) ToGetSourceGcsConfigurationOutputWithContext(ctx context.Context) GetSourceGcsConfigurationOutput {
	return o
}

// GCS bucket name
func (o GetSourceGcsConfigurationOutput) GcsBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGcsConfiguration) string { return v.GcsBucket }).(pulumi.StringOutput)
}

// GCS path to data
func (o GetSourceGcsConfigurationOutput) GcsPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGcsConfiguration) string { return v.GcsPath }).(pulumi.StringOutput)
}

// Enter your Google Cloud \n\nservice account key\n\n in JSON format
func (o GetSourceGcsConfigurationOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGcsConfiguration) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// must be one of ["gcs"]
func (o GetSourceGcsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGcsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceGetlagoConfiguration struct {
	// Your API Key. See \n\nhere\n\n.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["getlago"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceGetlagoConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGetlagoConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGetlagoConfiguration)(nil)).Elem()
}

func (o GetSourceGetlagoConfigurationOutput) ToGetSourceGetlagoConfigurationOutput() GetSourceGetlagoConfigurationOutput {
	return o
}

func (o GetSourceGetlagoConfigurationOutput) ToGetSourceGetlagoConfigurationOutputWithContext(ctx context.Context) GetSourceGetlagoConfigurationOutput {
	return o
}

// Your API Key. See \n\nhere\n\n.
func (o GetSourceGetlagoConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGetlagoConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["getlago"]
func (o GetSourceGetlagoConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGetlagoConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceGithubConfiguration struct {
	// Space-delimited list of GitHub repository branches to pull commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified for a repository, the default branch will be pulled.
	Branch string `pulumi:"branch"`
	// Choose how to authenticate to GitHub
	Credentials GetSourceGithubConfigurationCredentials `pulumi:"credentials"`
	// Space-delimited list of GitHub organizations/repositories, e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get all repositories from organization and `airbytehq/airbyte airbytehq/another-repo` for multiple repositories.
	Repository string `pulumi:"repository"`
	// The GitHub API allows for a maximum of 5000 requests per hour (15000 for Github Enterprise). You can specify a lower value to limit your use of the API quota.
	RequestsPerHour int `pulumi:"requestsPerHour"`
	// must be one of ["github"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data from GitHub in the format YYYY-MM-DDT00:00:00Z. For the streams which support this configuration, only data generated on or after the start date will be replicated. This field doesn't apply to all streams, see the \n\ndocs\n\n for more info
	StartDate string `pulumi:"startDate"`
}

type GetSourceGithubConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGithubConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGithubConfiguration)(nil)).Elem()
}

func (o GetSourceGithubConfigurationOutput) ToGetSourceGithubConfigurationOutput() GetSourceGithubConfigurationOutput {
	return o
}

func (o GetSourceGithubConfigurationOutput) ToGetSourceGithubConfigurationOutputWithContext(ctx context.Context) GetSourceGithubConfigurationOutput {
	return o
}

// Space-delimited list of GitHub repository branches to pull commits for, e.g. `airbytehq/airbyte/master`. If no branches are specified for a repository, the default branch will be pulled.
func (o GetSourceGithubConfigurationOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfiguration) string { return v.Branch }).(pulumi.StringOutput)
}

// Choose how to authenticate to GitHub
func (o GetSourceGithubConfigurationOutput) Credentials() GetSourceGithubConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceGithubConfiguration) GetSourceGithubConfigurationCredentials { return v.Credentials }).(GetSourceGithubConfigurationCredentialsOutput)
}

// Space-delimited list of GitHub organizations/repositories, e.g. `airbytehq/airbyte` for single repository, `airbytehq/*` for get all repositories from organization and `airbytehq/airbyte airbytehq/another-repo` for multiple repositories.
func (o GetSourceGithubConfigurationOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfiguration) string { return v.Repository }).(pulumi.StringOutput)
}

// The GitHub API allows for a maximum of 5000 requests per hour (15000 for Github Enterprise). You can specify a lower value to limit your use of the API quota.
func (o GetSourceGithubConfigurationOutput) RequestsPerHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceGithubConfiguration) int { return v.RequestsPerHour }).(pulumi.IntOutput)
}

// must be one of ["github"]
func (o GetSourceGithubConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data from GitHub in the format YYYY-MM-DDT00:00:00Z. For the streams which support this configuration, only data generated on or after the start date will be replicated. This field doesn't apply to all streams, see the \n\ndocs\n\n for more info
func (o GetSourceGithubConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceGithubConfigurationCredentials struct {
	SourceGithubAuthenticationOAuth                     GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth                     `pulumi:"sourceGithubAuthenticationOAuth"`
	SourceGithubAuthenticationPersonalAccessToken       GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken       `pulumi:"sourceGithubAuthenticationPersonalAccessToken"`
	SourceGithubUpdateAuthenticationOAuth               GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth               `pulumi:"sourceGithubUpdateAuthenticationOAuth"`
	SourceGithubUpdateAuthenticationPersonalAccessToken GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken `pulumi:"sourceGithubUpdateAuthenticationPersonalAccessToken"`
}

type GetSourceGithubConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceGithubConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGithubConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceGithubConfigurationCredentialsOutput) ToGetSourceGithubConfigurationCredentialsOutput() GetSourceGithubConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGithubConfigurationCredentialsOutput) ToGetSourceGithubConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceGithubConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGithubConfigurationCredentialsOutput) SourceGithubAuthenticationOAuth() GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentials) GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth {
		return v.SourceGithubAuthenticationOAuth
	}).(GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput)
}

func (o GetSourceGithubConfigurationCredentialsOutput) SourceGithubAuthenticationPersonalAccessToken() GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentials) GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken {
		return v.SourceGithubAuthenticationPersonalAccessToken
	}).(GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput)
}

func (o GetSourceGithubConfigurationCredentialsOutput) SourceGithubUpdateAuthenticationOAuth() GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentials) GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth {
		return v.SourceGithubUpdateAuthenticationOAuth
	}).(GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput)
}

func (o GetSourceGithubConfigurationCredentialsOutput) SourceGithubUpdateAuthenticationPersonalAccessToken() GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentials) GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken {
		return v.SourceGithubUpdateAuthenticationPersonalAccessToken
	}).(GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput)
}

type GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth struct {
	AccessToken  string `pulumi:"accessToken"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	OptionTitle  string `pulumi:"optionTitle"`
}

type GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth)(nil)).Elem()
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput) ToGetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput() GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput {
	return o
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput) ToGetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutputWithContext(ctx context.Context) GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput {
	return o
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuth) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

type GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken struct {
	OptionTitle         string `pulumi:"optionTitle"`
	PersonalAccessToken string `pulumi:"personalAccessToken"`
}

type GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken)(nil)).Elem()
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput) ToGetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput() GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput {
	return o
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput) ToGetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutputWithContext(ctx context.Context) GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput {
	return o
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput) PersonalAccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessToken) string {
		return v.PersonalAccessToken
	}).(pulumi.StringOutput)
}

type GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth struct {
	AccessToken  string `pulumi:"accessToken"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	OptionTitle  string `pulumi:"optionTitle"`
}

type GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth)(nil)).Elem()
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput) ToGetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput() GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput {
	return o
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput) ToGetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutputWithContext(ctx context.Context) GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput {
	return o
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuth) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

type GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken struct {
	OptionTitle         string `pulumi:"optionTitle"`
	PersonalAccessToken string `pulumi:"personalAccessToken"`
}

type GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken)(nil)).Elem()
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput) ToGetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput() GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput {
	return o
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput) ToGetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutputWithContext(ctx context.Context) GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput {
	return o
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput) PersonalAccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessToken) string {
		return v.PersonalAccessToken
	}).(pulumi.StringOutput)
}

type GetSourceGitlabConfiguration struct {
	// Please enter your basic URL from GitLab instance.
	ApiUrl      string                                  `pulumi:"apiUrl"`
	Credentials GetSourceGitlabConfigurationCredentials `pulumi:"credentials"`
	// Space-delimited list of groups. e.g. airbyte.io.
	Groups string `pulumi:"groups"`
	// Space-delimited list of projects. e.g. airbyte.io/documentation meltano/tap-gitlab.
	Projects string `pulumi:"projects"`
	// must be one of ["gitlab"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for GitLab API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceGitlabConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGitlabConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGitlabConfiguration)(nil)).Elem()
}

func (o GetSourceGitlabConfigurationOutput) ToGetSourceGitlabConfigurationOutput() GetSourceGitlabConfigurationOutput {
	return o
}

func (o GetSourceGitlabConfigurationOutput) ToGetSourceGitlabConfigurationOutputWithContext(ctx context.Context) GetSourceGitlabConfigurationOutput {
	return o
}

// Please enter your basic URL from GitLab instance.
func (o GetSourceGitlabConfigurationOutput) ApiUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfiguration) string { return v.ApiUrl }).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationOutput) Credentials() GetSourceGitlabConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceGitlabConfiguration) GetSourceGitlabConfigurationCredentials { return v.Credentials }).(GetSourceGitlabConfigurationCredentialsOutput)
}

// Space-delimited list of groups. e.g. airbyte.io.
func (o GetSourceGitlabConfigurationOutput) Groups() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfiguration) string { return v.Groups }).(pulumi.StringOutput)
}

// Space-delimited list of projects. e.g. airbyte.io/documentation meltano/tap-gitlab.
func (o GetSourceGitlabConfigurationOutput) Projects() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfiguration) string { return v.Projects }).(pulumi.StringOutput)
}

// must be one of ["gitlab"]
func (o GetSourceGitlabConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for GitLab API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
func (o GetSourceGitlabConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceGitlabConfigurationCredentials struct {
	SourceGitlabAuthorizationMethodOAuth20            GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20            `pulumi:"sourceGitlabAuthorizationMethodOAuth20"`
	SourceGitlabAuthorizationMethodPrivateToken       GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken       `pulumi:"sourceGitlabAuthorizationMethodPrivateToken"`
	SourceGitlabUpdateAuthorizationMethodOAuth20      GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20      `pulumi:"sourceGitlabUpdateAuthorizationMethodOAuth20"`
	SourceGitlabUpdateAuthorizationMethodPrivateToken GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken `pulumi:"sourceGitlabUpdateAuthorizationMethodPrivateToken"`
}

type GetSourceGitlabConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceGitlabConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGitlabConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceGitlabConfigurationCredentialsOutput) ToGetSourceGitlabConfigurationCredentialsOutput() GetSourceGitlabConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGitlabConfigurationCredentialsOutput) ToGetSourceGitlabConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceGitlabConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGitlabConfigurationCredentialsOutput) SourceGitlabAuthorizationMethodOAuth20() GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentials) GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20 {
		return v.SourceGitlabAuthorizationMethodOAuth20
	}).(GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output)
}

func (o GetSourceGitlabConfigurationCredentialsOutput) SourceGitlabAuthorizationMethodPrivateToken() GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentials) GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken {
		return v.SourceGitlabAuthorizationMethodPrivateToken
	}).(GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput)
}

func (o GetSourceGitlabConfigurationCredentialsOutput) SourceGitlabUpdateAuthorizationMethodOAuth20() GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentials) GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20 {
		return v.SourceGitlabUpdateAuthorizationMethodOAuth20
	}).(GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output)
}

func (o GetSourceGitlabConfigurationCredentialsOutput) SourceGitlabUpdateAuthorizationMethodPrivateToken() GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentials) GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken {
		return v.SourceGitlabUpdateAuthorizationMethodPrivateToken
	}).(GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput)
}

type GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output) ToGetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output() GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output) ToGetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthType    string `pulumi:"authType"`
}

type GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput struct{ *pulumi.OutputState }

func (GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken)(nil)).Elem()
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput) ToGetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput() GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput {
	return o
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput) ToGetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutputWithContext(ctx context.Context) GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput {
	return o
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output) ToGetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output() GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output) ToGetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthType    string `pulumi:"authType"`
}

type GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput struct{ *pulumi.OutputState }

func (GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken)(nil)).Elem()
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput) ToGetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput() GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput {
	return o
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput) ToGetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutputWithContext(ctx context.Context) GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput {
	return o
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceGlassfrogConfiguration struct {
	// API key provided by Glassfrog
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["glassfrog"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceGlassfrogConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGlassfrogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGlassfrogConfiguration)(nil)).Elem()
}

func (o GetSourceGlassfrogConfigurationOutput) ToGetSourceGlassfrogConfigurationOutput() GetSourceGlassfrogConfigurationOutput {
	return o
}

func (o GetSourceGlassfrogConfigurationOutput) ToGetSourceGlassfrogConfigurationOutputWithContext(ctx context.Context) GetSourceGlassfrogConfigurationOutput {
	return o
}

// API key provided by Glassfrog
func (o GetSourceGlassfrogConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGlassfrogConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["glassfrog"]
func (o GetSourceGlassfrogConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGlassfrogConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceGnewsConfiguration struct {
	ApiKey            string   `pulumi:"apiKey"`
	Country           string   `pulumi:"country"`
	EndDate           string   `pulumi:"endDate"`
	Ins               []string `pulumi:"ins"`
	Language          string   `pulumi:"language"`
	Nullables         []string `pulumi:"nullables"`
	Query             string   `pulumi:"query"`
	Sortby            string   `pulumi:"sortby"`
	SourceType        string   `pulumi:"sourceType"`
	StartDate         string   `pulumi:"startDate"`
	TopHeadlinesQuery string   `pulumi:"topHeadlinesQuery"`
	TopHeadlinesTopic string   `pulumi:"topHeadlinesTopic"`
}

type GetSourceGnewsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGnewsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGnewsConfiguration)(nil)).Elem()
}

func (o GetSourceGnewsConfigurationOutput) ToGetSourceGnewsConfigurationOutput() GetSourceGnewsConfigurationOutput {
	return o
}

func (o GetSourceGnewsConfigurationOutput) ToGetSourceGnewsConfigurationOutputWithContext(ctx context.Context) GetSourceGnewsConfigurationOutput {
	return o
}

func (o GetSourceGnewsConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

func (o GetSourceGnewsConfigurationOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) string { return v.Country }).(pulumi.StringOutput)
}

func (o GetSourceGnewsConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

func (o GetSourceGnewsConfigurationOutput) Ins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) []string { return v.Ins }).(pulumi.StringArrayOutput)
}

func (o GetSourceGnewsConfigurationOutput) Language() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) string { return v.Language }).(pulumi.StringOutput)
}

func (o GetSourceGnewsConfigurationOutput) Nullables() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) []string { return v.Nullables }).(pulumi.StringArrayOutput)
}

func (o GetSourceGnewsConfigurationOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) string { return v.Query }).(pulumi.StringOutput)
}

func (o GetSourceGnewsConfigurationOutput) Sortby() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) string { return v.Sortby }).(pulumi.StringOutput)
}

func (o GetSourceGnewsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

func (o GetSourceGnewsConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

func (o GetSourceGnewsConfigurationOutput) TopHeadlinesQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) string { return v.TopHeadlinesQuery }).(pulumi.StringOutput)
}

func (o GetSourceGnewsConfigurationOutput) TopHeadlinesTopic() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGnewsConfiguration) string { return v.TopHeadlinesTopic }).(pulumi.StringOutput)
}

type GetSourceGoogleAdsConfiguration struct {
	// A conversion window is the number of days after an ad interaction (such as an ad click or video view) during which a conversion, such as a purchase, is recorded in Google Ads. For more information, see \n\nGoogle's documentation\n\n.
	ConversionWindowDays int                                          `pulumi:"conversionWindowDays"`
	Credentials          GetSourceGoogleAdsConfigurationCredentials   `pulumi:"credentials"`
	CustomQueries        []GetSourceGoogleAdsConfigurationCustomQuery `pulumi:"customQueries"`
	// Comma-separated list of (client) customer IDs. Each customer ID must be specified as a 10-digit number without dashes. For detailed instructions on finding this value, refer to our \n\ndocumentation\n\n.
	CustomerId string `pulumi:"customerId"`
	// UTC date in the format YYYY-MM-DD. Any data after this date will not be replicated.
	EndDate string `pulumi:"endDate"`
	// If your access to the customer account is through a manager account, this field is required, and must be set to the 10-digit customer ID of the manager account. For more information about this field, refer to \n\nGoogle's documentation\n\n.
	LoginCustomerId string `pulumi:"loginCustomerId"`
	// must be one of ["google-ads"]
	SourceType string `pulumi:"sourceType"`
	// UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceGoogleAdsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAdsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAdsConfiguration)(nil)).Elem()
}

func (o GetSourceGoogleAdsConfigurationOutput) ToGetSourceGoogleAdsConfigurationOutput() GetSourceGoogleAdsConfigurationOutput {
	return o
}

func (o GetSourceGoogleAdsConfigurationOutput) ToGetSourceGoogleAdsConfigurationOutputWithContext(ctx context.Context) GetSourceGoogleAdsConfigurationOutput {
	return o
}

// A conversion window is the number of days after an ad interaction (such as an ad click or video view) during which a conversion, such as a purchase, is recorded in Google Ads. For more information, see \n\nGoogle's documentation\n\n.
func (o GetSourceGoogleAdsConfigurationOutput) ConversionWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfiguration) int { return v.ConversionWindowDays }).(pulumi.IntOutput)
}

func (o GetSourceGoogleAdsConfigurationOutput) Credentials() GetSourceGoogleAdsConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfiguration) GetSourceGoogleAdsConfigurationCredentials {
		return v.Credentials
	}).(GetSourceGoogleAdsConfigurationCredentialsOutput)
}

func (o GetSourceGoogleAdsConfigurationOutput) CustomQueries() GetSourceGoogleAdsConfigurationCustomQueryArrayOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfiguration) []GetSourceGoogleAdsConfigurationCustomQuery {
		return v.CustomQueries
	}).(GetSourceGoogleAdsConfigurationCustomQueryArrayOutput)
}

// Comma-separated list of (client) customer IDs. Each customer ID must be specified as a 10-digit number without dashes. For detailed instructions on finding this value, refer to our \n\ndocumentation\n\n.
func (o GetSourceGoogleAdsConfigurationOutput) CustomerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfiguration) string { return v.CustomerId }).(pulumi.StringOutput)
}

// UTC date in the format YYYY-MM-DD. Any data after this date will not be replicated.
func (o GetSourceGoogleAdsConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// If your access to the customer account is through a manager account, this field is required, and must be set to the 10-digit customer ID of the manager account. For more information about this field, refer to \n\nGoogle's documentation\n\n.
func (o GetSourceGoogleAdsConfigurationOutput) LoginCustomerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfiguration) string { return v.LoginCustomerId }).(pulumi.StringOutput)
}

// must be one of ["google-ads"]
func (o GetSourceGoogleAdsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated.
func (o GetSourceGoogleAdsConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceGoogleAdsConfigurationCredentials struct {
	AccessToken    string `pulumi:"accessToken"`
	ClientId       string `pulumi:"clientId"`
	ClientSecret   string `pulumi:"clientSecret"`
	DeveloperToken string `pulumi:"developerToken"`
	RefreshToken   string `pulumi:"refreshToken"`
}

type GetSourceGoogleAdsConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAdsConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAdsConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceGoogleAdsConfigurationCredentialsOutput) ToGetSourceGoogleAdsConfigurationCredentialsOutput() GetSourceGoogleAdsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGoogleAdsConfigurationCredentialsOutput) ToGetSourceGoogleAdsConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceGoogleAdsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGoogleAdsConfigurationCredentialsOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfigurationCredentials) string { return v.AccessToken }).(pulumi.StringOutput)
}

func (o GetSourceGoogleAdsConfigurationCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfigurationCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetSourceGoogleAdsConfigurationCredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfigurationCredentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

func (o GetSourceGoogleAdsConfigurationCredentialsOutput) DeveloperToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfigurationCredentials) string { return v.DeveloperToken }).(pulumi.StringOutput)
}

func (o GetSourceGoogleAdsConfigurationCredentialsOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfigurationCredentials) string { return v.RefreshToken }).(pulumi.StringOutput)
}

type GetSourceGoogleAdsConfigurationCustomQuery struct {
	Query     string `pulumi:"query"`
	TableName string `pulumi:"tableName"`
}

type GetSourceGoogleAdsConfigurationCustomQueryOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAdsConfigurationCustomQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAdsConfigurationCustomQuery)(nil)).Elem()
}

func (o GetSourceGoogleAdsConfigurationCustomQueryOutput) ToGetSourceGoogleAdsConfigurationCustomQueryOutput() GetSourceGoogleAdsConfigurationCustomQueryOutput {
	return o
}

func (o GetSourceGoogleAdsConfigurationCustomQueryOutput) ToGetSourceGoogleAdsConfigurationCustomQueryOutputWithContext(ctx context.Context) GetSourceGoogleAdsConfigurationCustomQueryOutput {
	return o
}

func (o GetSourceGoogleAdsConfigurationCustomQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfigurationCustomQuery) string { return v.Query }).(pulumi.StringOutput)
}

func (o GetSourceGoogleAdsConfigurationCustomQueryOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAdsConfigurationCustomQuery) string { return v.TableName }).(pulumi.StringOutput)
}

type GetSourceGoogleAdsConfigurationCustomQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAdsConfigurationCustomQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSourceGoogleAdsConfigurationCustomQuery)(nil)).Elem()
}

func (o GetSourceGoogleAdsConfigurationCustomQueryArrayOutput) ToGetSourceGoogleAdsConfigurationCustomQueryArrayOutput() GetSourceGoogleAdsConfigurationCustomQueryArrayOutput {
	return o
}

func (o GetSourceGoogleAdsConfigurationCustomQueryArrayOutput) ToGetSourceGoogleAdsConfigurationCustomQueryArrayOutputWithContext(ctx context.Context) GetSourceGoogleAdsConfigurationCustomQueryArrayOutput {
	return o
}

func (o GetSourceGoogleAdsConfigurationCustomQueryArrayOutput) Index(i pulumi.IntInput) GetSourceGoogleAdsConfigurationCustomQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSourceGoogleAdsConfigurationCustomQuery {
		return vs[0].([]GetSourceGoogleAdsConfigurationCustomQuery)[vs[1].(int)]
	}).(GetSourceGoogleAdsConfigurationCustomQueryOutput)
}

type GetSourceGoogleAnalyticsDataApiConfiguration struct {
	// Credentials for the service
	Credentials GetSourceGoogleAnalyticsDataApiConfigurationCredentials `pulumi:"credentials"`
	// A JSON array describing the custom reports you want to sync from Google Analytics. See \n\nthe documentation\n\n for more information about the exact format you can use to fill out this field.
	CustomReports string `pulumi:"customReports"`
	// The start date from which to replicate report data in the format YYYY-MM-DD. Data generated before this date will not be included in the report. Not applied to custom Cohort reports.
	DateRangesStartDate string `pulumi:"dateRangesStartDate"`
	// The Property ID is a unique number assigned to each property in Google Analytics, found in your GA4 property URL. This ID allows the connector to track the specific events associated with your property. Refer to the \n\nGoogle Analytics documentation\n\n to locate your property ID.
	PropertyId string `pulumi:"propertyId"`
	// must be one of ["google-analytics-data-api"]
	SourceType string `pulumi:"sourceType"`
	// The interval in days for each data request made to the Google Analytics API. A larger value speeds up data sync, but increases the chance of data sampling, which may result in inaccuracies. We recommend a value of 1 to minimize sampling, unless speed is an absolute priority over accuracy. Acceptable values range from 1 to 364. Does not apply to custom Cohort reports. More information is available in \n\nthe documentation\n\n.
	WindowInDays int `pulumi:"windowInDays"`
}

type GetSourceGoogleAnalyticsDataApiConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsDataApiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsDataApiConfiguration)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationOutput() GetSourceGoogleAnalyticsDataApiConfigurationOutput {
	return o
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsDataApiConfigurationOutput {
	return o
}

// Credentials for the service
func (o GetSourceGoogleAnalyticsDataApiConfigurationOutput) Credentials() GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfiguration) GetSourceGoogleAnalyticsDataApiConfigurationCredentials {
		return v.Credentials
	}).(GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput)
}

// A JSON array describing the custom reports you want to sync from Google Analytics. See \n\nthe documentation\n\n for more information about the exact format you can use to fill out this field.
func (o GetSourceGoogleAnalyticsDataApiConfigurationOutput) CustomReports() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfiguration) string { return v.CustomReports }).(pulumi.StringOutput)
}

// The start date from which to replicate report data in the format YYYY-MM-DD. Data generated before this date will not be included in the report. Not applied to custom Cohort reports.
func (o GetSourceGoogleAnalyticsDataApiConfigurationOutput) DateRangesStartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfiguration) string { return v.DateRangesStartDate }).(pulumi.StringOutput)
}

// The Property ID is a unique number assigned to each property in Google Analytics, found in your GA4 property URL. This ID allows the connector to track the specific events associated with your property. Refer to the \n\nGoogle Analytics documentation\n\n to locate your property ID.
func (o GetSourceGoogleAnalyticsDataApiConfigurationOutput) PropertyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfiguration) string { return v.PropertyId }).(pulumi.StringOutput)
}

// must be one of ["google-analytics-data-api"]
func (o GetSourceGoogleAnalyticsDataApiConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The interval in days for each data request made to the Google Analytics API. A larger value speeds up data sync, but increases the chance of data sampling, which may result in inaccuracies. We recommend a value of 1 to minimize sampling, unless speed is an absolute priority over accuracy. Acceptable values range from 1 to 364. Does not apply to custom Cohort reports. More information is available in \n\nthe documentation\n\n.
func (o GetSourceGoogleAnalyticsDataApiConfigurationOutput) WindowInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfiguration) int { return v.WindowInDays }).(pulumi.IntOutput)
}

type GetSourceGoogleAnalyticsDataApiConfigurationCredentials struct {
	SourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth            GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth            `pulumi:"sourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth"`
	SourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication       GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication       `pulumi:"sourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication"`
	SourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth      GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth      `pulumi:"sourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth"`
	SourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication `pulumi:"sourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication"`
}

type GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsDataApiConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput() GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput) SourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth() GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentials) GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth {
		return v.SourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth
	}).(GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput) SourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication() GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentials) GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication {
		return v.SourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication
	}).(GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput) SourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth() GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentials) GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth {
		return v.SourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth
	}).(GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput) SourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication() GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentials) GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication {
		return v.SourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication
	}).(GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput)
}

type GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput() GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput {
	return o
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput {
	return o
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication struct {
	AuthType        string `pulumi:"authType"`
	CredentialsJson string `pulumi:"credentialsJson"`
}

type GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput() GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput) CredentialsJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthentication) string {
		return v.CredentialsJson
	}).(pulumi.StringOutput)
}

type GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput() GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput {
	return o
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput {
	return o
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication struct {
	AuthType        string `pulumi:"authType"`
	CredentialsJson string `pulumi:"credentialsJson"`
}

type GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput() GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput) CredentialsJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthentication) string {
		return v.CredentialsJson
	}).(pulumi.StringOutput)
}

type GetSourceGoogleAnalyticsV4Configuration struct {
	// Credentials for the service
	Credentials GetSourceGoogleAnalyticsV4ConfigurationCredentials `pulumi:"credentials"`
	// A JSON array describing the custom reports you want to sync from Google Analytics. See \n\nthe docs\n\n for more information about the exact format you can use to fill out this field.
	CustomReports string `pulumi:"customReports"`
	// must be one of ["google-analytics-v4"]
	SourceType string `pulumi:"sourceType"`
	// The date in the format YYYY-MM-DD. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
	// The ID for the Google Analytics View you want to fetch data from. This can be found from the \n\nGoogle Analytics Account Explorer\n\n.
	ViewId string `pulumi:"viewId"`
	// The time increment used by the connector when requesting data from the Google Analytics API. More information is available in the \n\nthe docs\n\n. The bigger this value is, the faster the sync will be, but the more likely that sampling will be applied to your data, potentially causing inaccuracies in the returned results. We recommend setting this to 1 unless you have a hard requirement to make the sync faster at the expense of accuracy. The minimum allowed value for this field is 1, and the maximum is 364.
	WindowInDays int `pulumi:"windowInDays"`
}

type GetSourceGoogleAnalyticsV4ConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsV4ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsV4Configuration)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsV4ConfigurationOutput) ToGetSourceGoogleAnalyticsV4ConfigurationOutput() GetSourceGoogleAnalyticsV4ConfigurationOutput {
	return o
}

func (o GetSourceGoogleAnalyticsV4ConfigurationOutput) ToGetSourceGoogleAnalyticsV4ConfigurationOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsV4ConfigurationOutput {
	return o
}

// Credentials for the service
func (o GetSourceGoogleAnalyticsV4ConfigurationOutput) Credentials() GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4Configuration) GetSourceGoogleAnalyticsV4ConfigurationCredentials {
		return v.Credentials
	}).(GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput)
}

// A JSON array describing the custom reports you want to sync from Google Analytics. See \n\nthe docs\n\n for more information about the exact format you can use to fill out this field.
func (o GetSourceGoogleAnalyticsV4ConfigurationOutput) CustomReports() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4Configuration) string { return v.CustomReports }).(pulumi.StringOutput)
}

// must be one of ["google-analytics-v4"]
func (o GetSourceGoogleAnalyticsV4ConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4Configuration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date in the format YYYY-MM-DD. Any data before this date will not be replicated.
func (o GetSourceGoogleAnalyticsV4ConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4Configuration) string { return v.StartDate }).(pulumi.StringOutput)
}

// The ID for the Google Analytics View you want to fetch data from. This can be found from the \n\nGoogle Analytics Account Explorer\n\n.
func (o GetSourceGoogleAnalyticsV4ConfigurationOutput) ViewId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4Configuration) string { return v.ViewId }).(pulumi.StringOutput)
}

// The time increment used by the connector when requesting data from the Google Analytics API. More information is available in the \n\nthe docs\n\n. The bigger this value is, the faster the sync will be, but the more likely that sampling will be applied to your data, potentially causing inaccuracies in the returned results. We recommend setting this to 1 unless you have a hard requirement to make the sync faster at the expense of accuracy. The minimum allowed value for this field is 1, and the maximum is 364.
func (o GetSourceGoogleAnalyticsV4ConfigurationOutput) WindowInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4Configuration) int { return v.WindowInDays }).(pulumi.IntOutput)
}

type GetSourceGoogleAnalyticsV4ConfigurationCredentials struct {
	SourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth            GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth            `pulumi:"sourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth"`
	SourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication       GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication       `pulumi:"sourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication"`
	SourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth      GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth      `pulumi:"sourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth"`
	SourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication `pulumi:"sourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication"`
}

type GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsV4ConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput) ToGetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput() GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput) ToGetSourceGoogleAnalyticsV4ConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput) SourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth() GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentials) GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth {
		return v.SourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth
	}).(GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput) SourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication() GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentials) GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication {
		return v.SourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication
	}).(GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput) SourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth() GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentials) GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth {
		return v.SourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth
	}).(GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput) SourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication() GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentials) GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication {
		return v.SourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication
	}).(GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput)
}

type GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput) ToGetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput() GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput {
	return o
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput) ToGetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput {
	return o
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication struct {
	AuthType        string `pulumi:"authType"`
	CredentialsJson string `pulumi:"credentialsJson"`
}

type GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput() GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput) CredentialsJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthentication) string {
		return v.CredentialsJson
	}).(pulumi.StringOutput)
}

type GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput) ToGetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput() GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput {
	return o
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput) ToGetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput {
	return o
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication struct {
	AuthType        string `pulumi:"authType"`
	CredentialsJson string `pulumi:"credentialsJson"`
}

type GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication)(nil)).Elem()
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput() GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput) CredentialsJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthentication) string {
		return v.CredentialsJson
	}).(pulumi.StringOutput)
}

type GetSourceGoogleDirectoryConfiguration struct {
	// Google APIs use the OAuth 2.0 protocol for authentication and authorization. The Source supports \n\nWeb server application\n\n and \n\nService accounts\n\n scenarios.
	Credentials GetSourceGoogleDirectoryConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["google-directory"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceGoogleDirectoryConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleDirectoryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleDirectoryConfiguration)(nil)).Elem()
}

func (o GetSourceGoogleDirectoryConfigurationOutput) ToGetSourceGoogleDirectoryConfigurationOutput() GetSourceGoogleDirectoryConfigurationOutput {
	return o
}

func (o GetSourceGoogleDirectoryConfigurationOutput) ToGetSourceGoogleDirectoryConfigurationOutputWithContext(ctx context.Context) GetSourceGoogleDirectoryConfigurationOutput {
	return o
}

// Google APIs use the OAuth 2.0 protocol for authentication and authorization. The Source supports \n\nWeb server application\n\n and \n\nService accounts\n\n scenarios.
func (o GetSourceGoogleDirectoryConfigurationOutput) Credentials() GetSourceGoogleDirectoryConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfiguration) GetSourceGoogleDirectoryConfigurationCredentials {
		return v.Credentials
	}).(GetSourceGoogleDirectoryConfigurationCredentialsOutput)
}

// must be one of ["google-directory"]
func (o GetSourceGoogleDirectoryConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceGoogleDirectoryConfigurationCredentials struct {
	SourceGoogleDirectoryGoogleCredentialsServiceAccountKey          GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey          `pulumi:"sourceGoogleDirectoryGoogleCredentialsServiceAccountKey"`
	SourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth       GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth       `pulumi:"sourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth"`
	SourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey    GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey    `pulumi:"sourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey"`
	SourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth `pulumi:"sourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth"`
}

type GetSourceGoogleDirectoryConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleDirectoryConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleDirectoryConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsOutput) ToGetSourceGoogleDirectoryConfigurationCredentialsOutput() GetSourceGoogleDirectoryConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsOutput) ToGetSourceGoogleDirectoryConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceGoogleDirectoryConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsOutput) SourceGoogleDirectoryGoogleCredentialsServiceAccountKey() GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentials) GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey {
		return v.SourceGoogleDirectoryGoogleCredentialsServiceAccountKey
	}).(GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsOutput) SourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth() GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentials) GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth {
		return v.SourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth
	}).(GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsOutput) SourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey() GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentials) GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey {
		return v.SourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey
	}).(GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsOutput) SourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth() GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentials) GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth {
		return v.SourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth
	}).(GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput)
}

type GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey struct {
	CredentialsJson  string `pulumi:"credentialsJson"`
	CredentialsTitle string `pulumi:"credentialsTitle"`
	Email            string `pulumi:"email"`
}

type GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey)(nil)).Elem()
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput) ToGetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput() GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput {
	return o
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput) ToGetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutputWithContext(ctx context.Context) GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput {
	return o
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput) CredentialsJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey) string {
		return v.CredentialsJson
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput) CredentialsTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey) string {
		return v.CredentialsTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKey) string {
		return v.Email
	}).(pulumi.StringOutput)
}

type GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth struct {
	ClientId         string `pulumi:"clientId"`
	ClientSecret     string `pulumi:"clientSecret"`
	CredentialsTitle string `pulumi:"credentialsTitle"`
	RefreshToken     string `pulumi:"refreshToken"`
}

type GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth)(nil)).Elem()
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput) ToGetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput() GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput {
	return o
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput) ToGetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutputWithContext(ctx context.Context) GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput {
	return o
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput) CredentialsTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth) string {
		return v.CredentialsTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey struct {
	CredentialsJson  string `pulumi:"credentialsJson"`
	CredentialsTitle string `pulumi:"credentialsTitle"`
	Email            string `pulumi:"email"`
}

type GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey)(nil)).Elem()
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput) ToGetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput() GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput {
	return o
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput) ToGetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutputWithContext(ctx context.Context) GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput {
	return o
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput) CredentialsJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey) string {
		return v.CredentialsJson
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput) CredentialsTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey) string {
		return v.CredentialsTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKey) string {
		return v.Email
	}).(pulumi.StringOutput)
}

type GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth struct {
	ClientId         string `pulumi:"clientId"`
	ClientSecret     string `pulumi:"clientSecret"`
	CredentialsTitle string `pulumi:"credentialsTitle"`
	RefreshToken     string `pulumi:"refreshToken"`
}

type GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth)(nil)).Elem()
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput) ToGetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput() GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput {
	return o
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput) ToGetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutputWithContext(ctx context.Context) GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput {
	return o
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput) CredentialsTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth) string {
		return v.CredentialsTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceGooglePagespeedInsightsConfiguration struct {
	// Google PageSpeed API Key. See \n\nhere\n\n. The key is optional - however the API is heavily rate limited when using without API Key. Creating and using the API key therefore is recommended. The key is case sensitive.
	ApiKey string `pulumi:"apiKey"`
	// Defines which Lighthouse category to run. One or many of: "accessibility", "best-practices", "performance", "pwa", "seo".
	Categories []string `pulumi:"categories"`
	// must be one of ["google-pagespeed-insights"]
	SourceType string `pulumi:"sourceType"`
	// The analyses strategy to use. Either "desktop" or "mobile".
	Strategies []string `pulumi:"strategies"`
	// The URLs to retrieve pagespeed information from. The connector will attempt to sync PageSpeed reports for all the defined URLs. Format: https://(www.)url.domain
	Urls []string `pulumi:"urls"`
}

type GetSourceGooglePagespeedInsightsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGooglePagespeedInsightsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGooglePagespeedInsightsConfiguration)(nil)).Elem()
}

func (o GetSourceGooglePagespeedInsightsConfigurationOutput) ToGetSourceGooglePagespeedInsightsConfigurationOutput() GetSourceGooglePagespeedInsightsConfigurationOutput {
	return o
}

func (o GetSourceGooglePagespeedInsightsConfigurationOutput) ToGetSourceGooglePagespeedInsightsConfigurationOutputWithContext(ctx context.Context) GetSourceGooglePagespeedInsightsConfigurationOutput {
	return o
}

// Google PageSpeed API Key. See \n\nhere\n\n. The key is optional - however the API is heavily rate limited when using without API Key. Creating and using the API key therefore is recommended. The key is case sensitive.
func (o GetSourceGooglePagespeedInsightsConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGooglePagespeedInsightsConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Defines which Lighthouse category to run. One or many of: "accessibility", "best-practices", "performance", "pwa", "seo".
func (o GetSourceGooglePagespeedInsightsConfigurationOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceGooglePagespeedInsightsConfiguration) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

// must be one of ["google-pagespeed-insights"]
func (o GetSourceGooglePagespeedInsightsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGooglePagespeedInsightsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The analyses strategy to use. Either "desktop" or "mobile".
func (o GetSourceGooglePagespeedInsightsConfigurationOutput) Strategies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceGooglePagespeedInsightsConfiguration) []string { return v.Strategies }).(pulumi.StringArrayOutput)
}

// The URLs to retrieve pagespeed information from. The connector will attempt to sync PageSpeed reports for all the defined URLs. Format: https://(www.)url.domain
func (o GetSourceGooglePagespeedInsightsConfigurationOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceGooglePagespeedInsightsConfiguration) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

type GetSourceGoogleSearchConsoleConfiguration struct {
	Authorization GetSourceGoogleSearchConsoleConfigurationAuthorization `pulumi:"authorization"`
	// A JSON array describing the custom reports you want to sync from Google Search Console. See \n\nthe docs\n\n for more information about the exact format you can use to fill out this field.
	CustomReports string `pulumi:"customReports"`
	// must be one of ["final", "all"]
	// If "final" or if this parameter is omitted, the returned data will include only finalized data. Setting this parameter to "all" should not be used with Incremental Sync mode as it may cause data loss. If "all", data will include fresh data.
	DataState string `pulumi:"dataState"`
	// UTC date in the format 2017-01-25. Any data after this date will not be replicated. Must be greater or equal to the start date field.
	EndDate string `pulumi:"endDate"`
	// The URLs of the website property attached to your GSC account. Read more \n\nhere\n\n.
	SiteUrls []string `pulumi:"siteUrls"`
	// must be one of ["google-search-console"]
	SourceType string `pulumi:"sourceType"`
	// UTC date in the format 2017-01-25. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceGoogleSearchConsoleConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSearchConsoleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSearchConsoleConfiguration)(nil)).Elem()
}

func (o GetSourceGoogleSearchConsoleConfigurationOutput) ToGetSourceGoogleSearchConsoleConfigurationOutput() GetSourceGoogleSearchConsoleConfigurationOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationOutput) ToGetSourceGoogleSearchConsoleConfigurationOutputWithContext(ctx context.Context) GetSourceGoogleSearchConsoleConfigurationOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationOutput) Authorization() GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfiguration) GetSourceGoogleSearchConsoleConfigurationAuthorization {
		return v.Authorization
	}).(GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput)
}

// A JSON array describing the custom reports you want to sync from Google Search Console. See \n\nthe docs\n\n for more information about the exact format you can use to fill out this field.
func (o GetSourceGoogleSearchConsoleConfigurationOutput) CustomReports() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfiguration) string { return v.CustomReports }).(pulumi.StringOutput)
}

// must be one of ["final", "all"]
// If "final" or if this parameter is omitted, the returned data will include only finalized data. Setting this parameter to "all" should not be used with Incremental Sync mode as it may cause data loss. If "all", data will include fresh data.
func (o GetSourceGoogleSearchConsoleConfigurationOutput) DataState() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfiguration) string { return v.DataState }).(pulumi.StringOutput)
}

// UTC date in the format 2017-01-25. Any data after this date will not be replicated. Must be greater or equal to the start date field.
func (o GetSourceGoogleSearchConsoleConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// The URLs of the website property attached to your GSC account. Read more \n\nhere\n\n.
func (o GetSourceGoogleSearchConsoleConfigurationOutput) SiteUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfiguration) []string { return v.SiteUrls }).(pulumi.StringArrayOutput)
}

// must be one of ["google-search-console"]
func (o GetSourceGoogleSearchConsoleConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date in the format 2017-01-25. Any data before this date will not be replicated.
func (o GetSourceGoogleSearchConsoleConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceGoogleSearchConsoleConfigurationAuthorization struct {
	SourceGoogleSearchConsoleAuthenticationTypeOAuth                                 GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth                                 `pulumi:"sourceGoogleSearchConsoleAuthenticationTypeOAuth"`
	SourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication       GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication       `pulumi:"sourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication"`
	SourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth                           GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth                           `pulumi:"sourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth"`
	SourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication `pulumi:"sourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication"`
}

type GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSearchConsoleConfigurationAuthorization)(nil)).Elem()
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput) ToGetSourceGoogleSearchConsoleConfigurationAuthorizationOutput() GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput) ToGetSourceGoogleSearchConsoleConfigurationAuthorizationOutputWithContext(ctx context.Context) GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput) SourceGoogleSearchConsoleAuthenticationTypeOAuth() GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorization) GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth {
		return v.SourceGoogleSearchConsoleAuthenticationTypeOAuth
	}).(GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput) SourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication() GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorization) GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication {
		return v.SourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication
	}).(GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput) SourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth() GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorization) GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth {
		return v.SourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth
	}).(GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput) SourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication() GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorization) GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication {
		return v.SourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication
	}).(GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput)
}

type GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth)(nil)).Elem()
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput) ToGetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput() GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput) ToGetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutputWithContext(ctx context.Context) GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication struct {
	AuthType           string `pulumi:"authType"`
	Email              string `pulumi:"email"`
	ServiceAccountInfo string `pulumi:"serviceAccountInfo"`
}

type GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication)(nil)).Elem()
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput() GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication) string {
		return v.Email
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput) ServiceAccountInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthentication) string {
		return v.ServiceAccountInfo
	}).(pulumi.StringOutput)
}

type GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth)(nil)).Elem()
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput) ToGetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput() GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput) ToGetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutputWithContext(ctx context.Context) GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication struct {
	AuthType           string `pulumi:"authType"`
	Email              string `pulumi:"email"`
	ServiceAccountInfo string `pulumi:"serviceAccountInfo"`
}

type GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication)(nil)).Elem()
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput() GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication) string {
		return v.Email
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput) ServiceAccountInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthentication) string {
		return v.ServiceAccountInfo
	}).(pulumi.StringOutput)
}

type GetSourceGoogleSheetsConfiguration struct {
	// Credentials for connecting to the Google Sheets API
	Credentials GetSourceGoogleSheetsConfigurationCredentials `pulumi:"credentials"`
	// Enables the conversion of column names to a standardized, SQL-compliant format. For example, 'My Name' > 'my_name'. Enable this option if your destination is SQL-based.
	NamesConversion bool `pulumi:"namesConversion"`
	// The number of rows fetched when making a Google Sheet API call. Defaults to 200.
	RowBatchSize int `pulumi:"rowBatchSize"`
	// must be one of ["google-sheets"]
	SourceType string `pulumi:"sourceType"`
	// Enter the link to the Google spreadsheet you want to sync. To copy the link, click the 'Share' button in the top-right corner of the spreadsheet, then click 'Copy link'.
	SpreadsheetId string `pulumi:"spreadsheetId"`
}

type GetSourceGoogleSheetsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSheetsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSheetsConfiguration)(nil)).Elem()
}

func (o GetSourceGoogleSheetsConfigurationOutput) ToGetSourceGoogleSheetsConfigurationOutput() GetSourceGoogleSheetsConfigurationOutput {
	return o
}

func (o GetSourceGoogleSheetsConfigurationOutput) ToGetSourceGoogleSheetsConfigurationOutputWithContext(ctx context.Context) GetSourceGoogleSheetsConfigurationOutput {
	return o
}

// Credentials for connecting to the Google Sheets API
func (o GetSourceGoogleSheetsConfigurationOutput) Credentials() GetSourceGoogleSheetsConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfiguration) GetSourceGoogleSheetsConfigurationCredentials {
		return v.Credentials
	}).(GetSourceGoogleSheetsConfigurationCredentialsOutput)
}

// Enables the conversion of column names to a standardized, SQL-compliant format. For example, 'My Name' > 'my_name'. Enable this option if your destination is SQL-based.
func (o GetSourceGoogleSheetsConfigurationOutput) NamesConversion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfiguration) bool { return v.NamesConversion }).(pulumi.BoolOutput)
}

// The number of rows fetched when making a Google Sheet API call. Defaults to 200.
func (o GetSourceGoogleSheetsConfigurationOutput) RowBatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfiguration) int { return v.RowBatchSize }).(pulumi.IntOutput)
}

// must be one of ["google-sheets"]
func (o GetSourceGoogleSheetsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Enter the link to the Google spreadsheet you want to sync. To copy the link, click the 'Share' button in the top-right corner of the spreadsheet, then click 'Copy link'.
func (o GetSourceGoogleSheetsConfigurationOutput) SpreadsheetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfiguration) string { return v.SpreadsheetId }).(pulumi.StringOutput)
}

type GetSourceGoogleSheetsConfigurationCredentials struct {
	SourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth            GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth            `pulumi:"sourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth"`
	SourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication       GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication       `pulumi:"sourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication"`
	SourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth      GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth      `pulumi:"sourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth"`
	SourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication `pulumi:"sourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication"`
}

type GetSourceGoogleSheetsConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSheetsConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSheetsConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceGoogleSheetsConfigurationCredentialsOutput) ToGetSourceGoogleSheetsConfigurationCredentialsOutput() GetSourceGoogleSheetsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGoogleSheetsConfigurationCredentialsOutput) ToGetSourceGoogleSheetsConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceGoogleSheetsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceGoogleSheetsConfigurationCredentialsOutput) SourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth() GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentials) GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth {
		return v.SourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth
	}).(GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput)
}

func (o GetSourceGoogleSheetsConfigurationCredentialsOutput) SourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication() GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentials) GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication {
		return v.SourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication
	}).(GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput)
}

func (o GetSourceGoogleSheetsConfigurationCredentialsOutput) SourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth() GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentials) GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth {
		return v.SourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth
	}).(GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput)
}

func (o GetSourceGoogleSheetsConfigurationCredentialsOutput) SourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication() GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentials) GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication {
		return v.SourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication
	}).(GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput)
}

type GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth)(nil)).Elem()
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput) ToGetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput() GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput {
	return o
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput) ToGetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutputWithContext(ctx context.Context) GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput {
	return o
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication struct {
	AuthType           string `pulumi:"authType"`
	ServiceAccountInfo string `pulumi:"serviceAccountInfo"`
}

type GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication)(nil)).Elem()
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput() GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput) ServiceAccountInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthentication) string {
		return v.ServiceAccountInfo
	}).(pulumi.StringOutput)
}

type GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth)(nil)).Elem()
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput) ToGetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput() GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput {
	return o
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput) ToGetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutputWithContext(ctx context.Context) GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput {
	return o
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication struct {
	AuthType           string `pulumi:"authType"`
	ServiceAccountInfo string `pulumi:"serviceAccountInfo"`
}

type GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication)(nil)).Elem()
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput() GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput) ToGetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput {
	return o
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput) ServiceAccountInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthentication) string {
		return v.ServiceAccountInfo
	}).(pulumi.StringOutput)
}

type GetSourceGoogleWebfontsConfiguration struct {
	// Optional, Available params- json, media, proto
	Alt string `pulumi:"alt"`
	// API key is required to access google apis, For getting your's goto google console and generate api key for Webfonts
	ApiKey string `pulumi:"apiKey"`
	// Optional, boolean type
	PrettyPrint string `pulumi:"prettyPrint"`
	// Optional, to find how to sort
	Sort string `pulumi:"sort"`
	// must be one of ["google-webfonts"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceGoogleWebfontsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleWebfontsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleWebfontsConfiguration)(nil)).Elem()
}

func (o GetSourceGoogleWebfontsConfigurationOutput) ToGetSourceGoogleWebfontsConfigurationOutput() GetSourceGoogleWebfontsConfigurationOutput {
	return o
}

func (o GetSourceGoogleWebfontsConfigurationOutput) ToGetSourceGoogleWebfontsConfigurationOutputWithContext(ctx context.Context) GetSourceGoogleWebfontsConfigurationOutput {
	return o
}

// Optional, Available params- json, media, proto
func (o GetSourceGoogleWebfontsConfigurationOutput) Alt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleWebfontsConfiguration) string { return v.Alt }).(pulumi.StringOutput)
}

// API key is required to access google apis, For getting your's goto google console and generate api key for Webfonts
func (o GetSourceGoogleWebfontsConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleWebfontsConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Optional, boolean type
func (o GetSourceGoogleWebfontsConfigurationOutput) PrettyPrint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleWebfontsConfiguration) string { return v.PrettyPrint }).(pulumi.StringOutput)
}

// Optional, to find how to sort
func (o GetSourceGoogleWebfontsConfigurationOutput) Sort() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleWebfontsConfiguration) string { return v.Sort }).(pulumi.StringOutput)
}

// must be one of ["google-webfonts"]
func (o GetSourceGoogleWebfontsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleWebfontsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceGoogleWorkspaceAdminReportsConfiguration struct {
	// The contents of the JSON service account key. See the \n\ndocs\n\n for more information on how to generate this key.
	CredentialsJson string `pulumi:"credentialsJson"`
	// The email of the user, which has permissions to access the Google Workspace Admin APIs.
	Email string `pulumi:"email"`
	// Sets the range of time shown in the report. Reports API allows from up to 180 days ago.
	Lookback int `pulumi:"lookback"`
	// must be one of ["google-workspace-admin-reports"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceGoogleWorkspaceAdminReportsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGoogleWorkspaceAdminReportsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGoogleWorkspaceAdminReportsConfiguration)(nil)).Elem()
}

func (o GetSourceGoogleWorkspaceAdminReportsConfigurationOutput) ToGetSourceGoogleWorkspaceAdminReportsConfigurationOutput() GetSourceGoogleWorkspaceAdminReportsConfigurationOutput {
	return o
}

func (o GetSourceGoogleWorkspaceAdminReportsConfigurationOutput) ToGetSourceGoogleWorkspaceAdminReportsConfigurationOutputWithContext(ctx context.Context) GetSourceGoogleWorkspaceAdminReportsConfigurationOutput {
	return o
}

// The contents of the JSON service account key. See the \n\ndocs\n\n for more information on how to generate this key.
func (o GetSourceGoogleWorkspaceAdminReportsConfigurationOutput) CredentialsJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleWorkspaceAdminReportsConfiguration) string { return v.CredentialsJson }).(pulumi.StringOutput)
}

// The email of the user, which has permissions to access the Google Workspace Admin APIs.
func (o GetSourceGoogleWorkspaceAdminReportsConfigurationOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleWorkspaceAdminReportsConfiguration) string { return v.Email }).(pulumi.StringOutput)
}

// Sets the range of time shown in the report. Reports API allows from up to 180 days ago.
func (o GetSourceGoogleWorkspaceAdminReportsConfigurationOutput) Lookback() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceGoogleWorkspaceAdminReportsConfiguration) int { return v.Lookback }).(pulumi.IntOutput)
}

// must be one of ["google-workspace-admin-reports"]
func (o GetSourceGoogleWorkspaceAdminReportsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGoogleWorkspaceAdminReportsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceGreenhouseConfiguration struct {
	// Greenhouse API Key. See the \n\ndocs\n\n for more information on how to generate this key.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["greenhouse"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceGreenhouseConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGreenhouseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGreenhouseConfiguration)(nil)).Elem()
}

func (o GetSourceGreenhouseConfigurationOutput) ToGetSourceGreenhouseConfigurationOutput() GetSourceGreenhouseConfigurationOutput {
	return o
}

func (o GetSourceGreenhouseConfigurationOutput) ToGetSourceGreenhouseConfigurationOutputWithContext(ctx context.Context) GetSourceGreenhouseConfigurationOutput {
	return o
}

// Greenhouse API Key. See the \n\ndocs\n\n for more information on how to generate this key.
func (o GetSourceGreenhouseConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGreenhouseConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["greenhouse"]
func (o GetSourceGreenhouseConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGreenhouseConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceGridlyConfiguration struct {
	ApiKey string `pulumi:"apiKey"`
	// ID of a grid, or can be ID of a branch
	GridId string `pulumi:"gridId"`
	// must be one of ["gridly"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceGridlyConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceGridlyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceGridlyConfiguration)(nil)).Elem()
}

func (o GetSourceGridlyConfigurationOutput) ToGetSourceGridlyConfigurationOutput() GetSourceGridlyConfigurationOutput {
	return o
}

func (o GetSourceGridlyConfigurationOutput) ToGetSourceGridlyConfigurationOutputWithContext(ctx context.Context) GetSourceGridlyConfigurationOutput {
	return o
}

func (o GetSourceGridlyConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGridlyConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// ID of a grid, or can be ID of a branch
func (o GetSourceGridlyConfigurationOutput) GridId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGridlyConfiguration) string { return v.GridId }).(pulumi.StringOutput)
}

// must be one of ["gridly"]
func (o GetSourceGridlyConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceGridlyConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceHarvestConfiguration struct {
	// Harvest account ID. Required for all Harvest requests in pair with Personal Access Token
	AccountId string `pulumi:"accountId"`
	// Choose how to authenticate to Harvest.
	Credentials GetSourceHarvestConfigurationCredentials `pulumi:"credentials"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.
	ReplicationEndDate string `pulumi:"replicationEndDate"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	ReplicationStartDate string `pulumi:"replicationStartDate"`
	// must be one of ["harvest"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceHarvestConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceHarvestConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHarvestConfiguration)(nil)).Elem()
}

func (o GetSourceHarvestConfigurationOutput) ToGetSourceHarvestConfigurationOutput() GetSourceHarvestConfigurationOutput {
	return o
}

func (o GetSourceHarvestConfigurationOutput) ToGetSourceHarvestConfigurationOutputWithContext(ctx context.Context) GetSourceHarvestConfigurationOutput {
	return o
}

// Harvest account ID. Required for all Harvest requests in pair with Personal Access Token
func (o GetSourceHarvestConfigurationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfiguration) string { return v.AccountId }).(pulumi.StringOutput)
}

// Choose how to authenticate to Harvest.
func (o GetSourceHarvestConfigurationOutput) Credentials() GetSourceHarvestConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceHarvestConfiguration) GetSourceHarvestConfigurationCredentials { return v.Credentials }).(GetSourceHarvestConfigurationCredentialsOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data after this date will not be replicated.
func (o GetSourceHarvestConfigurationOutput) ReplicationEndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfiguration) string { return v.ReplicationEndDate }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceHarvestConfigurationOutput) ReplicationStartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfiguration) string { return v.ReplicationStartDate }).(pulumi.StringOutput)
}

// must be one of ["harvest"]
func (o GetSourceHarvestConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceHarvestConfigurationCredentials struct {
	SourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth               GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth               `pulumi:"sourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth"`
	SourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken       GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken       `pulumi:"sourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken"`
	SourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth         GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth         `pulumi:"sourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth"`
	SourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken `pulumi:"sourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken"`
}

type GetSourceHarvestConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceHarvestConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHarvestConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceHarvestConfigurationCredentialsOutput) ToGetSourceHarvestConfigurationCredentialsOutput() GetSourceHarvestConfigurationCredentialsOutput {
	return o
}

func (o GetSourceHarvestConfigurationCredentialsOutput) ToGetSourceHarvestConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceHarvestConfigurationCredentialsOutput {
	return o
}

func (o GetSourceHarvestConfigurationCredentialsOutput) SourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth() GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentials) GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth {
		return v.SourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth
	}).(GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput)
}

func (o GetSourceHarvestConfigurationCredentialsOutput) SourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken() GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentials) GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken {
		return v.SourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken
	}).(GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput)
}

func (o GetSourceHarvestConfigurationCredentialsOutput) SourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth() GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentials) GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth {
		return v.SourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth
	}).(GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput)
}

func (o GetSourceHarvestConfigurationCredentialsOutput) SourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken() GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentials) GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken {
		return v.SourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken
	}).(GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput)
}

type GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	AuthType             string  `pulumi:"authType"`
	ClientId             string  `pulumi:"clientId"`
	ClientSecret         string  `pulumi:"clientSecret"`
	RefreshToken         string  `pulumi:"refreshToken"`
}

type GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth)(nil)).Elem()
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) ToGetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput() GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput {
	return o
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) ToGetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutputWithContext(ctx context.Context) GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput {
	return o
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ApiToken             string  `pulumi:"apiToken"`
	AuthType             string  `pulumi:"authType"`
}

type GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken)(nil)).Elem()
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ToGetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput() GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ToGetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutputWithContext(ctx context.Context) GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	AuthType             string  `pulumi:"authType"`
	ClientId             string  `pulumi:"clientId"`
	ClientSecret         string  `pulumi:"clientSecret"`
	RefreshToken         string  `pulumi:"refreshToken"`
}

type GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth)(nil)).Elem()
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) ToGetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput() GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput {
	return o
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) ToGetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutputWithContext(ctx context.Context) GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput {
	return o
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ApiToken             string  `pulumi:"apiToken"`
	AuthType             string  `pulumi:"authType"`
}

type GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken)(nil)).Elem()
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ToGetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput() GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ToGetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutputWithContext(ctx context.Context) GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput {
	return o
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceHubplannerConfiguration struct {
	// Hubplanner API key. See https://github.com/hubplanner/API#authentication for more details.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["hubplanner"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceHubplannerConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceHubplannerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHubplannerConfiguration)(nil)).Elem()
}

func (o GetSourceHubplannerConfigurationOutput) ToGetSourceHubplannerConfigurationOutput() GetSourceHubplannerConfigurationOutput {
	return o
}

func (o GetSourceHubplannerConfigurationOutput) ToGetSourceHubplannerConfigurationOutputWithContext(ctx context.Context) GetSourceHubplannerConfigurationOutput {
	return o
}

// Hubplanner API key. See https://github.com/hubplanner/API#authentication for more details.
func (o GetSourceHubplannerConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubplannerConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["hubplanner"]
func (o GetSourceHubplannerConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubplannerConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceHubspotConfiguration struct {
	// Choose how to authenticate to HubSpot.
	Credentials GetSourceHubspotConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["hubspot"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceHubspotConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceHubspotConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHubspotConfiguration)(nil)).Elem()
}

func (o GetSourceHubspotConfigurationOutput) ToGetSourceHubspotConfigurationOutput() GetSourceHubspotConfigurationOutput {
	return o
}

func (o GetSourceHubspotConfigurationOutput) ToGetSourceHubspotConfigurationOutputWithContext(ctx context.Context) GetSourceHubspotConfigurationOutput {
	return o
}

// Choose how to authenticate to HubSpot.
func (o GetSourceHubspotConfigurationOutput) Credentials() GetSourceHubspotConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceHubspotConfiguration) GetSourceHubspotConfigurationCredentials { return v.Credentials }).(GetSourceHubspotConfigurationCredentialsOutput)
}

// must be one of ["hubspot"]
func (o GetSourceHubspotConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceHubspotConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceHubspotConfigurationCredentials struct {
	SourceHubspotAuthenticationOAuth            GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth            `pulumi:"sourceHubspotAuthenticationOAuth"`
	SourceHubspotAuthenticationPrivateApp       GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp       `pulumi:"sourceHubspotAuthenticationPrivateApp"`
	SourceHubspotUpdateAuthenticationOAuth      GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth      `pulumi:"sourceHubspotUpdateAuthenticationOAuth"`
	SourceHubspotUpdateAuthenticationPrivateApp GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp `pulumi:"sourceHubspotUpdateAuthenticationPrivateApp"`
}

type GetSourceHubspotConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceHubspotConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHubspotConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceHubspotConfigurationCredentialsOutput) ToGetSourceHubspotConfigurationCredentialsOutput() GetSourceHubspotConfigurationCredentialsOutput {
	return o
}

func (o GetSourceHubspotConfigurationCredentialsOutput) ToGetSourceHubspotConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceHubspotConfigurationCredentialsOutput {
	return o
}

func (o GetSourceHubspotConfigurationCredentialsOutput) SourceHubspotAuthenticationOAuth() GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentials) GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth {
		return v.SourceHubspotAuthenticationOAuth
	}).(GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput)
}

func (o GetSourceHubspotConfigurationCredentialsOutput) SourceHubspotAuthenticationPrivateApp() GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentials) GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp {
		return v.SourceHubspotAuthenticationPrivateApp
	}).(GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput)
}

func (o GetSourceHubspotConfigurationCredentialsOutput) SourceHubspotUpdateAuthenticationOAuth() GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentials) GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth {
		return v.SourceHubspotUpdateAuthenticationOAuth
	}).(GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput)
}

func (o GetSourceHubspotConfigurationCredentialsOutput) SourceHubspotUpdateAuthenticationPrivateApp() GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentials) GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp {
		return v.SourceHubspotUpdateAuthenticationPrivateApp
	}).(GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput)
}

type GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth struct {
	ClientId         string `pulumi:"clientId"`
	ClientSecret     string `pulumi:"clientSecret"`
	CredentialsTitle string `pulumi:"credentialsTitle"`
	RefreshToken     string `pulumi:"refreshToken"`
}

type GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth)(nil)).Elem()
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput) ToGetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput() GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput {
	return o
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput) ToGetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutputWithContext(ctx context.Context) GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput {
	return o
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput) CredentialsTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth) string {
		return v.CredentialsTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp struct {
	AccessToken      string `pulumi:"accessToken"`
	CredentialsTitle string `pulumi:"credentialsTitle"`
}

type GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput struct{ *pulumi.OutputState }

func (GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp)(nil)).Elem()
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput) ToGetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput() GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput {
	return o
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput) ToGetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutputWithContext(ctx context.Context) GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput {
	return o
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput) CredentialsTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateApp) string {
		return v.CredentialsTitle
	}).(pulumi.StringOutput)
}

type GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth struct {
	ClientId         string `pulumi:"clientId"`
	ClientSecret     string `pulumi:"clientSecret"`
	CredentialsTitle string `pulumi:"credentialsTitle"`
	RefreshToken     string `pulumi:"refreshToken"`
}

type GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth)(nil)).Elem()
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput) ToGetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput() GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput {
	return o
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput) ToGetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutputWithContext(ctx context.Context) GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput {
	return o
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput) CredentialsTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth) string {
		return v.CredentialsTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp struct {
	AccessToken      string `pulumi:"accessToken"`
	CredentialsTitle string `pulumi:"credentialsTitle"`
}

type GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput struct{ *pulumi.OutputState }

func (GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp)(nil)).Elem()
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput) ToGetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput() GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput {
	return o
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput) ToGetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutputWithContext(ctx context.Context) GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput {
	return o
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput) CredentialsTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateApp) string {
		return v.CredentialsTitle
	}).(pulumi.StringOutput)
}

type GetSourceInsightlyConfiguration struct {
	// must be one of ["insightly"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for Insightly in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated. Note that it will be used only for incremental streams.
	StartDate string `pulumi:"startDate"`
	// Your Insightly API token.
	Token string `pulumi:"token"`
}

type GetSourceInsightlyConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceInsightlyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceInsightlyConfiguration)(nil)).Elem()
}

func (o GetSourceInsightlyConfigurationOutput) ToGetSourceInsightlyConfigurationOutput() GetSourceInsightlyConfigurationOutput {
	return o
}

func (o GetSourceInsightlyConfigurationOutput) ToGetSourceInsightlyConfigurationOutputWithContext(ctx context.Context) GetSourceInsightlyConfigurationOutput {
	return o
}

// must be one of ["insightly"]
func (o GetSourceInsightlyConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceInsightlyConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for Insightly in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated. Note that it will be used only for incremental streams.
func (o GetSourceInsightlyConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceInsightlyConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Your Insightly API token.
func (o GetSourceInsightlyConfigurationOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceInsightlyConfiguration) string { return v.Token }).(pulumi.StringOutput)
}

type GetSourceInstagramConfiguration struct {
	// The value of the access token generated with \n\ninstagram*basic, instagram*manage*insights, pages*show*list, pages*read_engagement, Instagram Public Content Access\n\n permissions. See the \n\ndocs\n\n for more information
	AccessToken string `pulumi:"accessToken"`
	// The Client ID for your Oauth application
	ClientId string `pulumi:"clientId"`
	// The Client Secret for your Oauth application
	ClientSecret string `pulumi:"clientSecret"`
	// must be one of ["instagram"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for User Insights, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceInstagramConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceInstagramConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceInstagramConfiguration)(nil)).Elem()
}

func (o GetSourceInstagramConfigurationOutput) ToGetSourceInstagramConfigurationOutput() GetSourceInstagramConfigurationOutput {
	return o
}

func (o GetSourceInstagramConfigurationOutput) ToGetSourceInstagramConfigurationOutputWithContext(ctx context.Context) GetSourceInstagramConfigurationOutput {
	return o
}

// The value of the access token generated with \n\ninstagram*basic, instagram*manage*insights, pages*show*list, pages*read_engagement, Instagram Public Content Access\n\n permissions. See the \n\ndocs\n\n for more information
func (o GetSourceInstagramConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceInstagramConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// The Client ID for your Oauth application
func (o GetSourceInstagramConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceInstagramConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret for your Oauth application
func (o GetSourceInstagramConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceInstagramConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// must be one of ["instagram"]
func (o GetSourceInstagramConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceInstagramConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for User Insights, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
func (o GetSourceInstagramConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceInstagramConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceInstatusConfiguration struct {
	// Instatus REST API key
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["instatus"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceInstatusConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceInstatusConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceInstatusConfiguration)(nil)).Elem()
}

func (o GetSourceInstatusConfigurationOutput) ToGetSourceInstatusConfigurationOutput() GetSourceInstatusConfigurationOutput {
	return o
}

func (o GetSourceInstatusConfigurationOutput) ToGetSourceInstatusConfigurationOutputWithContext(ctx context.Context) GetSourceInstatusConfigurationOutput {
	return o
}

// Instatus REST API key
func (o GetSourceInstatusConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceInstatusConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["instatus"]
func (o GetSourceInstatusConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceInstatusConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceIntercomConfiguration struct {
	// Access token for making authenticated requests. See the \n\nIntercom docs\n\n for more information.
	AccessToken string `pulumi:"accessToken"`
	// must be one of ["intercom"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceIntercomConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceIntercomConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceIntercomConfiguration)(nil)).Elem()
}

func (o GetSourceIntercomConfigurationOutput) ToGetSourceIntercomConfigurationOutput() GetSourceIntercomConfigurationOutput {
	return o
}

func (o GetSourceIntercomConfigurationOutput) ToGetSourceIntercomConfigurationOutputWithContext(ctx context.Context) GetSourceIntercomConfigurationOutput {
	return o
}

// Access token for making authenticated requests. See the \n\nIntercom docs\n\n for more information.
func (o GetSourceIntercomConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceIntercomConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// must be one of ["intercom"]
func (o GetSourceIntercomConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceIntercomConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceIntercomConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceIntercomConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceIp2whoisConfiguration struct {
	// Your API Key. See \n\nhere\n\n.
	ApiKey string `pulumi:"apiKey"`
	// Domain name. See \n\nhere\n\n.
	Domain string `pulumi:"domain"`
	// must be one of ["ip2whois"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceIp2whoisConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceIp2whoisConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceIp2whoisConfiguration)(nil)).Elem()
}

func (o GetSourceIp2whoisConfigurationOutput) ToGetSourceIp2whoisConfigurationOutput() GetSourceIp2whoisConfigurationOutput {
	return o
}

func (o GetSourceIp2whoisConfigurationOutput) ToGetSourceIp2whoisConfigurationOutputWithContext(ctx context.Context) GetSourceIp2whoisConfigurationOutput {
	return o
}

// Your API Key. See \n\nhere\n\n.
func (o GetSourceIp2whoisConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceIp2whoisConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Domain name. See \n\nhere\n\n.
func (o GetSourceIp2whoisConfigurationOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceIp2whoisConfiguration) string { return v.Domain }).(pulumi.StringOutput)
}

// must be one of ["ip2whois"]
func (o GetSourceIp2whoisConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceIp2whoisConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceIterableConfiguration struct {
	// Iterable API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["iterable"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for Iterable, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceIterableConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceIterableConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceIterableConfiguration)(nil)).Elem()
}

func (o GetSourceIterableConfigurationOutput) ToGetSourceIterableConfigurationOutput() GetSourceIterableConfigurationOutput {
	return o
}

func (o GetSourceIterableConfigurationOutput) ToGetSourceIterableConfigurationOutputWithContext(ctx context.Context) GetSourceIterableConfigurationOutput {
	return o
}

// Iterable API Key. See the \n\ndocs\n\n for more information on how to obtain this key.
func (o GetSourceIterableConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceIterableConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["iterable"]
func (o GetSourceIterableConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceIterableConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for Iterable, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
func (o GetSourceIterableConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceIterableConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceJiraConfiguration struct {
	// Jira API Token. See the \n\ndocs\n\n for more information on how to generate this key. API Token is used for Authorization to your account by BasicAuth.
	ApiToken string `pulumi:"apiToken"`
	// The Domain for your Jira account, e.g. airbyteio.atlassian.net, airbyteio.jira.com, jira.your-domain.com
	Domain string `pulumi:"domain"`
	// The user email for your Jira account which you used to generate the API token. This field is used for Authorization to your account by BasicAuth.
	Email string `pulumi:"email"`
	// Allow the use of experimental streams which rely on undocumented Jira API endpoints. See https://docs.airbyte.com/integrations/sources/jira#experimental-tables for more info.
	EnableExperimentalStreams bool `pulumi:"enableExperimentalStreams"`
	// Expand the changelog when replicating issues.
	ExpandIssueChangelog bool `pulumi:"expandIssueChangelog"`
	// List of Jira project keys to replicate data for, or leave it empty if you want to replicate data for all projects.
	Projects []string `pulumi:"projects"`
	// Render issue fields in HTML format in addition to Jira JSON-like format.
	RenderFields bool `pulumi:"renderFields"`
	// must be one of ["jira"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you want to replicate data from Jira, use the format YYYY-MM-DDT00:00:00Z. Note that this field only applies to certain streams, and only data generated on or after the start date will be replicated. Or leave it empty if you want to replicate all data. For more information, refer to the \n\ndocumentation\n\n.
	StartDate string `pulumi:"startDate"`
}

type GetSourceJiraConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceJiraConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceJiraConfiguration)(nil)).Elem()
}

func (o GetSourceJiraConfigurationOutput) ToGetSourceJiraConfigurationOutput() GetSourceJiraConfigurationOutput {
	return o
}

func (o GetSourceJiraConfigurationOutput) ToGetSourceJiraConfigurationOutputWithContext(ctx context.Context) GetSourceJiraConfigurationOutput {
	return o
}

// Jira API Token. See the \n\ndocs\n\n for more information on how to generate this key. API Token is used for Authorization to your account by BasicAuth.
func (o GetSourceJiraConfigurationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceJiraConfiguration) string { return v.ApiToken }).(pulumi.StringOutput)
}

// The Domain for your Jira account, e.g. airbyteio.atlassian.net, airbyteio.jira.com, jira.your-domain.com
func (o GetSourceJiraConfigurationOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceJiraConfiguration) string { return v.Domain }).(pulumi.StringOutput)
}

// The user email for your Jira account which you used to generate the API token. This field is used for Authorization to your account by BasicAuth.
func (o GetSourceJiraConfigurationOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceJiraConfiguration) string { return v.Email }).(pulumi.StringOutput)
}

// Allow the use of experimental streams which rely on undocumented Jira API endpoints. See https://docs.airbyte.com/integrations/sources/jira#experimental-tables for more info.
func (o GetSourceJiraConfigurationOutput) EnableExperimentalStreams() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceJiraConfiguration) bool { return v.EnableExperimentalStreams }).(pulumi.BoolOutput)
}

// Expand the changelog when replicating issues.
func (o GetSourceJiraConfigurationOutput) ExpandIssueChangelog() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceJiraConfiguration) bool { return v.ExpandIssueChangelog }).(pulumi.BoolOutput)
}

// List of Jira project keys to replicate data for, or leave it empty if you want to replicate data for all projects.
func (o GetSourceJiraConfigurationOutput) Projects() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceJiraConfiguration) []string { return v.Projects }).(pulumi.StringArrayOutput)
}

// Render issue fields in HTML format in addition to Jira JSON-like format.
func (o GetSourceJiraConfigurationOutput) RenderFields() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceJiraConfiguration) bool { return v.RenderFields }).(pulumi.BoolOutput)
}

// must be one of ["jira"]
func (o GetSourceJiraConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceJiraConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you want to replicate data from Jira, use the format YYYY-MM-DDT00:00:00Z. Note that this field only applies to certain streams, and only data generated on or after the start date will be replicated. Or leave it empty if you want to replicate all data. For more information, refer to the \n\ndocumentation\n\n.
func (o GetSourceJiraConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceJiraConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceK6CloudConfiguration struct {
	// Your API Token. See \n\nhere\n\n. The key is case sensitive.
	ApiToken string `pulumi:"apiToken"`
	// must be one of ["k6-cloud"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceK6CloudConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceK6CloudConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceK6CloudConfiguration)(nil)).Elem()
}

func (o GetSourceK6CloudConfigurationOutput) ToGetSourceK6CloudConfigurationOutput() GetSourceK6CloudConfigurationOutput {
	return o
}

func (o GetSourceK6CloudConfigurationOutput) ToGetSourceK6CloudConfigurationOutputWithContext(ctx context.Context) GetSourceK6CloudConfigurationOutput {
	return o
}

// Your API Token. See \n\nhere\n\n. The key is case sensitive.
func (o GetSourceK6CloudConfigurationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceK6CloudConfiguration) string { return v.ApiToken }).(pulumi.StringOutput)
}

// must be one of ["k6-cloud"]
func (o GetSourceK6CloudConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceK6CloudConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceKlarnaConfiguration struct {
	// A string which is associated with your Merchant ID and is used to authorize use of Klarna's APIs (https://developers.klarna.com/api/#authentication)
	Password string `pulumi:"password"`
	// Propertie defining if connector is used against playground or production environment
	Playground bool `pulumi:"playground"`
	// must be one of ["eu", "us", "oc"]
	// Base url region (For playground eu https://docs.klarna.com/klarna-payments/api/payments-api/#tag/API-URLs). Supported 'eu', 'us', 'oc'
	Region string `pulumi:"region"`
	// must be one of ["klarna"]
	SourceType string `pulumi:"sourceType"`
	// Consists of your Merchant ID (eid) - a unique number that identifies your e-store, combined with a random string (https://developers.klarna.com/api/#authentication)
	Username string `pulumi:"username"`
}

type GetSourceKlarnaConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceKlarnaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceKlarnaConfiguration)(nil)).Elem()
}

func (o GetSourceKlarnaConfigurationOutput) ToGetSourceKlarnaConfigurationOutput() GetSourceKlarnaConfigurationOutput {
	return o
}

func (o GetSourceKlarnaConfigurationOutput) ToGetSourceKlarnaConfigurationOutputWithContext(ctx context.Context) GetSourceKlarnaConfigurationOutput {
	return o
}

// A string which is associated with your Merchant ID and is used to authorize use of Klarna's APIs (https://developers.klarna.com/api/#authentication)
func (o GetSourceKlarnaConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKlarnaConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Propertie defining if connector is used against playground or production environment
func (o GetSourceKlarnaConfigurationOutput) Playground() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceKlarnaConfiguration) bool { return v.Playground }).(pulumi.BoolOutput)
}

// must be one of ["eu", "us", "oc"]
// Base url region (For playground eu https://docs.klarna.com/klarna-payments/api/payments-api/#tag/API-URLs). Supported 'eu', 'us', 'oc'
func (o GetSourceKlarnaConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKlarnaConfiguration) string { return v.Region }).(pulumi.StringOutput)
}

// must be one of ["klarna"]
func (o GetSourceKlarnaConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKlarnaConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Consists of your Merchant ID (eid) - a unique number that identifies your e-store, combined with a random string (https://developers.klarna.com/api/#authentication)
func (o GetSourceKlarnaConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKlarnaConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceKlaviyoConfiguration struct {
	// Klaviyo API Key. See our \n\ndocs\n\n if you need help finding this key.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["klaviyo"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceKlaviyoConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceKlaviyoConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceKlaviyoConfiguration)(nil)).Elem()
}

func (o GetSourceKlaviyoConfigurationOutput) ToGetSourceKlaviyoConfigurationOutput() GetSourceKlaviyoConfigurationOutput {
	return o
}

func (o GetSourceKlaviyoConfigurationOutput) ToGetSourceKlaviyoConfigurationOutputWithContext(ctx context.Context) GetSourceKlaviyoConfigurationOutput {
	return o
}

// Klaviyo API Key. See our \n\ndocs\n\n if you need help finding this key.
func (o GetSourceKlaviyoConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKlaviyoConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["klaviyo"]
func (o GetSourceKlaviyoConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKlaviyoConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceKlaviyoConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKlaviyoConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceKustomerSingerConfiguration struct {
	// Kustomer API Token. See the \n\ndocs\n\n on how to obtain this
	ApiToken string `pulumi:"apiToken"`
	// must be one of ["kustomer-singer"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate the data
	StartDate string `pulumi:"startDate"`
}

type GetSourceKustomerSingerConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceKustomerSingerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceKustomerSingerConfiguration)(nil)).Elem()
}

func (o GetSourceKustomerSingerConfigurationOutput) ToGetSourceKustomerSingerConfigurationOutput() GetSourceKustomerSingerConfigurationOutput {
	return o
}

func (o GetSourceKustomerSingerConfigurationOutput) ToGetSourceKustomerSingerConfigurationOutputWithContext(ctx context.Context) GetSourceKustomerSingerConfigurationOutput {
	return o
}

// Kustomer API Token. See the \n\ndocs\n\n on how to obtain this
func (o GetSourceKustomerSingerConfigurationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKustomerSingerConfiguration) string { return v.ApiToken }).(pulumi.StringOutput)
}

// must be one of ["kustomer-singer"]
func (o GetSourceKustomerSingerConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKustomerSingerConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate the data
func (o GetSourceKustomerSingerConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKustomerSingerConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceKyveConfiguration struct {
	// The maximum amount of pages to go trough. Set to 'null' for all pages.
	MaxPages int `pulumi:"maxPages"`
	// The pagesize for pagination, smaller numbers are used in integration tests.
	PageSize int `pulumi:"pageSize"`
	// The IDs of the KYVE storage pool you want to archive. (Comma separated)
	PoolIds string `pulumi:"poolIds"`
	// must be one of ["kyve"]
	SourceType string `pulumi:"sourceType"`
	// The start-id defines, from which bundle id the pipeline should start to extract the data (Comma separated)
	StartIds string `pulumi:"startIds"`
	// URL to the KYVE Chain API.
	UrlBase string `pulumi:"urlBase"`
}

type GetSourceKyveConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceKyveConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceKyveConfiguration)(nil)).Elem()
}

func (o GetSourceKyveConfigurationOutput) ToGetSourceKyveConfigurationOutput() GetSourceKyveConfigurationOutput {
	return o
}

func (o GetSourceKyveConfigurationOutput) ToGetSourceKyveConfigurationOutputWithContext(ctx context.Context) GetSourceKyveConfigurationOutput {
	return o
}

// The maximum amount of pages to go trough. Set to 'null' for all pages.
func (o GetSourceKyveConfigurationOutput) MaxPages() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceKyveConfiguration) int { return v.MaxPages }).(pulumi.IntOutput)
}

// The pagesize for pagination, smaller numbers are used in integration tests.
func (o GetSourceKyveConfigurationOutput) PageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceKyveConfiguration) int { return v.PageSize }).(pulumi.IntOutput)
}

// The IDs of the KYVE storage pool you want to archive. (Comma separated)
func (o GetSourceKyveConfigurationOutput) PoolIds() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKyveConfiguration) string { return v.PoolIds }).(pulumi.StringOutput)
}

// must be one of ["kyve"]
func (o GetSourceKyveConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKyveConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The start-id defines, from which bundle id the pipeline should start to extract the data (Comma separated)
func (o GetSourceKyveConfigurationOutput) StartIds() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKyveConfiguration) string { return v.StartIds }).(pulumi.StringOutput)
}

// URL to the KYVE Chain API.
func (o GetSourceKyveConfigurationOutput) UrlBase() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceKyveConfiguration) string { return v.UrlBase }).(pulumi.StringOutput)
}

type GetSourceLaunchdarklyConfiguration struct {
	// Your Access token. See \n\nhere\n\n.
	AccessToken string `pulumi:"accessToken"`
	// must be one of ["launchdarkly"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceLaunchdarklyConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceLaunchdarklyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLaunchdarklyConfiguration)(nil)).Elem()
}

func (o GetSourceLaunchdarklyConfigurationOutput) ToGetSourceLaunchdarklyConfigurationOutput() GetSourceLaunchdarklyConfigurationOutput {
	return o
}

func (o GetSourceLaunchdarklyConfigurationOutput) ToGetSourceLaunchdarklyConfigurationOutputWithContext(ctx context.Context) GetSourceLaunchdarklyConfigurationOutput {
	return o
}

// Your Access token. See \n\nhere\n\n.
func (o GetSourceLaunchdarklyConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLaunchdarklyConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// must be one of ["launchdarkly"]
func (o GetSourceLaunchdarklyConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLaunchdarklyConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceLemlistConfiguration struct {
	// Lemlist API key.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["lemlist"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceLemlistConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceLemlistConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLemlistConfiguration)(nil)).Elem()
}

func (o GetSourceLemlistConfigurationOutput) ToGetSourceLemlistConfigurationOutput() GetSourceLemlistConfigurationOutput {
	return o
}

func (o GetSourceLemlistConfigurationOutput) ToGetSourceLemlistConfigurationOutputWithContext(ctx context.Context) GetSourceLemlistConfigurationOutput {
	return o
}

// Lemlist API key.
func (o GetSourceLemlistConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLemlistConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["lemlist"]
func (o GetSourceLemlistConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLemlistConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceLeverHiringConfiguration struct {
	// Choose how to authenticate to Lever Hiring.
	Credentials GetSourceLeverHiringConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["Production", "Sandbox"]
	// The environment in which you'd like to replicate data for Lever. This is used to determine which Lever API endpoint to use.
	Environment string `pulumi:"environment"`
	// must be one of ["lever-hiring"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. Note that it will be used only in the following incremental streams: comments, commits, and issues.
	StartDate string `pulumi:"startDate"`
}

type GetSourceLeverHiringConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceLeverHiringConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLeverHiringConfiguration)(nil)).Elem()
}

func (o GetSourceLeverHiringConfigurationOutput) ToGetSourceLeverHiringConfigurationOutput() GetSourceLeverHiringConfigurationOutput {
	return o
}

func (o GetSourceLeverHiringConfigurationOutput) ToGetSourceLeverHiringConfigurationOutputWithContext(ctx context.Context) GetSourceLeverHiringConfigurationOutput {
	return o
}

// Choose how to authenticate to Lever Hiring.
func (o GetSourceLeverHiringConfigurationOutput) Credentials() GetSourceLeverHiringConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfiguration) GetSourceLeverHiringConfigurationCredentials {
		return v.Credentials
	}).(GetSourceLeverHiringConfigurationCredentialsOutput)
}

// must be one of ["Production", "Sandbox"]
// The environment in which you'd like to replicate data for Lever. This is used to determine which Lever API endpoint to use.
func (o GetSourceLeverHiringConfigurationOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfiguration) string { return v.Environment }).(pulumi.StringOutput)
}

// must be one of ["lever-hiring"]
func (o GetSourceLeverHiringConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. Note that it will be used only in the following incremental streams: comments, commits, and issues.
func (o GetSourceLeverHiringConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceLeverHiringConfigurationCredentials struct {
	SourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey       GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey       `pulumi:"sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey"`
	SourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth        GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth        `pulumi:"sourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth"`
	SourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey `pulumi:"sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey"`
	SourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth  GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth  `pulumi:"sourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth"`
}

type GetSourceLeverHiringConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceLeverHiringConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLeverHiringConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceLeverHiringConfigurationCredentialsOutput) ToGetSourceLeverHiringConfigurationCredentialsOutput() GetSourceLeverHiringConfigurationCredentialsOutput {
	return o
}

func (o GetSourceLeverHiringConfigurationCredentialsOutput) ToGetSourceLeverHiringConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceLeverHiringConfigurationCredentialsOutput {
	return o
}

func (o GetSourceLeverHiringConfigurationCredentialsOutput) SourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey() GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentials) GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey {
		return v.SourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey
	}).(GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput)
}

func (o GetSourceLeverHiringConfigurationCredentialsOutput) SourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth() GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentials) GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth {
		return v.SourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth
	}).(GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput)
}

func (o GetSourceLeverHiringConfigurationCredentialsOutput) SourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey() GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentials) GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey {
		return v.SourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey
	}).(GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput)
}

func (o GetSourceLeverHiringConfigurationCredentialsOutput) SourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth() GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentials) GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth {
		return v.SourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth
	}).(GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput)
}

type GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey struct {
	ApiKey   string `pulumi:"apiKey"`
	AuthType string `pulumi:"authType"`
}

type GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput struct{ *pulumi.OutputState }

func (GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey)(nil)).Elem()
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput) ToGetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput() GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput {
	return o
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput) ToGetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutputWithContext(ctx context.Context) GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput {
	return o
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKey) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth)(nil)).Elem()
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput) ToGetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput() GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput {
	return o
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput) ToGetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutputWithContext(ctx context.Context) GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput {
	return o
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey struct {
	ApiKey   string `pulumi:"apiKey"`
	AuthType string `pulumi:"authType"`
}

type GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput struct{ *pulumi.OutputState }

func (GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey)(nil)).Elem()
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput) ToGetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput() GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput {
	return o
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput) ToGetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutputWithContext(ctx context.Context) GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput {
	return o
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKey) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth)(nil)).Elem()
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput) ToGetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput() GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput {
	return o
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput) ToGetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutputWithContext(ctx context.Context) GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput {
	return o
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceLinkedinAdsConfiguration struct {
	// Specify the account IDs separated by a space, to pull the data from. Leave empty, if you want to pull the data from all associated accounts. See the \n\nLinkedIn Ads docs\n\n for more info.
	AccountIds         []int                                                `pulumi:"accountIds"`
	AdAnalyticsReports []GetSourceLinkedinAdsConfigurationAdAnalyticsReport `pulumi:"adAnalyticsReports"`
	Credentials        GetSourceLinkedinAdsConfigurationCredentials         `pulumi:"credentials"`
	// must be one of ["linkedin-ads"]
	SourceType string `pulumi:"sourceType"`
	// UTC date in the format 2020-09-17. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceLinkedinAdsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceLinkedinAdsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinAdsConfiguration)(nil)).Elem()
}

func (o GetSourceLinkedinAdsConfigurationOutput) ToGetSourceLinkedinAdsConfigurationOutput() GetSourceLinkedinAdsConfigurationOutput {
	return o
}

func (o GetSourceLinkedinAdsConfigurationOutput) ToGetSourceLinkedinAdsConfigurationOutputWithContext(ctx context.Context) GetSourceLinkedinAdsConfigurationOutput {
	return o
}

// Specify the account IDs separated by a space, to pull the data from. Leave empty, if you want to pull the data from all associated accounts. See the \n\nLinkedIn Ads docs\n\n for more info.
func (o GetSourceLinkedinAdsConfigurationOutput) AccountIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfiguration) []int { return v.AccountIds }).(pulumi.IntArrayOutput)
}

func (o GetSourceLinkedinAdsConfigurationOutput) AdAnalyticsReports() GetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfiguration) []GetSourceLinkedinAdsConfigurationAdAnalyticsReport {
		return v.AdAnalyticsReports
	}).(GetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutput)
}

func (o GetSourceLinkedinAdsConfigurationOutput) Credentials() GetSourceLinkedinAdsConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfiguration) GetSourceLinkedinAdsConfigurationCredentials {
		return v.Credentials
	}).(GetSourceLinkedinAdsConfigurationCredentialsOutput)
}

// must be one of ["linkedin-ads"]
func (o GetSourceLinkedinAdsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date in the format 2020-09-17. Any data before this date will not be replicated.
func (o GetSourceLinkedinAdsConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceLinkedinAdsConfigurationAdAnalyticsReport struct {
	Name            string `pulumi:"name"`
	PivotBy         string `pulumi:"pivotBy"`
	TimeGranularity string `pulumi:"timeGranularity"`
}

type GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput struct{ *pulumi.OutputState }

func (GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinAdsConfigurationAdAnalyticsReport)(nil)).Elem()
}

func (o GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput) ToGetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput() GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput {
	return o
}

func (o GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput) ToGetSourceLinkedinAdsConfigurationAdAnalyticsReportOutputWithContext(ctx context.Context) GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput {
	return o
}

func (o GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationAdAnalyticsReport) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput) PivotBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationAdAnalyticsReport) string { return v.PivotBy }).(pulumi.StringOutput)
}

func (o GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput) TimeGranularity() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationAdAnalyticsReport) string { return v.TimeGranularity }).(pulumi.StringOutput)
}

type GetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutput struct{ *pulumi.OutputState }

func (GetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSourceLinkedinAdsConfigurationAdAnalyticsReport)(nil)).Elem()
}

func (o GetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutput) ToGetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutput() GetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutput {
	return o
}

func (o GetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutput) ToGetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutputWithContext(ctx context.Context) GetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutput {
	return o
}

func (o GetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutput) Index(i pulumi.IntInput) GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSourceLinkedinAdsConfigurationAdAnalyticsReport {
		return vs[0].([]GetSourceLinkedinAdsConfigurationAdAnalyticsReport)[vs[1].(int)]
	}).(GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput)
}

type GetSourceLinkedinAdsConfigurationCredentials struct {
	SourceLinkedinAdsAuthenticationAccessToken       GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken       `pulumi:"sourceLinkedinAdsAuthenticationAccessToken"`
	SourceLinkedinAdsAuthenticationOAuth20           GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20           `pulumi:"sourceLinkedinAdsAuthenticationOAuth20"`
	SourceLinkedinAdsUpdateAuthenticationAccessToken GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken `pulumi:"sourceLinkedinAdsUpdateAuthenticationAccessToken"`
	SourceLinkedinAdsUpdateAuthenticationOAuth20     GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20     `pulumi:"sourceLinkedinAdsUpdateAuthenticationOAuth20"`
}

type GetSourceLinkedinAdsConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceLinkedinAdsConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinAdsConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceLinkedinAdsConfigurationCredentialsOutput) ToGetSourceLinkedinAdsConfigurationCredentialsOutput() GetSourceLinkedinAdsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceLinkedinAdsConfigurationCredentialsOutput) ToGetSourceLinkedinAdsConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceLinkedinAdsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceLinkedinAdsConfigurationCredentialsOutput) SourceLinkedinAdsAuthenticationAccessToken() GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentials) GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken {
		return v.SourceLinkedinAdsAuthenticationAccessToken
	}).(GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput)
}

func (o GetSourceLinkedinAdsConfigurationCredentialsOutput) SourceLinkedinAdsAuthenticationOAuth20() GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentials) GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20 {
		return v.SourceLinkedinAdsAuthenticationOAuth20
	}).(GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output)
}

func (o GetSourceLinkedinAdsConfigurationCredentialsOutput) SourceLinkedinAdsUpdateAuthenticationAccessToken() GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentials) GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken {
		return v.SourceLinkedinAdsUpdateAuthenticationAccessToken
	}).(GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput)
}

func (o GetSourceLinkedinAdsConfigurationCredentialsOutput) SourceLinkedinAdsUpdateAuthenticationOAuth20() GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentials) GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20 {
		return v.SourceLinkedinAdsUpdateAuthenticationOAuth20
	}).(GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output)
}

type GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthMethod  string `pulumi:"authMethod"`
}

type GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken)(nil)).Elem()
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput) ToGetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput() GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput {
	return o
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput) ToGetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutputWithContext(ctx context.Context) GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput {
	return o
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessToken) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

type GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20 struct {
	AuthMethod   string `pulumi:"authMethod"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output) ToGetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output() GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output {
	return o
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output) ToGetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output {
	return o
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthMethod  string `pulumi:"authMethod"`
}

type GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken)(nil)).Elem()
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput) ToGetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput() GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput {
	return o
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput) ToGetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutputWithContext(ctx context.Context) GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput {
	return o
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessToken) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

type GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20 struct {
	AuthMethod   string `pulumi:"authMethod"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output) ToGetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output() GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output) ToGetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceLinkedinPagesConfiguration struct {
	Credentials GetSourceLinkedinPagesConfigurationCredentials `pulumi:"credentials"`
	// Specify the Organization ID
	OrgId string `pulumi:"orgId"`
	// must be one of ["linkedin-pages"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceLinkedinPagesConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceLinkedinPagesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinPagesConfiguration)(nil)).Elem()
}

func (o GetSourceLinkedinPagesConfigurationOutput) ToGetSourceLinkedinPagesConfigurationOutput() GetSourceLinkedinPagesConfigurationOutput {
	return o
}

func (o GetSourceLinkedinPagesConfigurationOutput) ToGetSourceLinkedinPagesConfigurationOutputWithContext(ctx context.Context) GetSourceLinkedinPagesConfigurationOutput {
	return o
}

func (o GetSourceLinkedinPagesConfigurationOutput) Credentials() GetSourceLinkedinPagesConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfiguration) GetSourceLinkedinPagesConfigurationCredentials {
		return v.Credentials
	}).(GetSourceLinkedinPagesConfigurationCredentialsOutput)
}

// Specify the Organization ID
func (o GetSourceLinkedinPagesConfigurationOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfiguration) string { return v.OrgId }).(pulumi.StringOutput)
}

// must be one of ["linkedin-pages"]
func (o GetSourceLinkedinPagesConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceLinkedinPagesConfigurationCredentials struct {
	SourceLinkedinPagesAuthenticationAccessToken       GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken       `pulumi:"sourceLinkedinPagesAuthenticationAccessToken"`
	SourceLinkedinPagesAuthenticationOAuth20           GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20           `pulumi:"sourceLinkedinPagesAuthenticationOAuth20"`
	SourceLinkedinPagesUpdateAuthenticationAccessToken GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken `pulumi:"sourceLinkedinPagesUpdateAuthenticationAccessToken"`
	SourceLinkedinPagesUpdateAuthenticationOAuth20     GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20     `pulumi:"sourceLinkedinPagesUpdateAuthenticationOAuth20"`
}

type GetSourceLinkedinPagesConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceLinkedinPagesConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinPagesConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceLinkedinPagesConfigurationCredentialsOutput) ToGetSourceLinkedinPagesConfigurationCredentialsOutput() GetSourceLinkedinPagesConfigurationCredentialsOutput {
	return o
}

func (o GetSourceLinkedinPagesConfigurationCredentialsOutput) ToGetSourceLinkedinPagesConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceLinkedinPagesConfigurationCredentialsOutput {
	return o
}

func (o GetSourceLinkedinPagesConfigurationCredentialsOutput) SourceLinkedinPagesAuthenticationAccessToken() GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentials) GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken {
		return v.SourceLinkedinPagesAuthenticationAccessToken
	}).(GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput)
}

func (o GetSourceLinkedinPagesConfigurationCredentialsOutput) SourceLinkedinPagesAuthenticationOAuth20() GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentials) GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20 {
		return v.SourceLinkedinPagesAuthenticationOAuth20
	}).(GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output)
}

func (o GetSourceLinkedinPagesConfigurationCredentialsOutput) SourceLinkedinPagesUpdateAuthenticationAccessToken() GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentials) GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken {
		return v.SourceLinkedinPagesUpdateAuthenticationAccessToken
	}).(GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput)
}

func (o GetSourceLinkedinPagesConfigurationCredentialsOutput) SourceLinkedinPagesUpdateAuthenticationOAuth20() GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentials) GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20 {
		return v.SourceLinkedinPagesUpdateAuthenticationOAuth20
	}).(GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output)
}

type GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthMethod  string `pulumi:"authMethod"`
}

type GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken)(nil)).Elem()
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput) ToGetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput() GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput {
	return o
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput) ToGetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutputWithContext(ctx context.Context) GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput {
	return o
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessToken) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

type GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20 struct {
	AuthMethod   string `pulumi:"authMethod"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output) ToGetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output() GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output {
	return o
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output) ToGetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output {
	return o
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthMethod  string `pulumi:"authMethod"`
}

type GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken)(nil)).Elem()
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput) ToGetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput() GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput {
	return o
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput) ToGetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutputWithContext(ctx context.Context) GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput {
	return o
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessToken) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

type GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20 struct {
	AuthMethod   string `pulumi:"authMethod"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output) ToGetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output() GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output) ToGetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceLinnworksConfiguration struct {
	// Linnworks Application ID
	ApplicationId string `pulumi:"applicationId"`
	// Linnworks Application Secret
	ApplicationSecret string `pulumi:"applicationSecret"`
	// must be one of ["linnworks"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
	Token     string `pulumi:"token"`
}

type GetSourceLinnworksConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceLinnworksConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLinnworksConfiguration)(nil)).Elem()
}

func (o GetSourceLinnworksConfigurationOutput) ToGetSourceLinnworksConfigurationOutput() GetSourceLinnworksConfigurationOutput {
	return o
}

func (o GetSourceLinnworksConfigurationOutput) ToGetSourceLinnworksConfigurationOutputWithContext(ctx context.Context) GetSourceLinnworksConfigurationOutput {
	return o
}

// Linnworks Application ID
func (o GetSourceLinnworksConfigurationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinnworksConfiguration) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// Linnworks Application Secret
func (o GetSourceLinnworksConfigurationOutput) ApplicationSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinnworksConfiguration) string { return v.ApplicationSecret }).(pulumi.StringOutput)
}

// must be one of ["linnworks"]
func (o GetSourceLinnworksConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinnworksConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceLinnworksConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinnworksConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

func (o GetSourceLinnworksConfigurationOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLinnworksConfiguration) string { return v.Token }).(pulumi.StringOutput)
}

type GetSourceLokaliseConfiguration struct {
	// Lokalise API Key with read-access. Available at Profile settings > API tokens. See \n\nhere\n\n.
	ApiKey string `pulumi:"apiKey"`
	// Lokalise project ID. Available at Project Settings > General.
	ProjectId string `pulumi:"projectId"`
	// must be one of ["lokalise"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceLokaliseConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceLokaliseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceLokaliseConfiguration)(nil)).Elem()
}

func (o GetSourceLokaliseConfigurationOutput) ToGetSourceLokaliseConfigurationOutput() GetSourceLokaliseConfigurationOutput {
	return o
}

func (o GetSourceLokaliseConfigurationOutput) ToGetSourceLokaliseConfigurationOutputWithContext(ctx context.Context) GetSourceLokaliseConfigurationOutput {
	return o
}

// Lokalise API Key with read-access. Available at Profile settings > API tokens. See \n\nhere\n\n.
func (o GetSourceLokaliseConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLokaliseConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Lokalise project ID. Available at Project Settings > General.
func (o GetSourceLokaliseConfigurationOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLokaliseConfiguration) string { return v.ProjectId }).(pulumi.StringOutput)
}

// must be one of ["lokalise"]
func (o GetSourceLokaliseConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceLokaliseConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceMailchimpConfiguration struct {
	CampaignId  string                                     `pulumi:"campaignId"`
	Credentials GetSourceMailchimpConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["mailchimp"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceMailchimpConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMailchimpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMailchimpConfiguration)(nil)).Elem()
}

func (o GetSourceMailchimpConfigurationOutput) ToGetSourceMailchimpConfigurationOutput() GetSourceMailchimpConfigurationOutput {
	return o
}

func (o GetSourceMailchimpConfigurationOutput) ToGetSourceMailchimpConfigurationOutputWithContext(ctx context.Context) GetSourceMailchimpConfigurationOutput {
	return o
}

func (o GetSourceMailchimpConfigurationOutput) CampaignId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfiguration) string { return v.CampaignId }).(pulumi.StringOutput)
}

func (o GetSourceMailchimpConfigurationOutput) Credentials() GetSourceMailchimpConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfiguration) GetSourceMailchimpConfigurationCredentials {
		return v.Credentials
	}).(GetSourceMailchimpConfigurationCredentialsOutput)
}

// must be one of ["mailchimp"]
func (o GetSourceMailchimpConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceMailchimpConfigurationCredentials struct {
	SourceMailchimpAuthenticationApiKey        GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey        `pulumi:"sourceMailchimpAuthenticationApiKey"`
	SourceMailchimpAuthenticationOAuth20       GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20       `pulumi:"sourceMailchimpAuthenticationOAuth20"`
	SourceMailchimpUpdateAuthenticationApiKey  GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey  `pulumi:"sourceMailchimpUpdateAuthenticationApiKey"`
	SourceMailchimpUpdateAuthenticationOAuth20 GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20 `pulumi:"sourceMailchimpUpdateAuthenticationOAuth20"`
}

type GetSourceMailchimpConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceMailchimpConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMailchimpConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceMailchimpConfigurationCredentialsOutput) ToGetSourceMailchimpConfigurationCredentialsOutput() GetSourceMailchimpConfigurationCredentialsOutput {
	return o
}

func (o GetSourceMailchimpConfigurationCredentialsOutput) ToGetSourceMailchimpConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceMailchimpConfigurationCredentialsOutput {
	return o
}

func (o GetSourceMailchimpConfigurationCredentialsOutput) SourceMailchimpAuthenticationApiKey() GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentials) GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey {
		return v.SourceMailchimpAuthenticationApiKey
	}).(GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput)
}

func (o GetSourceMailchimpConfigurationCredentialsOutput) SourceMailchimpAuthenticationOAuth20() GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentials) GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20 {
		return v.SourceMailchimpAuthenticationOAuth20
	}).(GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output)
}

func (o GetSourceMailchimpConfigurationCredentialsOutput) SourceMailchimpUpdateAuthenticationApiKey() GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentials) GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey {
		return v.SourceMailchimpUpdateAuthenticationApiKey
	}).(GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput)
}

func (o GetSourceMailchimpConfigurationCredentialsOutput) SourceMailchimpUpdateAuthenticationOAuth20() GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentials) GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20 {
		return v.SourceMailchimpUpdateAuthenticationOAuth20
	}).(GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output)
}

type GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey struct {
	Apikey   string `pulumi:"apikey"`
	AuthType string `pulumi:"authType"`
}

type GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput struct{ *pulumi.OutputState }

func (GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey)(nil)).Elem()
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput) ToGetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput() GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput {
	return o
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput) ToGetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutputWithContext(ctx context.Context) GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput {
	return o
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput) Apikey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey) string {
		return v.Apikey
	}).(pulumi.StringOutput)
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKey) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
}

type GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output) ToGetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output() GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output {
	return o
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output) ToGetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output {
	return o
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey struct {
	Apikey   string `pulumi:"apikey"`
	AuthType string `pulumi:"authType"`
}

type GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput struct{ *pulumi.OutputState }

func (GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey)(nil)).Elem()
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput) ToGetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput() GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput {
	return o
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput) ToGetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutputWithContext(ctx context.Context) GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput {
	return o
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput) Apikey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey) string {
		return v.Apikey
	}).(pulumi.StringOutput)
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKey) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
}

type GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output) ToGetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output() GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output) ToGetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceMailgunConfiguration struct {
	// Domain region code. 'EU' or 'US' are possible values. The default is 'US'.
	DomainRegion string `pulumi:"domainRegion"`
	// Primary account API key to access your Mailgun data.
	PrivateKey string `pulumi:"privateKey"`
	// must be one of ["mailgun"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2020-10-01 00:00:00. Any data before this date will not be replicated. If omitted, defaults to 3 days ago.
	StartDate string `pulumi:"startDate"`
}

type GetSourceMailgunConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMailgunConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMailgunConfiguration)(nil)).Elem()
}

func (o GetSourceMailgunConfigurationOutput) ToGetSourceMailgunConfigurationOutput() GetSourceMailgunConfigurationOutput {
	return o
}

func (o GetSourceMailgunConfigurationOutput) ToGetSourceMailgunConfigurationOutputWithContext(ctx context.Context) GetSourceMailgunConfigurationOutput {
	return o
}

// Domain region code. 'EU' or 'US' are possible values. The default is 'US'.
func (o GetSourceMailgunConfigurationOutput) DomainRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailgunConfiguration) string { return v.DomainRegion }).(pulumi.StringOutput)
}

// Primary account API key to access your Mailgun data.
func (o GetSourceMailgunConfigurationOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailgunConfiguration) string { return v.PrivateKey }).(pulumi.StringOutput)
}

// must be one of ["mailgun"]
func (o GetSourceMailgunConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailgunConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2020-10-01 00:00:00. Any data before this date will not be replicated. If omitted, defaults to 3 days ago.
func (o GetSourceMailgunConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailgunConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceMailjetSmsConfiguration struct {
	// Retrieve SMS messages created before the specified timestamp. Required format - Unix timestamp.
	EndDate int `pulumi:"endDate"`
	// must be one of ["mailjet-sms"]
	SourceType string `pulumi:"sourceType"`
	// Retrieve SMS messages created after the specified timestamp. Required format - Unix timestamp.
	StartDate int `pulumi:"startDate"`
	// Your access token. See \n\nhere\n\n.
	Token string `pulumi:"token"`
}

type GetSourceMailjetSmsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMailjetSmsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMailjetSmsConfiguration)(nil)).Elem()
}

func (o GetSourceMailjetSmsConfigurationOutput) ToGetSourceMailjetSmsConfigurationOutput() GetSourceMailjetSmsConfigurationOutput {
	return o
}

func (o GetSourceMailjetSmsConfigurationOutput) ToGetSourceMailjetSmsConfigurationOutputWithContext(ctx context.Context) GetSourceMailjetSmsConfigurationOutput {
	return o
}

// Retrieve SMS messages created before the specified timestamp. Required format - Unix timestamp.
func (o GetSourceMailjetSmsConfigurationOutput) EndDate() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMailjetSmsConfiguration) int { return v.EndDate }).(pulumi.IntOutput)
}

// must be one of ["mailjet-sms"]
func (o GetSourceMailjetSmsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailjetSmsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Retrieve SMS messages created after the specified timestamp. Required format - Unix timestamp.
func (o GetSourceMailjetSmsConfigurationOutput) StartDate() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMailjetSmsConfiguration) int { return v.StartDate }).(pulumi.IntOutput)
}

// Your access token. See \n\nhere\n\n.
func (o GetSourceMailjetSmsConfigurationOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMailjetSmsConfiguration) string { return v.Token }).(pulumi.StringOutput)
}

type GetSourceMarketoConfiguration struct {
	// The Client ID of your Marketo developer application. See \n\n the docs \n\n for info on how to obtain this.
	ClientId string `pulumi:"clientId"`
	// The Client Secret of your Marketo developer application. See \n\n the docs \n\n for info on how to obtain this.
	ClientSecret string `pulumi:"clientSecret"`
	// Your Marketo Base URL. See \n\n the docs \n\n for info on how to obtain this.
	DomainUrl string `pulumi:"domainUrl"`
	// must be one of ["marketo"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceMarketoConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMarketoConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMarketoConfiguration)(nil)).Elem()
}

func (o GetSourceMarketoConfigurationOutput) ToGetSourceMarketoConfigurationOutput() GetSourceMarketoConfigurationOutput {
	return o
}

func (o GetSourceMarketoConfigurationOutput) ToGetSourceMarketoConfigurationOutputWithContext(ctx context.Context) GetSourceMarketoConfigurationOutput {
	return o
}

// The Client ID of your Marketo developer application. See \n\n the docs \n\n for info on how to obtain this.
func (o GetSourceMarketoConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMarketoConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret of your Marketo developer application. See \n\n the docs \n\n for info on how to obtain this.
func (o GetSourceMarketoConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMarketoConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// Your Marketo Base URL. See \n\n the docs \n\n for info on how to obtain this.
func (o GetSourceMarketoConfigurationOutput) DomainUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMarketoConfiguration) string { return v.DomainUrl }).(pulumi.StringOutput)
}

// must be one of ["marketo"]
func (o GetSourceMarketoConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMarketoConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceMarketoConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMarketoConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceMetabaseConfiguration struct {
	// URL to your metabase instance API
	InstanceApiUrl string `pulumi:"instanceApiUrl"`
	Password       string `pulumi:"password"`
	// To generate your session token, you need to run the following command: `curl -X POST \
	// -H "Content-Type: application/json" \
	// -d '{"username": "person@metabase.com", "password": "fakepassword"}' \
	// http://localhost:3000/api/session
	// ` Then copy the value of the `id` field returned by a successful call to that API.
	// Note that by default, sessions are good for 14 days and needs to be regenerated.
	SessionToken string `pulumi:"sessionToken"`
	// must be one of ["metabase"]
	SourceType string `pulumi:"sourceType"`
	Username   string `pulumi:"username"`
}

type GetSourceMetabaseConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMetabaseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMetabaseConfiguration)(nil)).Elem()
}

func (o GetSourceMetabaseConfigurationOutput) ToGetSourceMetabaseConfigurationOutput() GetSourceMetabaseConfigurationOutput {
	return o
}

func (o GetSourceMetabaseConfigurationOutput) ToGetSourceMetabaseConfigurationOutputWithContext(ctx context.Context) GetSourceMetabaseConfigurationOutput {
	return o
}

// URL to your metabase instance API
func (o GetSourceMetabaseConfigurationOutput) InstanceApiUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMetabaseConfiguration) string { return v.InstanceApiUrl }).(pulumi.StringOutput)
}

func (o GetSourceMetabaseConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMetabaseConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// To generate your session token, you need to run the following command: `curl -X POST \
// -H "Content-Type: application/json" \
// -d '{"username": "person@metabase.com", "password": "fakepassword"}' \
// http://localhost:3000/api/session
// ` Then copy the value of the `id` field returned by a successful call to that API.
// Note that by default, sessions are good for 14 days and needs to be regenerated.
func (o GetSourceMetabaseConfigurationOutput) SessionToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMetabaseConfiguration) string { return v.SessionToken }).(pulumi.StringOutput)
}

// must be one of ["metabase"]
func (o GetSourceMetabaseConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMetabaseConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

func (o GetSourceMetabaseConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMetabaseConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceMicrosoftTeamsConfiguration struct {
	// Choose how to authenticate to Microsoft
	Credentials GetSourceMicrosoftTeamsConfigurationCredentials `pulumi:"credentials"`
	// Specifies the length of time over which the Team Device Report stream is aggregated. The supported values are: D7, D30, D90, and D180.
	Period string `pulumi:"period"`
	// must be one of ["microsoft-teams"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceMicrosoftTeamsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMicrosoftTeamsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMicrosoftTeamsConfiguration)(nil)).Elem()
}

func (o GetSourceMicrosoftTeamsConfigurationOutput) ToGetSourceMicrosoftTeamsConfigurationOutput() GetSourceMicrosoftTeamsConfigurationOutput {
	return o
}

func (o GetSourceMicrosoftTeamsConfigurationOutput) ToGetSourceMicrosoftTeamsConfigurationOutputWithContext(ctx context.Context) GetSourceMicrosoftTeamsConfigurationOutput {
	return o
}

// Choose how to authenticate to Microsoft
func (o GetSourceMicrosoftTeamsConfigurationOutput) Credentials() GetSourceMicrosoftTeamsConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfiguration) GetSourceMicrosoftTeamsConfigurationCredentials {
		return v.Credentials
	}).(GetSourceMicrosoftTeamsConfigurationCredentialsOutput)
}

// Specifies the length of time over which the Team Device Report stream is aggregated. The supported values are: D7, D30, D90, and D180.
func (o GetSourceMicrosoftTeamsConfigurationOutput) Period() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfiguration) string { return v.Period }).(pulumi.StringOutput)
}

// must be one of ["microsoft-teams"]
func (o GetSourceMicrosoftTeamsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceMicrosoftTeamsConfigurationCredentials struct {
	SourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft              GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft              `pulumi:"sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft"`
	SourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20       GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20       `pulumi:"sourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20"`
	SourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft        GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft        `pulumi:"sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft"`
	SourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20 GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20 `pulumi:"sourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20"`
}

type GetSourceMicrosoftTeamsConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceMicrosoftTeamsConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMicrosoftTeamsConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsOutput) ToGetSourceMicrosoftTeamsConfigurationCredentialsOutput() GetSourceMicrosoftTeamsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsOutput) ToGetSourceMicrosoftTeamsConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceMicrosoftTeamsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsOutput) SourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft() GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentials) GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft {
		return v.SourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft
	}).(GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsOutput) SourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20() GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentials) GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20 {
		return v.SourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20
	}).(GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsOutput) SourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft() GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentials) GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft {
		return v.SourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft
	}).(GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsOutput) SourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20() GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentials) GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20 {
		return v.SourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20
	}).(GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output)
}

type GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	TenantId     string `pulumi:"tenantId"`
}

type GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput struct{ *pulumi.OutputState }

func (GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft)(nil)).Elem()
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput) ToGetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput() GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput {
	return o
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput) ToGetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutputWithContext(ctx context.Context) GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput {
	return o
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoft) string {
		return v.TenantId
	}).(pulumi.StringOutput)
}

type GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20 struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
	TenantId     string `pulumi:"tenantId"`
}

type GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20)(nil)).Elem()
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) ToGetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output() GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output {
	return o
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) ToGetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20OutputWithContext(ctx context.Context) GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output {
	return o
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20) string {
		return v.TenantId
	}).(pulumi.StringOutput)
}

type GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	TenantId     string `pulumi:"tenantId"`
}

type GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput struct{ *pulumi.OutputState }

func (GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft)(nil)).Elem()
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput) ToGetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput() GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput {
	return o
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput) ToGetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutputWithContext(ctx context.Context) GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput {
	return o
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoft) string {
		return v.TenantId
	}).(pulumi.StringOutput)
}

type GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20 struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
	TenantId     string `pulumi:"tenantId"`
}

type GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20)(nil)).Elem()
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) ToGetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output() GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output {
	return o
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) ToGetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20OutputWithContext(ctx context.Context) GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output {
	return o
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20) string {
		return v.TenantId
	}).(pulumi.StringOutput)
}

type GetSourceMixpanelConfiguration struct {
	// A period of time for attributing results to ads and the lookback period after those actions occur during which ad results are counted. Default attribution window is 5 days.
	AttributionWindow int `pulumi:"attributionWindow"`
	// Choose how to authenticate to Mixpanel
	Credentials GetSourceMixpanelConfigurationCredentials `pulumi:"credentials"`
	// Defines window size in days, that used to slice through data. You can reduce it, if amount of data in each window is too big for your environment.
	DateWindowSize int `pulumi:"dateWindowSize"`
	// The date in the format YYYY-MM-DD. Any data after this date will not be replicated. Left empty to always sync to most recent date
	EndDate string `pulumi:"endDate"`
	// Your project ID number. See the \n\ndocs\n\n for more information on how to obtain this.
	ProjectId int `pulumi:"projectId"`
	// Time zone in which integer date times are stored. The project timezone may be found in the project settings in the \n\nMixpanel console\n\n.
	ProjectTimezone string `pulumi:"projectTimezone"`
	// must be one of ["US", "EU"]
	// The region of mixpanel domain instance either US or EU.
	Region string `pulumi:"region"`
	// Setting this config parameter to TRUE ensures that new properties on events and engage records are captured. Otherwise new properties will be ignored.
	SelectPropertiesByDefault bool `pulumi:"selectPropertiesByDefault"`
	// must be one of ["mixpanel"]
	SourceType string `pulumi:"sourceType"`
	// The date in the format YYYY-MM-DD. Any data before this date will not be replicated. If this option is not set, the connector will replicate data from up to one year ago by default.
	StartDate string `pulumi:"startDate"`
}

type GetSourceMixpanelConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMixpanelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMixpanelConfiguration)(nil)).Elem()
}

func (o GetSourceMixpanelConfigurationOutput) ToGetSourceMixpanelConfigurationOutput() GetSourceMixpanelConfigurationOutput {
	return o
}

func (o GetSourceMixpanelConfigurationOutput) ToGetSourceMixpanelConfigurationOutputWithContext(ctx context.Context) GetSourceMixpanelConfigurationOutput {
	return o
}

// A period of time for attributing results to ads and the lookback period after those actions occur during which ad results are counted. Default attribution window is 5 days.
func (o GetSourceMixpanelConfigurationOutput) AttributionWindow() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfiguration) int { return v.AttributionWindow }).(pulumi.IntOutput)
}

// Choose how to authenticate to Mixpanel
func (o GetSourceMixpanelConfigurationOutput) Credentials() GetSourceMixpanelConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfiguration) GetSourceMixpanelConfigurationCredentials { return v.Credentials }).(GetSourceMixpanelConfigurationCredentialsOutput)
}

// Defines window size in days, that used to slice through data. You can reduce it, if amount of data in each window is too big for your environment.
func (o GetSourceMixpanelConfigurationOutput) DateWindowSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfiguration) int { return v.DateWindowSize }).(pulumi.IntOutput)
}

// The date in the format YYYY-MM-DD. Any data after this date will not be replicated. Left empty to always sync to most recent date
func (o GetSourceMixpanelConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// Your project ID number. See the \n\ndocs\n\n for more information on how to obtain this.
func (o GetSourceMixpanelConfigurationOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfiguration) int { return v.ProjectId }).(pulumi.IntOutput)
}

// Time zone in which integer date times are stored. The project timezone may be found in the project settings in the \n\nMixpanel console\n\n.
func (o GetSourceMixpanelConfigurationOutput) ProjectTimezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfiguration) string { return v.ProjectTimezone }).(pulumi.StringOutput)
}

// must be one of ["US", "EU"]
// The region of mixpanel domain instance either US or EU.
func (o GetSourceMixpanelConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfiguration) string { return v.Region }).(pulumi.StringOutput)
}

// Setting this config parameter to TRUE ensures that new properties on events and engage records are captured. Otherwise new properties will be ignored.
func (o GetSourceMixpanelConfigurationOutput) SelectPropertiesByDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfiguration) bool { return v.SelectPropertiesByDefault }).(pulumi.BoolOutput)
}

// must be one of ["mixpanel"]
func (o GetSourceMixpanelConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date in the format YYYY-MM-DD. Any data before this date will not be replicated. If this option is not set, the connector will replicate data from up to one year ago by default.
func (o GetSourceMixpanelConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceMixpanelConfigurationCredentials struct {
	SourceMixpanelAuthenticationWildcardProjectSecret        GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret        `pulumi:"sourceMixpanelAuthenticationWildcardProjectSecret"`
	SourceMixpanelAuthenticationWildcardServiceAccount       GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount       `pulumi:"sourceMixpanelAuthenticationWildcardServiceAccount"`
	SourceMixpanelUpdateAuthenticationWildcardProjectSecret  GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret  `pulumi:"sourceMixpanelUpdateAuthenticationWildcardProjectSecret"`
	SourceMixpanelUpdateAuthenticationWildcardServiceAccount GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount `pulumi:"sourceMixpanelUpdateAuthenticationWildcardServiceAccount"`
}

type GetSourceMixpanelConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceMixpanelConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMixpanelConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceMixpanelConfigurationCredentialsOutput) ToGetSourceMixpanelConfigurationCredentialsOutput() GetSourceMixpanelConfigurationCredentialsOutput {
	return o
}

func (o GetSourceMixpanelConfigurationCredentialsOutput) ToGetSourceMixpanelConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceMixpanelConfigurationCredentialsOutput {
	return o
}

func (o GetSourceMixpanelConfigurationCredentialsOutput) SourceMixpanelAuthenticationWildcardProjectSecret() GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentials) GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret {
		return v.SourceMixpanelAuthenticationWildcardProjectSecret
	}).(GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput)
}

func (o GetSourceMixpanelConfigurationCredentialsOutput) SourceMixpanelAuthenticationWildcardServiceAccount() GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentials) GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount {
		return v.SourceMixpanelAuthenticationWildcardServiceAccount
	}).(GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput)
}

func (o GetSourceMixpanelConfigurationCredentialsOutput) SourceMixpanelUpdateAuthenticationWildcardProjectSecret() GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentials) GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret {
		return v.SourceMixpanelUpdateAuthenticationWildcardProjectSecret
	}).(GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput)
}

func (o GetSourceMixpanelConfigurationCredentialsOutput) SourceMixpanelUpdateAuthenticationWildcardServiceAccount() GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentials) GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount {
		return v.SourceMixpanelUpdateAuthenticationWildcardServiceAccount
	}).(GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput)
}

type GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret struct {
	ApiSecret   string `pulumi:"apiSecret"`
	OptionTitle string `pulumi:"optionTitle"`
}

type GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput struct{ *pulumi.OutputState }

func (GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret)(nil)).Elem()
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput) ToGetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput() GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput {
	return o
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput) ToGetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutputWithContext(ctx context.Context) GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput {
	return o
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput) ApiSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret) string {
		return v.ApiSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecret) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

type GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount struct {
	OptionTitle string `pulumi:"optionTitle"`
	Secret      string `pulumi:"secret"`
	Username    string `pulumi:"username"`
}

type GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput struct{ *pulumi.OutputState }

func (GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount)(nil)).Elem()
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput) ToGetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput() GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput {
	return o
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput) ToGetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutputWithContext(ctx context.Context) GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput {
	return o
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount) string {
		return v.Secret
	}).(pulumi.StringOutput)
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccount) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret struct {
	ApiSecret   string `pulumi:"apiSecret"`
	OptionTitle string `pulumi:"optionTitle"`
}

type GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput struct{ *pulumi.OutputState }

func (GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret)(nil)).Elem()
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput) ToGetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput() GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput {
	return o
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput) ToGetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutputWithContext(ctx context.Context) GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput {
	return o
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput) ApiSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret) string {
		return v.ApiSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecret) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

type GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount struct {
	OptionTitle string `pulumi:"optionTitle"`
	Secret      string `pulumi:"secret"`
	Username    string `pulumi:"username"`
}

type GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput struct{ *pulumi.OutputState }

func (GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount)(nil)).Elem()
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput) ToGetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput() GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput {
	return o
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput) ToGetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutputWithContext(ctx context.Context) GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput {
	return o
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount) string {
		return v.Secret
	}).(pulumi.StringOutput)
}

func (o GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccount) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type GetSourceMondayConfiguration struct {
	Credentials GetSourceMondayConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["monday"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceMondayConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMondayConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMondayConfiguration)(nil)).Elem()
}

func (o GetSourceMondayConfigurationOutput) ToGetSourceMondayConfigurationOutput() GetSourceMondayConfigurationOutput {
	return o
}

func (o GetSourceMondayConfigurationOutput) ToGetSourceMondayConfigurationOutputWithContext(ctx context.Context) GetSourceMondayConfigurationOutput {
	return o
}

func (o GetSourceMondayConfigurationOutput) Credentials() GetSourceMondayConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceMondayConfiguration) GetSourceMondayConfigurationCredentials { return v.Credentials }).(GetSourceMondayConfigurationCredentialsOutput)
}

// must be one of ["monday"]
func (o GetSourceMondayConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceMondayConfigurationCredentials struct {
	SourceMondayAuthorizationMethodApiToken       GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken       `pulumi:"sourceMondayAuthorizationMethodApiToken"`
	SourceMondayAuthorizationMethodOAuth20        GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20        `pulumi:"sourceMondayAuthorizationMethodOAuth20"`
	SourceMondayUpdateAuthorizationMethodApiToken GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken `pulumi:"sourceMondayUpdateAuthorizationMethodApiToken"`
	SourceMondayUpdateAuthorizationMethodOAuth20  GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20  `pulumi:"sourceMondayUpdateAuthorizationMethodOAuth20"`
}

type GetSourceMondayConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceMondayConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMondayConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceMondayConfigurationCredentialsOutput) ToGetSourceMondayConfigurationCredentialsOutput() GetSourceMondayConfigurationCredentialsOutput {
	return o
}

func (o GetSourceMondayConfigurationCredentialsOutput) ToGetSourceMondayConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceMondayConfigurationCredentialsOutput {
	return o
}

func (o GetSourceMondayConfigurationCredentialsOutput) SourceMondayAuthorizationMethodApiToken() GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentials) GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken {
		return v.SourceMondayAuthorizationMethodApiToken
	}).(GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput)
}

func (o GetSourceMondayConfigurationCredentialsOutput) SourceMondayAuthorizationMethodOAuth20() GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentials) GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20 {
		return v.SourceMondayAuthorizationMethodOAuth20
	}).(GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output)
}

func (o GetSourceMondayConfigurationCredentialsOutput) SourceMondayUpdateAuthorizationMethodApiToken() GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentials) GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken {
		return v.SourceMondayUpdateAuthorizationMethodApiToken
	}).(GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput)
}

func (o GetSourceMondayConfigurationCredentialsOutput) SourceMondayUpdateAuthorizationMethodOAuth20() GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentials) GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20 {
		return v.SourceMondayUpdateAuthorizationMethodOAuth20
	}).(GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output)
}

type GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken struct {
	ApiToken string `pulumi:"apiToken"`
	AuthType string `pulumi:"authType"`
}

type GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken)(nil)).Elem()
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput) ToGetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput() GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput) ToGetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutputWithContext(ctx context.Context) GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	Subdomain    string `pulumi:"subdomain"`
}

type GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output) ToGetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output() GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output) ToGetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20) string {
		return v.Subdomain
	}).(pulumi.StringOutput)
}

type GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken struct {
	ApiToken string `pulumi:"apiToken"`
	AuthType string `pulumi:"authType"`
}

type GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken)(nil)).Elem()
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput) ToGetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput() GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput) ToGetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutputWithContext(ctx context.Context) GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	Subdomain    string `pulumi:"subdomain"`
}

type GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output) ToGetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output() GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output) ToGetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20) string {
		return v.Subdomain
	}).(pulumi.StringOutput)
}

type GetSourceMongodbConfiguration struct {
	// The authentication source where the user information is stored.
	AuthSource string `pulumi:"authSource"`
	// The database you want to replicate.
	Database string `pulumi:"database"`
	// The MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default.
	InstanceType GetSourceMongodbConfigurationInstanceType `pulumi:"instanceType"`
	// The password associated with this username.
	Password string `pulumi:"password"`
	// must be one of ["mongodb"]
	SourceType string `pulumi:"sourceType"`
	// The username which is used to access the database.
	User string `pulumi:"user"`
}

type GetSourceMongodbConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMongodbConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMongodbConfiguration)(nil)).Elem()
}

func (o GetSourceMongodbConfigurationOutput) ToGetSourceMongodbConfigurationOutput() GetSourceMongodbConfigurationOutput {
	return o
}

func (o GetSourceMongodbConfigurationOutput) ToGetSourceMongodbConfigurationOutputWithContext(ctx context.Context) GetSourceMongodbConfigurationOutput {
	return o
}

// The authentication source where the user information is stored.
func (o GetSourceMongodbConfigurationOutput) AuthSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfiguration) string { return v.AuthSource }).(pulumi.StringOutput)
}

// The database you want to replicate.
func (o GetSourceMongodbConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// The MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default.
func (o GetSourceMongodbConfigurationOutput) InstanceType() GetSourceMongodbConfigurationInstanceTypeOutput {
	return o.ApplyT(func(v GetSourceMongodbConfiguration) GetSourceMongodbConfigurationInstanceType { return v.InstanceType }).(GetSourceMongodbConfigurationInstanceTypeOutput)
}

// The password associated with this username.
func (o GetSourceMongodbConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// must be one of ["mongodb"]
func (o GetSourceMongodbConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The username which is used to access the database.
func (o GetSourceMongodbConfigurationOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfiguration) string { return v.User }).(pulumi.StringOutput)
}

type GetSourceMongodbConfigurationInstanceType struct {
	SourceMongodbMongoDbInstanceTypeMongoDbAtlas                    GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas                    `pulumi:"sourceMongodbMongoDbInstanceTypeMongoDbAtlas"`
	SourceMongodbMongoDbInstanceTypeReplicaSet                      GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet                      `pulumi:"sourceMongodbMongoDbInstanceTypeReplicaSet"`
	SourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance       GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance       `pulumi:"sourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance"`
	SourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas              GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas              `pulumi:"sourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas"`
	SourceMongodbUpdateMongoDbInstanceTypeReplicaSet                GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet                `pulumi:"sourceMongodbUpdateMongoDbInstanceTypeReplicaSet"`
	SourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance `pulumi:"sourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance"`
}

type GetSourceMongodbConfigurationInstanceTypeOutput struct{ *pulumi.OutputState }

func (GetSourceMongodbConfigurationInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMongodbConfigurationInstanceType)(nil)).Elem()
}

func (o GetSourceMongodbConfigurationInstanceTypeOutput) ToGetSourceMongodbConfigurationInstanceTypeOutput() GetSourceMongodbConfigurationInstanceTypeOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeOutput) ToGetSourceMongodbConfigurationInstanceTypeOutputWithContext(ctx context.Context) GetSourceMongodbConfigurationInstanceTypeOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeOutput) SourceMongodbMongoDbInstanceTypeMongoDbAtlas() GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceType) GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas {
		return v.SourceMongodbMongoDbInstanceTypeMongoDbAtlas
	}).(GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeOutput) SourceMongodbMongoDbInstanceTypeReplicaSet() GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceType) GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet {
		return v.SourceMongodbMongoDbInstanceTypeReplicaSet
	}).(GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeOutput) SourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance() GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceType) GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance {
		return v.SourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance
	}).(GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeOutput) SourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas() GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceType) GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas {
		return v.SourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas
	}).(GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeOutput) SourceMongodbUpdateMongoDbInstanceTypeReplicaSet() GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceType) GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet {
		return v.SourceMongodbUpdateMongoDbInstanceTypeReplicaSet
	}).(GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeOutput) SourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance() GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceType) GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance {
		return v.SourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance
	}).(GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput)
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ClusterUrl           string  `pulumi:"clusterUrl"`
	Instance             string  `pulumi:"instance"`
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput struct{ *pulumi.OutputState }

func (GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas)(nil)).Elem()
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput() GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutputWithContext(ctx context.Context) GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput) ClusterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas) string {
		return v.ClusterUrl
	}).(pulumi.StringOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlas) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet struct {
	Instance        string `pulumi:"instance"`
	ReplicaSet      string `pulumi:"replicaSet"`
	ServerAddresses string `pulumi:"serverAddresses"`
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput struct{ *pulumi.OutputState }

func (GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet)(nil)).Elem()
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput() GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutputWithContext(ctx context.Context) GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput) ReplicaSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet) string {
		return v.ReplicaSet
	}).(pulumi.StringOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput) ServerAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSet) string {
		return v.ServerAddresses
	}).(pulumi.StringOutput)
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance struct {
	Host     string `pulumi:"host"`
	Instance string `pulumi:"instance"`
	Port     int    `pulumi:"port"`
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput struct{ *pulumi.OutputState }

func (GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance)(nil)).Elem()
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput() GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutputWithContext(ctx context.Context) GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance) string {
		return v.Host
	}).(pulumi.StringOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstance) int {
		return v.Port
	}).(pulumi.IntOutput)
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ClusterUrl           string  `pulumi:"clusterUrl"`
	Instance             string  `pulumi:"instance"`
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput struct{ *pulumi.OutputState }

func (GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas)(nil)).Elem()
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput() GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutputWithContext(ctx context.Context) GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput) ClusterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas) string {
		return v.ClusterUrl
	}).(pulumi.StringOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlas) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet struct {
	Instance        string `pulumi:"instance"`
	ReplicaSet      string `pulumi:"replicaSet"`
	ServerAddresses string `pulumi:"serverAddresses"`
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput struct{ *pulumi.OutputState }

func (GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet)(nil)).Elem()
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput() GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutputWithContext(ctx context.Context) GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) ReplicaSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet) string {
		return v.ReplicaSet
	}).(pulumi.StringOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput) ServerAddresses() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSet) string {
		return v.ServerAddresses
	}).(pulumi.StringOutput)
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance struct {
	Host     string `pulumi:"host"`
	Instance string `pulumi:"instance"`
	Port     int    `pulumi:"port"`
}

type GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput struct{ *pulumi.OutputState }

func (GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance)(nil)).Elem()
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput() GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) ToGetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutputWithContext(ctx context.Context) GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput {
	return o
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance) string {
		return v.Host
	}).(pulumi.StringOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance) string {
		return v.Instance
	}).(pulumi.StringOutput)
}

func (o GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstance) int {
		return v.Port
	}).(pulumi.IntOutput)
}

type GetSourceMongodbInternalPocConfiguration struct {
	// The authentication source where the user information is stored.
	AuthSource string `pulumi:"authSource"`
	// The connection string of the database that you want to replicate..
	ConnectionString string `pulumi:"connectionString"`
	// The password associated with this username.
	Password string `pulumi:"password"`
	// The name of the replica set to be replicated.
	ReplicaSet string `pulumi:"replicaSet"`
	// must be one of ["mongodb-internal-poc"]
	SourceType string `pulumi:"sourceType"`
	// The username which is used to access the database.
	User string `pulumi:"user"`
}

type GetSourceMongodbInternalPocConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMongodbInternalPocConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMongodbInternalPocConfiguration)(nil)).Elem()
}

func (o GetSourceMongodbInternalPocConfigurationOutput) ToGetSourceMongodbInternalPocConfigurationOutput() GetSourceMongodbInternalPocConfigurationOutput {
	return o
}

func (o GetSourceMongodbInternalPocConfigurationOutput) ToGetSourceMongodbInternalPocConfigurationOutputWithContext(ctx context.Context) GetSourceMongodbInternalPocConfigurationOutput {
	return o
}

// The authentication source where the user information is stored.
func (o GetSourceMongodbInternalPocConfigurationOutput) AuthSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbInternalPocConfiguration) string { return v.AuthSource }).(pulumi.StringOutput)
}

// The connection string of the database that you want to replicate..
func (o GetSourceMongodbInternalPocConfigurationOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbInternalPocConfiguration) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The password associated with this username.
func (o GetSourceMongodbInternalPocConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbInternalPocConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The name of the replica set to be replicated.
func (o GetSourceMongodbInternalPocConfigurationOutput) ReplicaSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbInternalPocConfiguration) string { return v.ReplicaSet }).(pulumi.StringOutput)
}

// must be one of ["mongodb-internal-poc"]
func (o GetSourceMongodbInternalPocConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbInternalPocConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The username which is used to access the database.
func (o GetSourceMongodbInternalPocConfigurationOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMongodbInternalPocConfiguration) string { return v.User }).(pulumi.StringOutput)
}

type GetSourceMssqlConfiguration struct {
	// The name of the database.
	Database string `pulumi:"database"`
	// The hostname of the database.
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// The password associated with the username.
	Password string `pulumi:"password"`
	// The port of the database.
	Port int `pulumi:"port"`
	// The replication method used for extracting data from the database. STANDARD replication requires no setup on the DB side but will not be able to represent deletions incrementally. CDC uses {TBC} to detect inserts, updates, and deletes. This needs to be configured on the source database itself.
	ReplicationMethod GetSourceMssqlConfigurationReplicationMethod `pulumi:"replicationMethod"`
	// The list of schemas to sync from. Defaults to user. Case sensitive.
	Schemas []string `pulumi:"schemas"`
	// must be one of ["mssql"]
	SourceType string `pulumi:"sourceType"`
	// The encryption method which is used when communicating with the database.
	SslMethod GetSourceMssqlConfigurationSslMethod `pulumi:"sslMethod"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetSourceMssqlConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// The username which is used to access the database.
	Username string `pulumi:"username"`
}

type GetSourceMssqlConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfiguration)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationOutput) ToGetSourceMssqlConfigurationOutput() GetSourceMssqlConfigurationOutput {
	return o
}

func (o GetSourceMssqlConfigurationOutput) ToGetSourceMssqlConfigurationOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationOutput {
	return o
}

// The name of the database.
func (o GetSourceMssqlConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// The hostname of the database.
func (o GetSourceMssqlConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
func (o GetSourceMssqlConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// The password associated with the username.
func (o GetSourceMssqlConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The port of the database.
func (o GetSourceMssqlConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMssqlConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// The replication method used for extracting data from the database. STANDARD replication requires no setup on the DB side but will not be able to represent deletions incrementally. CDC uses {TBC} to detect inserts, updates, and deletes. This needs to be configured on the source database itself.
func (o GetSourceMssqlConfigurationOutput) ReplicationMethod() GetSourceMssqlConfigurationReplicationMethodOutput {
	return o.ApplyT(func(v GetSourceMssqlConfiguration) GetSourceMssqlConfigurationReplicationMethod {
		return v.ReplicationMethod
	}).(GetSourceMssqlConfigurationReplicationMethodOutput)
}

// The list of schemas to sync from. Defaults to user. Case sensitive.
func (o GetSourceMssqlConfigurationOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceMssqlConfiguration) []string { return v.Schemas }).(pulumi.StringArrayOutput)
}

// must be one of ["mssql"]
func (o GetSourceMssqlConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The encryption method which is used when communicating with the database.
func (o GetSourceMssqlConfigurationOutput) SslMethod() GetSourceMssqlConfigurationSslMethodOutput {
	return o.ApplyT(func(v GetSourceMssqlConfiguration) GetSourceMssqlConfigurationSslMethod { return v.SslMethod }).(GetSourceMssqlConfigurationSslMethodOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetSourceMssqlConfigurationOutput) TunnelMethod() GetSourceMssqlConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetSourceMssqlConfiguration) GetSourceMssqlConfigurationTunnelMethod { return v.TunnelMethod }).(GetSourceMssqlConfigurationTunnelMethodOutput)
}

// The username which is used to access the database.
func (o GetSourceMssqlConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationReplicationMethod struct {
	SourceMssqlReplicationMethodLogicalReplicationCdc       GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc       `pulumi:"sourceMssqlReplicationMethodLogicalReplicationCdc"`
	SourceMssqlReplicationMethodStandard                    GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard                    `pulumi:"sourceMssqlReplicationMethodStandard"`
	SourceMssqlUpdateReplicationMethodLogicalReplicationCdc GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc `pulumi:"sourceMssqlUpdateReplicationMethodLogicalReplicationCdc"`
	SourceMssqlUpdateReplicationMethodStandard              GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard              `pulumi:"sourceMssqlUpdateReplicationMethodStandard"`
}

type GetSourceMssqlConfigurationReplicationMethodOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationReplicationMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationReplicationMethod)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationReplicationMethodOutput) ToGetSourceMssqlConfigurationReplicationMethodOutput() GetSourceMssqlConfigurationReplicationMethodOutput {
	return o
}

func (o GetSourceMssqlConfigurationReplicationMethodOutput) ToGetSourceMssqlConfigurationReplicationMethodOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationReplicationMethodOutput {
	return o
}

func (o GetSourceMssqlConfigurationReplicationMethodOutput) SourceMssqlReplicationMethodLogicalReplicationCdc() GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethod) GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc {
		return v.SourceMssqlReplicationMethodLogicalReplicationCdc
	}).(GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput)
}

func (o GetSourceMssqlConfigurationReplicationMethodOutput) SourceMssqlReplicationMethodStandard() GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethod) GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard {
		return v.SourceMssqlReplicationMethodStandard
	}).(GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutput)
}

func (o GetSourceMssqlConfigurationReplicationMethodOutput) SourceMssqlUpdateReplicationMethodLogicalReplicationCdc() GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethod) GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc {
		return v.SourceMssqlUpdateReplicationMethodLogicalReplicationCdc
	}).(GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput)
}

func (o GetSourceMssqlConfigurationReplicationMethodOutput) SourceMssqlUpdateReplicationMethodStandard() GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethod) GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard {
		return v.SourceMssqlUpdateReplicationMethodStandard
	}).(GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutput)
}

type GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc struct {
	DataToSync            string `pulumi:"dataToSync"`
	InitialWaitingSeconds int    `pulumi:"initialWaitingSeconds"`
	Method                string `pulumi:"method"`
	SnapshotIsolation     string `pulumi:"snapshotIsolation"`
}

type GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput) ToGetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput() GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput) ToGetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput) DataToSync() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc) string {
		return v.DataToSync
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput) InitialWaitingSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc) int {
		return v.InitialWaitingSeconds
	}).(pulumi.IntOutput)
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc) string {
		return v.Method
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput) SnapshotIsolation() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdc) string {
		return v.SnapshotIsolation
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard struct {
	Method string `pulumi:"method"`
}

type GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutput) ToGetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutput() GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutput {
	return o
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutput) ToGetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutput {
	return o
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandard) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc struct {
	DataToSync            string `pulumi:"dataToSync"`
	InitialWaitingSeconds int    `pulumi:"initialWaitingSeconds"`
	Method                string `pulumi:"method"`
	SnapshotIsolation     string `pulumi:"snapshotIsolation"`
}

type GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput) ToGetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput() GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput) ToGetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput) DataToSync() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.DataToSync
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput) InitialWaitingSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc) int {
		return v.InitialWaitingSeconds
	}).(pulumi.IntOutput)
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.Method
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput) SnapshotIsolation() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.SnapshotIsolation
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard struct {
	Method string `pulumi:"method"`
}

type GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutput) ToGetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutput() GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutput {
	return o
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutput) ToGetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutput {
	return o
}

func (o GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandard) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationSslMethod struct {
	SourceMssqlSslMethodEncryptedTrustServerCertificate       GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate       `pulumi:"sourceMssqlSslMethodEncryptedTrustServerCertificate"`
	SourceMssqlSslMethodEncryptedVerifyCertificate            GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate            `pulumi:"sourceMssqlSslMethodEncryptedVerifyCertificate"`
	SourceMssqlUpdateSslMethodEncryptedTrustServerCertificate GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate `pulumi:"sourceMssqlUpdateSslMethodEncryptedTrustServerCertificate"`
	SourceMssqlUpdateSslMethodEncryptedVerifyCertificate      GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate      `pulumi:"sourceMssqlUpdateSslMethodEncryptedVerifyCertificate"`
}

type GetSourceMssqlConfigurationSslMethodOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationSslMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationSslMethod)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationSslMethodOutput) ToGetSourceMssqlConfigurationSslMethodOutput() GetSourceMssqlConfigurationSslMethodOutput {
	return o
}

func (o GetSourceMssqlConfigurationSslMethodOutput) ToGetSourceMssqlConfigurationSslMethodOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationSslMethodOutput {
	return o
}

func (o GetSourceMssqlConfigurationSslMethodOutput) SourceMssqlSslMethodEncryptedTrustServerCertificate() GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationSslMethod) GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate {
		return v.SourceMssqlSslMethodEncryptedTrustServerCertificate
	}).(GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutput)
}

func (o GetSourceMssqlConfigurationSslMethodOutput) SourceMssqlSslMethodEncryptedVerifyCertificate() GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationSslMethod) GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate {
		return v.SourceMssqlSslMethodEncryptedVerifyCertificate
	}).(GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput)
}

func (o GetSourceMssqlConfigurationSslMethodOutput) SourceMssqlUpdateSslMethodEncryptedTrustServerCertificate() GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationSslMethod) GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate {
		return v.SourceMssqlUpdateSslMethodEncryptedTrustServerCertificate
	}).(GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput)
}

func (o GetSourceMssqlConfigurationSslMethodOutput) SourceMssqlUpdateSslMethodEncryptedVerifyCertificate() GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationSslMethod) GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate {
		return v.SourceMssqlUpdateSslMethodEncryptedVerifyCertificate
	}).(GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput)
}

type GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate struct {
	SslMethod string `pulumi:"sslMethod"`
}

type GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutput) ToGetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutput() GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutput {
	return o
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutput) ToGetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutput {
	return o
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutput) SslMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificate) string {
		return v.SslMethod
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate struct {
	HostNameInCertificate string `pulumi:"hostNameInCertificate"`
	SslMethod             string `pulumi:"sslMethod"`
}

type GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput) ToGetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput() GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput {
	return o
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput) ToGetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput {
	return o
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput) HostNameInCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate) string {
		return v.HostNameInCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput) SslMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificate) string {
		return v.SslMethod
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate struct {
	SslMethod string `pulumi:"sslMethod"`
}

type GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput) ToGetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput() GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput {
	return o
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput) ToGetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput {
	return o
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput) SslMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificate) string {
		return v.SslMethod
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate struct {
	HostNameInCertificate string `pulumi:"hostNameInCertificate"`
	SslMethod             string `pulumi:"sslMethod"`
}

type GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput) ToGetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput() GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput {
	return o
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput) ToGetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput {
	return o
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput) HostNameInCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate) string {
		return v.HostNameInCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput) SslMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificate) string {
		return v.SslMethod
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationTunnelMethod struct {
	SourceMssqlSshTunnelMethodNoTunnel                     GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel                     `pulumi:"sourceMssqlSshTunnelMethodNoTunnel"`
	SourceMssqlSshTunnelMethodPasswordAuthentication       GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication       `pulumi:"sourceMssqlSshTunnelMethodPasswordAuthentication"`
	SourceMssqlSshTunnelMethodSshKeyAuthentication         GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication         `pulumi:"sourceMssqlSshTunnelMethodSshKeyAuthentication"`
	SourceMssqlUpdateSshTunnelMethodNoTunnel               GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel               `pulumi:"sourceMssqlUpdateSshTunnelMethodNoTunnel"`
	SourceMssqlUpdateSshTunnelMethodPasswordAuthentication GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication `pulumi:"sourceMssqlUpdateSshTunnelMethodPasswordAuthentication"`
	SourceMssqlUpdateSshTunnelMethodSshKeyAuthentication   GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"sourceMssqlUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetSourceMssqlConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationTunnelMethodOutput) ToGetSourceMssqlConfigurationTunnelMethodOutput() GetSourceMssqlConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodOutput) ToGetSourceMssqlConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodOutput) SourceMssqlSshTunnelMethodNoTunnel() GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethod) GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel {
		return v.SourceMssqlSshTunnelMethodNoTunnel
	}).(GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodOutput) SourceMssqlSshTunnelMethodPasswordAuthentication() GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethod) GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication {
		return v.SourceMssqlSshTunnelMethodPasswordAuthentication
	}).(GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodOutput) SourceMssqlSshTunnelMethodSshKeyAuthentication() GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethod) GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication {
		return v.SourceMssqlSshTunnelMethodSshKeyAuthentication
	}).(GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodOutput) SourceMssqlUpdateSshTunnelMethodNoTunnel() GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethod) GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel {
		return v.SourceMssqlUpdateSshTunnelMethodNoTunnel
	}).(GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodOutput) SourceMssqlUpdateSshTunnelMethodPasswordAuthentication() GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethod) GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication {
		return v.SourceMssqlUpdateSshTunnelMethodPasswordAuthentication
	}).(GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodOutput) SourceMssqlUpdateSshTunnelMethodSshKeyAuthentication() GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethod) GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication {
		return v.SourceMssqlUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutput() GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput() GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput() GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutput() GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput() GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourceMyHoursConfiguration struct {
	// Your My Hours username
	Email string `pulumi:"email"`
	// Pagination size used for retrieving logs in days
	LogsBatchSize int `pulumi:"logsBatchSize"`
	// The password associated to the username
	Password string `pulumi:"password"`
	// must be one of ["my-hours"]
	SourceType string `pulumi:"sourceType"`
	// Start date for collecting time logs
	StartDate string `pulumi:"startDate"`
}

type GetSourceMyHoursConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMyHoursConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMyHoursConfiguration)(nil)).Elem()
}

func (o GetSourceMyHoursConfigurationOutput) ToGetSourceMyHoursConfigurationOutput() GetSourceMyHoursConfigurationOutput {
	return o
}

func (o GetSourceMyHoursConfigurationOutput) ToGetSourceMyHoursConfigurationOutputWithContext(ctx context.Context) GetSourceMyHoursConfigurationOutput {
	return o
}

// Your My Hours username
func (o GetSourceMyHoursConfigurationOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMyHoursConfiguration) string { return v.Email }).(pulumi.StringOutput)
}

// Pagination size used for retrieving logs in days
func (o GetSourceMyHoursConfigurationOutput) LogsBatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMyHoursConfiguration) int { return v.LogsBatchSize }).(pulumi.IntOutput)
}

// The password associated to the username
func (o GetSourceMyHoursConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMyHoursConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// must be one of ["my-hours"]
func (o GetSourceMyHoursConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMyHoursConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Start date for collecting time logs
func (o GetSourceMyHoursConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMyHoursConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceMysqlConfiguration struct {
	// The database name.
	Database string `pulumi:"database"`
	// The host name of the database.
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3). For more information read about \n\nJDBC URL parameters\n\n.
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// The password associated with the username.
	Password string `pulumi:"password"`
	// The port to connect to.
	Port int `pulumi:"port"`
	// Configures how data is extracted from the database.
	ReplicationMethod GetSourceMysqlConfigurationReplicationMethod `pulumi:"replicationMethod"`
	// must be one of ["mysql"]
	SourceType string `pulumi:"sourceType"`
	// SSL connection modes. Read more \n\n in the docs\n\n.
	SslMode GetSourceMysqlConfigurationSslMode `pulumi:"sslMode"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetSourceMysqlConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// The username which is used to access the database.
	Username string `pulumi:"username"`
}

type GetSourceMysqlConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfiguration)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationOutput) ToGetSourceMysqlConfigurationOutput() GetSourceMysqlConfigurationOutput {
	return o
}

func (o GetSourceMysqlConfigurationOutput) ToGetSourceMysqlConfigurationOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationOutput {
	return o
}

// The database name.
func (o GetSourceMysqlConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// The host name of the database.
func (o GetSourceMysqlConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3). For more information read about \n\nJDBC URL parameters\n\n.
func (o GetSourceMysqlConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// The password associated with the username.
func (o GetSourceMysqlConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The port to connect to.
func (o GetSourceMysqlConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMysqlConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// Configures how data is extracted from the database.
func (o GetSourceMysqlConfigurationOutput) ReplicationMethod() GetSourceMysqlConfigurationReplicationMethodOutput {
	return o.ApplyT(func(v GetSourceMysqlConfiguration) GetSourceMysqlConfigurationReplicationMethod {
		return v.ReplicationMethod
	}).(GetSourceMysqlConfigurationReplicationMethodOutput)
}

// must be one of ["mysql"]
func (o GetSourceMysqlConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// SSL connection modes. Read more \n\n in the docs\n\n.
func (o GetSourceMysqlConfigurationOutput) SslMode() GetSourceMysqlConfigurationSslModeOutput {
	return o.ApplyT(func(v GetSourceMysqlConfiguration) GetSourceMysqlConfigurationSslMode { return v.SslMode }).(GetSourceMysqlConfigurationSslModeOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetSourceMysqlConfigurationOutput) TunnelMethod() GetSourceMysqlConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetSourceMysqlConfiguration) GetSourceMysqlConfigurationTunnelMethod { return v.TunnelMethod }).(GetSourceMysqlConfigurationTunnelMethodOutput)
}

// The username which is used to access the database.
func (o GetSourceMysqlConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationReplicationMethod struct {
	SourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc           GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc           `pulumi:"sourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc"`
	SourceMysqlUpdateMethodScanChangesWithUserDefinedCursor       GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor       `pulumi:"sourceMysqlUpdateMethodScanChangesWithUserDefinedCursor"`
	SourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc     GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc     `pulumi:"sourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc"`
	SourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor `pulumi:"sourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor"`
}

type GetSourceMysqlConfigurationReplicationMethodOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationReplicationMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationReplicationMethod)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationReplicationMethodOutput) ToGetSourceMysqlConfigurationReplicationMethodOutput() GetSourceMysqlConfigurationReplicationMethodOutput {
	return o
}

func (o GetSourceMysqlConfigurationReplicationMethodOutput) ToGetSourceMysqlConfigurationReplicationMethodOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationReplicationMethodOutput {
	return o
}

func (o GetSourceMysqlConfigurationReplicationMethodOutput) SourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc() GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethod) GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc {
		return v.SourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc
	}).(GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput)
}

func (o GetSourceMysqlConfigurationReplicationMethodOutput) SourceMysqlUpdateMethodScanChangesWithUserDefinedCursor() GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethod) GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor {
		return v.SourceMysqlUpdateMethodScanChangesWithUserDefinedCursor
	}).(GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutput)
}

func (o GetSourceMysqlConfigurationReplicationMethodOutput) SourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc() GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethod) GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc {
		return v.SourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc
	}).(GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput)
}

func (o GetSourceMysqlConfigurationReplicationMethodOutput) SourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor() GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethod) GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor {
		return v.SourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor
	}).(GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutput)
}

type GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc struct {
	InitialWaitingSeconds int    `pulumi:"initialWaitingSeconds"`
	Method                string `pulumi:"method"`
	ServerTimeZone        string `pulumi:"serverTimeZone"`
}

type GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput) ToGetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput() GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput {
	return o
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput) ToGetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput {
	return o
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput) InitialWaitingSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc) int {
		return v.InitialWaitingSeconds
	}).(pulumi.IntOutput)
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc) string {
		return v.Method
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput) ServerTimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdc) string {
		return v.ServerTimeZone
	}).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor struct {
	Method string `pulumi:"method"`
}

type GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutput) ToGetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutput() GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutput {
	return o
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutput) ToGetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutput {
	return o
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursor) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc struct {
	InitialWaitingSeconds int    `pulumi:"initialWaitingSeconds"`
	Method                string `pulumi:"method"`
	ServerTimeZone        string `pulumi:"serverTimeZone"`
}

type GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput) ToGetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput() GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput {
	return o
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput) ToGetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput {
	return o
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput) InitialWaitingSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc) int {
		return v.InitialWaitingSeconds
	}).(pulumi.IntOutput)
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc) string {
		return v.Method
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput) ServerTimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdc) string {
		return v.ServerTimeZone
	}).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor struct {
	Method string `pulumi:"method"`
}

type GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutput) ToGetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutput() GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutput {
	return o
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutput) ToGetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutput {
	return o
}

func (o GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursor) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationSslMode struct {
	SourceMysqlSslModesPreferred            GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred            `pulumi:"sourceMysqlSslModesPreferred"`
	SourceMysqlSslModesRequired             GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequired             `pulumi:"sourceMysqlSslModesRequired"`
	SourceMysqlSslModesVerifyCa             GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa             `pulumi:"sourceMysqlSslModesVerifyCa"`
	SourceMysqlSslModesVerifyIdentity       GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity       `pulumi:"sourceMysqlSslModesVerifyIdentity"`
	SourceMysqlUpdateSslModesPreferred      GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred      `pulumi:"sourceMysqlUpdateSslModesPreferred"`
	SourceMysqlUpdateSslModesRequired       GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired       `pulumi:"sourceMysqlUpdateSslModesRequired"`
	SourceMysqlUpdateSslModesVerifyCa       GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa       `pulumi:"sourceMysqlUpdateSslModesVerifyCa"`
	SourceMysqlUpdateSslModesVerifyIdentity GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity `pulumi:"sourceMysqlUpdateSslModesVerifyIdentity"`
}

type GetSourceMysqlConfigurationSslModeOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationSslModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationSslMode)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationSslModeOutput) ToGetSourceMysqlConfigurationSslModeOutput() GetSourceMysqlConfigurationSslModeOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeOutput) ToGetSourceMysqlConfigurationSslModeOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationSslModeOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeOutput) SourceMysqlSslModesPreferred() GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslMode) GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred {
		return v.SourceMysqlSslModesPreferred
	}).(GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutput)
}

func (o GetSourceMysqlConfigurationSslModeOutput) SourceMysqlSslModesRequired() GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslMode) GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequired {
		return v.SourceMysqlSslModesRequired
	}).(GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutput)
}

func (o GetSourceMysqlConfigurationSslModeOutput) SourceMysqlSslModesVerifyCa() GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslMode) GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa {
		return v.SourceMysqlSslModesVerifyCa
	}).(GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput)
}

func (o GetSourceMysqlConfigurationSslModeOutput) SourceMysqlSslModesVerifyIdentity() GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslMode) GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity {
		return v.SourceMysqlSslModesVerifyIdentity
	}).(GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput)
}

func (o GetSourceMysqlConfigurationSslModeOutput) SourceMysqlUpdateSslModesPreferred() GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslMode) GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred {
		return v.SourceMysqlUpdateSslModesPreferred
	}).(GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutput)
}

func (o GetSourceMysqlConfigurationSslModeOutput) SourceMysqlUpdateSslModesRequired() GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslMode) GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired {
		return v.SourceMysqlUpdateSslModesRequired
	}).(GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutput)
}

func (o GetSourceMysqlConfigurationSslModeOutput) SourceMysqlUpdateSslModesVerifyCa() GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslMode) GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa {
		return v.SourceMysqlUpdateSslModesVerifyCa
	}).(GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput)
}

func (o GetSourceMysqlConfigurationSslModeOutput) SourceMysqlUpdateSslModesVerifyIdentity() GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslMode) GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity {
		return v.SourceMysqlUpdateSslModesVerifyIdentity
	}).(GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput)
}

type GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred struct {
	Mode string `pulumi:"mode"`
}

type GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutput() GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferred) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequired struct {
	Mode string `pulumi:"mode"`
}

type GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequired)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutput() GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequired) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa struct {
	CaCertificate     string `pulumi:"caCertificate"`
	ClientCertificate string `pulumi:"clientCertificate"`
	ClientKey         string `pulumi:"clientKey"`
	ClientKeyPassword string `pulumi:"clientKeyPassword"`
	Mode              string `pulumi:"mode"`
}

type GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput() GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa) string { return v.CaCertificate }).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCa) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity struct {
	CaCertificate     string `pulumi:"caCertificate"`
	ClientCertificate string `pulumi:"clientCertificate"`
	ClientKey         string `pulumi:"clientKey"`
	ClientKeyPassword string `pulumi:"clientKeyPassword"`
	Mode              string `pulumi:"mode"`
}

type GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput() GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentity) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred struct {
	Mode string `pulumi:"mode"`
}

type GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutput() GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferred) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired struct {
	Mode string `pulumi:"mode"`
}

type GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutput() GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequired) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa struct {
	CaCertificate     string `pulumi:"caCertificate"`
	ClientCertificate string `pulumi:"clientCertificate"`
	ClientKey         string `pulumi:"clientKey"`
	ClientKeyPassword string `pulumi:"clientKeyPassword"`
	Mode              string `pulumi:"mode"`
}

type GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput() GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCa) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity struct {
	CaCertificate     string `pulumi:"caCertificate"`
	ClientCertificate string `pulumi:"clientCertificate"`
	ClientKey         string `pulumi:"clientKey"`
	ClientKeyPassword string `pulumi:"clientKeyPassword"`
	Mode              string `pulumi:"mode"`
}

type GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput() GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput) ToGetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput {
	return o
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity) string {
		return v.ClientKey
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentity) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationTunnelMethod struct {
	SourceMysqlSshTunnelMethodNoTunnel                     GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel                     `pulumi:"sourceMysqlSshTunnelMethodNoTunnel"`
	SourceMysqlSshTunnelMethodPasswordAuthentication       GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication       `pulumi:"sourceMysqlSshTunnelMethodPasswordAuthentication"`
	SourceMysqlSshTunnelMethodSshKeyAuthentication         GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication         `pulumi:"sourceMysqlSshTunnelMethodSshKeyAuthentication"`
	SourceMysqlUpdateSshTunnelMethodNoTunnel               GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel               `pulumi:"sourceMysqlUpdateSshTunnelMethodNoTunnel"`
	SourceMysqlUpdateSshTunnelMethodPasswordAuthentication GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication `pulumi:"sourceMysqlUpdateSshTunnelMethodPasswordAuthentication"`
	SourceMysqlUpdateSshTunnelMethodSshKeyAuthentication   GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"sourceMysqlUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetSourceMysqlConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationTunnelMethodOutput) ToGetSourceMysqlConfigurationTunnelMethodOutput() GetSourceMysqlConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodOutput) ToGetSourceMysqlConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodOutput) SourceMysqlSshTunnelMethodNoTunnel() GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethod) GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel {
		return v.SourceMysqlSshTunnelMethodNoTunnel
	}).(GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodOutput) SourceMysqlSshTunnelMethodPasswordAuthentication() GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethod) GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication {
		return v.SourceMysqlSshTunnelMethodPasswordAuthentication
	}).(GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodOutput) SourceMysqlSshTunnelMethodSshKeyAuthentication() GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethod) GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication {
		return v.SourceMysqlSshTunnelMethodSshKeyAuthentication
	}).(GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodOutput) SourceMysqlUpdateSshTunnelMethodNoTunnel() GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethod) GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel {
		return v.SourceMysqlUpdateSshTunnelMethodNoTunnel
	}).(GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodOutput) SourceMysqlUpdateSshTunnelMethodPasswordAuthentication() GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethod) GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication {
		return v.SourceMysqlUpdateSshTunnelMethodPasswordAuthentication
	}).(GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodOutput) SourceMysqlUpdateSshTunnelMethodSshKeyAuthentication() GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethod) GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication {
		return v.SourceMysqlUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutput() GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput() GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput() GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutput() GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput() GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourceNetsuiteConfiguration struct {
	// Consumer key associated with your integration
	ConsumerKey string `pulumi:"consumerKey"`
	// Consumer secret associated with your integration
	ConsumerSecret string `pulumi:"consumerSecret"`
	// The API names of the Netsuite objects you want to sync. Setting this speeds up the connection setup process by limiting the number of schemas that need to be retrieved from Netsuite.
	ObjectTypes []string `pulumi:"objectTypes"`
	// Netsuite realm e.g. 2344535, as for `production` or 2344535_SB1, as for the `sandbox`
	Realm string `pulumi:"realm"`
	// must be one of ["netsuite"]
	SourceType string `pulumi:"sourceType"`
	// Starting point for your data replication, in format of "YYYY-MM-DDTHH:mm:ssZ"
	StartDatetime string `pulumi:"startDatetime"`
	// Access token key
	TokenKey string `pulumi:"tokenKey"`
	// Access token secret
	TokenSecret string `pulumi:"tokenSecret"`
	// The amount of days used to query the data with date chunks. Set smaller value, if you have lots of data.
	WindowInDays int `pulumi:"windowInDays"`
}

type GetSourceNetsuiteConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceNetsuiteConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceNetsuiteConfiguration)(nil)).Elem()
}

func (o GetSourceNetsuiteConfigurationOutput) ToGetSourceNetsuiteConfigurationOutput() GetSourceNetsuiteConfigurationOutput {
	return o
}

func (o GetSourceNetsuiteConfigurationOutput) ToGetSourceNetsuiteConfigurationOutputWithContext(ctx context.Context) GetSourceNetsuiteConfigurationOutput {
	return o
}

// Consumer key associated with your integration
func (o GetSourceNetsuiteConfigurationOutput) ConsumerKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNetsuiteConfiguration) string { return v.ConsumerKey }).(pulumi.StringOutput)
}

// Consumer secret associated with your integration
func (o GetSourceNetsuiteConfigurationOutput) ConsumerSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNetsuiteConfiguration) string { return v.ConsumerSecret }).(pulumi.StringOutput)
}

// The API names of the Netsuite objects you want to sync. Setting this speeds up the connection setup process by limiting the number of schemas that need to be retrieved from Netsuite.
func (o GetSourceNetsuiteConfigurationOutput) ObjectTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceNetsuiteConfiguration) []string { return v.ObjectTypes }).(pulumi.StringArrayOutput)
}

// Netsuite realm e.g. 2344535, as for `production` or 2344535_SB1, as for the `sandbox`
func (o GetSourceNetsuiteConfigurationOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNetsuiteConfiguration) string { return v.Realm }).(pulumi.StringOutput)
}

// must be one of ["netsuite"]
func (o GetSourceNetsuiteConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNetsuiteConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Starting point for your data replication, in format of "YYYY-MM-DDTHH:mm:ssZ"
func (o GetSourceNetsuiteConfigurationOutput) StartDatetime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNetsuiteConfiguration) string { return v.StartDatetime }).(pulumi.StringOutput)
}

// Access token key
func (o GetSourceNetsuiteConfigurationOutput) TokenKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNetsuiteConfiguration) string { return v.TokenKey }).(pulumi.StringOutput)
}

// Access token secret
func (o GetSourceNetsuiteConfigurationOutput) TokenSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNetsuiteConfiguration) string { return v.TokenSecret }).(pulumi.StringOutput)
}

// The amount of days used to query the data with date chunks. Set smaller value, if you have lots of data.
func (o GetSourceNetsuiteConfigurationOutput) WindowInDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceNetsuiteConfiguration) int { return v.WindowInDays }).(pulumi.IntOutput)
}

type GetSourceNotionConfiguration struct {
	// Pick an authentication method.
	Credentials GetSourceNotionConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["notion"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00.000Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceNotionConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceNotionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceNotionConfiguration)(nil)).Elem()
}

func (o GetSourceNotionConfigurationOutput) ToGetSourceNotionConfigurationOutput() GetSourceNotionConfigurationOutput {
	return o
}

func (o GetSourceNotionConfigurationOutput) ToGetSourceNotionConfigurationOutputWithContext(ctx context.Context) GetSourceNotionConfigurationOutput {
	return o
}

// Pick an authentication method.
func (o GetSourceNotionConfigurationOutput) Credentials() GetSourceNotionConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceNotionConfiguration) GetSourceNotionConfigurationCredentials { return v.Credentials }).(GetSourceNotionConfigurationCredentialsOutput)
}

// must be one of ["notion"]
func (o GetSourceNotionConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00.000Z. Any data before this date will not be replicated.
func (o GetSourceNotionConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceNotionConfigurationCredentials struct {
	SourceNotionAuthenticateUsingAccessToken       GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken       `pulumi:"sourceNotionAuthenticateUsingAccessToken"`
	SourceNotionAuthenticateUsingOAuth20           GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20           `pulumi:"sourceNotionAuthenticateUsingOAuth20"`
	SourceNotionUpdateAuthenticateUsingAccessToken GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken `pulumi:"sourceNotionUpdateAuthenticateUsingAccessToken"`
	SourceNotionUpdateAuthenticateUsingOAuth20     GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20     `pulumi:"sourceNotionUpdateAuthenticateUsingOAuth20"`
}

type GetSourceNotionConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceNotionConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceNotionConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceNotionConfigurationCredentialsOutput) ToGetSourceNotionConfigurationCredentialsOutput() GetSourceNotionConfigurationCredentialsOutput {
	return o
}

func (o GetSourceNotionConfigurationCredentialsOutput) ToGetSourceNotionConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceNotionConfigurationCredentialsOutput {
	return o
}

func (o GetSourceNotionConfigurationCredentialsOutput) SourceNotionAuthenticateUsingAccessToken() GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentials) GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken {
		return v.SourceNotionAuthenticateUsingAccessToken
	}).(GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput)
}

func (o GetSourceNotionConfigurationCredentialsOutput) SourceNotionAuthenticateUsingOAuth20() GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentials) GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20 {
		return v.SourceNotionAuthenticateUsingOAuth20
	}).(GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output)
}

func (o GetSourceNotionConfigurationCredentialsOutput) SourceNotionUpdateAuthenticateUsingAccessToken() GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentials) GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken {
		return v.SourceNotionUpdateAuthenticateUsingAccessToken
	}).(GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput)
}

func (o GetSourceNotionConfigurationCredentialsOutput) SourceNotionUpdateAuthenticateUsingOAuth20() GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentials) GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20 {
		return v.SourceNotionUpdateAuthenticateUsingOAuth20
	}).(GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output)
}

type GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken struct {
	AuthType string `pulumi:"authType"`
	Token    string `pulumi:"token"`
}

type GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken)(nil)).Elem()
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput) ToGetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput() GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput {
	return o
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput) ToGetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutputWithContext(ctx context.Context) GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput {
	return o
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessToken) string {
		return v.Token
	}).(pulumi.StringOutput)
}

type GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
}

type GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20)(nil)).Elem()
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output) ToGetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output() GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output {
	return o
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output) ToGetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20OutputWithContext(ctx context.Context) GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output {
	return o
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken struct {
	AuthType string `pulumi:"authType"`
	Token    string `pulumi:"token"`
}

type GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken)(nil)).Elem()
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput) ToGetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput() GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput {
	return o
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput) ToGetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutputWithContext(ctx context.Context) GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput {
	return o
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessToken) string {
		return v.Token
	}).(pulumi.StringOutput)
}

type GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
}

type GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20)(nil)).Elem()
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output) ToGetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output() GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output {
	return o
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output) ToGetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20OutputWithContext(ctx context.Context) GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output {
	return o
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceNytimesConfiguration struct {
	// API Key
	ApiKey string `pulumi:"apiKey"`
	// End date to stop the article retrieval (format YYYY-MM)
	EndDate string `pulumi:"endDate"`
	// must be one of ["1", "7", "30"]
	// Period of time (in days)
	Period int `pulumi:"period"`
	// must be one of ["facebook"]
	// Share Type
	ShareType string `pulumi:"shareType"`
	// must be one of ["nytimes"]
	SourceType string `pulumi:"sourceType"`
	// Start date to begin the article retrieval (format YYYY-MM)
	StartDate string `pulumi:"startDate"`
}

type GetSourceNytimesConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceNytimesConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceNytimesConfiguration)(nil)).Elem()
}

func (o GetSourceNytimesConfigurationOutput) ToGetSourceNytimesConfigurationOutput() GetSourceNytimesConfigurationOutput {
	return o
}

func (o GetSourceNytimesConfigurationOutput) ToGetSourceNytimesConfigurationOutputWithContext(ctx context.Context) GetSourceNytimesConfigurationOutput {
	return o
}

// API Key
func (o GetSourceNytimesConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNytimesConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// End date to stop the article retrieval (format YYYY-MM)
func (o GetSourceNytimesConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNytimesConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// must be one of ["1", "7", "30"]
// Period of time (in days)
func (o GetSourceNytimesConfigurationOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceNytimesConfiguration) int { return v.Period }).(pulumi.IntOutput)
}

// must be one of ["facebook"]
// Share Type
func (o GetSourceNytimesConfigurationOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNytimesConfiguration) string { return v.ShareType }).(pulumi.StringOutput)
}

// must be one of ["nytimes"]
func (o GetSourceNytimesConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNytimesConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Start date to begin the article retrieval (format YYYY-MM)
func (o GetSourceNytimesConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceNytimesConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingFakeOutput{})
	pulumi.RegisterOutputType(GetDestinationLangchainConfigurationEmbeddingDestinationLangchainUpdateEmbeddingOpenAiOutput{})
	pulumi.RegisterOutputType(GetDestinationLangchainConfigurationIndexingOutput{})
	pulumi.RegisterOutputType(GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingChromaLocalPersistanceOutput{})
	pulumi.RegisterOutputType(GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingDocArrayHnswSearchOutput{})
	pulumi.RegisterOutputType(GetDestinationLangchainConfigurationIndexingDestinationLangchainIndexingPineconeOutput{})
	pulumi.RegisterOutputType(GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingChromaLocalPersistanceOutput{})
	pulumi.RegisterOutputType(GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingDocArrayHnswSearchOutput{})
	pulumi.RegisterOutputType(GetDestinationLangchainConfigurationIndexingDestinationLangchainUpdateIndexingPineconeOutput{})
	pulumi.RegisterOutputType(GetDestinationLangchainConfigurationProcessingOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationSslMethodOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedTrustServerCertificateOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationSslMethodDestinationMssqlSslMethodEncryptedVerifyCertificateOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationSslMethodDestinationMssqlUpdateSslMethodEncryptedVerifyCertificateOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationMSsqlConfigurationTunnelMethodDestinationMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationAuthTypeOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeLoginPasswordOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationAuthTypeDestinationMongodbAuthorizationTypeNoneOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeLoginPasswordOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationAuthTypeDestinationMongodbUpdateAuthorizationTypeNoneOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationInstanceTypeOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeMongoDbAtlasOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeReplicaSetOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeReplicaSetOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationInstanceTypeDestinationMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationMongodbConfigurationTunnelMethodDestinationMongodbUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationMysqlConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationMysqlConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationMysqlConfigurationTunnelMethodDestinationMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationOracleConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationOracleConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationOracleConfigurationTunnelMethodDestinationOracleSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationOracleConfigurationTunnelMethodDestinationOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesAllowOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesDisableOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesPreferOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesRequireOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyCaOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresSslModesVerifyFullOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesAllowOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesDisableOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesPreferOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesRequireOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyCaOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationSslModeDestinationPostgresUpdateSslModesVerifyFullOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationPostgresConfigurationTunnelMethodDestinationPostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationPubsubConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationSslModeOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationSslModeDestinationRedisSslModesDisableOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationSslModeDestinationRedisSslModesVerifyFullOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesDisableOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationSslModeDestinationRedisUpdateSslModesVerifyFullOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationTunnelMethodDestinationRedisSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationRedisConfigurationTunnelMethodDestinationRedisUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationTunnelMethodDestinationRedshiftUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationUploadingMethodOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionDestinationRedshiftUpdateUploadingMethodS3StagingEncryptionNoEncryptionOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodStandardOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionAesCbcEnvelopeEncryptionOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodS3StagingEncryptionDestinationRedshiftUploadingMethodS3StagingEncryptionNoEncryptionOutput{})
	pulumi.RegisterOutputType(GetDestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUploadingMethodStandardOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecBzip2Output{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecDeflateOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecSnappyOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecXzOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatAvroApacheAvroCompressionCodecDestinationS3OutputFormatAvroApacheAvroCompressionCodecZstandardOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionGzipOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionDestinationS3OutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3OutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3OutputFormatParquetColumnarStorageOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecBzip2Output{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDeflateOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecNoCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecSnappyOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecXzOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecDestinationS3UpdateOutputFormatAvroApacheAvroCompressionCodecZstandardOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionGzipOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionDestinationS3UpdateOutputFormatCsvCommaSeparatedValuesCompressionNoCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3UpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3ConfigurationFormatDestinationS3UpdateOutputFormatParquetColumnarStorageOutput{})
	pulumi.RegisterOutputType(GetDestinationS3GlueConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationS3GlueConfigurationFormatOutput{})
	pulumi.RegisterOutputType(GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonOutput{})
	pulumi.RegisterOutputType(GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput{})
	pulumi.RegisterOutputType(GetDestinationS3GlueConfigurationFormatDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonOutput{})
	pulumi.RegisterOutputType(GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionGzipOutput{})
	pulumi.RegisterOutputType(GetDestinationS3GlueConfigurationFormatDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionDestinationS3GlueUpdateOutputFormatJsonLinesNewlineDelimitedJsonCompressionNoCompressionOutput{})
	pulumi.RegisterOutputType(GetDestinationSftpJsonConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationSnowflakeConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationSnowflakeConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodKeyPairAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeAuthorizationMethodUsernameAndPasswordOutput{})
	pulumi.RegisterOutputType(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodKeyPairAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetDestinationSnowflakeConfigurationCredentialsDestinationSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput{})
	pulumi.RegisterOutputType(GetDestinationTimeplusConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationTypesenseConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationVerticaConfigurationOutput{})
	pulumi.RegisterOutputType(GetDestinationVerticaConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationVerticaConfigurationTunnelMethodDestinationVerticaUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDestinationXataConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAhaConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAircallConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAirtableConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAirtableConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceAirtableConfigurationCredentialsSourceAirtableAuthenticationPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceAirtableConfigurationCredentialsSourceAirtableUpdateAuthenticationPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationReplicationMethodOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodLogicalReplicationCdcOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbReplicationMethodStandardXminOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodLogicalReplicationCdcOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationReplicationMethodSourceAlloydbUpdateReplicationMethodStandardXminOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesAllowOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesDisableOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesPreferOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesRequireOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyCaOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbSslModesVerifyFullOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesAllowOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesDisableOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesPreferOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesRequireOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyCaOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationSslModeSourceAlloydbUpdateSslModesVerifyFullOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceAlloydbConfigurationTunnelMethodSourceAlloydbUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceAmazonAdsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAmazonSellerPartnerConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAmazonSqsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAmplitudeConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceApifyDatasetConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAppfollowConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAsanaConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAsanaConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateViaAsanaOauthOutput{})
	pulumi.RegisterOutputType(GetSourceAsanaConfigurationCredentialsSourceAsanaAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateViaAsanaOauthOutput{})
	pulumi.RegisterOutputType(GetSourceAsanaConfigurationCredentialsSourceAsanaUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceAuth0ConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAuth0ConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2AccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceAuth0ConfigurationCredentialsSourceAuth0AuthenticationMethodOAuth2ConfidentialApplicationOutput{})
	pulumi.RegisterOutputType(GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2AccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceAuth0ConfigurationCredentialsSourceAuth0UpdateAuthenticationMethodOAuth2ConfidentialApplicationOutput{})
	pulumi.RegisterOutputType(GetSourceAwsCloudtrailConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAzureBlobStorageConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceAzureBlobStorageConfigurationFormatOutput{})
	pulumi.RegisterOutputType(GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageInputFormatJsonLinesNewlineDelimitedJsonOutput{})
	pulumi.RegisterOutputType(GetSourceAzureBlobStorageConfigurationFormatSourceAzureBlobStorageUpdateInputFormatJsonLinesNewlineDelimitedJsonOutput{})
	pulumi.RegisterOutputType(GetSourceAzureTableConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceBambooHrConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceBigcommerceConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceBigqueryConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceBingAdsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceBraintreeConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceBrazeConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceChargebeeConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceChartmogulConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceClickhouseConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceClickhouseConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceClickhouseConfigurationTunnelMethodSourceClickhouseUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceClickupApiConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceClockifyConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceCloseComConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceCodaConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceCoinApiConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceCoinmarketcapConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceConfigcatConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceConfluenceConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceConvexConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceDatadogConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceDatadogConfigurationQueryOutput{})
	pulumi.RegisterOutputType(GetSourceDatadogConfigurationQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSourceDatascopeConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceDelightedConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceDixaConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceDockerhubConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceDremioConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceDynamodbConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceE2eTestCloudConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceE2eTestCloudConfigurationMockCatalogOutput{})
	pulumi.RegisterOutputType(GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogMultiSchemaOutput{})
	pulumi.RegisterOutputType(GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudMockCatalogSingleSchemaOutput{})
	pulumi.RegisterOutputType(GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogMultiSchemaOutput{})
	pulumi.RegisterOutputType(GetSourceE2eTestCloudConfigurationMockCatalogSourceE2eTestCloudUpdateMockCatalogSingleSchemaOutput{})
	pulumi.RegisterOutputType(GetSourceEmailoctopusConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceExchangeRatesConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceFacebookMarketingConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceFacebookMarketingConfigurationCustomInsightOutput{})
	pulumi.RegisterOutputType(GetSourceFacebookMarketingConfigurationCustomInsightArrayOutput{})
	pulumi.RegisterOutputType(GetSourceFacebookPagesConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceFakerConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceFaunaConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceFaunaConfigurationCollectionOutput{})
	pulumi.RegisterOutputType(GetSourceFaunaConfigurationCollectionDeletionsOutput{})
	pulumi.RegisterOutputType(GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeDisabledOutput{})
	pulumi.RegisterOutputType(GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaCollectionDeletionModeEnabledOutput{})
	pulumi.RegisterOutputType(GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeDisabledOutput{})
	pulumi.RegisterOutputType(GetSourceFaunaConfigurationCollectionDeletionsSourceFaunaUpdateCollectionDeletionModeEnabledOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderAzBlobAzureBlobStorageOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderGcsGoogleCloudStorageOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderHttpsPublicWebOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderS3AmazonWebServicesOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderScpSecureCopyProtocolOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSftpSecureFileTransferProtocolOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureStorageProviderSshSecureShellOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderAzBlobAzureBlobStorageOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderGcsGoogleCloudStorageOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderHttpsPublicWebOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderS3AmazonWebServicesOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderScpSecureCopyProtocolOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSftpSecureFileTransferProtocolOutput{})
	pulumi.RegisterOutputType(GetSourceFileSecureConfigurationProviderSourceFileSecureUpdateStorageProviderSshSecureShellOutput{})
	pulumi.RegisterOutputType(GetSourceFireboltConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceFreshcallerConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceFreshdeskConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceFreshsalesConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGainsightPxConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGcsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGetlagoConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGithubConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGithubConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceGithubConfigurationCredentialsSourceGithubAuthenticationPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceGithubConfigurationCredentialsSourceGithubUpdateAuthenticationPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceGitlabConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGitlabConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceGitlabConfigurationCredentialsSourceGitlabAuthorizationMethodPrivateTokenOutput{})
	pulumi.RegisterOutputType(GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceGitlabConfigurationCredentialsSourceGitlabUpdateAuthorizationMethodPrivateTokenOutput{})
	pulumi.RegisterOutputType(GetSourceGlassfrogConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGnewsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAdsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAdsConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAdsConfigurationCustomQueryOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAdsConfigurationCustomQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsDataApiConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsDataApiConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsAuthenticateViaGoogleOauthOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiCredentialsServiceAccountKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsAuthenticateViaGoogleOauthOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsDataApiConfigurationCredentialsSourceGoogleAnalyticsDataApiUpdateCredentialsServiceAccountKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsV4ConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsV4ConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsAuthenticateViaGoogleOauthOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4CredentialsServiceAccountKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsAuthenticateViaGoogleOauthOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleAnalyticsV4ConfigurationCredentialsSourceGoogleAnalyticsV4UpdateCredentialsServiceAccountKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleDirectoryConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleDirectoryConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsServiceAccountKeyOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryGoogleCredentialsSignInViaGoogleOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsServiceAccountKeyOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleDirectoryConfigurationCredentialsSourceGoogleDirectoryUpdateGoogleCredentialsSignInViaGoogleOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceGooglePagespeedInsightsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSearchConsoleConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSearchConsoleConfigurationAuthorizationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleAuthenticationTypeServiceAccountKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSearchConsoleConfigurationAuthorizationSourceGoogleSearchConsoleUpdateAuthenticationTypeServiceAccountKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSheetsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSheetsConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationAuthenticateViaGoogleOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsAuthenticationServiceAccountKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationAuthenticateViaGoogleOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleSheetsConfigurationCredentialsSourceGoogleSheetsUpdateAuthenticationServiceAccountKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleWebfontsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGoogleWorkspaceAdminReportsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGreenhouseConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceGridlyConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceHarvestConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceHarvestConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateViaHarvestOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceHarvestConfigurationCredentialsSourceHarvestAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateViaHarvestOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceHarvestConfigurationCredentialsSourceHarvestUpdateAuthenticationMechanismAuthenticateWithPersonalAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceHubplannerConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceHubspotConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceHubspotConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceHubspotConfigurationCredentialsSourceHubspotAuthenticationPrivateAppOutput{})
	pulumi.RegisterOutputType(GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceHubspotConfigurationCredentialsSourceHubspotUpdateAuthenticationPrivateAppOutput{})
	pulumi.RegisterOutputType(GetSourceInsightlyConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceInstagramConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceInstatusConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceIntercomConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceIp2whoisConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceIterableConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceJiraConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceK6CloudConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceKlarnaConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceKlaviyoConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceKustomerSingerConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceKyveConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceLaunchdarklyConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceLemlistConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceLeverHiringConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceLeverHiringConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverApiKeyOutput{})
	pulumi.RegisterOutputType(GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringAuthenticationMechanismAuthenticateViaLeverOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverApiKeyOutput{})
	pulumi.RegisterOutputType(GetSourceLeverHiringConfigurationCredentialsSourceLeverHiringUpdateAuthenticationMechanismAuthenticateViaLeverOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceLinkedinAdsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceLinkedinAdsConfigurationAdAnalyticsReportOutput{})
	pulumi.RegisterOutputType(GetSourceLinkedinAdsConfigurationAdAnalyticsReportArrayOutput{})
	pulumi.RegisterOutputType(GetSourceLinkedinAdsConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceLinkedinAdsConfigurationCredentialsSourceLinkedinAdsUpdateAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceLinkedinPagesConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceLinkedinPagesConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceLinkedinPagesConfigurationCredentialsSourceLinkedinPagesUpdateAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceLinnworksConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceLokaliseConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMailchimpConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMailchimpConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationApiKeyOutput{})
	pulumi.RegisterOutputType(GetSourceMailchimpConfigurationCredentialsSourceMailchimpAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationApiKeyOutput{})
	pulumi.RegisterOutputType(GetSourceMailchimpConfigurationCredentialsSourceMailchimpUpdateAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceMailgunConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMailjetSmsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMarketoConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMetabaseConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMicrosoftTeamsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMicrosoftTeamsConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOutput{})
	pulumi.RegisterOutputType(GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOutput{})
	pulumi.RegisterOutputType(GetSourceMicrosoftTeamsConfigurationCredentialsSourceMicrosoftTeamsUpdateAuthenticationMechanismAuthenticateViaMicrosoftOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceMixpanelConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMixpanelConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardProjectSecretOutput{})
	pulumi.RegisterOutputType(GetSourceMixpanelConfigurationCredentialsSourceMixpanelAuthenticationWildcardServiceAccountOutput{})
	pulumi.RegisterOutputType(GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardProjectSecretOutput{})
	pulumi.RegisterOutputType(GetSourceMixpanelConfigurationCredentialsSourceMixpanelUpdateAuthenticationWildcardServiceAccountOutput{})
	pulumi.RegisterOutputType(GetSourceMondayConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMondayConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceMondayConfigurationCredentialsSourceMondayAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceMondayConfigurationCredentialsSourceMondayUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceMongodbConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMongodbConfigurationInstanceTypeOutput{})
	pulumi.RegisterOutputType(GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeMongoDbAtlasOutput{})
	pulumi.RegisterOutputType(GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeReplicaSetOutput{})
	pulumi.RegisterOutputType(GetSourceMongodbConfigurationInstanceTypeSourceMongodbMongoDbInstanceTypeStandaloneMongoDbInstanceOutput{})
	pulumi.RegisterOutputType(GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeMongoDbAtlasOutput{})
	pulumi.RegisterOutputType(GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeReplicaSetOutput{})
	pulumi.RegisterOutputType(GetSourceMongodbConfigurationInstanceTypeSourceMongodbUpdateMongoDbInstanceTypeStandaloneMongoDbInstanceOutput{})
	pulumi.RegisterOutputType(GetSourceMongodbInternalPocConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationReplicationMethodOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodLogicalReplicationCdcOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationReplicationMethodSourceMssqlReplicationMethodStandardOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodLogicalReplicationCdcOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationReplicationMethodSourceMssqlUpdateReplicationMethodStandardOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationSslMethodOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedTrustServerCertificateOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationSslMethodSourceMssqlSslMethodEncryptedVerifyCertificateOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedTrustServerCertificateOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationSslMethodSourceMssqlUpdateSslMethodEncryptedVerifyCertificateOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationTunnelMethodSourceMssqlSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceMssqlConfigurationTunnelMethodSourceMssqlUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceMyHoursConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationReplicationMethodOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodReadChangesUsingBinaryLogCdcOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateMethodScanChangesWithUserDefinedCursorOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodReadChangesUsingBinaryLogCdcOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationReplicationMethodSourceMysqlUpdateUpdateMethodScanChangesWithUserDefinedCursorOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationSslModeOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationSslModeSourceMysqlSslModesPreferredOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationSslModeSourceMysqlSslModesRequiredOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyCaOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationSslModeSourceMysqlSslModesVerifyIdentityOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesPreferredOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesRequiredOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyCaOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationSslModeSourceMysqlUpdateSslModesVerifyIdentityOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationTunnelMethodSourceMysqlSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceMysqlConfigurationTunnelMethodSourceMysqlUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceNetsuiteConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceNotionConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceNotionConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceNotionConfigurationCredentialsSourceNotionAuthenticateUsingOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceNotionConfigurationCredentialsSourceNotionUpdateAuthenticateUsingOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceNytimesConfigurationOutput{})
}
