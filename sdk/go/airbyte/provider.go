// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the airbyte package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	BearerAuth pulumi.StringPtrOutput `pulumi:"bearerAuth"`
	Password   pulumi.StringPtrOutput `pulumi:"password"`
	// Server URL (defaults to https://api.airbyte.com/v1)
	ServerUrl pulumi.StringPtrOutput `pulumi:"serverUrl"`
	Username  pulumi.StringPtrOutput `pulumi:"username"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	if args.BearerAuth == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "AIRBYTE_BEARER_AUTH"); d != nil {
			args.BearerAuth = pulumi.StringPtr(d.(string))
		}
	}
	if args.Password == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "AIRBYTE_PASSWORD"); d != nil {
			args.Password = pulumi.StringPtr(d.(string))
		}
	}
	if args.ServerUrl == nil {
		if d := internal.GetEnvOrDefault("https://api.airbyte.com/v1", nil, "AIRBYTE_SERVER_URL"); d != nil {
			args.ServerUrl = pulumi.StringPtr(d.(string))
		}
	}
	if args.Username == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "AIRBYTE_USERNAME"); d != nil {
			args.Username = pulumi.StringPtr(d.(string))
		}
	}
	if args.BearerAuth != nil {
		args.BearerAuth = pulumi.ToSecret(args.BearerAuth).(pulumi.StringPtrInput)
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.Username != nil {
		args.Username = pulumi.ToSecret(args.Username).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"bearerAuth",
		"password",
		"username",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:airbyte", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	BearerAuth *string `pulumi:"bearerAuth"`
	Password   *string `pulumi:"password"`
	// Server URL (defaults to https://api.airbyte.com/v1)
	ServerUrl *string `pulumi:"serverUrl"`
	Username  *string `pulumi:"username"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	BearerAuth pulumi.StringPtrInput
	Password   pulumi.StringPtrInput
	// Server URL (defaults to https://api.airbyte.com/v1)
	ServerUrl pulumi.StringPtrInput
	Username  pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

func (o ProviderOutput) BearerAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.BearerAuth }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Server URL (defaults to https://api.airbyte.com/v1)
func (o ProviderOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
