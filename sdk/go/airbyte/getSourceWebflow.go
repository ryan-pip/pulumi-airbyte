// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSourceWebflow(ctx *pulumi.Context, args *LookupSourceWebflowArgs, opts ...pulumi.InvokeOption) (*LookupSourceWebflowResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupSourceWebflowResult
	err := ctx.Invoke("airbyte:index/getSourceWebflow:getSourceWebflow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourceWebflow.
type LookupSourceWebflowArgs struct {
	SecretId *string `pulumi:"secretId"`
	SourceId string  `pulumi:"sourceId"`
}

// A collection of values returned by getSourceWebflow.
type LookupSourceWebflowResult struct {
	Configuration GetSourceWebflowConfiguration `pulumi:"configuration"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	Name        string  `pulumi:"name"`
	SecretId    *string `pulumi:"secretId"`
	SourceId    string  `pulumi:"sourceId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

func LookupSourceWebflowOutput(ctx *pulumi.Context, args LookupSourceWebflowOutputArgs, opts ...pulumi.InvokeOption) LookupSourceWebflowResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceWebflowResult, error) {
			args := v.(LookupSourceWebflowArgs)
			r, err := LookupSourceWebflow(ctx, &args, opts...)
			var s LookupSourceWebflowResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceWebflowResultOutput)
}

// A collection of arguments for invoking getSourceWebflow.
type LookupSourceWebflowOutputArgs struct {
	SecretId pulumi.StringPtrInput `pulumi:"secretId"`
	SourceId pulumi.StringInput    `pulumi:"sourceId"`
}

func (LookupSourceWebflowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceWebflowArgs)(nil)).Elem()
}

// A collection of values returned by getSourceWebflow.
type LookupSourceWebflowResultOutput struct{ *pulumi.OutputState }

func (LookupSourceWebflowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceWebflowResult)(nil)).Elem()
}

func (o LookupSourceWebflowResultOutput) ToLookupSourceWebflowResultOutput() LookupSourceWebflowResultOutput {
	return o
}

func (o LookupSourceWebflowResultOutput) ToLookupSourceWebflowResultOutputWithContext(ctx context.Context) LookupSourceWebflowResultOutput {
	return o
}

func (o LookupSourceWebflowResultOutput) Configuration() GetSourceWebflowConfigurationOutput {
	return o.ApplyT(func(v LookupSourceWebflowResult) GetSourceWebflowConfiguration { return v.Configuration }).(GetSourceWebflowConfigurationOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourceWebflowResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceWebflowResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourceWebflowResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceWebflowResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSourceWebflowResultOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourceWebflowResult) *string { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o LookupSourceWebflowResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceWebflowResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupSourceWebflowResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceWebflowResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceWebflowResultOutput{})
}
