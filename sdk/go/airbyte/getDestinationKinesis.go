// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"internal"
)

// DestinationKinesis DataSource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := airbyte.LookupDestinationKinesis(ctx, %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference), nil);
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
func LookupDestinationKinesis(ctx *pulumi.Context, args *LookupDestinationKinesisArgs, opts ...pulumi.InvokeOption) (*LookupDestinationKinesisResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDestinationKinesisResult
	err := ctx.Invoke("airbyte:index/getDestinationKinesis:getDestinationKinesis", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDestinationKinesis.
type LookupDestinationKinesisArgs struct {
	DestinationId string `pulumi:"destinationId"`
}

// A collection of values returned by getDestinationKinesis.
type LookupDestinationKinesisResult struct {
	Configuration GetDestinationKinesisConfiguration `pulumi:"configuration"`
	DestinationId string                             `pulumi:"destinationId"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupDestinationKinesisOutput(ctx *pulumi.Context, args LookupDestinationKinesisOutputArgs, opts ...pulumi.InvokeOption) LookupDestinationKinesisResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDestinationKinesisResult, error) {
			args := v.(LookupDestinationKinesisArgs)
			r, err := LookupDestinationKinesis(ctx, &args, opts...)
			var s LookupDestinationKinesisResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDestinationKinesisResultOutput)
}

// A collection of arguments for invoking getDestinationKinesis.
type LookupDestinationKinesisOutputArgs struct {
	DestinationId pulumi.StringInput `pulumi:"destinationId"`
}

func (LookupDestinationKinesisOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationKinesisArgs)(nil)).Elem()
}

// A collection of values returned by getDestinationKinesis.
type LookupDestinationKinesisResultOutput struct{ *pulumi.OutputState }

func (LookupDestinationKinesisResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationKinesisResult)(nil)).Elem()
}

func (o LookupDestinationKinesisResultOutput) ToLookupDestinationKinesisResultOutput() LookupDestinationKinesisResultOutput {
	return o
}

func (o LookupDestinationKinesisResultOutput) ToLookupDestinationKinesisResultOutputWithContext(ctx context.Context) LookupDestinationKinesisResultOutput {
	return o
}

func (o LookupDestinationKinesisResultOutput) Configuration() GetDestinationKinesisConfigurationOutput {
	return o.ApplyT(func(v LookupDestinationKinesisResult) GetDestinationKinesisConfiguration { return v.Configuration }).(GetDestinationKinesisConfigurationOutput)
}

func (o LookupDestinationKinesisResultOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationKinesisResult) string { return v.DestinationId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDestinationKinesisResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationKinesisResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDestinationKinesisResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationKinesisResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDestinationKinesisResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationKinesisResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDestinationKinesisResultOutput{})
}
