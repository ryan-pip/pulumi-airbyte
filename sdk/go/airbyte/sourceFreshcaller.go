// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-airbyte/sdk/go/airbyte/internal"
)

// SourceFreshcaller Resource
type SourceFreshcaller struct {
	pulumi.CustomResourceState

	Configuration SourceFreshcallerConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                  `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceFreshcaller registers a new resource with the given unique name, arguments, and options.
func NewSourceFreshcaller(ctx *pulumi.Context,
	name string, args *SourceFreshcallerArgs, opts ...pulumi.ResourceOption) (*SourceFreshcaller, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceFreshcaller
	err := ctx.RegisterResource("airbyte:index/sourceFreshcaller:SourceFreshcaller", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceFreshcaller gets an existing SourceFreshcaller resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceFreshcaller(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceFreshcallerState, opts ...pulumi.ResourceOption) (*SourceFreshcaller, error) {
	var resource SourceFreshcaller
	err := ctx.ReadResource("airbyte:index/sourceFreshcaller:SourceFreshcaller", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceFreshcaller resources.
type sourceFreshcallerState struct {
	Configuration *SourceFreshcallerConfiguration `pulumi:"configuration"`
	Name          *string                         `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceFreshcallerState struct {
	Configuration SourceFreshcallerConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceFreshcallerState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceFreshcallerState)(nil)).Elem()
}

type sourceFreshcallerArgs struct {
	Configuration SourceFreshcallerConfiguration `pulumi:"configuration"`
	Name          string                         `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceFreshcaller resource.
type SourceFreshcallerArgs struct {
	Configuration SourceFreshcallerConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceFreshcallerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceFreshcallerArgs)(nil)).Elem()
}

type SourceFreshcallerInput interface {
	pulumi.Input

	ToSourceFreshcallerOutput() SourceFreshcallerOutput
	ToSourceFreshcallerOutputWithContext(ctx context.Context) SourceFreshcallerOutput
}

func (*SourceFreshcaller) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceFreshcaller)(nil)).Elem()
}

func (i *SourceFreshcaller) ToSourceFreshcallerOutput() SourceFreshcallerOutput {
	return i.ToSourceFreshcallerOutputWithContext(context.Background())
}

func (i *SourceFreshcaller) ToSourceFreshcallerOutputWithContext(ctx context.Context) SourceFreshcallerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceFreshcallerOutput)
}

// SourceFreshcallerArrayInput is an input type that accepts SourceFreshcallerArray and SourceFreshcallerArrayOutput values.
// You can construct a concrete instance of `SourceFreshcallerArrayInput` via:
//
//	SourceFreshcallerArray{ SourceFreshcallerArgs{...} }
type SourceFreshcallerArrayInput interface {
	pulumi.Input

	ToSourceFreshcallerArrayOutput() SourceFreshcallerArrayOutput
	ToSourceFreshcallerArrayOutputWithContext(context.Context) SourceFreshcallerArrayOutput
}

type SourceFreshcallerArray []SourceFreshcallerInput

func (SourceFreshcallerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceFreshcaller)(nil)).Elem()
}

func (i SourceFreshcallerArray) ToSourceFreshcallerArrayOutput() SourceFreshcallerArrayOutput {
	return i.ToSourceFreshcallerArrayOutputWithContext(context.Background())
}

func (i SourceFreshcallerArray) ToSourceFreshcallerArrayOutputWithContext(ctx context.Context) SourceFreshcallerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceFreshcallerArrayOutput)
}

// SourceFreshcallerMapInput is an input type that accepts SourceFreshcallerMap and SourceFreshcallerMapOutput values.
// You can construct a concrete instance of `SourceFreshcallerMapInput` via:
//
//	SourceFreshcallerMap{ "key": SourceFreshcallerArgs{...} }
type SourceFreshcallerMapInput interface {
	pulumi.Input

	ToSourceFreshcallerMapOutput() SourceFreshcallerMapOutput
	ToSourceFreshcallerMapOutputWithContext(context.Context) SourceFreshcallerMapOutput
}

type SourceFreshcallerMap map[string]SourceFreshcallerInput

func (SourceFreshcallerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceFreshcaller)(nil)).Elem()
}

func (i SourceFreshcallerMap) ToSourceFreshcallerMapOutput() SourceFreshcallerMapOutput {
	return i.ToSourceFreshcallerMapOutputWithContext(context.Background())
}

func (i SourceFreshcallerMap) ToSourceFreshcallerMapOutputWithContext(ctx context.Context) SourceFreshcallerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceFreshcallerMapOutput)
}

type SourceFreshcallerOutput struct{ *pulumi.OutputState }

func (SourceFreshcallerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceFreshcaller)(nil)).Elem()
}

func (o SourceFreshcallerOutput) ToSourceFreshcallerOutput() SourceFreshcallerOutput {
	return o
}

func (o SourceFreshcallerOutput) ToSourceFreshcallerOutputWithContext(ctx context.Context) SourceFreshcallerOutput {
	return o
}

func (o SourceFreshcallerOutput) Configuration() SourceFreshcallerConfigurationOutput {
	return o.ApplyT(func(v *SourceFreshcaller) SourceFreshcallerConfigurationOutput { return v.Configuration }).(SourceFreshcallerConfigurationOutput)
}

func (o SourceFreshcallerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceFreshcaller) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceFreshcallerOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceFreshcaller) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceFreshcallerOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceFreshcaller) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceFreshcallerOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceFreshcaller) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceFreshcallerOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceFreshcaller) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceFreshcallerArrayOutput struct{ *pulumi.OutputState }

func (SourceFreshcallerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceFreshcaller)(nil)).Elem()
}

func (o SourceFreshcallerArrayOutput) ToSourceFreshcallerArrayOutput() SourceFreshcallerArrayOutput {
	return o
}

func (o SourceFreshcallerArrayOutput) ToSourceFreshcallerArrayOutputWithContext(ctx context.Context) SourceFreshcallerArrayOutput {
	return o
}

func (o SourceFreshcallerArrayOutput) Index(i pulumi.IntInput) SourceFreshcallerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceFreshcaller {
		return vs[0].([]*SourceFreshcaller)[vs[1].(int)]
	}).(SourceFreshcallerOutput)
}

type SourceFreshcallerMapOutput struct{ *pulumi.OutputState }

func (SourceFreshcallerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceFreshcaller)(nil)).Elem()
}

func (o SourceFreshcallerMapOutput) ToSourceFreshcallerMapOutput() SourceFreshcallerMapOutput {
	return o
}

func (o SourceFreshcallerMapOutput) ToSourceFreshcallerMapOutputWithContext(ctx context.Context) SourceFreshcallerMapOutput {
	return o
}

func (o SourceFreshcallerMapOutput) MapIndex(k pulumi.StringInput) SourceFreshcallerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceFreshcaller {
		return vs[0].(map[string]*SourceFreshcaller)[vs[1].(string)]
	}).(SourceFreshcallerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceFreshcallerInput)(nil)).Elem(), &SourceFreshcaller{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceFreshcallerArrayInput)(nil)).Elem(), SourceFreshcallerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceFreshcallerMapInput)(nil)).Elem(), SourceFreshcallerMap{})
	pulumi.RegisterOutputType(SourceFreshcallerOutput{})
	pulumi.RegisterOutputType(SourceFreshcallerArrayOutput{})
	pulumi.RegisterOutputType(SourceFreshcallerMapOutput{})
}
