// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSourceDelighted(ctx *pulumi.Context, args *LookupSourceDelightedArgs, opts ...pulumi.InvokeOption) (*LookupSourceDelightedResult, error) {
	var rv LookupSourceDelightedResult
	err := ctx.Invoke("airbyte:index/getSourceDelighted:getSourceDelighted", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourceDelighted.
type LookupSourceDelightedArgs struct {
	SecretId *string `pulumi:"secretId"`
	SourceId string  `pulumi:"sourceId"`
}

// A collection of values returned by getSourceDelighted.
type LookupSourceDelightedResult struct {
	Configuration GetSourceDelightedConfiguration `pulumi:"configuration"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	Name        string  `pulumi:"name"`
	SecretId    *string `pulumi:"secretId"`
	SourceId    string  `pulumi:"sourceId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

func LookupSourceDelightedOutput(ctx *pulumi.Context, args LookupSourceDelightedOutputArgs, opts ...pulumi.InvokeOption) LookupSourceDelightedResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceDelightedResult, error) {
			args := v.(LookupSourceDelightedArgs)
			r, err := LookupSourceDelighted(ctx, &args, opts...)
			var s LookupSourceDelightedResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceDelightedResultOutput)
}

// A collection of arguments for invoking getSourceDelighted.
type LookupSourceDelightedOutputArgs struct {
	SecretId pulumi.StringPtrInput `pulumi:"secretId"`
	SourceId pulumi.StringInput    `pulumi:"sourceId"`
}

func (LookupSourceDelightedOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceDelightedArgs)(nil)).Elem()
}

// A collection of values returned by getSourceDelighted.
type LookupSourceDelightedResultOutput struct{ *pulumi.OutputState }

func (LookupSourceDelightedResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceDelightedResult)(nil)).Elem()
}

func (o LookupSourceDelightedResultOutput) ToLookupSourceDelightedResultOutput() LookupSourceDelightedResultOutput {
	return o
}

func (o LookupSourceDelightedResultOutput) ToLookupSourceDelightedResultOutputWithContext(ctx context.Context) LookupSourceDelightedResultOutput {
	return o
}

func (o LookupSourceDelightedResultOutput) Configuration() GetSourceDelightedConfigurationOutput {
	return o.ApplyT(func(v LookupSourceDelightedResult) GetSourceDelightedConfiguration { return v.Configuration }).(GetSourceDelightedConfigurationOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourceDelightedResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceDelightedResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourceDelightedResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceDelightedResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSourceDelightedResultOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourceDelightedResult) *string { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o LookupSourceDelightedResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceDelightedResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupSourceDelightedResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceDelightedResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceDelightedResultOutput{})
}
