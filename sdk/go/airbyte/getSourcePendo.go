// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"internal"
)

// SourcePendo DataSource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := airbyte.LookupSourcePendo(ctx, %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference), nil);
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
func LookupSourcePendo(ctx *pulumi.Context, args *LookupSourcePendoArgs, opts ...pulumi.InvokeOption) (*LookupSourcePendoResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSourcePendoResult
	err := ctx.Invoke("airbyte:index/getSourcePendo:getSourcePendo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourcePendo.
type LookupSourcePendoArgs struct {
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId *string `pulumi:"secretId"`
	SourceId string  `pulumi:"sourceId"`
}

// A collection of values returned by getSourcePendo.
type LookupSourcePendoResult struct {
	Configuration GetSourcePendoConfiguration `pulumi:"configuration"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    string  `pulumi:"sourceId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

func LookupSourcePendoOutput(ctx *pulumi.Context, args LookupSourcePendoOutputArgs, opts ...pulumi.InvokeOption) LookupSourcePendoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourcePendoResult, error) {
			args := v.(LookupSourcePendoArgs)
			r, err := LookupSourcePendo(ctx, &args, opts...)
			var s LookupSourcePendoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourcePendoResultOutput)
}

// A collection of arguments for invoking getSourcePendo.
type LookupSourcePendoOutputArgs struct {
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId pulumi.StringPtrInput `pulumi:"secretId"`
	SourceId pulumi.StringInput    `pulumi:"sourceId"`
}

func (LookupSourcePendoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourcePendoArgs)(nil)).Elem()
}

// A collection of values returned by getSourcePendo.
type LookupSourcePendoResultOutput struct{ *pulumi.OutputState }

func (LookupSourcePendoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourcePendoResult)(nil)).Elem()
}

func (o LookupSourcePendoResultOutput) ToLookupSourcePendoResultOutput() LookupSourcePendoResultOutput {
	return o
}

func (o LookupSourcePendoResultOutput) ToLookupSourcePendoResultOutputWithContext(ctx context.Context) LookupSourcePendoResultOutput {
	return o
}

func (o LookupSourcePendoResultOutput) Configuration() GetSourcePendoConfigurationOutput {
	return o.ApplyT(func(v LookupSourcePendoResult) GetSourcePendoConfiguration { return v.Configuration }).(GetSourcePendoConfigurationOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourcePendoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourcePendoResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourcePendoResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourcePendoResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o LookupSourcePendoResultOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourcePendoResult) *string { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o LookupSourcePendoResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourcePendoResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupSourcePendoResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourcePendoResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourcePendoResultOutput{})
}
