// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-airbyte/sdk/go/airbyte/internal"
)

// SourceRecruitee Resource
type SourceRecruitee struct {
	pulumi.CustomResourceState

	Configuration SourceRecruiteeConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceRecruitee registers a new resource with the given unique name, arguments, and options.
func NewSourceRecruitee(ctx *pulumi.Context,
	name string, args *SourceRecruiteeArgs, opts ...pulumi.ResourceOption) (*SourceRecruitee, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceRecruitee
	err := ctx.RegisterResource("airbyte:index/sourceRecruitee:SourceRecruitee", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceRecruitee gets an existing SourceRecruitee resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceRecruitee(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceRecruiteeState, opts ...pulumi.ResourceOption) (*SourceRecruitee, error) {
	var resource SourceRecruitee
	err := ctx.ReadResource("airbyte:index/sourceRecruitee:SourceRecruitee", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceRecruitee resources.
type sourceRecruiteeState struct {
	Configuration *SourceRecruiteeConfiguration `pulumi:"configuration"`
	Name          *string                       `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceRecruiteeState struct {
	Configuration SourceRecruiteeConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceRecruiteeState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceRecruiteeState)(nil)).Elem()
}

type sourceRecruiteeArgs struct {
	Configuration SourceRecruiteeConfiguration `pulumi:"configuration"`
	Name          string                       `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceRecruitee resource.
type SourceRecruiteeArgs struct {
	Configuration SourceRecruiteeConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceRecruiteeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceRecruiteeArgs)(nil)).Elem()
}

type SourceRecruiteeInput interface {
	pulumi.Input

	ToSourceRecruiteeOutput() SourceRecruiteeOutput
	ToSourceRecruiteeOutputWithContext(ctx context.Context) SourceRecruiteeOutput
}

func (*SourceRecruitee) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRecruitee)(nil)).Elem()
}

func (i *SourceRecruitee) ToSourceRecruiteeOutput() SourceRecruiteeOutput {
	return i.ToSourceRecruiteeOutputWithContext(context.Background())
}

func (i *SourceRecruitee) ToSourceRecruiteeOutputWithContext(ctx context.Context) SourceRecruiteeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRecruiteeOutput)
}

// SourceRecruiteeArrayInput is an input type that accepts SourceRecruiteeArray and SourceRecruiteeArrayOutput values.
// You can construct a concrete instance of `SourceRecruiteeArrayInput` via:
//
//	SourceRecruiteeArray{ SourceRecruiteeArgs{...} }
type SourceRecruiteeArrayInput interface {
	pulumi.Input

	ToSourceRecruiteeArrayOutput() SourceRecruiteeArrayOutput
	ToSourceRecruiteeArrayOutputWithContext(context.Context) SourceRecruiteeArrayOutput
}

type SourceRecruiteeArray []SourceRecruiteeInput

func (SourceRecruiteeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceRecruitee)(nil)).Elem()
}

func (i SourceRecruiteeArray) ToSourceRecruiteeArrayOutput() SourceRecruiteeArrayOutput {
	return i.ToSourceRecruiteeArrayOutputWithContext(context.Background())
}

func (i SourceRecruiteeArray) ToSourceRecruiteeArrayOutputWithContext(ctx context.Context) SourceRecruiteeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRecruiteeArrayOutput)
}

// SourceRecruiteeMapInput is an input type that accepts SourceRecruiteeMap and SourceRecruiteeMapOutput values.
// You can construct a concrete instance of `SourceRecruiteeMapInput` via:
//
//	SourceRecruiteeMap{ "key": SourceRecruiteeArgs{...} }
type SourceRecruiteeMapInput interface {
	pulumi.Input

	ToSourceRecruiteeMapOutput() SourceRecruiteeMapOutput
	ToSourceRecruiteeMapOutputWithContext(context.Context) SourceRecruiteeMapOutput
}

type SourceRecruiteeMap map[string]SourceRecruiteeInput

func (SourceRecruiteeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceRecruitee)(nil)).Elem()
}

func (i SourceRecruiteeMap) ToSourceRecruiteeMapOutput() SourceRecruiteeMapOutput {
	return i.ToSourceRecruiteeMapOutputWithContext(context.Background())
}

func (i SourceRecruiteeMap) ToSourceRecruiteeMapOutputWithContext(ctx context.Context) SourceRecruiteeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceRecruiteeMapOutput)
}

type SourceRecruiteeOutput struct{ *pulumi.OutputState }

func (SourceRecruiteeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceRecruitee)(nil)).Elem()
}

func (o SourceRecruiteeOutput) ToSourceRecruiteeOutput() SourceRecruiteeOutput {
	return o
}

func (o SourceRecruiteeOutput) ToSourceRecruiteeOutputWithContext(ctx context.Context) SourceRecruiteeOutput {
	return o
}

func (o SourceRecruiteeOutput) Configuration() SourceRecruiteeConfigurationOutput {
	return o.ApplyT(func(v *SourceRecruitee) SourceRecruiteeConfigurationOutput { return v.Configuration }).(SourceRecruiteeConfigurationOutput)
}

func (o SourceRecruiteeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceRecruitee) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceRecruiteeOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceRecruitee) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceRecruiteeOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceRecruitee) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceRecruiteeOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceRecruitee) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceRecruiteeOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceRecruitee) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceRecruiteeArrayOutput struct{ *pulumi.OutputState }

func (SourceRecruiteeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceRecruitee)(nil)).Elem()
}

func (o SourceRecruiteeArrayOutput) ToSourceRecruiteeArrayOutput() SourceRecruiteeArrayOutput {
	return o
}

func (o SourceRecruiteeArrayOutput) ToSourceRecruiteeArrayOutputWithContext(ctx context.Context) SourceRecruiteeArrayOutput {
	return o
}

func (o SourceRecruiteeArrayOutput) Index(i pulumi.IntInput) SourceRecruiteeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceRecruitee {
		return vs[0].([]*SourceRecruitee)[vs[1].(int)]
	}).(SourceRecruiteeOutput)
}

type SourceRecruiteeMapOutput struct{ *pulumi.OutputState }

func (SourceRecruiteeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceRecruitee)(nil)).Elem()
}

func (o SourceRecruiteeMapOutput) ToSourceRecruiteeMapOutput() SourceRecruiteeMapOutput {
	return o
}

func (o SourceRecruiteeMapOutput) ToSourceRecruiteeMapOutputWithContext(ctx context.Context) SourceRecruiteeMapOutput {
	return o
}

func (o SourceRecruiteeMapOutput) MapIndex(k pulumi.StringInput) SourceRecruiteeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceRecruitee {
		return vs[0].(map[string]*SourceRecruitee)[vs[1].(string)]
	}).(SourceRecruiteeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceRecruiteeInput)(nil)).Elem(), &SourceRecruitee{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceRecruiteeArrayInput)(nil)).Elem(), SourceRecruiteeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceRecruiteeMapInput)(nil)).Elem(), SourceRecruiteeMap{})
	pulumi.RegisterOutputType(SourceRecruiteeOutput{})
	pulumi.RegisterOutputType(SourceRecruiteeArrayOutput{})
	pulumi.RegisterOutputType(SourceRecruiteeMapOutput{})
}
