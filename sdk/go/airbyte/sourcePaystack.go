// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SourcePaystack Resource
type SourcePaystack struct {
	pulumi.CustomResourceState

	Configuration SourcePaystackConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput               `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourcePaystack registers a new resource with the given unique name, arguments, and options.
func NewSourcePaystack(ctx *pulumi.Context,
	name string, args *SourcePaystackArgs, opts ...pulumi.ResourceOption) (*SourcePaystack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourcePaystack
	err := ctx.RegisterResource("airbyte:index/sourcePaystack:SourcePaystack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourcePaystack gets an existing SourcePaystack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourcePaystack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourcePaystackState, opts ...pulumi.ResourceOption) (*SourcePaystack, error) {
	var resource SourcePaystack
	err := ctx.ReadResource("airbyte:index/sourcePaystack:SourcePaystack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourcePaystack resources.
type sourcePaystackState struct {
	Configuration *SourcePaystackConfiguration `pulumi:"configuration"`
	Name          *string                      `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourcePaystackState struct {
	Configuration SourcePaystackConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourcePaystackState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourcePaystackState)(nil)).Elem()
}

type sourcePaystackArgs struct {
	Configuration SourcePaystackConfiguration `pulumi:"configuration"`
	Name          string                      `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourcePaystack resource.
type SourcePaystackArgs struct {
	Configuration SourcePaystackConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourcePaystackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourcePaystackArgs)(nil)).Elem()
}

type SourcePaystackInput interface {
	pulumi.Input

	ToSourcePaystackOutput() SourcePaystackOutput
	ToSourcePaystackOutputWithContext(ctx context.Context) SourcePaystackOutput
}

func (*SourcePaystack) ElementType() reflect.Type {
	return reflect.TypeOf((**SourcePaystack)(nil)).Elem()
}

func (i *SourcePaystack) ToSourcePaystackOutput() SourcePaystackOutput {
	return i.ToSourcePaystackOutputWithContext(context.Background())
}

func (i *SourcePaystack) ToSourcePaystackOutputWithContext(ctx context.Context) SourcePaystackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePaystackOutput)
}

// SourcePaystackArrayInput is an input type that accepts SourcePaystackArray and SourcePaystackArrayOutput values.
// You can construct a concrete instance of `SourcePaystackArrayInput` via:
//
//	SourcePaystackArray{ SourcePaystackArgs{...} }
type SourcePaystackArrayInput interface {
	pulumi.Input

	ToSourcePaystackArrayOutput() SourcePaystackArrayOutput
	ToSourcePaystackArrayOutputWithContext(context.Context) SourcePaystackArrayOutput
}

type SourcePaystackArray []SourcePaystackInput

func (SourcePaystackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourcePaystack)(nil)).Elem()
}

func (i SourcePaystackArray) ToSourcePaystackArrayOutput() SourcePaystackArrayOutput {
	return i.ToSourcePaystackArrayOutputWithContext(context.Background())
}

func (i SourcePaystackArray) ToSourcePaystackArrayOutputWithContext(ctx context.Context) SourcePaystackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePaystackArrayOutput)
}

// SourcePaystackMapInput is an input type that accepts SourcePaystackMap and SourcePaystackMapOutput values.
// You can construct a concrete instance of `SourcePaystackMapInput` via:
//
//	SourcePaystackMap{ "key": SourcePaystackArgs{...} }
type SourcePaystackMapInput interface {
	pulumi.Input

	ToSourcePaystackMapOutput() SourcePaystackMapOutput
	ToSourcePaystackMapOutputWithContext(context.Context) SourcePaystackMapOutput
}

type SourcePaystackMap map[string]SourcePaystackInput

func (SourcePaystackMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourcePaystack)(nil)).Elem()
}

func (i SourcePaystackMap) ToSourcePaystackMapOutput() SourcePaystackMapOutput {
	return i.ToSourcePaystackMapOutputWithContext(context.Background())
}

func (i SourcePaystackMap) ToSourcePaystackMapOutputWithContext(ctx context.Context) SourcePaystackMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePaystackMapOutput)
}

type SourcePaystackOutput struct{ *pulumi.OutputState }

func (SourcePaystackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourcePaystack)(nil)).Elem()
}

func (o SourcePaystackOutput) ToSourcePaystackOutput() SourcePaystackOutput {
	return o
}

func (o SourcePaystackOutput) ToSourcePaystackOutputWithContext(ctx context.Context) SourcePaystackOutput {
	return o
}

func (o SourcePaystackOutput) Configuration() SourcePaystackConfigurationOutput {
	return o.ApplyT(func(v *SourcePaystack) SourcePaystackConfigurationOutput { return v.Configuration }).(SourcePaystackConfigurationOutput)
}

func (o SourcePaystackOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePaystack) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourcePaystackOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourcePaystack) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourcePaystackOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePaystack) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourcePaystackOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePaystack) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourcePaystackOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePaystack) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourcePaystackArrayOutput struct{ *pulumi.OutputState }

func (SourcePaystackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourcePaystack)(nil)).Elem()
}

func (o SourcePaystackArrayOutput) ToSourcePaystackArrayOutput() SourcePaystackArrayOutput {
	return o
}

func (o SourcePaystackArrayOutput) ToSourcePaystackArrayOutputWithContext(ctx context.Context) SourcePaystackArrayOutput {
	return o
}

func (o SourcePaystackArrayOutput) Index(i pulumi.IntInput) SourcePaystackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourcePaystack {
		return vs[0].([]*SourcePaystack)[vs[1].(int)]
	}).(SourcePaystackOutput)
}

type SourcePaystackMapOutput struct{ *pulumi.OutputState }

func (SourcePaystackMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourcePaystack)(nil)).Elem()
}

func (o SourcePaystackMapOutput) ToSourcePaystackMapOutput() SourcePaystackMapOutput {
	return o
}

func (o SourcePaystackMapOutput) ToSourcePaystackMapOutputWithContext(ctx context.Context) SourcePaystackMapOutput {
	return o
}

func (o SourcePaystackMapOutput) MapIndex(k pulumi.StringInput) SourcePaystackOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourcePaystack {
		return vs[0].(map[string]*SourcePaystack)[vs[1].(string)]
	}).(SourcePaystackOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePaystackInput)(nil)).Elem(), &SourcePaystack{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePaystackArrayInput)(nil)).Elem(), SourcePaystackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePaystackMapInput)(nil)).Elem(), SourcePaystackMap{})
	pulumi.RegisterOutputType(SourcePaystackOutput{})
	pulumi.RegisterOutputType(SourcePaystackArrayOutput{})
	pulumi.RegisterOutputType(SourcePaystackMapOutput{})
}
