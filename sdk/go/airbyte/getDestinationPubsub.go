// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-airbyte/sdk/go/airbyte/internal"
)

// DestinationPubsub DataSource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ryan-pip/pulumi-airbyte/sdk/go/airbyte"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := airbyte.LookupDestinationPubsub(ctx, &airbyte.LookupDestinationPubsubArgs{
//				DestinationId: "...my_destination_id...",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDestinationPubsub(ctx *pulumi.Context, args *LookupDestinationPubsubArgs, opts ...pulumi.InvokeOption) (*LookupDestinationPubsubResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDestinationPubsubResult
	err := ctx.Invoke("airbyte:index/getDestinationPubsub:getDestinationPubsub", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDestinationPubsub.
type LookupDestinationPubsubArgs struct {
	DestinationId string `pulumi:"destinationId"`
}

// A collection of values returned by getDestinationPubsub.
type LookupDestinationPubsubResult struct {
	Configuration GetDestinationPubsubConfiguration `pulumi:"configuration"`
	DestinationId string                            `pulumi:"destinationId"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupDestinationPubsubOutput(ctx *pulumi.Context, args LookupDestinationPubsubOutputArgs, opts ...pulumi.InvokeOption) LookupDestinationPubsubResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDestinationPubsubResult, error) {
			args := v.(LookupDestinationPubsubArgs)
			r, err := LookupDestinationPubsub(ctx, &args, opts...)
			var s LookupDestinationPubsubResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDestinationPubsubResultOutput)
}

// A collection of arguments for invoking getDestinationPubsub.
type LookupDestinationPubsubOutputArgs struct {
	DestinationId pulumi.StringInput `pulumi:"destinationId"`
}

func (LookupDestinationPubsubOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationPubsubArgs)(nil)).Elem()
}

// A collection of values returned by getDestinationPubsub.
type LookupDestinationPubsubResultOutput struct{ *pulumi.OutputState }

func (LookupDestinationPubsubResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationPubsubResult)(nil)).Elem()
}

func (o LookupDestinationPubsubResultOutput) ToLookupDestinationPubsubResultOutput() LookupDestinationPubsubResultOutput {
	return o
}

func (o LookupDestinationPubsubResultOutput) ToLookupDestinationPubsubResultOutputWithContext(ctx context.Context) LookupDestinationPubsubResultOutput {
	return o
}

func (o LookupDestinationPubsubResultOutput) Configuration() GetDestinationPubsubConfigurationOutput {
	return o.ApplyT(func(v LookupDestinationPubsubResult) GetDestinationPubsubConfiguration { return v.Configuration }).(GetDestinationPubsubConfigurationOutput)
}

func (o LookupDestinationPubsubResultOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationPubsubResult) string { return v.DestinationId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDestinationPubsubResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationPubsubResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDestinationPubsubResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationPubsubResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDestinationPubsubResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationPubsubResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDestinationPubsubResultOutput{})
}
