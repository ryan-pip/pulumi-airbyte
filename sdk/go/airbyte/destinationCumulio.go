// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// DestinationCumulio Resource
type DestinationCumulio struct {
	pulumi.CustomResourceState

	Configuration   DestinationCumulioConfigurationOutput `pulumi:"configuration"`
	DestinationId   pulumi.StringOutput                   `pulumi:"destinationId"`
	DestinationType pulumi.StringOutput                   `pulumi:"destinationType"`
	Name            pulumi.StringOutput                   `pulumi:"name"`
	WorkspaceId     pulumi.StringOutput                   `pulumi:"workspaceId"`
}

// NewDestinationCumulio registers a new resource with the given unique name, arguments, and options.
func NewDestinationCumulio(ctx *pulumi.Context,
	name string, args *DestinationCumulioArgs, opts ...pulumi.ResourceOption) (*DestinationCumulio, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DestinationCumulio
	err := ctx.RegisterResource("airbyte:index/destinationCumulio:DestinationCumulio", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDestinationCumulio gets an existing DestinationCumulio resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDestinationCumulio(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DestinationCumulioState, opts ...pulumi.ResourceOption) (*DestinationCumulio, error) {
	var resource DestinationCumulio
	err := ctx.ReadResource("airbyte:index/destinationCumulio:DestinationCumulio", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DestinationCumulio resources.
type destinationCumulioState struct {
	Configuration   *DestinationCumulioConfiguration `pulumi:"configuration"`
	DestinationId   *string                          `pulumi:"destinationId"`
	DestinationType *string                          `pulumi:"destinationType"`
	Name            *string                          `pulumi:"name"`
	WorkspaceId     *string                          `pulumi:"workspaceId"`
}

type DestinationCumulioState struct {
	Configuration   DestinationCumulioConfigurationPtrInput
	DestinationId   pulumi.StringPtrInput
	DestinationType pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	WorkspaceId     pulumi.StringPtrInput
}

func (DestinationCumulioState) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationCumulioState)(nil)).Elem()
}

type destinationCumulioArgs struct {
	Configuration DestinationCumulioConfiguration `pulumi:"configuration"`
	Name          string                          `pulumi:"name"`
	WorkspaceId   string                          `pulumi:"workspaceId"`
}

// The set of arguments for constructing a DestinationCumulio resource.
type DestinationCumulioArgs struct {
	Configuration DestinationCumulioConfigurationInput
	Name          pulumi.StringInput
	WorkspaceId   pulumi.StringInput
}

func (DestinationCumulioArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationCumulioArgs)(nil)).Elem()
}

type DestinationCumulioInput interface {
	pulumi.Input

	ToDestinationCumulioOutput() DestinationCumulioOutput
	ToDestinationCumulioOutputWithContext(ctx context.Context) DestinationCumulioOutput
}

func (*DestinationCumulio) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationCumulio)(nil)).Elem()
}

func (i *DestinationCumulio) ToDestinationCumulioOutput() DestinationCumulioOutput {
	return i.ToDestinationCumulioOutputWithContext(context.Background())
}

func (i *DestinationCumulio) ToDestinationCumulioOutputWithContext(ctx context.Context) DestinationCumulioOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationCumulioOutput)
}

// DestinationCumulioArrayInput is an input type that accepts DestinationCumulioArray and DestinationCumulioArrayOutput values.
// You can construct a concrete instance of `DestinationCumulioArrayInput` via:
//
//	DestinationCumulioArray{ DestinationCumulioArgs{...} }
type DestinationCumulioArrayInput interface {
	pulumi.Input

	ToDestinationCumulioArrayOutput() DestinationCumulioArrayOutput
	ToDestinationCumulioArrayOutputWithContext(context.Context) DestinationCumulioArrayOutput
}

type DestinationCumulioArray []DestinationCumulioInput

func (DestinationCumulioArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DestinationCumulio)(nil)).Elem()
}

func (i DestinationCumulioArray) ToDestinationCumulioArrayOutput() DestinationCumulioArrayOutput {
	return i.ToDestinationCumulioArrayOutputWithContext(context.Background())
}

func (i DestinationCumulioArray) ToDestinationCumulioArrayOutputWithContext(ctx context.Context) DestinationCumulioArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationCumulioArrayOutput)
}

// DestinationCumulioMapInput is an input type that accepts DestinationCumulioMap and DestinationCumulioMapOutput values.
// You can construct a concrete instance of `DestinationCumulioMapInput` via:
//
//	DestinationCumulioMap{ "key": DestinationCumulioArgs{...} }
type DestinationCumulioMapInput interface {
	pulumi.Input

	ToDestinationCumulioMapOutput() DestinationCumulioMapOutput
	ToDestinationCumulioMapOutputWithContext(context.Context) DestinationCumulioMapOutput
}

type DestinationCumulioMap map[string]DestinationCumulioInput

func (DestinationCumulioMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DestinationCumulio)(nil)).Elem()
}

func (i DestinationCumulioMap) ToDestinationCumulioMapOutput() DestinationCumulioMapOutput {
	return i.ToDestinationCumulioMapOutputWithContext(context.Background())
}

func (i DestinationCumulioMap) ToDestinationCumulioMapOutputWithContext(ctx context.Context) DestinationCumulioMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationCumulioMapOutput)
}

type DestinationCumulioOutput struct{ *pulumi.OutputState }

func (DestinationCumulioOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationCumulio)(nil)).Elem()
}

func (o DestinationCumulioOutput) ToDestinationCumulioOutput() DestinationCumulioOutput {
	return o
}

func (o DestinationCumulioOutput) ToDestinationCumulioOutputWithContext(ctx context.Context) DestinationCumulioOutput {
	return o
}

func (o DestinationCumulioOutput) Configuration() DestinationCumulioConfigurationOutput {
	return o.ApplyT(func(v *DestinationCumulio) DestinationCumulioConfigurationOutput { return v.Configuration }).(DestinationCumulioConfigurationOutput)
}

func (o DestinationCumulioOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationCumulio) pulumi.StringOutput { return v.DestinationId }).(pulumi.StringOutput)
}

func (o DestinationCumulioOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationCumulio) pulumi.StringOutput { return v.DestinationType }).(pulumi.StringOutput)
}

func (o DestinationCumulioOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationCumulio) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DestinationCumulioOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationCumulio) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type DestinationCumulioArrayOutput struct{ *pulumi.OutputState }

func (DestinationCumulioArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DestinationCumulio)(nil)).Elem()
}

func (o DestinationCumulioArrayOutput) ToDestinationCumulioArrayOutput() DestinationCumulioArrayOutput {
	return o
}

func (o DestinationCumulioArrayOutput) ToDestinationCumulioArrayOutputWithContext(ctx context.Context) DestinationCumulioArrayOutput {
	return o
}

func (o DestinationCumulioArrayOutput) Index(i pulumi.IntInput) DestinationCumulioOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DestinationCumulio {
		return vs[0].([]*DestinationCumulio)[vs[1].(int)]
	}).(DestinationCumulioOutput)
}

type DestinationCumulioMapOutput struct{ *pulumi.OutputState }

func (DestinationCumulioMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DestinationCumulio)(nil)).Elem()
}

func (o DestinationCumulioMapOutput) ToDestinationCumulioMapOutput() DestinationCumulioMapOutput {
	return o
}

func (o DestinationCumulioMapOutput) ToDestinationCumulioMapOutputWithContext(ctx context.Context) DestinationCumulioMapOutput {
	return o
}

func (o DestinationCumulioMapOutput) MapIndex(k pulumi.StringInput) DestinationCumulioOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DestinationCumulio {
		return vs[0].(map[string]*DestinationCumulio)[vs[1].(string)]
	}).(DestinationCumulioOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationCumulioInput)(nil)).Elem(), &DestinationCumulio{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationCumulioArrayInput)(nil)).Elem(), DestinationCumulioArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationCumulioMapInput)(nil)).Elem(), DestinationCumulioMap{})
	pulumi.RegisterOutputType(DestinationCumulioOutput{})
	pulumi.RegisterOutputType(DestinationCumulioArrayOutput{})
	pulumi.RegisterOutputType(DestinationCumulioMapOutput{})
}
