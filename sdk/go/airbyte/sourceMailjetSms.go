// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"internal"
)

// SourceMailjetSms Resource
type SourceMailjetSms struct {
	pulumi.CustomResourceState

	Configuration SourceMailjetSmsConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                 `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceMailjetSms registers a new resource with the given unique name, arguments, and options.
func NewSourceMailjetSms(ctx *pulumi.Context,
	name string, args *SourceMailjetSmsArgs, opts ...pulumi.ResourceOption) (*SourceMailjetSms, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceMailjetSms
	err := ctx.RegisterResource("airbyte:index/sourceMailjetSms:SourceMailjetSms", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceMailjetSms gets an existing SourceMailjetSms resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceMailjetSms(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceMailjetSmsState, opts ...pulumi.ResourceOption) (*SourceMailjetSms, error) {
	var resource SourceMailjetSms
	err := ctx.ReadResource("airbyte:index/sourceMailjetSms:SourceMailjetSms", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceMailjetSms resources.
type sourceMailjetSmsState struct {
	Configuration *SourceMailjetSmsConfiguration `pulumi:"configuration"`
	Name          *string                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceMailjetSmsState struct {
	Configuration SourceMailjetSmsConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceMailjetSmsState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceMailjetSmsState)(nil)).Elem()
}

type sourceMailjetSmsArgs struct {
	Configuration SourceMailjetSmsConfiguration `pulumi:"configuration"`
	Name          string                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceMailjetSms resource.
type SourceMailjetSmsArgs struct {
	Configuration SourceMailjetSmsConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceMailjetSmsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceMailjetSmsArgs)(nil)).Elem()
}

type SourceMailjetSmsInput interface {
	pulumi.Input

	ToSourceMailjetSmsOutput() SourceMailjetSmsOutput
	ToSourceMailjetSmsOutputWithContext(ctx context.Context) SourceMailjetSmsOutput
}

func (*SourceMailjetSms) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceMailjetSms)(nil)).Elem()
}

func (i *SourceMailjetSms) ToSourceMailjetSmsOutput() SourceMailjetSmsOutput {
	return i.ToSourceMailjetSmsOutputWithContext(context.Background())
}

func (i *SourceMailjetSms) ToSourceMailjetSmsOutputWithContext(ctx context.Context) SourceMailjetSmsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceMailjetSmsOutput)
}

type SourceMailjetSmsOutput struct{ *pulumi.OutputState }

func (SourceMailjetSmsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceMailjetSms)(nil)).Elem()
}

func (o SourceMailjetSmsOutput) ToSourceMailjetSmsOutput() SourceMailjetSmsOutput {
	return o
}

func (o SourceMailjetSmsOutput) ToSourceMailjetSmsOutputWithContext(ctx context.Context) SourceMailjetSmsOutput {
	return o
}

func (o SourceMailjetSmsOutput) Configuration() SourceMailjetSmsConfigurationOutput {
	return o.ApplyT(func(v *SourceMailjetSms) SourceMailjetSmsConfigurationOutput { return v.Configuration }).(SourceMailjetSmsConfigurationOutput)
}

func (o SourceMailjetSmsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceMailjetSms) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceMailjetSmsOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceMailjetSms) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceMailjetSmsOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceMailjetSms) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceMailjetSmsOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceMailjetSms) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceMailjetSmsOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceMailjetSms) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceMailjetSmsInput)(nil)).Elem(), &SourceMailjetSms{})
	pulumi.RegisterOutputType(SourceMailjetSmsOutput{})
}
