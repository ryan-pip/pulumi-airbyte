// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-airbyte/sdk/go/airbyte/internal"
)

// SourceRetently DataSource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ryan-pip/pulumi-airbyte/sdk/go/airbyte"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := airbyte.LookupSourceRetently(ctx, &airbyte.LookupSourceRetentlyArgs{
//				SecretId: pulumi.StringRef("...my_secret_id..."),
//				SourceId: "...my_source_id...",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSourceRetently(ctx *pulumi.Context, args *LookupSourceRetentlyArgs, opts ...pulumi.InvokeOption) (*LookupSourceRetentlyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSourceRetentlyResult
	err := ctx.Invoke("airbyte:index/getSourceRetently:getSourceRetently", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourceRetently.
type LookupSourceRetentlyArgs struct {
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId *string `pulumi:"secretId"`
	SourceId string  `pulumi:"sourceId"`
}

// A collection of values returned by getSourceRetently.
type LookupSourceRetentlyResult struct {
	Configuration GetSourceRetentlyConfiguration `pulumi:"configuration"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    string  `pulumi:"sourceId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

func LookupSourceRetentlyOutput(ctx *pulumi.Context, args LookupSourceRetentlyOutputArgs, opts ...pulumi.InvokeOption) LookupSourceRetentlyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceRetentlyResult, error) {
			args := v.(LookupSourceRetentlyArgs)
			r, err := LookupSourceRetently(ctx, &args, opts...)
			var s LookupSourceRetentlyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceRetentlyResultOutput)
}

// A collection of arguments for invoking getSourceRetently.
type LookupSourceRetentlyOutputArgs struct {
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId pulumi.StringPtrInput `pulumi:"secretId"`
	SourceId pulumi.StringInput    `pulumi:"sourceId"`
}

func (LookupSourceRetentlyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceRetentlyArgs)(nil)).Elem()
}

// A collection of values returned by getSourceRetently.
type LookupSourceRetentlyResultOutput struct{ *pulumi.OutputState }

func (LookupSourceRetentlyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceRetentlyResult)(nil)).Elem()
}

func (o LookupSourceRetentlyResultOutput) ToLookupSourceRetentlyResultOutput() LookupSourceRetentlyResultOutput {
	return o
}

func (o LookupSourceRetentlyResultOutput) ToLookupSourceRetentlyResultOutputWithContext(ctx context.Context) LookupSourceRetentlyResultOutput {
	return o
}

func (o LookupSourceRetentlyResultOutput) Configuration() GetSourceRetentlyConfigurationOutput {
	return o.ApplyT(func(v LookupSourceRetentlyResult) GetSourceRetentlyConfiguration { return v.Configuration }).(GetSourceRetentlyConfigurationOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourceRetentlyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceRetentlyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourceRetentlyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceRetentlyResult) string { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o LookupSourceRetentlyResultOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourceRetentlyResult) *string { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o LookupSourceRetentlyResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceRetentlyResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupSourceRetentlyResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceRetentlyResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceRetentlyResultOutput{})
}
