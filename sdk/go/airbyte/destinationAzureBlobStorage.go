// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DestinationAzureBlobStorage struct {
	pulumi.CustomResourceState

	Configuration   DestinationAzureBlobStorageConfigurationOutput `pulumi:"configuration"`
	DestinationId   pulumi.StringOutput                            `pulumi:"destinationId"`
	DestinationType pulumi.StringOutput                            `pulumi:"destinationType"`
	Name            pulumi.StringOutput                            `pulumi:"name"`
	WorkspaceId     pulumi.StringOutput                            `pulumi:"workspaceId"`
}

// NewDestinationAzureBlobStorage registers a new resource with the given unique name, arguments, and options.
func NewDestinationAzureBlobStorage(ctx *pulumi.Context,
	name string, args *DestinationAzureBlobStorageArgs, opts ...pulumi.ResourceOption) (*DestinationAzureBlobStorage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DestinationAzureBlobStorage
	err := ctx.RegisterResource("airbyte:index/destinationAzureBlobStorage:DestinationAzureBlobStorage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDestinationAzureBlobStorage gets an existing DestinationAzureBlobStorage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDestinationAzureBlobStorage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DestinationAzureBlobStorageState, opts ...pulumi.ResourceOption) (*DestinationAzureBlobStorage, error) {
	var resource DestinationAzureBlobStorage
	err := ctx.ReadResource("airbyte:index/destinationAzureBlobStorage:DestinationAzureBlobStorage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DestinationAzureBlobStorage resources.
type destinationAzureBlobStorageState struct {
	Configuration   *DestinationAzureBlobStorageConfiguration `pulumi:"configuration"`
	DestinationId   *string                                   `pulumi:"destinationId"`
	DestinationType *string                                   `pulumi:"destinationType"`
	Name            *string                                   `pulumi:"name"`
	WorkspaceId     *string                                   `pulumi:"workspaceId"`
}

type DestinationAzureBlobStorageState struct {
	Configuration   DestinationAzureBlobStorageConfigurationPtrInput
	DestinationId   pulumi.StringPtrInput
	DestinationType pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	WorkspaceId     pulumi.StringPtrInput
}

func (DestinationAzureBlobStorageState) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationAzureBlobStorageState)(nil)).Elem()
}

type destinationAzureBlobStorageArgs struct {
	Configuration DestinationAzureBlobStorageConfiguration `pulumi:"configuration"`
	Name          string                                   `pulumi:"name"`
	WorkspaceId   string                                   `pulumi:"workspaceId"`
}

// The set of arguments for constructing a DestinationAzureBlobStorage resource.
type DestinationAzureBlobStorageArgs struct {
	Configuration DestinationAzureBlobStorageConfigurationInput
	Name          pulumi.StringInput
	WorkspaceId   pulumi.StringInput
}

func (DestinationAzureBlobStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationAzureBlobStorageArgs)(nil)).Elem()
}

type DestinationAzureBlobStorageInput interface {
	pulumi.Input

	ToDestinationAzureBlobStorageOutput() DestinationAzureBlobStorageOutput
	ToDestinationAzureBlobStorageOutputWithContext(ctx context.Context) DestinationAzureBlobStorageOutput
}

func (*DestinationAzureBlobStorage) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationAzureBlobStorage)(nil)).Elem()
}

func (i *DestinationAzureBlobStorage) ToDestinationAzureBlobStorageOutput() DestinationAzureBlobStorageOutput {
	return i.ToDestinationAzureBlobStorageOutputWithContext(context.Background())
}

func (i *DestinationAzureBlobStorage) ToDestinationAzureBlobStorageOutputWithContext(ctx context.Context) DestinationAzureBlobStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationAzureBlobStorageOutput)
}

type DestinationAzureBlobStorageOutput struct{ *pulumi.OutputState }

func (DestinationAzureBlobStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationAzureBlobStorage)(nil)).Elem()
}

func (o DestinationAzureBlobStorageOutput) ToDestinationAzureBlobStorageOutput() DestinationAzureBlobStorageOutput {
	return o
}

func (o DestinationAzureBlobStorageOutput) ToDestinationAzureBlobStorageOutputWithContext(ctx context.Context) DestinationAzureBlobStorageOutput {
	return o
}

func (o DestinationAzureBlobStorageOutput) Configuration() DestinationAzureBlobStorageConfigurationOutput {
	return o.ApplyT(func(v *DestinationAzureBlobStorage) DestinationAzureBlobStorageConfigurationOutput {
		return v.Configuration
	}).(DestinationAzureBlobStorageConfigurationOutput)
}

func (o DestinationAzureBlobStorageOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationAzureBlobStorage) pulumi.StringOutput { return v.DestinationId }).(pulumi.StringOutput)
}

func (o DestinationAzureBlobStorageOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationAzureBlobStorage) pulumi.StringOutput { return v.DestinationType }).(pulumi.StringOutput)
}

func (o DestinationAzureBlobStorageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationAzureBlobStorage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DestinationAzureBlobStorageOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationAzureBlobStorage) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationAzureBlobStorageInput)(nil)).Elem(), &DestinationAzureBlobStorage{})
	pulumi.RegisterOutputType(DestinationAzureBlobStorageOutput{})
}
