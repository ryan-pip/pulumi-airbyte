// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// DestinationAzureBlobStorage Resource
type DestinationAzureBlobStorage struct {
	pulumi.CustomResourceState

	Configuration   DestinationAzureBlobStorageConfigurationOutput `pulumi:"configuration"`
	DestinationId   pulumi.StringOutput                            `pulumi:"destinationId"`
	DestinationType pulumi.StringOutput                            `pulumi:"destinationType"`
	Name            pulumi.StringOutput                            `pulumi:"name"`
	WorkspaceId     pulumi.StringOutput                            `pulumi:"workspaceId"`
}

// NewDestinationAzureBlobStorage registers a new resource with the given unique name, arguments, and options.
func NewDestinationAzureBlobStorage(ctx *pulumi.Context,
	name string, args *DestinationAzureBlobStorageArgs, opts ...pulumi.ResourceOption) (*DestinationAzureBlobStorage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DestinationAzureBlobStorage
	err := ctx.RegisterResource("airbyte:index/destinationAzureBlobStorage:DestinationAzureBlobStorage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDestinationAzureBlobStorage gets an existing DestinationAzureBlobStorage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDestinationAzureBlobStorage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DestinationAzureBlobStorageState, opts ...pulumi.ResourceOption) (*DestinationAzureBlobStorage, error) {
	var resource DestinationAzureBlobStorage
	err := ctx.ReadResource("airbyte:index/destinationAzureBlobStorage:DestinationAzureBlobStorage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DestinationAzureBlobStorage resources.
type destinationAzureBlobStorageState struct {
	Configuration   *DestinationAzureBlobStorageConfiguration `pulumi:"configuration"`
	DestinationId   *string                                   `pulumi:"destinationId"`
	DestinationType *string                                   `pulumi:"destinationType"`
	Name            *string                                   `pulumi:"name"`
	WorkspaceId     *string                                   `pulumi:"workspaceId"`
}

type DestinationAzureBlobStorageState struct {
	Configuration   DestinationAzureBlobStorageConfigurationPtrInput
	DestinationId   pulumi.StringPtrInput
	DestinationType pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	WorkspaceId     pulumi.StringPtrInput
}

func (DestinationAzureBlobStorageState) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationAzureBlobStorageState)(nil)).Elem()
}

type destinationAzureBlobStorageArgs struct {
	Configuration DestinationAzureBlobStorageConfiguration `pulumi:"configuration"`
	Name          string                                   `pulumi:"name"`
	WorkspaceId   string                                   `pulumi:"workspaceId"`
}

// The set of arguments for constructing a DestinationAzureBlobStorage resource.
type DestinationAzureBlobStorageArgs struct {
	Configuration DestinationAzureBlobStorageConfigurationInput
	Name          pulumi.StringInput
	WorkspaceId   pulumi.StringInput
}

func (DestinationAzureBlobStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationAzureBlobStorageArgs)(nil)).Elem()
}

type DestinationAzureBlobStorageInput interface {
	pulumi.Input

	ToDestinationAzureBlobStorageOutput() DestinationAzureBlobStorageOutput
	ToDestinationAzureBlobStorageOutputWithContext(ctx context.Context) DestinationAzureBlobStorageOutput
}

func (*DestinationAzureBlobStorage) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationAzureBlobStorage)(nil)).Elem()
}

func (i *DestinationAzureBlobStorage) ToDestinationAzureBlobStorageOutput() DestinationAzureBlobStorageOutput {
	return i.ToDestinationAzureBlobStorageOutputWithContext(context.Background())
}

func (i *DestinationAzureBlobStorage) ToDestinationAzureBlobStorageOutputWithContext(ctx context.Context) DestinationAzureBlobStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationAzureBlobStorageOutput)
}

// DestinationAzureBlobStorageArrayInput is an input type that accepts DestinationAzureBlobStorageArray and DestinationAzureBlobStorageArrayOutput values.
// You can construct a concrete instance of `DestinationAzureBlobStorageArrayInput` via:
//
//	DestinationAzureBlobStorageArray{ DestinationAzureBlobStorageArgs{...} }
type DestinationAzureBlobStorageArrayInput interface {
	pulumi.Input

	ToDestinationAzureBlobStorageArrayOutput() DestinationAzureBlobStorageArrayOutput
	ToDestinationAzureBlobStorageArrayOutputWithContext(context.Context) DestinationAzureBlobStorageArrayOutput
}

type DestinationAzureBlobStorageArray []DestinationAzureBlobStorageInput

func (DestinationAzureBlobStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DestinationAzureBlobStorage)(nil)).Elem()
}

func (i DestinationAzureBlobStorageArray) ToDestinationAzureBlobStorageArrayOutput() DestinationAzureBlobStorageArrayOutput {
	return i.ToDestinationAzureBlobStorageArrayOutputWithContext(context.Background())
}

func (i DestinationAzureBlobStorageArray) ToDestinationAzureBlobStorageArrayOutputWithContext(ctx context.Context) DestinationAzureBlobStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationAzureBlobStorageArrayOutput)
}

// DestinationAzureBlobStorageMapInput is an input type that accepts DestinationAzureBlobStorageMap and DestinationAzureBlobStorageMapOutput values.
// You can construct a concrete instance of `DestinationAzureBlobStorageMapInput` via:
//
//	DestinationAzureBlobStorageMap{ "key": DestinationAzureBlobStorageArgs{...} }
type DestinationAzureBlobStorageMapInput interface {
	pulumi.Input

	ToDestinationAzureBlobStorageMapOutput() DestinationAzureBlobStorageMapOutput
	ToDestinationAzureBlobStorageMapOutputWithContext(context.Context) DestinationAzureBlobStorageMapOutput
}

type DestinationAzureBlobStorageMap map[string]DestinationAzureBlobStorageInput

func (DestinationAzureBlobStorageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DestinationAzureBlobStorage)(nil)).Elem()
}

func (i DestinationAzureBlobStorageMap) ToDestinationAzureBlobStorageMapOutput() DestinationAzureBlobStorageMapOutput {
	return i.ToDestinationAzureBlobStorageMapOutputWithContext(context.Background())
}

func (i DestinationAzureBlobStorageMap) ToDestinationAzureBlobStorageMapOutputWithContext(ctx context.Context) DestinationAzureBlobStorageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationAzureBlobStorageMapOutput)
}

type DestinationAzureBlobStorageOutput struct{ *pulumi.OutputState }

func (DestinationAzureBlobStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationAzureBlobStorage)(nil)).Elem()
}

func (o DestinationAzureBlobStorageOutput) ToDestinationAzureBlobStorageOutput() DestinationAzureBlobStorageOutput {
	return o
}

func (o DestinationAzureBlobStorageOutput) ToDestinationAzureBlobStorageOutputWithContext(ctx context.Context) DestinationAzureBlobStorageOutput {
	return o
}

func (o DestinationAzureBlobStorageOutput) Configuration() DestinationAzureBlobStorageConfigurationOutput {
	return o.ApplyT(func(v *DestinationAzureBlobStorage) DestinationAzureBlobStorageConfigurationOutput {
		return v.Configuration
	}).(DestinationAzureBlobStorageConfigurationOutput)
}

func (o DestinationAzureBlobStorageOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationAzureBlobStorage) pulumi.StringOutput { return v.DestinationId }).(pulumi.StringOutput)
}

func (o DestinationAzureBlobStorageOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationAzureBlobStorage) pulumi.StringOutput { return v.DestinationType }).(pulumi.StringOutput)
}

func (o DestinationAzureBlobStorageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationAzureBlobStorage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DestinationAzureBlobStorageOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationAzureBlobStorage) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type DestinationAzureBlobStorageArrayOutput struct{ *pulumi.OutputState }

func (DestinationAzureBlobStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DestinationAzureBlobStorage)(nil)).Elem()
}

func (o DestinationAzureBlobStorageArrayOutput) ToDestinationAzureBlobStorageArrayOutput() DestinationAzureBlobStorageArrayOutput {
	return o
}

func (o DestinationAzureBlobStorageArrayOutput) ToDestinationAzureBlobStorageArrayOutputWithContext(ctx context.Context) DestinationAzureBlobStorageArrayOutput {
	return o
}

func (o DestinationAzureBlobStorageArrayOutput) Index(i pulumi.IntInput) DestinationAzureBlobStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DestinationAzureBlobStorage {
		return vs[0].([]*DestinationAzureBlobStorage)[vs[1].(int)]
	}).(DestinationAzureBlobStorageOutput)
}

type DestinationAzureBlobStorageMapOutput struct{ *pulumi.OutputState }

func (DestinationAzureBlobStorageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DestinationAzureBlobStorage)(nil)).Elem()
}

func (o DestinationAzureBlobStorageMapOutput) ToDestinationAzureBlobStorageMapOutput() DestinationAzureBlobStorageMapOutput {
	return o
}

func (o DestinationAzureBlobStorageMapOutput) ToDestinationAzureBlobStorageMapOutputWithContext(ctx context.Context) DestinationAzureBlobStorageMapOutput {
	return o
}

func (o DestinationAzureBlobStorageMapOutput) MapIndex(k pulumi.StringInput) DestinationAzureBlobStorageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DestinationAzureBlobStorage {
		return vs[0].(map[string]*DestinationAzureBlobStorage)[vs[1].(string)]
	}).(DestinationAzureBlobStorageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationAzureBlobStorageInput)(nil)).Elem(), &DestinationAzureBlobStorage{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationAzureBlobStorageArrayInput)(nil)).Elem(), DestinationAzureBlobStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationAzureBlobStorageMapInput)(nil)).Elem(), DestinationAzureBlobStorageMap{})
	pulumi.RegisterOutputType(DestinationAzureBlobStorageOutput{})
	pulumi.RegisterOutputType(DestinationAzureBlobStorageArrayOutput{})
	pulumi.RegisterOutputType(DestinationAzureBlobStorageMapOutput{})
}
