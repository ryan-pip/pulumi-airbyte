// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-airbyte/sdk/go/airbyte/internal"
)

// SourceAzureBlobStorage Resource
type SourceAzureBlobStorage struct {
	pulumi.CustomResourceState

	Configuration SourceAzureBlobStorageConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                       `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceAzureBlobStorage registers a new resource with the given unique name, arguments, and options.
func NewSourceAzureBlobStorage(ctx *pulumi.Context,
	name string, args *SourceAzureBlobStorageArgs, opts ...pulumi.ResourceOption) (*SourceAzureBlobStorage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceAzureBlobStorage
	err := ctx.RegisterResource("airbyte:index/sourceAzureBlobStorage:SourceAzureBlobStorage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceAzureBlobStorage gets an existing SourceAzureBlobStorage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceAzureBlobStorage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceAzureBlobStorageState, opts ...pulumi.ResourceOption) (*SourceAzureBlobStorage, error) {
	var resource SourceAzureBlobStorage
	err := ctx.ReadResource("airbyte:index/sourceAzureBlobStorage:SourceAzureBlobStorage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceAzureBlobStorage resources.
type sourceAzureBlobStorageState struct {
	Configuration *SourceAzureBlobStorageConfiguration `pulumi:"configuration"`
	Name          *string                              `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceAzureBlobStorageState struct {
	Configuration SourceAzureBlobStorageConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceAzureBlobStorageState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceAzureBlobStorageState)(nil)).Elem()
}

type sourceAzureBlobStorageArgs struct {
	Configuration SourceAzureBlobStorageConfiguration `pulumi:"configuration"`
	Name          string                              `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceAzureBlobStorage resource.
type SourceAzureBlobStorageArgs struct {
	Configuration SourceAzureBlobStorageConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceAzureBlobStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceAzureBlobStorageArgs)(nil)).Elem()
}

type SourceAzureBlobStorageInput interface {
	pulumi.Input

	ToSourceAzureBlobStorageOutput() SourceAzureBlobStorageOutput
	ToSourceAzureBlobStorageOutputWithContext(ctx context.Context) SourceAzureBlobStorageOutput
}

func (*SourceAzureBlobStorage) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceAzureBlobStorage)(nil)).Elem()
}

func (i *SourceAzureBlobStorage) ToSourceAzureBlobStorageOutput() SourceAzureBlobStorageOutput {
	return i.ToSourceAzureBlobStorageOutputWithContext(context.Background())
}

func (i *SourceAzureBlobStorage) ToSourceAzureBlobStorageOutputWithContext(ctx context.Context) SourceAzureBlobStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAzureBlobStorageOutput)
}

// SourceAzureBlobStorageArrayInput is an input type that accepts SourceAzureBlobStorageArray and SourceAzureBlobStorageArrayOutput values.
// You can construct a concrete instance of `SourceAzureBlobStorageArrayInput` via:
//
//	SourceAzureBlobStorageArray{ SourceAzureBlobStorageArgs{...} }
type SourceAzureBlobStorageArrayInput interface {
	pulumi.Input

	ToSourceAzureBlobStorageArrayOutput() SourceAzureBlobStorageArrayOutput
	ToSourceAzureBlobStorageArrayOutputWithContext(context.Context) SourceAzureBlobStorageArrayOutput
}

type SourceAzureBlobStorageArray []SourceAzureBlobStorageInput

func (SourceAzureBlobStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceAzureBlobStorage)(nil)).Elem()
}

func (i SourceAzureBlobStorageArray) ToSourceAzureBlobStorageArrayOutput() SourceAzureBlobStorageArrayOutput {
	return i.ToSourceAzureBlobStorageArrayOutputWithContext(context.Background())
}

func (i SourceAzureBlobStorageArray) ToSourceAzureBlobStorageArrayOutputWithContext(ctx context.Context) SourceAzureBlobStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAzureBlobStorageArrayOutput)
}

// SourceAzureBlobStorageMapInput is an input type that accepts SourceAzureBlobStorageMap and SourceAzureBlobStorageMapOutput values.
// You can construct a concrete instance of `SourceAzureBlobStorageMapInput` via:
//
//	SourceAzureBlobStorageMap{ "key": SourceAzureBlobStorageArgs{...} }
type SourceAzureBlobStorageMapInput interface {
	pulumi.Input

	ToSourceAzureBlobStorageMapOutput() SourceAzureBlobStorageMapOutput
	ToSourceAzureBlobStorageMapOutputWithContext(context.Context) SourceAzureBlobStorageMapOutput
}

type SourceAzureBlobStorageMap map[string]SourceAzureBlobStorageInput

func (SourceAzureBlobStorageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceAzureBlobStorage)(nil)).Elem()
}

func (i SourceAzureBlobStorageMap) ToSourceAzureBlobStorageMapOutput() SourceAzureBlobStorageMapOutput {
	return i.ToSourceAzureBlobStorageMapOutputWithContext(context.Background())
}

func (i SourceAzureBlobStorageMap) ToSourceAzureBlobStorageMapOutputWithContext(ctx context.Context) SourceAzureBlobStorageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAzureBlobStorageMapOutput)
}

type SourceAzureBlobStorageOutput struct{ *pulumi.OutputState }

func (SourceAzureBlobStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceAzureBlobStorage)(nil)).Elem()
}

func (o SourceAzureBlobStorageOutput) ToSourceAzureBlobStorageOutput() SourceAzureBlobStorageOutput {
	return o
}

func (o SourceAzureBlobStorageOutput) ToSourceAzureBlobStorageOutputWithContext(ctx context.Context) SourceAzureBlobStorageOutput {
	return o
}

func (o SourceAzureBlobStorageOutput) Configuration() SourceAzureBlobStorageConfigurationOutput {
	return o.ApplyT(func(v *SourceAzureBlobStorage) SourceAzureBlobStorageConfigurationOutput { return v.Configuration }).(SourceAzureBlobStorageConfigurationOutput)
}

func (o SourceAzureBlobStorageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceAzureBlobStorage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceAzureBlobStorageOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceAzureBlobStorage) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceAzureBlobStorageOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceAzureBlobStorage) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceAzureBlobStorageOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceAzureBlobStorage) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceAzureBlobStorageOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceAzureBlobStorage) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceAzureBlobStorageArrayOutput struct{ *pulumi.OutputState }

func (SourceAzureBlobStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceAzureBlobStorage)(nil)).Elem()
}

func (o SourceAzureBlobStorageArrayOutput) ToSourceAzureBlobStorageArrayOutput() SourceAzureBlobStorageArrayOutput {
	return o
}

func (o SourceAzureBlobStorageArrayOutput) ToSourceAzureBlobStorageArrayOutputWithContext(ctx context.Context) SourceAzureBlobStorageArrayOutput {
	return o
}

func (o SourceAzureBlobStorageArrayOutput) Index(i pulumi.IntInput) SourceAzureBlobStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceAzureBlobStorage {
		return vs[0].([]*SourceAzureBlobStorage)[vs[1].(int)]
	}).(SourceAzureBlobStorageOutput)
}

type SourceAzureBlobStorageMapOutput struct{ *pulumi.OutputState }

func (SourceAzureBlobStorageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceAzureBlobStorage)(nil)).Elem()
}

func (o SourceAzureBlobStorageMapOutput) ToSourceAzureBlobStorageMapOutput() SourceAzureBlobStorageMapOutput {
	return o
}

func (o SourceAzureBlobStorageMapOutput) ToSourceAzureBlobStorageMapOutputWithContext(ctx context.Context) SourceAzureBlobStorageMapOutput {
	return o
}

func (o SourceAzureBlobStorageMapOutput) MapIndex(k pulumi.StringInput) SourceAzureBlobStorageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceAzureBlobStorage {
		return vs[0].(map[string]*SourceAzureBlobStorage)[vs[1].(string)]
	}).(SourceAzureBlobStorageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceAzureBlobStorageInput)(nil)).Elem(), &SourceAzureBlobStorage{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceAzureBlobStorageArrayInput)(nil)).Elem(), SourceAzureBlobStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceAzureBlobStorageMapInput)(nil)).Elem(), SourceAzureBlobStorageMap{})
	pulumi.RegisterOutputType(SourceAzureBlobStorageOutput{})
	pulumi.RegisterOutputType(SourceAzureBlobStorageArrayOutput{})
	pulumi.RegisterOutputType(SourceAzureBlobStorageMapOutput{})
}
