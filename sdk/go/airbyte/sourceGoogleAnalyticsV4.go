// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SourceGoogleAnalyticsV4 struct {
	pulumi.CustomResourceState

	Configuration SourceGoogleAnalyticsV4ConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceGoogleAnalyticsV4 registers a new resource with the given unique name, arguments, and options.
func NewSourceGoogleAnalyticsV4(ctx *pulumi.Context,
	name string, args *SourceGoogleAnalyticsV4Args, opts ...pulumi.ResourceOption) (*SourceGoogleAnalyticsV4, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SourceGoogleAnalyticsV4
	err := ctx.RegisterResource("airbyte:index/sourceGoogleAnalyticsV4:SourceGoogleAnalyticsV4", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceGoogleAnalyticsV4 gets an existing SourceGoogleAnalyticsV4 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceGoogleAnalyticsV4(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceGoogleAnalyticsV4State, opts ...pulumi.ResourceOption) (*SourceGoogleAnalyticsV4, error) {
	var resource SourceGoogleAnalyticsV4
	err := ctx.ReadResource("airbyte:index/sourceGoogleAnalyticsV4:SourceGoogleAnalyticsV4", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceGoogleAnalyticsV4 resources.
type sourceGoogleAnalyticsV4State struct {
	Configuration *SourceGoogleAnalyticsV4Configuration `pulumi:"configuration"`
	Name          *string                               `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceGoogleAnalyticsV4State struct {
	Configuration SourceGoogleAnalyticsV4ConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceGoogleAnalyticsV4State) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceGoogleAnalyticsV4State)(nil)).Elem()
}

type sourceGoogleAnalyticsV4Args struct {
	Configuration SourceGoogleAnalyticsV4Configuration `pulumi:"configuration"`
	Name          string                               `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceGoogleAnalyticsV4 resource.
type SourceGoogleAnalyticsV4Args struct {
	Configuration SourceGoogleAnalyticsV4ConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceGoogleAnalyticsV4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceGoogleAnalyticsV4Args)(nil)).Elem()
}

type SourceGoogleAnalyticsV4Input interface {
	pulumi.Input

	ToSourceGoogleAnalyticsV4Output() SourceGoogleAnalyticsV4Output
	ToSourceGoogleAnalyticsV4OutputWithContext(ctx context.Context) SourceGoogleAnalyticsV4Output
}

func (*SourceGoogleAnalyticsV4) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceGoogleAnalyticsV4)(nil)).Elem()
}

func (i *SourceGoogleAnalyticsV4) ToSourceGoogleAnalyticsV4Output() SourceGoogleAnalyticsV4Output {
	return i.ToSourceGoogleAnalyticsV4OutputWithContext(context.Background())
}

func (i *SourceGoogleAnalyticsV4) ToSourceGoogleAnalyticsV4OutputWithContext(ctx context.Context) SourceGoogleAnalyticsV4Output {
	return pulumi.ToOutputWithContext(ctx, i).(SourceGoogleAnalyticsV4Output)
}

type SourceGoogleAnalyticsV4Output struct{ *pulumi.OutputState }

func (SourceGoogleAnalyticsV4Output) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceGoogleAnalyticsV4)(nil)).Elem()
}

func (o SourceGoogleAnalyticsV4Output) ToSourceGoogleAnalyticsV4Output() SourceGoogleAnalyticsV4Output {
	return o
}

func (o SourceGoogleAnalyticsV4Output) ToSourceGoogleAnalyticsV4OutputWithContext(ctx context.Context) SourceGoogleAnalyticsV4Output {
	return o
}

func (o SourceGoogleAnalyticsV4Output) Configuration() SourceGoogleAnalyticsV4ConfigurationOutput {
	return o.ApplyT(func(v *SourceGoogleAnalyticsV4) SourceGoogleAnalyticsV4ConfigurationOutput { return v.Configuration }).(SourceGoogleAnalyticsV4ConfigurationOutput)
}

func (o SourceGoogleAnalyticsV4Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGoogleAnalyticsV4) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceGoogleAnalyticsV4Output) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceGoogleAnalyticsV4) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceGoogleAnalyticsV4Output) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGoogleAnalyticsV4) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceGoogleAnalyticsV4Output) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGoogleAnalyticsV4) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceGoogleAnalyticsV4Output) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGoogleAnalyticsV4) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceGoogleAnalyticsV4Input)(nil)).Elem(), &SourceGoogleAnalyticsV4{})
	pulumi.RegisterOutputType(SourceGoogleAnalyticsV4Output{})
}
