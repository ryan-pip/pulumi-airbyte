// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SourceTvmazeSchedule Resource
type SourceTvmazeSchedule struct {
	pulumi.CustomResourceState

	Configuration SourceTvmazeScheduleConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                     `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceTvmazeSchedule registers a new resource with the given unique name, arguments, and options.
func NewSourceTvmazeSchedule(ctx *pulumi.Context,
	name string, args *SourceTvmazeScheduleArgs, opts ...pulumi.ResourceOption) (*SourceTvmazeSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceTvmazeSchedule
	err := ctx.RegisterResource("airbyte:index/sourceTvmazeSchedule:SourceTvmazeSchedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceTvmazeSchedule gets an existing SourceTvmazeSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceTvmazeSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceTvmazeScheduleState, opts ...pulumi.ResourceOption) (*SourceTvmazeSchedule, error) {
	var resource SourceTvmazeSchedule
	err := ctx.ReadResource("airbyte:index/sourceTvmazeSchedule:SourceTvmazeSchedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceTvmazeSchedule resources.
type sourceTvmazeScheduleState struct {
	Configuration *SourceTvmazeScheduleConfiguration `pulumi:"configuration"`
	Name          *string                            `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceTvmazeScheduleState struct {
	Configuration SourceTvmazeScheduleConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceTvmazeScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceTvmazeScheduleState)(nil)).Elem()
}

type sourceTvmazeScheduleArgs struct {
	Configuration SourceTvmazeScheduleConfiguration `pulumi:"configuration"`
	Name          string                            `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceTvmazeSchedule resource.
type SourceTvmazeScheduleArgs struct {
	Configuration SourceTvmazeScheduleConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceTvmazeScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceTvmazeScheduleArgs)(nil)).Elem()
}

type SourceTvmazeScheduleInput interface {
	pulumi.Input

	ToSourceTvmazeScheduleOutput() SourceTvmazeScheduleOutput
	ToSourceTvmazeScheduleOutputWithContext(ctx context.Context) SourceTvmazeScheduleOutput
}

func (*SourceTvmazeSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceTvmazeSchedule)(nil)).Elem()
}

func (i *SourceTvmazeSchedule) ToSourceTvmazeScheduleOutput() SourceTvmazeScheduleOutput {
	return i.ToSourceTvmazeScheduleOutputWithContext(context.Background())
}

func (i *SourceTvmazeSchedule) ToSourceTvmazeScheduleOutputWithContext(ctx context.Context) SourceTvmazeScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTvmazeScheduleOutput)
}

// SourceTvmazeScheduleArrayInput is an input type that accepts SourceTvmazeScheduleArray and SourceTvmazeScheduleArrayOutput values.
// You can construct a concrete instance of `SourceTvmazeScheduleArrayInput` via:
//
//	SourceTvmazeScheduleArray{ SourceTvmazeScheduleArgs{...} }
type SourceTvmazeScheduleArrayInput interface {
	pulumi.Input

	ToSourceTvmazeScheduleArrayOutput() SourceTvmazeScheduleArrayOutput
	ToSourceTvmazeScheduleArrayOutputWithContext(context.Context) SourceTvmazeScheduleArrayOutput
}

type SourceTvmazeScheduleArray []SourceTvmazeScheduleInput

func (SourceTvmazeScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceTvmazeSchedule)(nil)).Elem()
}

func (i SourceTvmazeScheduleArray) ToSourceTvmazeScheduleArrayOutput() SourceTvmazeScheduleArrayOutput {
	return i.ToSourceTvmazeScheduleArrayOutputWithContext(context.Background())
}

func (i SourceTvmazeScheduleArray) ToSourceTvmazeScheduleArrayOutputWithContext(ctx context.Context) SourceTvmazeScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTvmazeScheduleArrayOutput)
}

// SourceTvmazeScheduleMapInput is an input type that accepts SourceTvmazeScheduleMap and SourceTvmazeScheduleMapOutput values.
// You can construct a concrete instance of `SourceTvmazeScheduleMapInput` via:
//
//	SourceTvmazeScheduleMap{ "key": SourceTvmazeScheduleArgs{...} }
type SourceTvmazeScheduleMapInput interface {
	pulumi.Input

	ToSourceTvmazeScheduleMapOutput() SourceTvmazeScheduleMapOutput
	ToSourceTvmazeScheduleMapOutputWithContext(context.Context) SourceTvmazeScheduleMapOutput
}

type SourceTvmazeScheduleMap map[string]SourceTvmazeScheduleInput

func (SourceTvmazeScheduleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceTvmazeSchedule)(nil)).Elem()
}

func (i SourceTvmazeScheduleMap) ToSourceTvmazeScheduleMapOutput() SourceTvmazeScheduleMapOutput {
	return i.ToSourceTvmazeScheduleMapOutputWithContext(context.Background())
}

func (i SourceTvmazeScheduleMap) ToSourceTvmazeScheduleMapOutputWithContext(ctx context.Context) SourceTvmazeScheduleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTvmazeScheduleMapOutput)
}

type SourceTvmazeScheduleOutput struct{ *pulumi.OutputState }

func (SourceTvmazeScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceTvmazeSchedule)(nil)).Elem()
}

func (o SourceTvmazeScheduleOutput) ToSourceTvmazeScheduleOutput() SourceTvmazeScheduleOutput {
	return o
}

func (o SourceTvmazeScheduleOutput) ToSourceTvmazeScheduleOutputWithContext(ctx context.Context) SourceTvmazeScheduleOutput {
	return o
}

func (o SourceTvmazeScheduleOutput) Configuration() SourceTvmazeScheduleConfigurationOutput {
	return o.ApplyT(func(v *SourceTvmazeSchedule) SourceTvmazeScheduleConfigurationOutput { return v.Configuration }).(SourceTvmazeScheduleConfigurationOutput)
}

func (o SourceTvmazeScheduleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceTvmazeSchedule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceTvmazeScheduleOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTvmazeSchedule) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceTvmazeScheduleOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceTvmazeSchedule) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceTvmazeScheduleOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceTvmazeSchedule) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceTvmazeScheduleOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceTvmazeSchedule) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceTvmazeScheduleArrayOutput struct{ *pulumi.OutputState }

func (SourceTvmazeScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceTvmazeSchedule)(nil)).Elem()
}

func (o SourceTvmazeScheduleArrayOutput) ToSourceTvmazeScheduleArrayOutput() SourceTvmazeScheduleArrayOutput {
	return o
}

func (o SourceTvmazeScheduleArrayOutput) ToSourceTvmazeScheduleArrayOutputWithContext(ctx context.Context) SourceTvmazeScheduleArrayOutput {
	return o
}

func (o SourceTvmazeScheduleArrayOutput) Index(i pulumi.IntInput) SourceTvmazeScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceTvmazeSchedule {
		return vs[0].([]*SourceTvmazeSchedule)[vs[1].(int)]
	}).(SourceTvmazeScheduleOutput)
}

type SourceTvmazeScheduleMapOutput struct{ *pulumi.OutputState }

func (SourceTvmazeScheduleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceTvmazeSchedule)(nil)).Elem()
}

func (o SourceTvmazeScheduleMapOutput) ToSourceTvmazeScheduleMapOutput() SourceTvmazeScheduleMapOutput {
	return o
}

func (o SourceTvmazeScheduleMapOutput) ToSourceTvmazeScheduleMapOutputWithContext(ctx context.Context) SourceTvmazeScheduleMapOutput {
	return o
}

func (o SourceTvmazeScheduleMapOutput) MapIndex(k pulumi.StringInput) SourceTvmazeScheduleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceTvmazeSchedule {
		return vs[0].(map[string]*SourceTvmazeSchedule)[vs[1].(string)]
	}).(SourceTvmazeScheduleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceTvmazeScheduleInput)(nil)).Elem(), &SourceTvmazeSchedule{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceTvmazeScheduleArrayInput)(nil)).Elem(), SourceTvmazeScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceTvmazeScheduleMapInput)(nil)).Elem(), SourceTvmazeScheduleMap{})
	pulumi.RegisterOutputType(SourceTvmazeScheduleOutput{})
	pulumi.RegisterOutputType(SourceTvmazeScheduleArrayOutput{})
	pulumi.RegisterOutputType(SourceTvmazeScheduleMapOutput{})
}
