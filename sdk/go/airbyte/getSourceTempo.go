// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSourceTempo(ctx *pulumi.Context, args *LookupSourceTempoArgs, opts ...pulumi.InvokeOption) (*LookupSourceTempoResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupSourceTempoResult
	err := ctx.Invoke("airbyte:index/getSourceTempo:getSourceTempo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourceTempo.
type LookupSourceTempoArgs struct {
	SecretId *string `pulumi:"secretId"`
	SourceId string  `pulumi:"sourceId"`
}

// A collection of values returned by getSourceTempo.
type LookupSourceTempoResult struct {
	Configuration GetSourceTempoConfiguration `pulumi:"configuration"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	Name        string  `pulumi:"name"`
	SecretId    *string `pulumi:"secretId"`
	SourceId    string  `pulumi:"sourceId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

func LookupSourceTempoOutput(ctx *pulumi.Context, args LookupSourceTempoOutputArgs, opts ...pulumi.InvokeOption) LookupSourceTempoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceTempoResult, error) {
			args := v.(LookupSourceTempoArgs)
			r, err := LookupSourceTempo(ctx, &args, opts...)
			var s LookupSourceTempoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceTempoResultOutput)
}

// A collection of arguments for invoking getSourceTempo.
type LookupSourceTempoOutputArgs struct {
	SecretId pulumi.StringPtrInput `pulumi:"secretId"`
	SourceId pulumi.StringInput    `pulumi:"sourceId"`
}

func (LookupSourceTempoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceTempoArgs)(nil)).Elem()
}

// A collection of values returned by getSourceTempo.
type LookupSourceTempoResultOutput struct{ *pulumi.OutputState }

func (LookupSourceTempoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceTempoResult)(nil)).Elem()
}

func (o LookupSourceTempoResultOutput) ToLookupSourceTempoResultOutput() LookupSourceTempoResultOutput {
	return o
}

func (o LookupSourceTempoResultOutput) ToLookupSourceTempoResultOutputWithContext(ctx context.Context) LookupSourceTempoResultOutput {
	return o
}

func (o LookupSourceTempoResultOutput) Configuration() GetSourceTempoConfigurationOutput {
	return o.ApplyT(func(v LookupSourceTempoResult) GetSourceTempoConfiguration { return v.Configuration }).(GetSourceTempoConfigurationOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourceTempoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceTempoResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourceTempoResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceTempoResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSourceTempoResultOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourceTempoResult) *string { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o LookupSourceTempoResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceTempoResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupSourceTempoResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceTempoResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceTempoResultOutput{})
}
