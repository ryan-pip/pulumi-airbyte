// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"internal"
)

// DestinationBigquery DataSource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := airbyte.LookupDestinationBigquery(ctx, %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference), nil);
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
func LookupDestinationBigquery(ctx *pulumi.Context, args *LookupDestinationBigqueryArgs, opts ...pulumi.InvokeOption) (*LookupDestinationBigqueryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDestinationBigqueryResult
	err := ctx.Invoke("airbyte:index/getDestinationBigquery:getDestinationBigquery", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDestinationBigquery.
type LookupDestinationBigqueryArgs struct {
	DestinationId string `pulumi:"destinationId"`
}

// A collection of values returned by getDestinationBigquery.
type LookupDestinationBigqueryResult struct {
	Configuration GetDestinationBigqueryConfiguration `pulumi:"configuration"`
	DestinationId string                              `pulumi:"destinationId"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	WorkspaceId string `pulumi:"workspaceId"`
}

func LookupDestinationBigqueryOutput(ctx *pulumi.Context, args LookupDestinationBigqueryOutputArgs, opts ...pulumi.InvokeOption) LookupDestinationBigqueryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDestinationBigqueryResult, error) {
			args := v.(LookupDestinationBigqueryArgs)
			r, err := LookupDestinationBigquery(ctx, &args, opts...)
			var s LookupDestinationBigqueryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDestinationBigqueryResultOutput)
}

// A collection of arguments for invoking getDestinationBigquery.
type LookupDestinationBigqueryOutputArgs struct {
	DestinationId pulumi.StringInput `pulumi:"destinationId"`
}

func (LookupDestinationBigqueryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationBigqueryArgs)(nil)).Elem()
}

// A collection of values returned by getDestinationBigquery.
type LookupDestinationBigqueryResultOutput struct{ *pulumi.OutputState }

func (LookupDestinationBigqueryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDestinationBigqueryResult)(nil)).Elem()
}

func (o LookupDestinationBigqueryResultOutput) ToLookupDestinationBigqueryResultOutput() LookupDestinationBigqueryResultOutput {
	return o
}

func (o LookupDestinationBigqueryResultOutput) ToLookupDestinationBigqueryResultOutputWithContext(ctx context.Context) LookupDestinationBigqueryResultOutput {
	return o
}

func (o LookupDestinationBigqueryResultOutput) Configuration() GetDestinationBigqueryConfigurationOutput {
	return o.ApplyT(func(v LookupDestinationBigqueryResult) GetDestinationBigqueryConfiguration { return v.Configuration }).(GetDestinationBigqueryConfigurationOutput)
}

func (o LookupDestinationBigqueryResultOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationBigqueryResult) string { return v.DestinationId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDestinationBigqueryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationBigqueryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDestinationBigqueryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationBigqueryResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDestinationBigqueryResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDestinationBigqueryResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDestinationBigqueryResultOutput{})
}
