// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSourceSentry(ctx *pulumi.Context, args *LookupSourceSentryArgs, opts ...pulumi.InvokeOption) (*LookupSourceSentryResult, error) {
	var rv LookupSourceSentryResult
	err := ctx.Invoke("airbyte:index/getSourceSentry:getSourceSentry", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourceSentry.
type LookupSourceSentryArgs struct {
	SecretId *string `pulumi:"secretId"`
	SourceId string  `pulumi:"sourceId"`
}

// A collection of values returned by getSourceSentry.
type LookupSourceSentryResult struct {
	Configuration GetSourceSentryConfiguration `pulumi:"configuration"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	Name        string  `pulumi:"name"`
	SecretId    *string `pulumi:"secretId"`
	SourceId    string  `pulumi:"sourceId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

func LookupSourceSentryOutput(ctx *pulumi.Context, args LookupSourceSentryOutputArgs, opts ...pulumi.InvokeOption) LookupSourceSentryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceSentryResult, error) {
			args := v.(LookupSourceSentryArgs)
			r, err := LookupSourceSentry(ctx, &args, opts...)
			var s LookupSourceSentryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceSentryResultOutput)
}

// A collection of arguments for invoking getSourceSentry.
type LookupSourceSentryOutputArgs struct {
	SecretId pulumi.StringPtrInput `pulumi:"secretId"`
	SourceId pulumi.StringInput    `pulumi:"sourceId"`
}

func (LookupSourceSentryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceSentryArgs)(nil)).Elem()
}

// A collection of values returned by getSourceSentry.
type LookupSourceSentryResultOutput struct{ *pulumi.OutputState }

func (LookupSourceSentryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceSentryResult)(nil)).Elem()
}

func (o LookupSourceSentryResultOutput) ToLookupSourceSentryResultOutput() LookupSourceSentryResultOutput {
	return o
}

func (o LookupSourceSentryResultOutput) ToLookupSourceSentryResultOutputWithContext(ctx context.Context) LookupSourceSentryResultOutput {
	return o
}

func (o LookupSourceSentryResultOutput) Configuration() GetSourceSentryConfigurationOutput {
	return o.ApplyT(func(v LookupSourceSentryResult) GetSourceSentryConfiguration { return v.Configuration }).(GetSourceSentryConfigurationOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourceSentryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceSentryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourceSentryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceSentryResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSourceSentryResultOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourceSentryResult) *string { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o LookupSourceSentryResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceSentryResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupSourceSentryResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceSentryResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceSentryResultOutput{})
}
