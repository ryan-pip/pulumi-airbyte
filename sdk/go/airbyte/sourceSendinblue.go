// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-airbyte/sdk/go/airbyte/internal"
)

// SourceSendinblue Resource
type SourceSendinblue struct {
	pulumi.CustomResourceState

	Configuration SourceSendinblueConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                 `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceSendinblue registers a new resource with the given unique name, arguments, and options.
func NewSourceSendinblue(ctx *pulumi.Context,
	name string, args *SourceSendinblueArgs, opts ...pulumi.ResourceOption) (*SourceSendinblue, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceSendinblue
	err := ctx.RegisterResource("airbyte:index/sourceSendinblue:SourceSendinblue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceSendinblue gets an existing SourceSendinblue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceSendinblue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceSendinblueState, opts ...pulumi.ResourceOption) (*SourceSendinblue, error) {
	var resource SourceSendinblue
	err := ctx.ReadResource("airbyte:index/sourceSendinblue:SourceSendinblue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceSendinblue resources.
type sourceSendinblueState struct {
	Configuration *SourceSendinblueConfiguration `pulumi:"configuration"`
	Name          *string                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceSendinblueState struct {
	Configuration SourceSendinblueConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceSendinblueState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceSendinblueState)(nil)).Elem()
}

type sourceSendinblueArgs struct {
	Configuration SourceSendinblueConfiguration `pulumi:"configuration"`
	Name          string                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceSendinblue resource.
type SourceSendinblueArgs struct {
	Configuration SourceSendinblueConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceSendinblueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceSendinblueArgs)(nil)).Elem()
}

type SourceSendinblueInput interface {
	pulumi.Input

	ToSourceSendinblueOutput() SourceSendinblueOutput
	ToSourceSendinblueOutputWithContext(ctx context.Context) SourceSendinblueOutput
}

func (*SourceSendinblue) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceSendinblue)(nil)).Elem()
}

func (i *SourceSendinblue) ToSourceSendinblueOutput() SourceSendinblueOutput {
	return i.ToSourceSendinblueOutputWithContext(context.Background())
}

func (i *SourceSendinblue) ToSourceSendinblueOutputWithContext(ctx context.Context) SourceSendinblueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSendinblueOutput)
}

// SourceSendinblueArrayInput is an input type that accepts SourceSendinblueArray and SourceSendinblueArrayOutput values.
// You can construct a concrete instance of `SourceSendinblueArrayInput` via:
//
//	SourceSendinblueArray{ SourceSendinblueArgs{...} }
type SourceSendinblueArrayInput interface {
	pulumi.Input

	ToSourceSendinblueArrayOutput() SourceSendinblueArrayOutput
	ToSourceSendinblueArrayOutputWithContext(context.Context) SourceSendinblueArrayOutput
}

type SourceSendinblueArray []SourceSendinblueInput

func (SourceSendinblueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceSendinblue)(nil)).Elem()
}

func (i SourceSendinblueArray) ToSourceSendinblueArrayOutput() SourceSendinblueArrayOutput {
	return i.ToSourceSendinblueArrayOutputWithContext(context.Background())
}

func (i SourceSendinblueArray) ToSourceSendinblueArrayOutputWithContext(ctx context.Context) SourceSendinblueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSendinblueArrayOutput)
}

// SourceSendinblueMapInput is an input type that accepts SourceSendinblueMap and SourceSendinblueMapOutput values.
// You can construct a concrete instance of `SourceSendinblueMapInput` via:
//
//	SourceSendinblueMap{ "key": SourceSendinblueArgs{...} }
type SourceSendinblueMapInput interface {
	pulumi.Input

	ToSourceSendinblueMapOutput() SourceSendinblueMapOutput
	ToSourceSendinblueMapOutputWithContext(context.Context) SourceSendinblueMapOutput
}

type SourceSendinblueMap map[string]SourceSendinblueInput

func (SourceSendinblueMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceSendinblue)(nil)).Elem()
}

func (i SourceSendinblueMap) ToSourceSendinblueMapOutput() SourceSendinblueMapOutput {
	return i.ToSourceSendinblueMapOutputWithContext(context.Background())
}

func (i SourceSendinblueMap) ToSourceSendinblueMapOutputWithContext(ctx context.Context) SourceSendinblueMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSendinblueMapOutput)
}

type SourceSendinblueOutput struct{ *pulumi.OutputState }

func (SourceSendinblueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceSendinblue)(nil)).Elem()
}

func (o SourceSendinblueOutput) ToSourceSendinblueOutput() SourceSendinblueOutput {
	return o
}

func (o SourceSendinblueOutput) ToSourceSendinblueOutputWithContext(ctx context.Context) SourceSendinblueOutput {
	return o
}

func (o SourceSendinblueOutput) Configuration() SourceSendinblueConfigurationOutput {
	return o.ApplyT(func(v *SourceSendinblue) SourceSendinblueConfigurationOutput { return v.Configuration }).(SourceSendinblueConfigurationOutput)
}

func (o SourceSendinblueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSendinblue) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceSendinblueOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceSendinblue) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceSendinblueOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSendinblue) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceSendinblueOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSendinblue) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceSendinblueOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSendinblue) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceSendinblueArrayOutput struct{ *pulumi.OutputState }

func (SourceSendinblueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceSendinblue)(nil)).Elem()
}

func (o SourceSendinblueArrayOutput) ToSourceSendinblueArrayOutput() SourceSendinblueArrayOutput {
	return o
}

func (o SourceSendinblueArrayOutput) ToSourceSendinblueArrayOutputWithContext(ctx context.Context) SourceSendinblueArrayOutput {
	return o
}

func (o SourceSendinblueArrayOutput) Index(i pulumi.IntInput) SourceSendinblueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceSendinblue {
		return vs[0].([]*SourceSendinblue)[vs[1].(int)]
	}).(SourceSendinblueOutput)
}

type SourceSendinblueMapOutput struct{ *pulumi.OutputState }

func (SourceSendinblueMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceSendinblue)(nil)).Elem()
}

func (o SourceSendinblueMapOutput) ToSourceSendinblueMapOutput() SourceSendinblueMapOutput {
	return o
}

func (o SourceSendinblueMapOutput) ToSourceSendinblueMapOutputWithContext(ctx context.Context) SourceSendinblueMapOutput {
	return o
}

func (o SourceSendinblueMapOutput) MapIndex(k pulumi.StringInput) SourceSendinblueOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceSendinblue {
		return vs[0].(map[string]*SourceSendinblue)[vs[1].(string)]
	}).(SourceSendinblueOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceSendinblueInput)(nil)).Elem(), &SourceSendinblue{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceSendinblueArrayInput)(nil)).Elem(), SourceSendinblueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceSendinblueMapInput)(nil)).Elem(), SourceSendinblueMap{})
	pulumi.RegisterOutputType(SourceSendinblueOutput{})
	pulumi.RegisterOutputType(SourceSendinblueArrayOutput{})
	pulumi.RegisterOutputType(SourceSendinblueMapOutput{})
}
