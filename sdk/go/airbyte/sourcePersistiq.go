// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SourcePersistiq Resource
type SourcePersistiq struct {
	pulumi.CustomResourceState

	Configuration SourcePersistiqConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourcePersistiq registers a new resource with the given unique name, arguments, and options.
func NewSourcePersistiq(ctx *pulumi.Context,
	name string, args *SourcePersistiqArgs, opts ...pulumi.ResourceOption) (*SourcePersistiq, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourcePersistiq
	err := ctx.RegisterResource("airbyte:index/sourcePersistiq:SourcePersistiq", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourcePersistiq gets an existing SourcePersistiq resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourcePersistiq(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourcePersistiqState, opts ...pulumi.ResourceOption) (*SourcePersistiq, error) {
	var resource SourcePersistiq
	err := ctx.ReadResource("airbyte:index/sourcePersistiq:SourcePersistiq", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourcePersistiq resources.
type sourcePersistiqState struct {
	Configuration *SourcePersistiqConfiguration `pulumi:"configuration"`
	Name          *string                       `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourcePersistiqState struct {
	Configuration SourcePersistiqConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourcePersistiqState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourcePersistiqState)(nil)).Elem()
}

type sourcePersistiqArgs struct {
	Configuration SourcePersistiqConfiguration `pulumi:"configuration"`
	Name          string                       `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourcePersistiq resource.
type SourcePersistiqArgs struct {
	Configuration SourcePersistiqConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourcePersistiqArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourcePersistiqArgs)(nil)).Elem()
}

type SourcePersistiqInput interface {
	pulumi.Input

	ToSourcePersistiqOutput() SourcePersistiqOutput
	ToSourcePersistiqOutputWithContext(ctx context.Context) SourcePersistiqOutput
}

func (*SourcePersistiq) ElementType() reflect.Type {
	return reflect.TypeOf((**SourcePersistiq)(nil)).Elem()
}

func (i *SourcePersistiq) ToSourcePersistiqOutput() SourcePersistiqOutput {
	return i.ToSourcePersistiqOutputWithContext(context.Background())
}

func (i *SourcePersistiq) ToSourcePersistiqOutputWithContext(ctx context.Context) SourcePersistiqOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePersistiqOutput)
}

// SourcePersistiqArrayInput is an input type that accepts SourcePersistiqArray and SourcePersistiqArrayOutput values.
// You can construct a concrete instance of `SourcePersistiqArrayInput` via:
//
//	SourcePersistiqArray{ SourcePersistiqArgs{...} }
type SourcePersistiqArrayInput interface {
	pulumi.Input

	ToSourcePersistiqArrayOutput() SourcePersistiqArrayOutput
	ToSourcePersistiqArrayOutputWithContext(context.Context) SourcePersistiqArrayOutput
}

type SourcePersistiqArray []SourcePersistiqInput

func (SourcePersistiqArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourcePersistiq)(nil)).Elem()
}

func (i SourcePersistiqArray) ToSourcePersistiqArrayOutput() SourcePersistiqArrayOutput {
	return i.ToSourcePersistiqArrayOutputWithContext(context.Background())
}

func (i SourcePersistiqArray) ToSourcePersistiqArrayOutputWithContext(ctx context.Context) SourcePersistiqArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePersistiqArrayOutput)
}

// SourcePersistiqMapInput is an input type that accepts SourcePersistiqMap and SourcePersistiqMapOutput values.
// You can construct a concrete instance of `SourcePersistiqMapInput` via:
//
//	SourcePersistiqMap{ "key": SourcePersistiqArgs{...} }
type SourcePersistiqMapInput interface {
	pulumi.Input

	ToSourcePersistiqMapOutput() SourcePersistiqMapOutput
	ToSourcePersistiqMapOutputWithContext(context.Context) SourcePersistiqMapOutput
}

type SourcePersistiqMap map[string]SourcePersistiqInput

func (SourcePersistiqMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourcePersistiq)(nil)).Elem()
}

func (i SourcePersistiqMap) ToSourcePersistiqMapOutput() SourcePersistiqMapOutput {
	return i.ToSourcePersistiqMapOutputWithContext(context.Background())
}

func (i SourcePersistiqMap) ToSourcePersistiqMapOutputWithContext(ctx context.Context) SourcePersistiqMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePersistiqMapOutput)
}

type SourcePersistiqOutput struct{ *pulumi.OutputState }

func (SourcePersistiqOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourcePersistiq)(nil)).Elem()
}

func (o SourcePersistiqOutput) ToSourcePersistiqOutput() SourcePersistiqOutput {
	return o
}

func (o SourcePersistiqOutput) ToSourcePersistiqOutputWithContext(ctx context.Context) SourcePersistiqOutput {
	return o
}

func (o SourcePersistiqOutput) Configuration() SourcePersistiqConfigurationOutput {
	return o.ApplyT(func(v *SourcePersistiq) SourcePersistiqConfigurationOutput { return v.Configuration }).(SourcePersistiqConfigurationOutput)
}

func (o SourcePersistiqOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePersistiq) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourcePersistiqOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourcePersistiq) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourcePersistiqOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePersistiq) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourcePersistiqOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePersistiq) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourcePersistiqOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePersistiq) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourcePersistiqArrayOutput struct{ *pulumi.OutputState }

func (SourcePersistiqArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourcePersistiq)(nil)).Elem()
}

func (o SourcePersistiqArrayOutput) ToSourcePersistiqArrayOutput() SourcePersistiqArrayOutput {
	return o
}

func (o SourcePersistiqArrayOutput) ToSourcePersistiqArrayOutputWithContext(ctx context.Context) SourcePersistiqArrayOutput {
	return o
}

func (o SourcePersistiqArrayOutput) Index(i pulumi.IntInput) SourcePersistiqOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourcePersistiq {
		return vs[0].([]*SourcePersistiq)[vs[1].(int)]
	}).(SourcePersistiqOutput)
}

type SourcePersistiqMapOutput struct{ *pulumi.OutputState }

func (SourcePersistiqMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourcePersistiq)(nil)).Elem()
}

func (o SourcePersistiqMapOutput) ToSourcePersistiqMapOutput() SourcePersistiqMapOutput {
	return o
}

func (o SourcePersistiqMapOutput) ToSourcePersistiqMapOutputWithContext(ctx context.Context) SourcePersistiqMapOutput {
	return o
}

func (o SourcePersistiqMapOutput) MapIndex(k pulumi.StringInput) SourcePersistiqOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourcePersistiq {
		return vs[0].(map[string]*SourcePersistiq)[vs[1].(string)]
	}).(SourcePersistiqOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePersistiqInput)(nil)).Elem(), &SourcePersistiq{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePersistiqArrayInput)(nil)).Elem(), SourcePersistiqArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePersistiqMapInput)(nil)).Elem(), SourcePersistiqMap{})
	pulumi.RegisterOutputType(SourcePersistiqOutput{})
	pulumi.RegisterOutputType(SourcePersistiqArrayOutput{})
	pulumi.RegisterOutputType(SourcePersistiqMapOutput{})
}
