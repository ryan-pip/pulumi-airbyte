// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SourceTrustpilot Resource
type SourceTrustpilot struct {
	pulumi.CustomResourceState

	Configuration SourceTrustpilotConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                 `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceTrustpilot registers a new resource with the given unique name, arguments, and options.
func NewSourceTrustpilot(ctx *pulumi.Context,
	name string, args *SourceTrustpilotArgs, opts ...pulumi.ResourceOption) (*SourceTrustpilot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceTrustpilot
	err := ctx.RegisterResource("airbyte:index/sourceTrustpilot:SourceTrustpilot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceTrustpilot gets an existing SourceTrustpilot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceTrustpilot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceTrustpilotState, opts ...pulumi.ResourceOption) (*SourceTrustpilot, error) {
	var resource SourceTrustpilot
	err := ctx.ReadResource("airbyte:index/sourceTrustpilot:SourceTrustpilot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceTrustpilot resources.
type sourceTrustpilotState struct {
	Configuration *SourceTrustpilotConfiguration `pulumi:"configuration"`
	Name          *string                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceTrustpilotState struct {
	Configuration SourceTrustpilotConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceTrustpilotState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceTrustpilotState)(nil)).Elem()
}

type sourceTrustpilotArgs struct {
	Configuration SourceTrustpilotConfiguration `pulumi:"configuration"`
	Name          string                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceTrustpilot resource.
type SourceTrustpilotArgs struct {
	Configuration SourceTrustpilotConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceTrustpilotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceTrustpilotArgs)(nil)).Elem()
}

type SourceTrustpilotInput interface {
	pulumi.Input

	ToSourceTrustpilotOutput() SourceTrustpilotOutput
	ToSourceTrustpilotOutputWithContext(ctx context.Context) SourceTrustpilotOutput
}

func (*SourceTrustpilot) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceTrustpilot)(nil)).Elem()
}

func (i *SourceTrustpilot) ToSourceTrustpilotOutput() SourceTrustpilotOutput {
	return i.ToSourceTrustpilotOutputWithContext(context.Background())
}

func (i *SourceTrustpilot) ToSourceTrustpilotOutputWithContext(ctx context.Context) SourceTrustpilotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTrustpilotOutput)
}

// SourceTrustpilotArrayInput is an input type that accepts SourceTrustpilotArray and SourceTrustpilotArrayOutput values.
// You can construct a concrete instance of `SourceTrustpilotArrayInput` via:
//
//	SourceTrustpilotArray{ SourceTrustpilotArgs{...} }
type SourceTrustpilotArrayInput interface {
	pulumi.Input

	ToSourceTrustpilotArrayOutput() SourceTrustpilotArrayOutput
	ToSourceTrustpilotArrayOutputWithContext(context.Context) SourceTrustpilotArrayOutput
}

type SourceTrustpilotArray []SourceTrustpilotInput

func (SourceTrustpilotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceTrustpilot)(nil)).Elem()
}

func (i SourceTrustpilotArray) ToSourceTrustpilotArrayOutput() SourceTrustpilotArrayOutput {
	return i.ToSourceTrustpilotArrayOutputWithContext(context.Background())
}

func (i SourceTrustpilotArray) ToSourceTrustpilotArrayOutputWithContext(ctx context.Context) SourceTrustpilotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTrustpilotArrayOutput)
}

// SourceTrustpilotMapInput is an input type that accepts SourceTrustpilotMap and SourceTrustpilotMapOutput values.
// You can construct a concrete instance of `SourceTrustpilotMapInput` via:
//
//	SourceTrustpilotMap{ "key": SourceTrustpilotArgs{...} }
type SourceTrustpilotMapInput interface {
	pulumi.Input

	ToSourceTrustpilotMapOutput() SourceTrustpilotMapOutput
	ToSourceTrustpilotMapOutputWithContext(context.Context) SourceTrustpilotMapOutput
}

type SourceTrustpilotMap map[string]SourceTrustpilotInput

func (SourceTrustpilotMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceTrustpilot)(nil)).Elem()
}

func (i SourceTrustpilotMap) ToSourceTrustpilotMapOutput() SourceTrustpilotMapOutput {
	return i.ToSourceTrustpilotMapOutputWithContext(context.Background())
}

func (i SourceTrustpilotMap) ToSourceTrustpilotMapOutputWithContext(ctx context.Context) SourceTrustpilotMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceTrustpilotMapOutput)
}

type SourceTrustpilotOutput struct{ *pulumi.OutputState }

func (SourceTrustpilotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceTrustpilot)(nil)).Elem()
}

func (o SourceTrustpilotOutput) ToSourceTrustpilotOutput() SourceTrustpilotOutput {
	return o
}

func (o SourceTrustpilotOutput) ToSourceTrustpilotOutputWithContext(ctx context.Context) SourceTrustpilotOutput {
	return o
}

func (o SourceTrustpilotOutput) Configuration() SourceTrustpilotConfigurationOutput {
	return o.ApplyT(func(v *SourceTrustpilot) SourceTrustpilotConfigurationOutput { return v.Configuration }).(SourceTrustpilotConfigurationOutput)
}

func (o SourceTrustpilotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceTrustpilot) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceTrustpilotOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceTrustpilot) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceTrustpilotOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceTrustpilot) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceTrustpilotOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceTrustpilot) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceTrustpilotOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceTrustpilot) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceTrustpilotArrayOutput struct{ *pulumi.OutputState }

func (SourceTrustpilotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceTrustpilot)(nil)).Elem()
}

func (o SourceTrustpilotArrayOutput) ToSourceTrustpilotArrayOutput() SourceTrustpilotArrayOutput {
	return o
}

func (o SourceTrustpilotArrayOutput) ToSourceTrustpilotArrayOutputWithContext(ctx context.Context) SourceTrustpilotArrayOutput {
	return o
}

func (o SourceTrustpilotArrayOutput) Index(i pulumi.IntInput) SourceTrustpilotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceTrustpilot {
		return vs[0].([]*SourceTrustpilot)[vs[1].(int)]
	}).(SourceTrustpilotOutput)
}

type SourceTrustpilotMapOutput struct{ *pulumi.OutputState }

func (SourceTrustpilotMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceTrustpilot)(nil)).Elem()
}

func (o SourceTrustpilotMapOutput) ToSourceTrustpilotMapOutput() SourceTrustpilotMapOutput {
	return o
}

func (o SourceTrustpilotMapOutput) ToSourceTrustpilotMapOutputWithContext(ctx context.Context) SourceTrustpilotMapOutput {
	return o
}

func (o SourceTrustpilotMapOutput) MapIndex(k pulumi.StringInput) SourceTrustpilotOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceTrustpilot {
		return vs[0].(map[string]*SourceTrustpilot)[vs[1].(string)]
	}).(SourceTrustpilotOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceTrustpilotInput)(nil)).Elem(), &SourceTrustpilot{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceTrustpilotArrayInput)(nil)).Elem(), SourceTrustpilotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceTrustpilotMapInput)(nil)).Elem(), SourceTrustpilotMap{})
	pulumi.RegisterOutputType(SourceTrustpilotOutput{})
	pulumi.RegisterOutputType(SourceTrustpilotArrayOutput{})
	pulumi.RegisterOutputType(SourceTrustpilotMapOutput{})
}
