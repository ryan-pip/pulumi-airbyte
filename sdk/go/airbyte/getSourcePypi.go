// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSourcePypi(ctx *pulumi.Context, args *LookupSourcePypiArgs, opts ...pulumi.InvokeOption) (*LookupSourcePypiResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupSourcePypiResult
	err := ctx.Invoke("airbyte:index/getSourcePypi:getSourcePypi", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourcePypi.
type LookupSourcePypiArgs struct {
	SecretId *string `pulumi:"secretId"`
	SourceId string  `pulumi:"sourceId"`
}

// A collection of values returned by getSourcePypi.
type LookupSourcePypiResult struct {
	Configuration GetSourcePypiConfiguration `pulumi:"configuration"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	Name        string  `pulumi:"name"`
	SecretId    *string `pulumi:"secretId"`
	SourceId    string  `pulumi:"sourceId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

func LookupSourcePypiOutput(ctx *pulumi.Context, args LookupSourcePypiOutputArgs, opts ...pulumi.InvokeOption) LookupSourcePypiResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourcePypiResult, error) {
			args := v.(LookupSourcePypiArgs)
			r, err := LookupSourcePypi(ctx, &args, opts...)
			var s LookupSourcePypiResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourcePypiResultOutput)
}

// A collection of arguments for invoking getSourcePypi.
type LookupSourcePypiOutputArgs struct {
	SecretId pulumi.StringPtrInput `pulumi:"secretId"`
	SourceId pulumi.StringInput    `pulumi:"sourceId"`
}

func (LookupSourcePypiOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourcePypiArgs)(nil)).Elem()
}

// A collection of values returned by getSourcePypi.
type LookupSourcePypiResultOutput struct{ *pulumi.OutputState }

func (LookupSourcePypiResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourcePypiResult)(nil)).Elem()
}

func (o LookupSourcePypiResultOutput) ToLookupSourcePypiResultOutput() LookupSourcePypiResultOutput {
	return o
}

func (o LookupSourcePypiResultOutput) ToLookupSourcePypiResultOutputWithContext(ctx context.Context) LookupSourcePypiResultOutput {
	return o
}

func (o LookupSourcePypiResultOutput) Configuration() GetSourcePypiConfigurationOutput {
	return o.ApplyT(func(v LookupSourcePypiResult) GetSourcePypiConfiguration { return v.Configuration }).(GetSourcePypiConfigurationOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourcePypiResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourcePypiResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourcePypiResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourcePypiResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSourcePypiResultOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourcePypiResult) *string { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o LookupSourcePypiResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourcePypiResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupSourcePypiResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourcePypiResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourcePypiResultOutput{})
}
