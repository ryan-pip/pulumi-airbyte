// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSourceSmaily(ctx *pulumi.Context, args *LookupSourceSmailyArgs, opts ...pulumi.InvokeOption) (*LookupSourceSmailyResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupSourceSmailyResult
	err := ctx.Invoke("airbyte:index/getSourceSmaily:getSourceSmaily", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourceSmaily.
type LookupSourceSmailyArgs struct {
	SecretId *string `pulumi:"secretId"`
	SourceId string  `pulumi:"sourceId"`
}

// A collection of values returned by getSourceSmaily.
type LookupSourceSmailyResult struct {
	Configuration GetSourceSmailyConfiguration `pulumi:"configuration"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	Name        string  `pulumi:"name"`
	SecretId    *string `pulumi:"secretId"`
	SourceId    string  `pulumi:"sourceId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

func LookupSourceSmailyOutput(ctx *pulumi.Context, args LookupSourceSmailyOutputArgs, opts ...pulumi.InvokeOption) LookupSourceSmailyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceSmailyResult, error) {
			args := v.(LookupSourceSmailyArgs)
			r, err := LookupSourceSmaily(ctx, &args, opts...)
			var s LookupSourceSmailyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceSmailyResultOutput)
}

// A collection of arguments for invoking getSourceSmaily.
type LookupSourceSmailyOutputArgs struct {
	SecretId pulumi.StringPtrInput `pulumi:"secretId"`
	SourceId pulumi.StringInput    `pulumi:"sourceId"`
}

func (LookupSourceSmailyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceSmailyArgs)(nil)).Elem()
}

// A collection of values returned by getSourceSmaily.
type LookupSourceSmailyResultOutput struct{ *pulumi.OutputState }

func (LookupSourceSmailyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceSmailyResult)(nil)).Elem()
}

func (o LookupSourceSmailyResultOutput) ToLookupSourceSmailyResultOutput() LookupSourceSmailyResultOutput {
	return o
}

func (o LookupSourceSmailyResultOutput) ToLookupSourceSmailyResultOutputWithContext(ctx context.Context) LookupSourceSmailyResultOutput {
	return o
}

func (o LookupSourceSmailyResultOutput) Configuration() GetSourceSmailyConfigurationOutput {
	return o.ApplyT(func(v LookupSourceSmailyResult) GetSourceSmailyConfiguration { return v.Configuration }).(GetSourceSmailyConfigurationOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourceSmailyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceSmailyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourceSmailyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceSmailyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSourceSmailyResultOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourceSmailyResult) *string { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o LookupSourceSmailyResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceSmailyResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupSourceSmailyResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceSmailyResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceSmailyResultOutput{})
}
