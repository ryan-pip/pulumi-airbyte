// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupConnection(ctx *pulumi.Context, args *LookupConnectionArgs, opts ...pulumi.InvokeOption) (*LookupConnectionResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupConnectionResult
	err := ctx.Invoke("airbyte:index/getConnection:getConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnection.
type LookupConnectionArgs struct {
	ConnectionId string `pulumi:"connectionId"`
}

// A collection of values returned by getConnection.
type LookupConnectionResult struct {
	Configurations GetConnectionConfigurations `pulumi:"configurations"`
	ConnectionId   string                      `pulumi:"connectionId"`
	DataResidency  string                      `pulumi:"dataResidency"`
	DestinationId  string                      `pulumi:"destinationId"`
	// The provider-assigned unique ID for this managed resource.
	Id                               string                `pulumi:"id"`
	Name                             string                `pulumi:"name"`
	NamespaceDefinition              string                `pulumi:"namespaceDefinition"`
	NamespaceFormat                  string                `pulumi:"namespaceFormat"`
	NonBreakingSchemaUpdatesBehavior string                `pulumi:"nonBreakingSchemaUpdatesBehavior"`
	Prefix                           string                `pulumi:"prefix"`
	Schedule                         GetConnectionSchedule `pulumi:"schedule"`
	SourceId                         string                `pulumi:"sourceId"`
	Status                           string                `pulumi:"status"`
	WorkspaceId                      string                `pulumi:"workspaceId"`
}

func LookupConnectionOutput(ctx *pulumi.Context, args LookupConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectionResult, error) {
			args := v.(LookupConnectionArgs)
			r, err := LookupConnection(ctx, &args, opts...)
			var s LookupConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectionResultOutput)
}

// A collection of arguments for invoking getConnection.
type LookupConnectionOutputArgs struct {
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
}

func (LookupConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getConnection.
type LookupConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionResult)(nil)).Elem()
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutput() LookupConnectionResultOutput {
	return o
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutputWithContext(ctx context.Context) LookupConnectionResultOutput {
	return o
}

func (o LookupConnectionResultOutput) Configurations() GetConnectionConfigurationsOutput {
	return o.ApplyT(func(v LookupConnectionResult) GetConnectionConfigurations { return v.Configurations }).(GetConnectionConfigurationsOutput)
}

func (o LookupConnectionResultOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.ConnectionId }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) DataResidency() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.DataResidency }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.DestinationId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) NamespaceDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.NamespaceDefinition }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) NamespaceFormat() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.NamespaceFormat }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) NonBreakingSchemaUpdatesBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.NonBreakingSchemaUpdatesBehavior }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) Schedule() GetConnectionScheduleOutput {
	return o.ApplyT(func(v LookupConnectionResult) GetConnectionSchedule { return v.Schedule }).(GetConnectionScheduleOutput)
}

func (o LookupConnectionResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupConnectionResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectionResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectionResultOutput{})
}
