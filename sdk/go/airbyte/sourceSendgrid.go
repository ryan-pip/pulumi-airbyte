// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-airbyte/sdk/go/airbyte/internal"
)

// SourceSendgrid Resource
type SourceSendgrid struct {
	pulumi.CustomResourceState

	Configuration SourceSendgridConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput               `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceSendgrid registers a new resource with the given unique name, arguments, and options.
func NewSourceSendgrid(ctx *pulumi.Context,
	name string, args *SourceSendgridArgs, opts ...pulumi.ResourceOption) (*SourceSendgrid, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceSendgrid
	err := ctx.RegisterResource("airbyte:index/sourceSendgrid:SourceSendgrid", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceSendgrid gets an existing SourceSendgrid resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceSendgrid(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceSendgridState, opts ...pulumi.ResourceOption) (*SourceSendgrid, error) {
	var resource SourceSendgrid
	err := ctx.ReadResource("airbyte:index/sourceSendgrid:SourceSendgrid", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceSendgrid resources.
type sourceSendgridState struct {
	Configuration *SourceSendgridConfiguration `pulumi:"configuration"`
	Name          *string                      `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceSendgridState struct {
	Configuration SourceSendgridConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceSendgridState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceSendgridState)(nil)).Elem()
}

type sourceSendgridArgs struct {
	Configuration SourceSendgridConfiguration `pulumi:"configuration"`
	Name          string                      `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceSendgrid resource.
type SourceSendgridArgs struct {
	Configuration SourceSendgridConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceSendgridArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceSendgridArgs)(nil)).Elem()
}

type SourceSendgridInput interface {
	pulumi.Input

	ToSourceSendgridOutput() SourceSendgridOutput
	ToSourceSendgridOutputWithContext(ctx context.Context) SourceSendgridOutput
}

func (*SourceSendgrid) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceSendgrid)(nil)).Elem()
}

func (i *SourceSendgrid) ToSourceSendgridOutput() SourceSendgridOutput {
	return i.ToSourceSendgridOutputWithContext(context.Background())
}

func (i *SourceSendgrid) ToSourceSendgridOutputWithContext(ctx context.Context) SourceSendgridOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSendgridOutput)
}

// SourceSendgridArrayInput is an input type that accepts SourceSendgridArray and SourceSendgridArrayOutput values.
// You can construct a concrete instance of `SourceSendgridArrayInput` via:
//
//	SourceSendgridArray{ SourceSendgridArgs{...} }
type SourceSendgridArrayInput interface {
	pulumi.Input

	ToSourceSendgridArrayOutput() SourceSendgridArrayOutput
	ToSourceSendgridArrayOutputWithContext(context.Context) SourceSendgridArrayOutput
}

type SourceSendgridArray []SourceSendgridInput

func (SourceSendgridArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceSendgrid)(nil)).Elem()
}

func (i SourceSendgridArray) ToSourceSendgridArrayOutput() SourceSendgridArrayOutput {
	return i.ToSourceSendgridArrayOutputWithContext(context.Background())
}

func (i SourceSendgridArray) ToSourceSendgridArrayOutputWithContext(ctx context.Context) SourceSendgridArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSendgridArrayOutput)
}

// SourceSendgridMapInput is an input type that accepts SourceSendgridMap and SourceSendgridMapOutput values.
// You can construct a concrete instance of `SourceSendgridMapInput` via:
//
//	SourceSendgridMap{ "key": SourceSendgridArgs{...} }
type SourceSendgridMapInput interface {
	pulumi.Input

	ToSourceSendgridMapOutput() SourceSendgridMapOutput
	ToSourceSendgridMapOutputWithContext(context.Context) SourceSendgridMapOutput
}

type SourceSendgridMap map[string]SourceSendgridInput

func (SourceSendgridMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceSendgrid)(nil)).Elem()
}

func (i SourceSendgridMap) ToSourceSendgridMapOutput() SourceSendgridMapOutput {
	return i.ToSourceSendgridMapOutputWithContext(context.Background())
}

func (i SourceSendgridMap) ToSourceSendgridMapOutputWithContext(ctx context.Context) SourceSendgridMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSendgridMapOutput)
}

type SourceSendgridOutput struct{ *pulumi.OutputState }

func (SourceSendgridOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceSendgrid)(nil)).Elem()
}

func (o SourceSendgridOutput) ToSourceSendgridOutput() SourceSendgridOutput {
	return o
}

func (o SourceSendgridOutput) ToSourceSendgridOutputWithContext(ctx context.Context) SourceSendgridOutput {
	return o
}

func (o SourceSendgridOutput) Configuration() SourceSendgridConfigurationOutput {
	return o.ApplyT(func(v *SourceSendgrid) SourceSendgridConfigurationOutput { return v.Configuration }).(SourceSendgridConfigurationOutput)
}

func (o SourceSendgridOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSendgrid) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceSendgridOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceSendgrid) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceSendgridOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSendgrid) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceSendgridOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSendgrid) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceSendgridOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSendgrid) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceSendgridArrayOutput struct{ *pulumi.OutputState }

func (SourceSendgridArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceSendgrid)(nil)).Elem()
}

func (o SourceSendgridArrayOutput) ToSourceSendgridArrayOutput() SourceSendgridArrayOutput {
	return o
}

func (o SourceSendgridArrayOutput) ToSourceSendgridArrayOutputWithContext(ctx context.Context) SourceSendgridArrayOutput {
	return o
}

func (o SourceSendgridArrayOutput) Index(i pulumi.IntInput) SourceSendgridOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceSendgrid {
		return vs[0].([]*SourceSendgrid)[vs[1].(int)]
	}).(SourceSendgridOutput)
}

type SourceSendgridMapOutput struct{ *pulumi.OutputState }

func (SourceSendgridMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceSendgrid)(nil)).Elem()
}

func (o SourceSendgridMapOutput) ToSourceSendgridMapOutput() SourceSendgridMapOutput {
	return o
}

func (o SourceSendgridMapOutput) ToSourceSendgridMapOutputWithContext(ctx context.Context) SourceSendgridMapOutput {
	return o
}

func (o SourceSendgridMapOutput) MapIndex(k pulumi.StringInput) SourceSendgridOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceSendgrid {
		return vs[0].(map[string]*SourceSendgrid)[vs[1].(string)]
	}).(SourceSendgridOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceSendgridInput)(nil)).Elem(), &SourceSendgrid{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceSendgridArrayInput)(nil)).Elem(), SourceSendgridArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceSendgridMapInput)(nil)).Elem(), SourceSendgridMap{})
	pulumi.RegisterOutputType(SourceSendgridOutput{})
	pulumi.RegisterOutputType(SourceSendgridArrayOutput{})
	pulumi.RegisterOutputType(SourceSendgridMapOutput{})
}
