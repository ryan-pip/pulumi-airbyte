// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SourcePolygonStockAPI Resource
type SourcePolygonStockApi struct {
	pulumi.CustomResourceState

	Configuration SourcePolygonStockApiConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                      `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourcePolygonStockApi registers a new resource with the given unique name, arguments, and options.
func NewSourcePolygonStockApi(ctx *pulumi.Context,
	name string, args *SourcePolygonStockApiArgs, opts ...pulumi.ResourceOption) (*SourcePolygonStockApi, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourcePolygonStockApi
	err := ctx.RegisterResource("airbyte:index/sourcePolygonStockApi:SourcePolygonStockApi", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourcePolygonStockApi gets an existing SourcePolygonStockApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourcePolygonStockApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourcePolygonStockApiState, opts ...pulumi.ResourceOption) (*SourcePolygonStockApi, error) {
	var resource SourcePolygonStockApi
	err := ctx.ReadResource("airbyte:index/sourcePolygonStockApi:SourcePolygonStockApi", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourcePolygonStockApi resources.
type sourcePolygonStockApiState struct {
	Configuration *SourcePolygonStockApiConfiguration `pulumi:"configuration"`
	Name          *string                             `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourcePolygonStockApiState struct {
	Configuration SourcePolygonStockApiConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourcePolygonStockApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourcePolygonStockApiState)(nil)).Elem()
}

type sourcePolygonStockApiArgs struct {
	Configuration SourcePolygonStockApiConfiguration `pulumi:"configuration"`
	Name          string                             `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourcePolygonStockApi resource.
type SourcePolygonStockApiArgs struct {
	Configuration SourcePolygonStockApiConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourcePolygonStockApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourcePolygonStockApiArgs)(nil)).Elem()
}

type SourcePolygonStockApiInput interface {
	pulumi.Input

	ToSourcePolygonStockApiOutput() SourcePolygonStockApiOutput
	ToSourcePolygonStockApiOutputWithContext(ctx context.Context) SourcePolygonStockApiOutput
}

func (*SourcePolygonStockApi) ElementType() reflect.Type {
	return reflect.TypeOf((**SourcePolygonStockApi)(nil)).Elem()
}

func (i *SourcePolygonStockApi) ToSourcePolygonStockApiOutput() SourcePolygonStockApiOutput {
	return i.ToSourcePolygonStockApiOutputWithContext(context.Background())
}

func (i *SourcePolygonStockApi) ToSourcePolygonStockApiOutputWithContext(ctx context.Context) SourcePolygonStockApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePolygonStockApiOutput)
}

// SourcePolygonStockApiArrayInput is an input type that accepts SourcePolygonStockApiArray and SourcePolygonStockApiArrayOutput values.
// You can construct a concrete instance of `SourcePolygonStockApiArrayInput` via:
//
//	SourcePolygonStockApiArray{ SourcePolygonStockApiArgs{...} }
type SourcePolygonStockApiArrayInput interface {
	pulumi.Input

	ToSourcePolygonStockApiArrayOutput() SourcePolygonStockApiArrayOutput
	ToSourcePolygonStockApiArrayOutputWithContext(context.Context) SourcePolygonStockApiArrayOutput
}

type SourcePolygonStockApiArray []SourcePolygonStockApiInput

func (SourcePolygonStockApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourcePolygonStockApi)(nil)).Elem()
}

func (i SourcePolygonStockApiArray) ToSourcePolygonStockApiArrayOutput() SourcePolygonStockApiArrayOutput {
	return i.ToSourcePolygonStockApiArrayOutputWithContext(context.Background())
}

func (i SourcePolygonStockApiArray) ToSourcePolygonStockApiArrayOutputWithContext(ctx context.Context) SourcePolygonStockApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePolygonStockApiArrayOutput)
}

// SourcePolygonStockApiMapInput is an input type that accepts SourcePolygonStockApiMap and SourcePolygonStockApiMapOutput values.
// You can construct a concrete instance of `SourcePolygonStockApiMapInput` via:
//
//	SourcePolygonStockApiMap{ "key": SourcePolygonStockApiArgs{...} }
type SourcePolygonStockApiMapInput interface {
	pulumi.Input

	ToSourcePolygonStockApiMapOutput() SourcePolygonStockApiMapOutput
	ToSourcePolygonStockApiMapOutputWithContext(context.Context) SourcePolygonStockApiMapOutput
}

type SourcePolygonStockApiMap map[string]SourcePolygonStockApiInput

func (SourcePolygonStockApiMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourcePolygonStockApi)(nil)).Elem()
}

func (i SourcePolygonStockApiMap) ToSourcePolygonStockApiMapOutput() SourcePolygonStockApiMapOutput {
	return i.ToSourcePolygonStockApiMapOutputWithContext(context.Background())
}

func (i SourcePolygonStockApiMap) ToSourcePolygonStockApiMapOutputWithContext(ctx context.Context) SourcePolygonStockApiMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePolygonStockApiMapOutput)
}

type SourcePolygonStockApiOutput struct{ *pulumi.OutputState }

func (SourcePolygonStockApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourcePolygonStockApi)(nil)).Elem()
}

func (o SourcePolygonStockApiOutput) ToSourcePolygonStockApiOutput() SourcePolygonStockApiOutput {
	return o
}

func (o SourcePolygonStockApiOutput) ToSourcePolygonStockApiOutputWithContext(ctx context.Context) SourcePolygonStockApiOutput {
	return o
}

func (o SourcePolygonStockApiOutput) Configuration() SourcePolygonStockApiConfigurationOutput {
	return o.ApplyT(func(v *SourcePolygonStockApi) SourcePolygonStockApiConfigurationOutput { return v.Configuration }).(SourcePolygonStockApiConfigurationOutput)
}

func (o SourcePolygonStockApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePolygonStockApi) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourcePolygonStockApiOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourcePolygonStockApi) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourcePolygonStockApiOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePolygonStockApi) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourcePolygonStockApiOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePolygonStockApi) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourcePolygonStockApiOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePolygonStockApi) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourcePolygonStockApiArrayOutput struct{ *pulumi.OutputState }

func (SourcePolygonStockApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourcePolygonStockApi)(nil)).Elem()
}

func (o SourcePolygonStockApiArrayOutput) ToSourcePolygonStockApiArrayOutput() SourcePolygonStockApiArrayOutput {
	return o
}

func (o SourcePolygonStockApiArrayOutput) ToSourcePolygonStockApiArrayOutputWithContext(ctx context.Context) SourcePolygonStockApiArrayOutput {
	return o
}

func (o SourcePolygonStockApiArrayOutput) Index(i pulumi.IntInput) SourcePolygonStockApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourcePolygonStockApi {
		return vs[0].([]*SourcePolygonStockApi)[vs[1].(int)]
	}).(SourcePolygonStockApiOutput)
}

type SourcePolygonStockApiMapOutput struct{ *pulumi.OutputState }

func (SourcePolygonStockApiMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourcePolygonStockApi)(nil)).Elem()
}

func (o SourcePolygonStockApiMapOutput) ToSourcePolygonStockApiMapOutput() SourcePolygonStockApiMapOutput {
	return o
}

func (o SourcePolygonStockApiMapOutput) ToSourcePolygonStockApiMapOutputWithContext(ctx context.Context) SourcePolygonStockApiMapOutput {
	return o
}

func (o SourcePolygonStockApiMapOutput) MapIndex(k pulumi.StringInput) SourcePolygonStockApiOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourcePolygonStockApi {
		return vs[0].(map[string]*SourcePolygonStockApi)[vs[1].(string)]
	}).(SourcePolygonStockApiOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePolygonStockApiInput)(nil)).Elem(), &SourcePolygonStockApi{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePolygonStockApiArrayInput)(nil)).Elem(), SourcePolygonStockApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePolygonStockApiMapInput)(nil)).Elem(), SourcePolygonStockApiMap{})
	pulumi.RegisterOutputType(SourcePolygonStockApiOutput{})
	pulumi.RegisterOutputType(SourcePolygonStockApiArrayOutput{})
	pulumi.RegisterOutputType(SourcePolygonStockApiMapOutput{})
}
