// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"internal"
)

// SourceZohoCrm Resource
type SourceZohoCrm struct {
	pulumi.CustomResourceState

	Configuration SourceZohoCrmConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput              `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceZohoCrm registers a new resource with the given unique name, arguments, and options.
func NewSourceZohoCrm(ctx *pulumi.Context,
	name string, args *SourceZohoCrmArgs, opts ...pulumi.ResourceOption) (*SourceZohoCrm, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceZohoCrm
	err := ctx.RegisterResource("airbyte:index/sourceZohoCrm:SourceZohoCrm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceZohoCrm gets an existing SourceZohoCrm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceZohoCrm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceZohoCrmState, opts ...pulumi.ResourceOption) (*SourceZohoCrm, error) {
	var resource SourceZohoCrm
	err := ctx.ReadResource("airbyte:index/sourceZohoCrm:SourceZohoCrm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceZohoCrm resources.
type sourceZohoCrmState struct {
	Configuration *SourceZohoCrmConfiguration `pulumi:"configuration"`
	Name          *string                     `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceZohoCrmState struct {
	Configuration SourceZohoCrmConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceZohoCrmState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceZohoCrmState)(nil)).Elem()
}

type sourceZohoCrmArgs struct {
	Configuration SourceZohoCrmConfiguration `pulumi:"configuration"`
	Name          string                     `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceZohoCrm resource.
type SourceZohoCrmArgs struct {
	Configuration SourceZohoCrmConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceZohoCrmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceZohoCrmArgs)(nil)).Elem()
}

type SourceZohoCrmInput interface {
	pulumi.Input

	ToSourceZohoCrmOutput() SourceZohoCrmOutput
	ToSourceZohoCrmOutputWithContext(ctx context.Context) SourceZohoCrmOutput
}

func (*SourceZohoCrm) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceZohoCrm)(nil)).Elem()
}

func (i *SourceZohoCrm) ToSourceZohoCrmOutput() SourceZohoCrmOutput {
	return i.ToSourceZohoCrmOutputWithContext(context.Background())
}

func (i *SourceZohoCrm) ToSourceZohoCrmOutputWithContext(ctx context.Context) SourceZohoCrmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceZohoCrmOutput)
}

type SourceZohoCrmOutput struct{ *pulumi.OutputState }

func (SourceZohoCrmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceZohoCrm)(nil)).Elem()
}

func (o SourceZohoCrmOutput) ToSourceZohoCrmOutput() SourceZohoCrmOutput {
	return o
}

func (o SourceZohoCrmOutput) ToSourceZohoCrmOutputWithContext(ctx context.Context) SourceZohoCrmOutput {
	return o
}

func (o SourceZohoCrmOutput) Configuration() SourceZohoCrmConfigurationOutput {
	return o.ApplyT(func(v *SourceZohoCrm) SourceZohoCrmConfigurationOutput { return v.Configuration }).(SourceZohoCrmConfigurationOutput)
}

func (o SourceZohoCrmOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceZohoCrm) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceZohoCrmOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceZohoCrm) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceZohoCrmOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceZohoCrm) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceZohoCrmOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceZohoCrm) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceZohoCrmOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceZohoCrm) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceZohoCrmInput)(nil)).Elem(), &SourceZohoCrm{})
	pulumi.RegisterOutputType(SourceZohoCrmOutput{})
}
