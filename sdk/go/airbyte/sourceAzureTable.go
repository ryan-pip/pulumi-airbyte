// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SourceAzureTable Resource
type SourceAzureTable struct {
	pulumi.CustomResourceState

	Configuration SourceAzureTableConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                 `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceAzureTable registers a new resource with the given unique name, arguments, and options.
func NewSourceAzureTable(ctx *pulumi.Context,
	name string, args *SourceAzureTableArgs, opts ...pulumi.ResourceOption) (*SourceAzureTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceAzureTable
	err := ctx.RegisterResource("airbyte:index/sourceAzureTable:SourceAzureTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceAzureTable gets an existing SourceAzureTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceAzureTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceAzureTableState, opts ...pulumi.ResourceOption) (*SourceAzureTable, error) {
	var resource SourceAzureTable
	err := ctx.ReadResource("airbyte:index/sourceAzureTable:SourceAzureTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceAzureTable resources.
type sourceAzureTableState struct {
	Configuration *SourceAzureTableConfiguration `pulumi:"configuration"`
	Name          *string                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceAzureTableState struct {
	Configuration SourceAzureTableConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceAzureTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceAzureTableState)(nil)).Elem()
}

type sourceAzureTableArgs struct {
	Configuration SourceAzureTableConfiguration `pulumi:"configuration"`
	Name          string                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceAzureTable resource.
type SourceAzureTableArgs struct {
	Configuration SourceAzureTableConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceAzureTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceAzureTableArgs)(nil)).Elem()
}

type SourceAzureTableInput interface {
	pulumi.Input

	ToSourceAzureTableOutput() SourceAzureTableOutput
	ToSourceAzureTableOutputWithContext(ctx context.Context) SourceAzureTableOutput
}

func (*SourceAzureTable) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceAzureTable)(nil)).Elem()
}

func (i *SourceAzureTable) ToSourceAzureTableOutput() SourceAzureTableOutput {
	return i.ToSourceAzureTableOutputWithContext(context.Background())
}

func (i *SourceAzureTable) ToSourceAzureTableOutputWithContext(ctx context.Context) SourceAzureTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAzureTableOutput)
}

// SourceAzureTableArrayInput is an input type that accepts SourceAzureTableArray and SourceAzureTableArrayOutput values.
// You can construct a concrete instance of `SourceAzureTableArrayInput` via:
//
//	SourceAzureTableArray{ SourceAzureTableArgs{...} }
type SourceAzureTableArrayInput interface {
	pulumi.Input

	ToSourceAzureTableArrayOutput() SourceAzureTableArrayOutput
	ToSourceAzureTableArrayOutputWithContext(context.Context) SourceAzureTableArrayOutput
}

type SourceAzureTableArray []SourceAzureTableInput

func (SourceAzureTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceAzureTable)(nil)).Elem()
}

func (i SourceAzureTableArray) ToSourceAzureTableArrayOutput() SourceAzureTableArrayOutput {
	return i.ToSourceAzureTableArrayOutputWithContext(context.Background())
}

func (i SourceAzureTableArray) ToSourceAzureTableArrayOutputWithContext(ctx context.Context) SourceAzureTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAzureTableArrayOutput)
}

// SourceAzureTableMapInput is an input type that accepts SourceAzureTableMap and SourceAzureTableMapOutput values.
// You can construct a concrete instance of `SourceAzureTableMapInput` via:
//
//	SourceAzureTableMap{ "key": SourceAzureTableArgs{...} }
type SourceAzureTableMapInput interface {
	pulumi.Input

	ToSourceAzureTableMapOutput() SourceAzureTableMapOutput
	ToSourceAzureTableMapOutputWithContext(context.Context) SourceAzureTableMapOutput
}

type SourceAzureTableMap map[string]SourceAzureTableInput

func (SourceAzureTableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceAzureTable)(nil)).Elem()
}

func (i SourceAzureTableMap) ToSourceAzureTableMapOutput() SourceAzureTableMapOutput {
	return i.ToSourceAzureTableMapOutputWithContext(context.Background())
}

func (i SourceAzureTableMap) ToSourceAzureTableMapOutputWithContext(ctx context.Context) SourceAzureTableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceAzureTableMapOutput)
}

type SourceAzureTableOutput struct{ *pulumi.OutputState }

func (SourceAzureTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceAzureTable)(nil)).Elem()
}

func (o SourceAzureTableOutput) ToSourceAzureTableOutput() SourceAzureTableOutput {
	return o
}

func (o SourceAzureTableOutput) ToSourceAzureTableOutputWithContext(ctx context.Context) SourceAzureTableOutput {
	return o
}

func (o SourceAzureTableOutput) Configuration() SourceAzureTableConfigurationOutput {
	return o.ApplyT(func(v *SourceAzureTable) SourceAzureTableConfigurationOutput { return v.Configuration }).(SourceAzureTableConfigurationOutput)
}

func (o SourceAzureTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceAzureTable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceAzureTableOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceAzureTable) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceAzureTableOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceAzureTable) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceAzureTableOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceAzureTable) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceAzureTableOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceAzureTable) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceAzureTableArrayOutput struct{ *pulumi.OutputState }

func (SourceAzureTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceAzureTable)(nil)).Elem()
}

func (o SourceAzureTableArrayOutput) ToSourceAzureTableArrayOutput() SourceAzureTableArrayOutput {
	return o
}

func (o SourceAzureTableArrayOutput) ToSourceAzureTableArrayOutputWithContext(ctx context.Context) SourceAzureTableArrayOutput {
	return o
}

func (o SourceAzureTableArrayOutput) Index(i pulumi.IntInput) SourceAzureTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceAzureTable {
		return vs[0].([]*SourceAzureTable)[vs[1].(int)]
	}).(SourceAzureTableOutput)
}

type SourceAzureTableMapOutput struct{ *pulumi.OutputState }

func (SourceAzureTableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceAzureTable)(nil)).Elem()
}

func (o SourceAzureTableMapOutput) ToSourceAzureTableMapOutput() SourceAzureTableMapOutput {
	return o
}

func (o SourceAzureTableMapOutput) ToSourceAzureTableMapOutputWithContext(ctx context.Context) SourceAzureTableMapOutput {
	return o
}

func (o SourceAzureTableMapOutput) MapIndex(k pulumi.StringInput) SourceAzureTableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceAzureTable {
		return vs[0].(map[string]*SourceAzureTable)[vs[1].(string)]
	}).(SourceAzureTableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceAzureTableInput)(nil)).Elem(), &SourceAzureTable{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceAzureTableArrayInput)(nil)).Elem(), SourceAzureTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceAzureTableMapInput)(nil)).Elem(), SourceAzureTableMap{})
	pulumi.RegisterOutputType(SourceAzureTableOutput{})
	pulumi.RegisterOutputType(SourceAzureTableArrayOutput{})
	pulumi.RegisterOutputType(SourceAzureTableMapOutput{})
}
