// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SourcePrestashop Resource
type SourcePrestashop struct {
	pulumi.CustomResourceState

	Configuration SourcePrestashopConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                 `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourcePrestashop registers a new resource with the given unique name, arguments, and options.
func NewSourcePrestashop(ctx *pulumi.Context,
	name string, args *SourcePrestashopArgs, opts ...pulumi.ResourceOption) (*SourcePrestashop, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourcePrestashop
	err := ctx.RegisterResource("airbyte:index/sourcePrestashop:SourcePrestashop", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourcePrestashop gets an existing SourcePrestashop resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourcePrestashop(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourcePrestashopState, opts ...pulumi.ResourceOption) (*SourcePrestashop, error) {
	var resource SourcePrestashop
	err := ctx.ReadResource("airbyte:index/sourcePrestashop:SourcePrestashop", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourcePrestashop resources.
type sourcePrestashopState struct {
	Configuration *SourcePrestashopConfiguration `pulumi:"configuration"`
	Name          *string                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourcePrestashopState struct {
	Configuration SourcePrestashopConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourcePrestashopState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourcePrestashopState)(nil)).Elem()
}

type sourcePrestashopArgs struct {
	Configuration SourcePrestashopConfiguration `pulumi:"configuration"`
	Name          string                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourcePrestashop resource.
type SourcePrestashopArgs struct {
	Configuration SourcePrestashopConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourcePrestashopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourcePrestashopArgs)(nil)).Elem()
}

type SourcePrestashopInput interface {
	pulumi.Input

	ToSourcePrestashopOutput() SourcePrestashopOutput
	ToSourcePrestashopOutputWithContext(ctx context.Context) SourcePrestashopOutput
}

func (*SourcePrestashop) ElementType() reflect.Type {
	return reflect.TypeOf((**SourcePrestashop)(nil)).Elem()
}

func (i *SourcePrestashop) ToSourcePrestashopOutput() SourcePrestashopOutput {
	return i.ToSourcePrestashopOutputWithContext(context.Background())
}

func (i *SourcePrestashop) ToSourcePrestashopOutputWithContext(ctx context.Context) SourcePrestashopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePrestashopOutput)
}

// SourcePrestashopArrayInput is an input type that accepts SourcePrestashopArray and SourcePrestashopArrayOutput values.
// You can construct a concrete instance of `SourcePrestashopArrayInput` via:
//
//	SourcePrestashopArray{ SourcePrestashopArgs{...} }
type SourcePrestashopArrayInput interface {
	pulumi.Input

	ToSourcePrestashopArrayOutput() SourcePrestashopArrayOutput
	ToSourcePrestashopArrayOutputWithContext(context.Context) SourcePrestashopArrayOutput
}

type SourcePrestashopArray []SourcePrestashopInput

func (SourcePrestashopArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourcePrestashop)(nil)).Elem()
}

func (i SourcePrestashopArray) ToSourcePrestashopArrayOutput() SourcePrestashopArrayOutput {
	return i.ToSourcePrestashopArrayOutputWithContext(context.Background())
}

func (i SourcePrestashopArray) ToSourcePrestashopArrayOutputWithContext(ctx context.Context) SourcePrestashopArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePrestashopArrayOutput)
}

// SourcePrestashopMapInput is an input type that accepts SourcePrestashopMap and SourcePrestashopMapOutput values.
// You can construct a concrete instance of `SourcePrestashopMapInput` via:
//
//	SourcePrestashopMap{ "key": SourcePrestashopArgs{...} }
type SourcePrestashopMapInput interface {
	pulumi.Input

	ToSourcePrestashopMapOutput() SourcePrestashopMapOutput
	ToSourcePrestashopMapOutputWithContext(context.Context) SourcePrestashopMapOutput
}

type SourcePrestashopMap map[string]SourcePrestashopInput

func (SourcePrestashopMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourcePrestashop)(nil)).Elem()
}

func (i SourcePrestashopMap) ToSourcePrestashopMapOutput() SourcePrestashopMapOutput {
	return i.ToSourcePrestashopMapOutputWithContext(context.Background())
}

func (i SourcePrestashopMap) ToSourcePrestashopMapOutputWithContext(ctx context.Context) SourcePrestashopMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcePrestashopMapOutput)
}

type SourcePrestashopOutput struct{ *pulumi.OutputState }

func (SourcePrestashopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourcePrestashop)(nil)).Elem()
}

func (o SourcePrestashopOutput) ToSourcePrestashopOutput() SourcePrestashopOutput {
	return o
}

func (o SourcePrestashopOutput) ToSourcePrestashopOutputWithContext(ctx context.Context) SourcePrestashopOutput {
	return o
}

func (o SourcePrestashopOutput) Configuration() SourcePrestashopConfigurationOutput {
	return o.ApplyT(func(v *SourcePrestashop) SourcePrestashopConfigurationOutput { return v.Configuration }).(SourcePrestashopConfigurationOutput)
}

func (o SourcePrestashopOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePrestashop) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourcePrestashopOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourcePrestashop) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourcePrestashopOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePrestashop) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourcePrestashopOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePrestashop) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourcePrestashopOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcePrestashop) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourcePrestashopArrayOutput struct{ *pulumi.OutputState }

func (SourcePrestashopArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourcePrestashop)(nil)).Elem()
}

func (o SourcePrestashopArrayOutput) ToSourcePrestashopArrayOutput() SourcePrestashopArrayOutput {
	return o
}

func (o SourcePrestashopArrayOutput) ToSourcePrestashopArrayOutputWithContext(ctx context.Context) SourcePrestashopArrayOutput {
	return o
}

func (o SourcePrestashopArrayOutput) Index(i pulumi.IntInput) SourcePrestashopOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourcePrestashop {
		return vs[0].([]*SourcePrestashop)[vs[1].(int)]
	}).(SourcePrestashopOutput)
}

type SourcePrestashopMapOutput struct{ *pulumi.OutputState }

func (SourcePrestashopMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourcePrestashop)(nil)).Elem()
}

func (o SourcePrestashopMapOutput) ToSourcePrestashopMapOutput() SourcePrestashopMapOutput {
	return o
}

func (o SourcePrestashopMapOutput) ToSourcePrestashopMapOutputWithContext(ctx context.Context) SourcePrestashopMapOutput {
	return o
}

func (o SourcePrestashopMapOutput) MapIndex(k pulumi.StringInput) SourcePrestashopOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourcePrestashop {
		return vs[0].(map[string]*SourcePrestashop)[vs[1].(string)]
	}).(SourcePrestashopOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePrestashopInput)(nil)).Elem(), &SourcePrestashop{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePrestashopArrayInput)(nil)).Elem(), SourcePrestashopArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourcePrestashopMapInput)(nil)).Elem(), SourcePrestashopMap{})
	pulumi.RegisterOutputType(SourcePrestashopOutput{})
	pulumi.RegisterOutputType(SourcePrestashopArrayOutput{})
	pulumi.RegisterOutputType(SourcePrestashopMapOutput{})
}
