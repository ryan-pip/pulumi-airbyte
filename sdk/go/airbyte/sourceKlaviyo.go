// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"internal"
)

// SourceKlaviyo Resource
type SourceKlaviyo struct {
	pulumi.CustomResourceState

	Configuration SourceKlaviyoConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput              `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceKlaviyo registers a new resource with the given unique name, arguments, and options.
func NewSourceKlaviyo(ctx *pulumi.Context,
	name string, args *SourceKlaviyoArgs, opts ...pulumi.ResourceOption) (*SourceKlaviyo, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceKlaviyo
	err := ctx.RegisterResource("airbyte:index/sourceKlaviyo:SourceKlaviyo", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceKlaviyo gets an existing SourceKlaviyo resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceKlaviyo(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceKlaviyoState, opts ...pulumi.ResourceOption) (*SourceKlaviyo, error) {
	var resource SourceKlaviyo
	err := ctx.ReadResource("airbyte:index/sourceKlaviyo:SourceKlaviyo", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceKlaviyo resources.
type sourceKlaviyoState struct {
	Configuration *SourceKlaviyoConfiguration `pulumi:"configuration"`
	Name          *string                     `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceKlaviyoState struct {
	Configuration SourceKlaviyoConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceKlaviyoState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceKlaviyoState)(nil)).Elem()
}

type sourceKlaviyoArgs struct {
	Configuration SourceKlaviyoConfiguration `pulumi:"configuration"`
	Name          string                     `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceKlaviyo resource.
type SourceKlaviyoArgs struct {
	Configuration SourceKlaviyoConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceKlaviyoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceKlaviyoArgs)(nil)).Elem()
}

type SourceKlaviyoInput interface {
	pulumi.Input

	ToSourceKlaviyoOutput() SourceKlaviyoOutput
	ToSourceKlaviyoOutputWithContext(ctx context.Context) SourceKlaviyoOutput
}

func (*SourceKlaviyo) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceKlaviyo)(nil)).Elem()
}

func (i *SourceKlaviyo) ToSourceKlaviyoOutput() SourceKlaviyoOutput {
	return i.ToSourceKlaviyoOutputWithContext(context.Background())
}

func (i *SourceKlaviyo) ToSourceKlaviyoOutputWithContext(ctx context.Context) SourceKlaviyoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceKlaviyoOutput)
}

type SourceKlaviyoOutput struct{ *pulumi.OutputState }

func (SourceKlaviyoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceKlaviyo)(nil)).Elem()
}

func (o SourceKlaviyoOutput) ToSourceKlaviyoOutput() SourceKlaviyoOutput {
	return o
}

func (o SourceKlaviyoOutput) ToSourceKlaviyoOutputWithContext(ctx context.Context) SourceKlaviyoOutput {
	return o
}

func (o SourceKlaviyoOutput) Configuration() SourceKlaviyoConfigurationOutput {
	return o.ApplyT(func(v *SourceKlaviyo) SourceKlaviyoConfigurationOutput { return v.Configuration }).(SourceKlaviyoConfigurationOutput)
}

func (o SourceKlaviyoOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceKlaviyo) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceKlaviyoOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceKlaviyo) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceKlaviyoOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceKlaviyo) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceKlaviyoOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceKlaviyo) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceKlaviyoOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceKlaviyo) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceKlaviyoInput)(nil)).Elem(), &SourceKlaviyo{})
	pulumi.RegisterOutputType(SourceKlaviyoOutput{})
}
