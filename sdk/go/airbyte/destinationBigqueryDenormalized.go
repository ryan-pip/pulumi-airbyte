// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DestinationBigqueryDenormalized struct {
	pulumi.CustomResourceState

	Configuration   DestinationBigqueryDenormalizedConfigurationOutput `pulumi:"configuration"`
	DestinationId   pulumi.StringOutput                                `pulumi:"destinationId"`
	DestinationType pulumi.StringOutput                                `pulumi:"destinationType"`
	Name            pulumi.StringOutput                                `pulumi:"name"`
	WorkspaceId     pulumi.StringOutput                                `pulumi:"workspaceId"`
}

// NewDestinationBigqueryDenormalized registers a new resource with the given unique name, arguments, and options.
func NewDestinationBigqueryDenormalized(ctx *pulumi.Context,
	name string, args *DestinationBigqueryDenormalizedArgs, opts ...pulumi.ResourceOption) (*DestinationBigqueryDenormalized, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	var resource DestinationBigqueryDenormalized
	err := ctx.RegisterResource("airbyte:index/destinationBigqueryDenormalized:DestinationBigqueryDenormalized", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDestinationBigqueryDenormalized gets an existing DestinationBigqueryDenormalized resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDestinationBigqueryDenormalized(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DestinationBigqueryDenormalizedState, opts ...pulumi.ResourceOption) (*DestinationBigqueryDenormalized, error) {
	var resource DestinationBigqueryDenormalized
	err := ctx.ReadResource("airbyte:index/destinationBigqueryDenormalized:DestinationBigqueryDenormalized", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DestinationBigqueryDenormalized resources.
type destinationBigqueryDenormalizedState struct {
	Configuration   *DestinationBigqueryDenormalizedConfiguration `pulumi:"configuration"`
	DestinationId   *string                                       `pulumi:"destinationId"`
	DestinationType *string                                       `pulumi:"destinationType"`
	Name            *string                                       `pulumi:"name"`
	WorkspaceId     *string                                       `pulumi:"workspaceId"`
}

type DestinationBigqueryDenormalizedState struct {
	Configuration   DestinationBigqueryDenormalizedConfigurationPtrInput
	DestinationId   pulumi.StringPtrInput
	DestinationType pulumi.StringPtrInput
	Name            pulumi.StringPtrInput
	WorkspaceId     pulumi.StringPtrInput
}

func (DestinationBigqueryDenormalizedState) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationBigqueryDenormalizedState)(nil)).Elem()
}

type destinationBigqueryDenormalizedArgs struct {
	Configuration DestinationBigqueryDenormalizedConfiguration `pulumi:"configuration"`
	Name          string                                       `pulumi:"name"`
	WorkspaceId   string                                       `pulumi:"workspaceId"`
}

// The set of arguments for constructing a DestinationBigqueryDenormalized resource.
type DestinationBigqueryDenormalizedArgs struct {
	Configuration DestinationBigqueryDenormalizedConfigurationInput
	Name          pulumi.StringInput
	WorkspaceId   pulumi.StringInput
}

func (DestinationBigqueryDenormalizedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*destinationBigqueryDenormalizedArgs)(nil)).Elem()
}

type DestinationBigqueryDenormalizedInput interface {
	pulumi.Input

	ToDestinationBigqueryDenormalizedOutput() DestinationBigqueryDenormalizedOutput
	ToDestinationBigqueryDenormalizedOutputWithContext(ctx context.Context) DestinationBigqueryDenormalizedOutput
}

func (*DestinationBigqueryDenormalized) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationBigqueryDenormalized)(nil)).Elem()
}

func (i *DestinationBigqueryDenormalized) ToDestinationBigqueryDenormalizedOutput() DestinationBigqueryDenormalizedOutput {
	return i.ToDestinationBigqueryDenormalizedOutputWithContext(context.Background())
}

func (i *DestinationBigqueryDenormalized) ToDestinationBigqueryDenormalizedOutputWithContext(ctx context.Context) DestinationBigqueryDenormalizedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DestinationBigqueryDenormalizedOutput)
}

type DestinationBigqueryDenormalizedOutput struct{ *pulumi.OutputState }

func (DestinationBigqueryDenormalizedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DestinationBigqueryDenormalized)(nil)).Elem()
}

func (o DestinationBigqueryDenormalizedOutput) ToDestinationBigqueryDenormalizedOutput() DestinationBigqueryDenormalizedOutput {
	return o
}

func (o DestinationBigqueryDenormalizedOutput) ToDestinationBigqueryDenormalizedOutputWithContext(ctx context.Context) DestinationBigqueryDenormalizedOutput {
	return o
}

func (o DestinationBigqueryDenormalizedOutput) Configuration() DestinationBigqueryDenormalizedConfigurationOutput {
	return o.ApplyT(func(v *DestinationBigqueryDenormalized) DestinationBigqueryDenormalizedConfigurationOutput {
		return v.Configuration
	}).(DestinationBigqueryDenormalizedConfigurationOutput)
}

func (o DestinationBigqueryDenormalizedOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationBigqueryDenormalized) pulumi.StringOutput { return v.DestinationId }).(pulumi.StringOutput)
}

func (o DestinationBigqueryDenormalizedOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationBigqueryDenormalized) pulumi.StringOutput { return v.DestinationType }).(pulumi.StringOutput)
}

func (o DestinationBigqueryDenormalizedOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationBigqueryDenormalized) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DestinationBigqueryDenormalizedOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DestinationBigqueryDenormalized) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DestinationBigqueryDenormalizedInput)(nil)).Elem(), &DestinationBigqueryDenormalized{})
	pulumi.RegisterOutputType(DestinationBigqueryDenormalizedOutput{})
}
