// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"internal"
)

var _ = internal.GetEnvOrDefault

type GetSourceOktaConfiguration struct {
	Credentials GetSourceOktaConfigurationCredentials `pulumi:"credentials"`
	// The Okta domain. See the \n\ndocs\n\n for instructions on how to find it.
	Domain string `pulumi:"domain"`
	// must be one of ["okta"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format YYYY-MM-DDTHH:MM:SSZ. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceOktaConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceOktaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOktaConfiguration)(nil)).Elem()
}

func (o GetSourceOktaConfigurationOutput) ToGetSourceOktaConfigurationOutput() GetSourceOktaConfigurationOutput {
	return o
}

func (o GetSourceOktaConfigurationOutput) ToGetSourceOktaConfigurationOutputWithContext(ctx context.Context) GetSourceOktaConfigurationOutput {
	return o
}

func (o GetSourceOktaConfigurationOutput) Credentials() GetSourceOktaConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceOktaConfiguration) GetSourceOktaConfigurationCredentials { return v.Credentials }).(GetSourceOktaConfigurationCredentialsOutput)
}

// The Okta domain. See the \n\ndocs\n\n for instructions on how to find it.
func (o GetSourceOktaConfigurationOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfiguration) string { return v.Domain }).(pulumi.StringOutput)
}

// must be one of ["okta"]
func (o GetSourceOktaConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format YYYY-MM-DDTHH:MM:SSZ. Any data before this date will not be replicated.
func (o GetSourceOktaConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceOktaConfigurationCredentials struct {
	SourceOktaAuthorizationMethodApiToken       GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken       `pulumi:"sourceOktaAuthorizationMethodApiToken"`
	SourceOktaAuthorizationMethodOAuth20        GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20        `pulumi:"sourceOktaAuthorizationMethodOAuth20"`
	SourceOktaUpdateAuthorizationMethodApiToken GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken `pulumi:"sourceOktaUpdateAuthorizationMethodApiToken"`
	SourceOktaUpdateAuthorizationMethodOAuth20  GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20  `pulumi:"sourceOktaUpdateAuthorizationMethodOAuth20"`
}

type GetSourceOktaConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceOktaConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOktaConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceOktaConfigurationCredentialsOutput) ToGetSourceOktaConfigurationCredentialsOutput() GetSourceOktaConfigurationCredentialsOutput {
	return o
}

func (o GetSourceOktaConfigurationCredentialsOutput) ToGetSourceOktaConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceOktaConfigurationCredentialsOutput {
	return o
}

func (o GetSourceOktaConfigurationCredentialsOutput) SourceOktaAuthorizationMethodApiToken() GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentials) GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken {
		return v.SourceOktaAuthorizationMethodApiToken
	}).(GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput)
}

func (o GetSourceOktaConfigurationCredentialsOutput) SourceOktaAuthorizationMethodOAuth20() GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentials) GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20 {
		return v.SourceOktaAuthorizationMethodOAuth20
	}).(GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output)
}

func (o GetSourceOktaConfigurationCredentialsOutput) SourceOktaUpdateAuthorizationMethodApiToken() GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentials) GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken {
		return v.SourceOktaUpdateAuthorizationMethodApiToken
	}).(GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput)
}

func (o GetSourceOktaConfigurationCredentialsOutput) SourceOktaUpdateAuthorizationMethodOAuth20() GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentials) GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20 {
		return v.SourceOktaUpdateAuthorizationMethodOAuth20
	}).(GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output)
}

type GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken struct {
	ApiToken string `pulumi:"apiToken"`
	AuthType string `pulumi:"authType"`
}

type GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken)(nil)).Elem()
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput) ToGetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput() GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput) ToGetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutputWithContext(ctx context.Context) GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20 struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output) ToGetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output() GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output) ToGetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken struct {
	ApiToken string `pulumi:"apiToken"`
	AuthType string `pulumi:"authType"`
}

type GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken)(nil)).Elem()
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput) ToGetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput() GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput) ToGetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutputWithContext(ctx context.Context) GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20 struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output) ToGetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output() GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output) ToGetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceOmnisendConfiguration struct {
	// API Key
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["omnisend"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceOmnisendConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceOmnisendConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOmnisendConfiguration)(nil)).Elem()
}

func (o GetSourceOmnisendConfigurationOutput) ToGetSourceOmnisendConfigurationOutput() GetSourceOmnisendConfigurationOutput {
	return o
}

func (o GetSourceOmnisendConfigurationOutput) ToGetSourceOmnisendConfigurationOutputWithContext(ctx context.Context) GetSourceOmnisendConfigurationOutput {
	return o
}

// API Key
func (o GetSourceOmnisendConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOmnisendConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["omnisend"]
func (o GetSourceOmnisendConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOmnisendConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceOnesignalConfiguration struct {
	// Applications keys, see the \n\ndocs\n\n for more information on how to obtain this data
	Applications []GetSourceOnesignalConfigurationApplication `pulumi:"applications"`
	// Comma-separated list of names and the value (sum/count) for the returned outcome data. See the \n\ndocs\n\n for more details
	OutcomeNames string `pulumi:"outcomeNames"`
	// must be one of ["onesignal"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for OneSignal API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
	// OneSignal User Auth Key, see the \n\ndocs\n\n for more information on how to obtain this key.
	UserAuthKey string `pulumi:"userAuthKey"`
}

type GetSourceOnesignalConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceOnesignalConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOnesignalConfiguration)(nil)).Elem()
}

func (o GetSourceOnesignalConfigurationOutput) ToGetSourceOnesignalConfigurationOutput() GetSourceOnesignalConfigurationOutput {
	return o
}

func (o GetSourceOnesignalConfigurationOutput) ToGetSourceOnesignalConfigurationOutputWithContext(ctx context.Context) GetSourceOnesignalConfigurationOutput {
	return o
}

// Applications keys, see the \n\ndocs\n\n for more information on how to obtain this data
func (o GetSourceOnesignalConfigurationOutput) Applications() GetSourceOnesignalConfigurationApplicationArrayOutput {
	return o.ApplyT(func(v GetSourceOnesignalConfiguration) []GetSourceOnesignalConfigurationApplication {
		return v.Applications
	}).(GetSourceOnesignalConfigurationApplicationArrayOutput)
}

// Comma-separated list of names and the value (sum/count) for the returned outcome data. See the \n\ndocs\n\n for more details
func (o GetSourceOnesignalConfigurationOutput) OutcomeNames() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOnesignalConfiguration) string { return v.OutcomeNames }).(pulumi.StringOutput)
}

// must be one of ["onesignal"]
func (o GetSourceOnesignalConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOnesignalConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for OneSignal API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
func (o GetSourceOnesignalConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOnesignalConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// OneSignal User Auth Key, see the \n\ndocs\n\n for more information on how to obtain this key.
func (o GetSourceOnesignalConfigurationOutput) UserAuthKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOnesignalConfiguration) string { return v.UserAuthKey }).(pulumi.StringOutput)
}

type GetSourceOnesignalConfigurationApplication struct {
	AppApiKey string `pulumi:"appApiKey"`
	AppId     string `pulumi:"appId"`
	AppName   string `pulumi:"appName"`
}

type GetSourceOnesignalConfigurationApplicationOutput struct{ *pulumi.OutputState }

func (GetSourceOnesignalConfigurationApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOnesignalConfigurationApplication)(nil)).Elem()
}

func (o GetSourceOnesignalConfigurationApplicationOutput) ToGetSourceOnesignalConfigurationApplicationOutput() GetSourceOnesignalConfigurationApplicationOutput {
	return o
}

func (o GetSourceOnesignalConfigurationApplicationOutput) ToGetSourceOnesignalConfigurationApplicationOutputWithContext(ctx context.Context) GetSourceOnesignalConfigurationApplicationOutput {
	return o
}

func (o GetSourceOnesignalConfigurationApplicationOutput) AppApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOnesignalConfigurationApplication) string { return v.AppApiKey }).(pulumi.StringOutput)
}

func (o GetSourceOnesignalConfigurationApplicationOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOnesignalConfigurationApplication) string { return v.AppId }).(pulumi.StringOutput)
}

func (o GetSourceOnesignalConfigurationApplicationOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOnesignalConfigurationApplication) string { return v.AppName }).(pulumi.StringOutput)
}

type GetSourceOnesignalConfigurationApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetSourceOnesignalConfigurationApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSourceOnesignalConfigurationApplication)(nil)).Elem()
}

func (o GetSourceOnesignalConfigurationApplicationArrayOutput) ToGetSourceOnesignalConfigurationApplicationArrayOutput() GetSourceOnesignalConfigurationApplicationArrayOutput {
	return o
}

func (o GetSourceOnesignalConfigurationApplicationArrayOutput) ToGetSourceOnesignalConfigurationApplicationArrayOutputWithContext(ctx context.Context) GetSourceOnesignalConfigurationApplicationArrayOutput {
	return o
}

func (o GetSourceOnesignalConfigurationApplicationArrayOutput) Index(i pulumi.IntInput) GetSourceOnesignalConfigurationApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSourceOnesignalConfigurationApplication {
		return vs[0].([]GetSourceOnesignalConfigurationApplication)[vs[1].(int)]
	}).(GetSourceOnesignalConfigurationApplicationOutput)
}

type GetSourceOpenweatherConfiguration struct {
	// Your OpenWeather API Key. See \n\nhere\n\n. The key is case sensitive.
	Appid string `pulumi:"appid"`
	// must be one of ["af", "al", "ar", "az", "bg", "ca", "cz", "da", "de", "el", "en", "eu", "fa", "fi", "fr", "gl", "he", "hi", "hr", "hu", "id", "it", "ja", "kr", "la", "lt", "mk", "no", "nl", "pl", "pt", "pt*br", "ro", "ru", "sv", "se", "sk", "sl", "sp", "es", "sr", "th", "tr", "ua", "uk", "vi", "zh*cn", "zhTw", "zu"]
	// You can use lang parameter to get the output in your language. The contents of the description field will be translated. See \n\nhere\n\n for the list of supported languages.
	Lang string `pulumi:"lang"`
	// Latitude for which you want to get weather condition from. (min -90, max 90)
	Lat string `pulumi:"lat"`
	// Longitude for which you want to get weather condition from. (min -180, max 180)
	Lon string `pulumi:"lon"`
	// must be one of ["openweather"]
	SourceType string `pulumi:"sourceType"`
	// must be one of ["standard", "metric", "imperial"]
	// Units of measurement. standard, metric and imperial units are available. If you do not use the units parameter, standard units will be applied by default.
	Units string `pulumi:"units"`
}

type GetSourceOpenweatherConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceOpenweatherConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOpenweatherConfiguration)(nil)).Elem()
}

func (o GetSourceOpenweatherConfigurationOutput) ToGetSourceOpenweatherConfigurationOutput() GetSourceOpenweatherConfigurationOutput {
	return o
}

func (o GetSourceOpenweatherConfigurationOutput) ToGetSourceOpenweatherConfigurationOutputWithContext(ctx context.Context) GetSourceOpenweatherConfigurationOutput {
	return o
}

// Your OpenWeather API Key. See \n\nhere\n\n. The key is case sensitive.
func (o GetSourceOpenweatherConfigurationOutput) Appid() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOpenweatherConfiguration) string { return v.Appid }).(pulumi.StringOutput)
}

// must be one of ["af", "al", "ar", "az", "bg", "ca", "cz", "da", "de", "el", "en", "eu", "fa", "fi", "fr", "gl", "he", "hi", "hr", "hu", "id", "it", "ja", "kr", "la", "lt", "mk", "no", "nl", "pl", "pt", "pt*br", "ro", "ru", "sv", "se", "sk", "sl", "sp", "es", "sr", "th", "tr", "ua", "uk", "vi", "zh*cn", "zhTw", "zu"]
// You can use lang parameter to get the output in your language. The contents of the description field will be translated. See \n\nhere\n\n for the list of supported languages.
func (o GetSourceOpenweatherConfigurationOutput) Lang() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOpenweatherConfiguration) string { return v.Lang }).(pulumi.StringOutput)
}

// Latitude for which you want to get weather condition from. (min -90, max 90)
func (o GetSourceOpenweatherConfigurationOutput) Lat() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOpenweatherConfiguration) string { return v.Lat }).(pulumi.StringOutput)
}

// Longitude for which you want to get weather condition from. (min -180, max 180)
func (o GetSourceOpenweatherConfigurationOutput) Lon() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOpenweatherConfiguration) string { return v.Lon }).(pulumi.StringOutput)
}

// must be one of ["openweather"]
func (o GetSourceOpenweatherConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOpenweatherConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// must be one of ["standard", "metric", "imperial"]
// Units of measurement. standard, metric and imperial units are available. If you do not use the units parameter, standard units will be applied by default.
func (o GetSourceOpenweatherConfigurationOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOpenweatherConfiguration) string { return v.Units }).(pulumi.StringOutput)
}

type GetSourceOracleConfiguration struct {
	// Connect data that will be used for DB connection
	ConnectionData GetSourceOracleConfigurationConnectionData `pulumi:"connectionData"`
	// The encryption method with is used when communicating with the database.
	Encryption GetSourceOracleConfigurationEncryption `pulumi:"encryption"`
	// Hostname of the database.
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// The password associated with the username.
	Password string `pulumi:"password"`
	// Port of the database.
	// Oracle Corporations recommends the following port numbers:
	// 1521 - Default listening port for client connections to the listener.
	// 2484 - Recommended and officially registered listening port for client connections to the listener using TCP/IP with SSL
	Port int `pulumi:"port"`
	// The list of schemas to sync from. Defaults to user. Case sensitive.
	Schemas []string `pulumi:"schemas"`
	// must be one of ["oracle"]
	SourceType string `pulumi:"sourceType"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetSourceOracleConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// The username which is used to access the database.
	Username string `pulumi:"username"`
}

type GetSourceOracleConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfiguration)(nil)).Elem()
}

func (o GetSourceOracleConfigurationOutput) ToGetSourceOracleConfigurationOutput() GetSourceOracleConfigurationOutput {
	return o
}

func (o GetSourceOracleConfigurationOutput) ToGetSourceOracleConfigurationOutputWithContext(ctx context.Context) GetSourceOracleConfigurationOutput {
	return o
}

// Connect data that will be used for DB connection
func (o GetSourceOracleConfigurationOutput) ConnectionData() GetSourceOracleConfigurationConnectionDataOutput {
	return o.ApplyT(func(v GetSourceOracleConfiguration) GetSourceOracleConfigurationConnectionData {
		return v.ConnectionData
	}).(GetSourceOracleConfigurationConnectionDataOutput)
}

// The encryption method with is used when communicating with the database.
func (o GetSourceOracleConfigurationOutput) Encryption() GetSourceOracleConfigurationEncryptionOutput {
	return o.ApplyT(func(v GetSourceOracleConfiguration) GetSourceOracleConfigurationEncryption { return v.Encryption }).(GetSourceOracleConfigurationEncryptionOutput)
}

// Hostname of the database.
func (o GetSourceOracleConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
func (o GetSourceOracleConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// The password associated with the username.
func (o GetSourceOracleConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Port of the database.
// Oracle Corporations recommends the following port numbers:
// 1521 - Default listening port for client connections to the listener.
// 2484 - Recommended and officially registered listening port for client connections to the listener using TCP/IP with SSL
func (o GetSourceOracleConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceOracleConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// The list of schemas to sync from. Defaults to user. Case sensitive.
func (o GetSourceOracleConfigurationOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceOracleConfiguration) []string { return v.Schemas }).(pulumi.StringArrayOutput)
}

// must be one of ["oracle"]
func (o GetSourceOracleConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetSourceOracleConfigurationOutput) TunnelMethod() GetSourceOracleConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetSourceOracleConfiguration) GetSourceOracleConfigurationTunnelMethod { return v.TunnelMethod }).(GetSourceOracleConfigurationTunnelMethodOutput)
}

// The username which is used to access the database.
func (o GetSourceOracleConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationConnectionData struct {
	SourceOracleConnectByServiceName       GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName       `pulumi:"sourceOracleConnectByServiceName"`
	SourceOracleConnectBySystemIdSid       GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid       `pulumi:"sourceOracleConnectBySystemIdSid"`
	SourceOracleUpdateConnectByServiceName GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName `pulumi:"sourceOracleUpdateConnectByServiceName"`
	SourceOracleUpdateConnectBySystemIdSid GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid `pulumi:"sourceOracleUpdateConnectBySystemIdSid"`
}

type GetSourceOracleConfigurationConnectionDataOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationConnectionDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationConnectionData)(nil)).Elem()
}

func (o GetSourceOracleConfigurationConnectionDataOutput) ToGetSourceOracleConfigurationConnectionDataOutput() GetSourceOracleConfigurationConnectionDataOutput {
	return o
}

func (o GetSourceOracleConfigurationConnectionDataOutput) ToGetSourceOracleConfigurationConnectionDataOutputWithContext(ctx context.Context) GetSourceOracleConfigurationConnectionDataOutput {
	return o
}

func (o GetSourceOracleConfigurationConnectionDataOutput) SourceOracleConnectByServiceName() GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionData) GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName {
		return v.SourceOracleConnectByServiceName
	}).(GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput)
}

func (o GetSourceOracleConfigurationConnectionDataOutput) SourceOracleConnectBySystemIdSid() GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionData) GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid {
		return v.SourceOracleConnectBySystemIdSid
	}).(GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput)
}

func (o GetSourceOracleConfigurationConnectionDataOutput) SourceOracleUpdateConnectByServiceName() GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionData) GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName {
		return v.SourceOracleUpdateConnectByServiceName
	}).(GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput)
}

func (o GetSourceOracleConfigurationConnectionDataOutput) SourceOracleUpdateConnectBySystemIdSid() GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionData) GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid {
		return v.SourceOracleUpdateConnectBySystemIdSid
	}).(GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput)
}

type GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName struct {
	ConnectionType string `pulumi:"connectionType"`
	ServiceName    string `pulumi:"serviceName"`
}

type GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName)(nil)).Elem()
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput) ToGetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput() GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput {
	return o
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput) ToGetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutputWithContext(ctx context.Context) GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput {
	return o
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName) string {
		return v.ConnectionType
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceName) string {
		return v.ServiceName
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid struct {
	ConnectionType string `pulumi:"connectionType"`
	Sid            string `pulumi:"sid"`
}

type GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid)(nil)).Elem()
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput) ToGetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput() GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput {
	return o
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput) ToGetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutputWithContext(ctx context.Context) GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput {
	return o
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid) string {
		return v.ConnectionType
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput) Sid() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSid) string {
		return v.Sid
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName struct {
	ConnectionType string `pulumi:"connectionType"`
	ServiceName    string `pulumi:"serviceName"`
}

type GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName)(nil)).Elem()
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput) ToGetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput() GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput {
	return o
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput) ToGetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutputWithContext(ctx context.Context) GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput {
	return o
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName) string {
		return v.ConnectionType
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceName) string {
		return v.ServiceName
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid struct {
	ConnectionType string `pulumi:"connectionType"`
	Sid            string `pulumi:"sid"`
}

type GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid)(nil)).Elem()
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput) ToGetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput() GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput {
	return o
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput) ToGetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutputWithContext(ctx context.Context) GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput {
	return o
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid) string {
		return v.ConnectionType
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput) Sid() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSid) string {
		return v.Sid
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationEncryption struct {
	SourceOracleEncryptionNativeNetworkEncryptionNne          GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne          `pulumi:"sourceOracleEncryptionNativeNetworkEncryptionNne"`
	SourceOracleEncryptionTlsEncryptedVerifyCertificate       GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate       `pulumi:"sourceOracleEncryptionTlsEncryptedVerifyCertificate"`
	SourceOracleUpdateEncryptionNativeNetworkEncryptionNne    GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne    `pulumi:"sourceOracleUpdateEncryptionNativeNetworkEncryptionNne"`
	SourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate `pulumi:"sourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate"`
}

type GetSourceOracleConfigurationEncryptionOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationEncryption)(nil)).Elem()
}

func (o GetSourceOracleConfigurationEncryptionOutput) ToGetSourceOracleConfigurationEncryptionOutput() GetSourceOracleConfigurationEncryptionOutput {
	return o
}

func (o GetSourceOracleConfigurationEncryptionOutput) ToGetSourceOracleConfigurationEncryptionOutputWithContext(ctx context.Context) GetSourceOracleConfigurationEncryptionOutput {
	return o
}

func (o GetSourceOracleConfigurationEncryptionOutput) SourceOracleEncryptionNativeNetworkEncryptionNne() GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryption) GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne {
		return v.SourceOracleEncryptionNativeNetworkEncryptionNne
	}).(GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput)
}

func (o GetSourceOracleConfigurationEncryptionOutput) SourceOracleEncryptionTlsEncryptedVerifyCertificate() GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryption) GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate {
		return v.SourceOracleEncryptionTlsEncryptedVerifyCertificate
	}).(GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput)
}

func (o GetSourceOracleConfigurationEncryptionOutput) SourceOracleUpdateEncryptionNativeNetworkEncryptionNne() GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryption) GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne {
		return v.SourceOracleUpdateEncryptionNativeNetworkEncryptionNne
	}).(GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput)
}

func (o GetSourceOracleConfigurationEncryptionOutput) SourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate() GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryption) GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate {
		return v.SourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate
	}).(GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput)
}

type GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne struct {
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	EncryptionMethod    string `pulumi:"encryptionMethod"`
}

type GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne)(nil)).Elem()
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput) ToGetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput() GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput {
	return o
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput) ToGetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutputWithContext(ctx context.Context) GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput {
	return o
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne) string {
		return v.EncryptionAlgorithm
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput) EncryptionMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNne) string {
		return v.EncryptionMethod
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate struct {
	EncryptionMethod string `pulumi:"encryptionMethod"`
	SslCertificate   string `pulumi:"sslCertificate"`
}

type GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate)(nil)).Elem()
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput) ToGetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput() GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput {
	return o
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput) ToGetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutputWithContext(ctx context.Context) GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput {
	return o
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput) EncryptionMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate) string {
		return v.EncryptionMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput) SslCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificate) string {
		return v.SslCertificate
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne struct {
	EncryptionAlgorithm string `pulumi:"encryptionAlgorithm"`
	EncryptionMethod    string `pulumi:"encryptionMethod"`
}

type GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne)(nil)).Elem()
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput) ToGetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput() GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput {
	return o
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput) ToGetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutputWithContext(ctx context.Context) GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput {
	return o
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput) EncryptionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne) string {
		return v.EncryptionAlgorithm
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput) EncryptionMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNne) string {
		return v.EncryptionMethod
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate struct {
	EncryptionMethod string `pulumi:"encryptionMethod"`
	SslCertificate   string `pulumi:"sslCertificate"`
}

type GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate)(nil)).Elem()
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput) ToGetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput() GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput {
	return o
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput) ToGetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutputWithContext(ctx context.Context) GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput {
	return o
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput) EncryptionMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate) string {
		return v.EncryptionMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput) SslCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificate) string {
		return v.SslCertificate
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationTunnelMethod struct {
	SourceOracleSshTunnelMethodNoTunnel                     GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel                     `pulumi:"sourceOracleSshTunnelMethodNoTunnel"`
	SourceOracleSshTunnelMethodPasswordAuthentication       GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication       `pulumi:"sourceOracleSshTunnelMethodPasswordAuthentication"`
	SourceOracleSshTunnelMethodSshKeyAuthentication         GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication         `pulumi:"sourceOracleSshTunnelMethodSshKeyAuthentication"`
	SourceOracleUpdateSshTunnelMethodNoTunnel               GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel               `pulumi:"sourceOracleUpdateSshTunnelMethodNoTunnel"`
	SourceOracleUpdateSshTunnelMethodPasswordAuthentication GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication `pulumi:"sourceOracleUpdateSshTunnelMethodPasswordAuthentication"`
	SourceOracleUpdateSshTunnelMethodSshKeyAuthentication   GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"sourceOracleUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetSourceOracleConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetSourceOracleConfigurationTunnelMethodOutput) ToGetSourceOracleConfigurationTunnelMethodOutput() GetSourceOracleConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodOutput) ToGetSourceOracleConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetSourceOracleConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodOutput) SourceOracleSshTunnelMethodNoTunnel() GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethod) GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel {
		return v.SourceOracleSshTunnelMethodNoTunnel
	}).(GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodOutput) SourceOracleSshTunnelMethodPasswordAuthentication() GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethod) GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication {
		return v.SourceOracleSshTunnelMethodPasswordAuthentication
	}).(GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodOutput) SourceOracleSshTunnelMethodSshKeyAuthentication() GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethod) GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication {
		return v.SourceOracleSshTunnelMethodSshKeyAuthentication
	}).(GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodOutput) SourceOracleUpdateSshTunnelMethodNoTunnel() GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethod) GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel {
		return v.SourceOracleUpdateSshTunnelMethodNoTunnel
	}).(GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodOutput) SourceOracleUpdateSshTunnelMethodPasswordAuthentication() GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethod) GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication {
		return v.SourceOracleUpdateSshTunnelMethodPasswordAuthentication
	}).(GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodOutput) SourceOracleUpdateSshTunnelMethodSshKeyAuthentication() GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethod) GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication {
		return v.SourceOracleUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutput() GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput() GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput() GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutput() GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput() GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourceOrbConfiguration struct {
	// Orb API Key, issued from the Orb admin console.
	ApiKey string `pulumi:"apiKey"`
	// When set to N, the connector will always refresh resources created within the past N days. By default, updated objects that are not newly created are not incrementally synced.
	LookbackWindowDays int `pulumi:"lookbackWindowDays"`
	// Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.
	NumericEventPropertiesKeys []string `pulumi:"numericEventPropertiesKeys"`
	// Orb Plan ID to filter subscriptions that should have usage fetched.
	PlanId string `pulumi:"planId"`
	// must be one of ["orb"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2022-03-01T00:00:00Z. Any data with createdAt before this data will not be synced. For Subscription Usage, this becomes the `timeframeStart` API parameter.
	StartDate string `pulumi:"startDate"`
	// Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.
	StringEventPropertiesKeys []string `pulumi:"stringEventPropertiesKeys"`
	// Property key name to group subscription usage by.
	SubscriptionUsageGroupingKey string `pulumi:"subscriptionUsageGroupingKey"`
}

type GetSourceOrbConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceOrbConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOrbConfiguration)(nil)).Elem()
}

func (o GetSourceOrbConfigurationOutput) ToGetSourceOrbConfigurationOutput() GetSourceOrbConfigurationOutput {
	return o
}

func (o GetSourceOrbConfigurationOutput) ToGetSourceOrbConfigurationOutputWithContext(ctx context.Context) GetSourceOrbConfigurationOutput {
	return o
}

// Orb API Key, issued from the Orb admin console.
func (o GetSourceOrbConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOrbConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// When set to N, the connector will always refresh resources created within the past N days. By default, updated objects that are not newly created are not incrementally synced.
func (o GetSourceOrbConfigurationOutput) LookbackWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceOrbConfiguration) int { return v.LookbackWindowDays }).(pulumi.IntOutput)
}

// Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.
func (o GetSourceOrbConfigurationOutput) NumericEventPropertiesKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceOrbConfiguration) []string { return v.NumericEventPropertiesKeys }).(pulumi.StringArrayOutput)
}

// Orb Plan ID to filter subscriptions that should have usage fetched.
func (o GetSourceOrbConfigurationOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOrbConfiguration) string { return v.PlanId }).(pulumi.StringOutput)
}

// must be one of ["orb"]
func (o GetSourceOrbConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOrbConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2022-03-01T00:00:00Z. Any data with createdAt before this data will not be synced. For Subscription Usage, this becomes the `timeframeStart` API parameter.
func (o GetSourceOrbConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOrbConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Property key names to extract from all events, in order to enrich ledger entries corresponding to an event deduction.
func (o GetSourceOrbConfigurationOutput) StringEventPropertiesKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceOrbConfiguration) []string { return v.StringEventPropertiesKeys }).(pulumi.StringArrayOutput)
}

// Property key name to group subscription usage by.
func (o GetSourceOrbConfigurationOutput) SubscriptionUsageGroupingKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOrbConfiguration) string { return v.SubscriptionUsageGroupingKey }).(pulumi.StringOutput)
}

type GetSourceOrbitConfiguration struct {
	// Authorizes you to work with Orbit workspaces associated with the token.
	ApiToken string `pulumi:"apiToken"`
	// must be one of ["orbit"]
	SourceType string `pulumi:"sourceType"`
	// Date in the format 2022-06-26. Only load members whose last activities are after this date.
	StartDate string `pulumi:"startDate"`
	// The unique name of the workspace that your API token is associated with.
	Workspace string `pulumi:"workspace"`
}

type GetSourceOrbitConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceOrbitConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOrbitConfiguration)(nil)).Elem()
}

func (o GetSourceOrbitConfigurationOutput) ToGetSourceOrbitConfigurationOutput() GetSourceOrbitConfigurationOutput {
	return o
}

func (o GetSourceOrbitConfigurationOutput) ToGetSourceOrbitConfigurationOutputWithContext(ctx context.Context) GetSourceOrbitConfigurationOutput {
	return o
}

// Authorizes you to work with Orbit workspaces associated with the token.
func (o GetSourceOrbitConfigurationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOrbitConfiguration) string { return v.ApiToken }).(pulumi.StringOutput)
}

// must be one of ["orbit"]
func (o GetSourceOrbitConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOrbitConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Date in the format 2022-06-26. Only load members whose last activities are after this date.
func (o GetSourceOrbitConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOrbitConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// The unique name of the workspace that your API token is associated with.
func (o GetSourceOrbitConfigurationOutput) Workspace() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOrbitConfiguration) string { return v.Workspace }).(pulumi.StringOutput)
}

type GetSourceOutbrainAmplifyConfiguration struct {
	// Credentials for making authenticated requests requires either username/password or access_token.
	Credentials GetSourceOutbrainAmplifyConfigurationCredentials `pulumi:"credentials"`
	// Date in the format YYYY-MM-DD.
	EndDate string `pulumi:"endDate"`
	// must be one of ["country", "region", "subregion"]
	// The granularity used for geo location data in reports.
	GeoLocationBreakdown string `pulumi:"geoLocationBreakdown"`
	// must be one of ["daily", "weekly", "monthly"]
	// The granularity used for periodic data in reports. See \n\nthe docs\n\n.
	ReportGranularity string `pulumi:"reportGranularity"`
	// must be one of ["outbrain-amplify"]
	SourceType string `pulumi:"sourceType"`
	// Date in the format YYYY-MM-DD eg. 2017-01-25. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceOutbrainAmplifyConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceOutbrainAmplifyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOutbrainAmplifyConfiguration)(nil)).Elem()
}

func (o GetSourceOutbrainAmplifyConfigurationOutput) ToGetSourceOutbrainAmplifyConfigurationOutput() GetSourceOutbrainAmplifyConfigurationOutput {
	return o
}

func (o GetSourceOutbrainAmplifyConfigurationOutput) ToGetSourceOutbrainAmplifyConfigurationOutputWithContext(ctx context.Context) GetSourceOutbrainAmplifyConfigurationOutput {
	return o
}

// Credentials for making authenticated requests requires either username/password or access_token.
func (o GetSourceOutbrainAmplifyConfigurationOutput) Credentials() GetSourceOutbrainAmplifyConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfiguration) GetSourceOutbrainAmplifyConfigurationCredentials {
		return v.Credentials
	}).(GetSourceOutbrainAmplifyConfigurationCredentialsOutput)
}

// Date in the format YYYY-MM-DD.
func (o GetSourceOutbrainAmplifyConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// must be one of ["country", "region", "subregion"]
// The granularity used for geo location data in reports.
func (o GetSourceOutbrainAmplifyConfigurationOutput) GeoLocationBreakdown() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfiguration) string { return v.GeoLocationBreakdown }).(pulumi.StringOutput)
}

// must be one of ["daily", "weekly", "monthly"]
// The granularity used for periodic data in reports. See \n\nthe docs\n\n.
func (o GetSourceOutbrainAmplifyConfigurationOutput) ReportGranularity() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfiguration) string { return v.ReportGranularity }).(pulumi.StringOutput)
}

// must be one of ["outbrain-amplify"]
func (o GetSourceOutbrainAmplifyConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Date in the format YYYY-MM-DD eg. 2017-01-25. Any data before this date will not be replicated.
func (o GetSourceOutbrainAmplifyConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceOutbrainAmplifyConfigurationCredentials struct {
	SourceOutbrainAmplifyAuthenticationMethodAccessToken            GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken            `pulumi:"sourceOutbrainAmplifyAuthenticationMethodAccessToken"`
	SourceOutbrainAmplifyAuthenticationMethodUsernamePassword       GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword       `pulumi:"sourceOutbrainAmplifyAuthenticationMethodUsernamePassword"`
	SourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken      GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken      `pulumi:"sourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken"`
	SourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword `pulumi:"sourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword"`
}

type GetSourceOutbrainAmplifyConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceOutbrainAmplifyConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOutbrainAmplifyConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsOutput) ToGetSourceOutbrainAmplifyConfigurationCredentialsOutput() GetSourceOutbrainAmplifyConfigurationCredentialsOutput {
	return o
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsOutput) ToGetSourceOutbrainAmplifyConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceOutbrainAmplifyConfigurationCredentialsOutput {
	return o
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsOutput) SourceOutbrainAmplifyAuthenticationMethodAccessToken() GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentials) GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken {
		return v.SourceOutbrainAmplifyAuthenticationMethodAccessToken
	}).(GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput)
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsOutput) SourceOutbrainAmplifyAuthenticationMethodUsernamePassword() GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentials) GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword {
		return v.SourceOutbrainAmplifyAuthenticationMethodUsernamePassword
	}).(GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput)
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsOutput) SourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken() GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentials) GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken {
		return v.SourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken
	}).(GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput)
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsOutput) SourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword() GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentials) GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword {
		return v.SourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword
	}).(GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput)
}

type GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	Type        string `pulumi:"type"`
}

type GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken)(nil)).Elem()
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput) ToGetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput() GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput {
	return o
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput) ToGetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutputWithContext(ctx context.Context) GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput {
	return o
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessToken) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword struct {
	Password string `pulumi:"password"`
	Type     string `pulumi:"type"`
	Username string `pulumi:"username"`
}

type GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword)(nil)).Elem()
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput) ToGetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput() GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput {
	return o
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput) ToGetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutputWithContext(ctx context.Context) GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput {
	return o
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword) string {
		return v.Type
	}).(pulumi.StringOutput)
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePassword) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	Type        string `pulumi:"type"`
}

type GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken)(nil)).Elem()
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput) ToGetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput() GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput {
	return o
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput) ToGetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutputWithContext(ctx context.Context) GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput {
	return o
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessToken) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword struct {
	Password string `pulumi:"password"`
	Type     string `pulumi:"type"`
	Username string `pulumi:"username"`
}

type GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword)(nil)).Elem()
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput) ToGetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput() GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput {
	return o
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput) ToGetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutputWithContext(ctx context.Context) GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput {
	return o
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword) string {
		return v.Type
	}).(pulumi.StringOutput)
}

func (o GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePassword) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type GetSourceOutreachConfiguration struct {
	// The Client ID of your Outreach developer application.
	ClientId string `pulumi:"clientId"`
	// The Client Secret of your Outreach developer application.
	ClientSecret string `pulumi:"clientSecret"`
	// A Redirect URI is the location where the authorization server sends the user once the app has been successfully authorized and granted an authorization code or access token.
	RedirectUri string `pulumi:"redirectUri"`
	// The token for obtaining the new access token.
	RefreshToken string `pulumi:"refreshToken"`
	// must be one of ["outreach"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for Outreach API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceOutreachConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceOutreachConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceOutreachConfiguration)(nil)).Elem()
}

func (o GetSourceOutreachConfigurationOutput) ToGetSourceOutreachConfigurationOutput() GetSourceOutreachConfigurationOutput {
	return o
}

func (o GetSourceOutreachConfigurationOutput) ToGetSourceOutreachConfigurationOutputWithContext(ctx context.Context) GetSourceOutreachConfigurationOutput {
	return o
}

// The Client ID of your Outreach developer application.
func (o GetSourceOutreachConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutreachConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret of your Outreach developer application.
func (o GetSourceOutreachConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutreachConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// A Redirect URI is the location where the authorization server sends the user once the app has been successfully authorized and granted an authorization code or access token.
func (o GetSourceOutreachConfigurationOutput) RedirectUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutreachConfiguration) string { return v.RedirectUri }).(pulumi.StringOutput)
}

// The token for obtaining the new access token.
func (o GetSourceOutreachConfigurationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutreachConfiguration) string { return v.RefreshToken }).(pulumi.StringOutput)
}

// must be one of ["outreach"]
func (o GetSourceOutreachConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutreachConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for Outreach API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
func (o GetSourceOutreachConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceOutreachConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourcePaypalTransactionConfiguration struct {
	// The Client ID of your Paypal developer application.
	ClientId string `pulumi:"clientId"`
	// The Client Secret of your Paypal developer application.
	ClientSecret string `pulumi:"clientSecret"`
	// Determines whether to use the sandbox or production environment.
	IsSandbox bool `pulumi:"isSandbox"`
	// The key to refresh the expired access token.
	RefreshToken string `pulumi:"refreshToken"`
	// must be one of ["paypal-transaction"]
	SourceType string `pulumi:"sourceType"`
	// Start Date for data extraction in \n\nISO format\n\n. Date must be in range from 3 years till 12 hrs before present time.
	StartDate string `pulumi:"startDate"`
}

type GetSourcePaypalTransactionConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePaypalTransactionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePaypalTransactionConfiguration)(nil)).Elem()
}

func (o GetSourcePaypalTransactionConfigurationOutput) ToGetSourcePaypalTransactionConfigurationOutput() GetSourcePaypalTransactionConfigurationOutput {
	return o
}

func (o GetSourcePaypalTransactionConfigurationOutput) ToGetSourcePaypalTransactionConfigurationOutputWithContext(ctx context.Context) GetSourcePaypalTransactionConfigurationOutput {
	return o
}

// The Client ID of your Paypal developer application.
func (o GetSourcePaypalTransactionConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePaypalTransactionConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret of your Paypal developer application.
func (o GetSourcePaypalTransactionConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePaypalTransactionConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// Determines whether to use the sandbox or production environment.
func (o GetSourcePaypalTransactionConfigurationOutput) IsSandbox() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourcePaypalTransactionConfiguration) bool { return v.IsSandbox }).(pulumi.BoolOutput)
}

// The key to refresh the expired access token.
func (o GetSourcePaypalTransactionConfigurationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePaypalTransactionConfiguration) string { return v.RefreshToken }).(pulumi.StringOutput)
}

// must be one of ["paypal-transaction"]
func (o GetSourcePaypalTransactionConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePaypalTransactionConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Start Date for data extraction in \n\nISO format\n\n. Date must be in range from 3 years till 12 hrs before present time.
func (o GetSourcePaypalTransactionConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePaypalTransactionConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourcePaystackConfiguration struct {
	// When set, the connector will always reload data from the past N days, where N is the value set here. This is useful if your data is updated after creation.
	LookbackWindowDays int `pulumi:"lookbackWindowDays"`
	// The Paystack API key (usually starts with 'sk*live*'; find yours \n\nhere\n\n).
	SecretKey string `pulumi:"secretKey"`
	// must be one of ["paystack"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourcePaystackConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePaystackConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePaystackConfiguration)(nil)).Elem()
}

func (o GetSourcePaystackConfigurationOutput) ToGetSourcePaystackConfigurationOutput() GetSourcePaystackConfigurationOutput {
	return o
}

func (o GetSourcePaystackConfigurationOutput) ToGetSourcePaystackConfigurationOutputWithContext(ctx context.Context) GetSourcePaystackConfigurationOutput {
	return o
}

// When set, the connector will always reload data from the past N days, where N is the value set here. This is useful if your data is updated after creation.
func (o GetSourcePaystackConfigurationOutput) LookbackWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePaystackConfiguration) int { return v.LookbackWindowDays }).(pulumi.IntOutput)
}

// The Paystack API key (usually starts with 'sk*live*'; find yours \n\nhere\n\n).
func (o GetSourcePaystackConfigurationOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePaystackConfiguration) string { return v.SecretKey }).(pulumi.StringOutput)
}

// must be one of ["paystack"]
func (o GetSourcePaystackConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePaystackConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourcePaystackConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePaystackConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourcePendoConfiguration struct {
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["pendo"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourcePendoConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePendoConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePendoConfiguration)(nil)).Elem()
}

func (o GetSourcePendoConfigurationOutput) ToGetSourcePendoConfigurationOutput() GetSourcePendoConfigurationOutput {
	return o
}

func (o GetSourcePendoConfigurationOutput) ToGetSourcePendoConfigurationOutputWithContext(ctx context.Context) GetSourcePendoConfigurationOutput {
	return o
}

func (o GetSourcePendoConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePendoConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["pendo"]
func (o GetSourcePendoConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePendoConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourcePersistiqConfiguration struct {
	// PersistIq API Key. See the \n\ndocs\n\n for more information on where to find that key.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["persistiq"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourcePersistiqConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePersistiqConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePersistiqConfiguration)(nil)).Elem()
}

func (o GetSourcePersistiqConfigurationOutput) ToGetSourcePersistiqConfigurationOutput() GetSourcePersistiqConfigurationOutput {
	return o
}

func (o GetSourcePersistiqConfigurationOutput) ToGetSourcePersistiqConfigurationOutputWithContext(ctx context.Context) GetSourcePersistiqConfigurationOutput {
	return o
}

// PersistIq API Key. See the \n\ndocs\n\n for more information on where to find that key.
func (o GetSourcePersistiqConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePersistiqConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["persistiq"]
func (o GetSourcePersistiqConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePersistiqConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourcePexelsApiConfiguration struct {
	// API key is required to access pexels api, For getting your's goto https://www.pexels.com/api/documentation and create account for free.
	ApiKey string `pulumi:"apiKey"`
	// Optional, Desired photo color. Supported colors red, orange, yellow, green, turquoise, blue, violet, pink, brown, black, gray, white or any hexidecimal color code.
	Color string `pulumi:"color"`
	// Optional, The locale of the search you are performing. The current supported locales are 'en-US' 'pt-BR' 'es-ES' 'ca-ES' 'de-DE' 'it-IT' 'fr-FR' 'sv-SE' 'id-ID' 'pl-PL' 'ja-JP' 'zh-TW' 'zh-CN' 'ko-KR' 'th-TH' 'nl-NL' 'hu-HU' 'vi-VN' 'cs-CZ' 'da-DK' 'fi-FI' 'uk-UA' 'el-GR' 'ro-RO' 'nb-NO' 'sk-SK' 'tr-TR' 'ru-RU'.
	Locale string `pulumi:"locale"`
	// Optional, Desired photo orientation. The current supported orientations are landscape, portrait or square
	Orientation string `pulumi:"orientation"`
	// Optional, the search query, Example Ocean, Tigers, Pears, etc.
	Query string `pulumi:"query"`
	// Optional, Minimum photo size. The current supported sizes are large(24MP), medium(12MP) or small(4MP).
	Size string `pulumi:"size"`
	// must be one of ["pexels-api"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourcePexelsApiConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePexelsApiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePexelsApiConfiguration)(nil)).Elem()
}

func (o GetSourcePexelsApiConfigurationOutput) ToGetSourcePexelsApiConfigurationOutput() GetSourcePexelsApiConfigurationOutput {
	return o
}

func (o GetSourcePexelsApiConfigurationOutput) ToGetSourcePexelsApiConfigurationOutputWithContext(ctx context.Context) GetSourcePexelsApiConfigurationOutput {
	return o
}

// API key is required to access pexels api, For getting your's goto https://www.pexels.com/api/documentation and create account for free.
func (o GetSourcePexelsApiConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePexelsApiConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Optional, Desired photo color. Supported colors red, orange, yellow, green, turquoise, blue, violet, pink, brown, black, gray, white or any hexidecimal color code.
func (o GetSourcePexelsApiConfigurationOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePexelsApiConfiguration) string { return v.Color }).(pulumi.StringOutput)
}

// Optional, The locale of the search you are performing. The current supported locales are 'en-US' 'pt-BR' 'es-ES' 'ca-ES' 'de-DE' 'it-IT' 'fr-FR' 'sv-SE' 'id-ID' 'pl-PL' 'ja-JP' 'zh-TW' 'zh-CN' 'ko-KR' 'th-TH' 'nl-NL' 'hu-HU' 'vi-VN' 'cs-CZ' 'da-DK' 'fi-FI' 'uk-UA' 'el-GR' 'ro-RO' 'nb-NO' 'sk-SK' 'tr-TR' 'ru-RU'.
func (o GetSourcePexelsApiConfigurationOutput) Locale() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePexelsApiConfiguration) string { return v.Locale }).(pulumi.StringOutput)
}

// Optional, Desired photo orientation. The current supported orientations are landscape, portrait or square
func (o GetSourcePexelsApiConfigurationOutput) Orientation() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePexelsApiConfiguration) string { return v.Orientation }).(pulumi.StringOutput)
}

// Optional, the search query, Example Ocean, Tigers, Pears, etc.
func (o GetSourcePexelsApiConfigurationOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePexelsApiConfiguration) string { return v.Query }).(pulumi.StringOutput)
}

// Optional, Minimum photo size. The current supported sizes are large(24MP), medium(12MP) or small(4MP).
func (o GetSourcePexelsApiConfigurationOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePexelsApiConfiguration) string { return v.Size }).(pulumi.StringOutput)
}

// must be one of ["pexels-api"]
func (o GetSourcePexelsApiConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePexelsApiConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourcePinterestConfiguration struct {
	Credentials GetSourcePinterestConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["pinterest"]
	SourceType string `pulumi:"sourceType"`
	// A date in the format YYYY-MM-DD. If you have not set a date, it would be defaulted to latest allowed date by api (89 days from today).
	StartDate string `pulumi:"startDate"`
	// Entity statuses based off of campaigns, ad_groups, and ads. If you do not have a status set, it will be ignored completely.
	Statuses []string `pulumi:"statuses"`
}

type GetSourcePinterestConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePinterestConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePinterestConfiguration)(nil)).Elem()
}

func (o GetSourcePinterestConfigurationOutput) ToGetSourcePinterestConfigurationOutput() GetSourcePinterestConfigurationOutput {
	return o
}

func (o GetSourcePinterestConfigurationOutput) ToGetSourcePinterestConfigurationOutputWithContext(ctx context.Context) GetSourcePinterestConfigurationOutput {
	return o
}

func (o GetSourcePinterestConfigurationOutput) Credentials() GetSourcePinterestConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourcePinterestConfiguration) GetSourcePinterestConfigurationCredentials {
		return v.Credentials
	}).(GetSourcePinterestConfigurationCredentialsOutput)
}

// must be one of ["pinterest"]
func (o GetSourcePinterestConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// A date in the format YYYY-MM-DD. If you have not set a date, it would be defaulted to latest allowed date by api (89 days from today).
func (o GetSourcePinterestConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Entity statuses based off of campaigns, ad_groups, and ads. If you do not have a status set, it will be ignored completely.
func (o GetSourcePinterestConfigurationOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourcePinterestConfiguration) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

type GetSourcePinterestConfigurationCredentials struct {
	SourcePinterestAuthorizationMethodAccessToken       GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken       `pulumi:"sourcePinterestAuthorizationMethodAccessToken"`
	SourcePinterestAuthorizationMethodOAuth20           GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20           `pulumi:"sourcePinterestAuthorizationMethodOAuth20"`
	SourcePinterestUpdateAuthorizationMethodAccessToken GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken `pulumi:"sourcePinterestUpdateAuthorizationMethodAccessToken"`
	SourcePinterestUpdateAuthorizationMethodOAuth20     GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20     `pulumi:"sourcePinterestUpdateAuthorizationMethodOAuth20"`
}

type GetSourcePinterestConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourcePinterestConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePinterestConfigurationCredentials)(nil)).Elem()
}

func (o GetSourcePinterestConfigurationCredentialsOutput) ToGetSourcePinterestConfigurationCredentialsOutput() GetSourcePinterestConfigurationCredentialsOutput {
	return o
}

func (o GetSourcePinterestConfigurationCredentialsOutput) ToGetSourcePinterestConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourcePinterestConfigurationCredentialsOutput {
	return o
}

func (o GetSourcePinterestConfigurationCredentialsOutput) SourcePinterestAuthorizationMethodAccessToken() GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentials) GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken {
		return v.SourcePinterestAuthorizationMethodAccessToken
	}).(GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput)
}

func (o GetSourcePinterestConfigurationCredentialsOutput) SourcePinterestAuthorizationMethodOAuth20() GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentials) GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20 {
		return v.SourcePinterestAuthorizationMethodOAuth20
	}).(GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output)
}

func (o GetSourcePinterestConfigurationCredentialsOutput) SourcePinterestUpdateAuthorizationMethodAccessToken() GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentials) GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken {
		return v.SourcePinterestUpdateAuthorizationMethodAccessToken
	}).(GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput)
}

func (o GetSourcePinterestConfigurationCredentialsOutput) SourcePinterestUpdateAuthorizationMethodOAuth20() GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentials) GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20 {
		return v.SourcePinterestUpdateAuthorizationMethodOAuth20
	}).(GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output)
}

type GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthMethod  string `pulumi:"authMethod"`
}

type GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken)(nil)).Elem()
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput) ToGetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput() GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput {
	return o
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput) ToGetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutputWithContext(ctx context.Context) GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput {
	return o
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessToken) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

type GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20 struct {
	AuthMethod   string `pulumi:"authMethod"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output) ToGetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output() GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output) ToGetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthMethod  string `pulumi:"authMethod"`
}

type GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken)(nil)).Elem()
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput) ToGetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput() GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput {
	return o
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput) ToGetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutputWithContext(ctx context.Context) GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput {
	return o
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessToken) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

type GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20 struct {
	AuthMethod   string `pulumi:"authMethod"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output) ToGetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output() GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output) ToGetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourcePipedriveConfiguration struct {
	Authorization GetSourcePipedriveConfigurationAuthorization `pulumi:"authorization"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. When specified and not None, then stream will behave as incremental
	ReplicationStartDate string `pulumi:"replicationStartDate"`
	// must be one of ["pipedrive"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourcePipedriveConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePipedriveConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePipedriveConfiguration)(nil)).Elem()
}

func (o GetSourcePipedriveConfigurationOutput) ToGetSourcePipedriveConfigurationOutput() GetSourcePipedriveConfigurationOutput {
	return o
}

func (o GetSourcePipedriveConfigurationOutput) ToGetSourcePipedriveConfigurationOutputWithContext(ctx context.Context) GetSourcePipedriveConfigurationOutput {
	return o
}

func (o GetSourcePipedriveConfigurationOutput) Authorization() GetSourcePipedriveConfigurationAuthorizationOutput {
	return o.ApplyT(func(v GetSourcePipedriveConfiguration) GetSourcePipedriveConfigurationAuthorization {
		return v.Authorization
	}).(GetSourcePipedriveConfigurationAuthorizationOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated. When specified and not None, then stream will behave as incremental
func (o GetSourcePipedriveConfigurationOutput) ReplicationStartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePipedriveConfiguration) string { return v.ReplicationStartDate }).(pulumi.StringOutput)
}

// must be one of ["pipedrive"]
func (o GetSourcePipedriveConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePipedriveConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourcePipedriveConfigurationAuthorization struct {
	ApiToken string `pulumi:"apiToken"`
	AuthType string `pulumi:"authType"`
}

type GetSourcePipedriveConfigurationAuthorizationOutput struct{ *pulumi.OutputState }

func (GetSourcePipedriveConfigurationAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePipedriveConfigurationAuthorization)(nil)).Elem()
}

func (o GetSourcePipedriveConfigurationAuthorizationOutput) ToGetSourcePipedriveConfigurationAuthorizationOutput() GetSourcePipedriveConfigurationAuthorizationOutput {
	return o
}

func (o GetSourcePipedriveConfigurationAuthorizationOutput) ToGetSourcePipedriveConfigurationAuthorizationOutputWithContext(ctx context.Context) GetSourcePipedriveConfigurationAuthorizationOutput {
	return o
}

func (o GetSourcePipedriveConfigurationAuthorizationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePipedriveConfigurationAuthorization) string { return v.ApiToken }).(pulumi.StringOutput)
}

func (o GetSourcePipedriveConfigurationAuthorizationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePipedriveConfigurationAuthorization) string { return v.AuthType }).(pulumi.StringOutput)
}

type GetSourcePocketConfiguration struct {
	// The user's Pocket access token.
	AccessToken string `pulumi:"accessToken"`
	// Your application's Consumer Key.
	ConsumerKey string `pulumi:"consumerKey"`
	// must be one of ["article", "video", "image"]
	// Select the content type of the items to retrieve.
	ContentType string `pulumi:"contentType"`
	// must be one of ["simple", "complete"]
	// Select the granularity of the information about each item.
	DetailType string `pulumi:"detailType"`
	// Only return items from a particular `domain`.
	Domain string `pulumi:"domain"`
	// Retrieve only favorited items.
	Favorite bool `pulumi:"favorite"`
	// Only return items whose title or url contain the `search` string.
	Search string `pulumi:"search"`
	// Only return items modified since the given timestamp.
	Since string `pulumi:"since"`
	// must be one of ["newest", "oldest", "title", "site"]
	// Sort retrieved items by the given criteria.
	Sort string `pulumi:"sort"`
	// must be one of ["pocket"]
	SourceType string `pulumi:"sourceType"`
	// must be one of ["unread", "archive", "all"]
	// Select the state of the items to retrieve.
	State string `pulumi:"state"`
	// Return only items tagged with this tag name. Use *untagged* for retrieving only untagged items.
	Tag string `pulumi:"tag"`
}

type GetSourcePocketConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePocketConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePocketConfiguration)(nil)).Elem()
}

func (o GetSourcePocketConfigurationOutput) ToGetSourcePocketConfigurationOutput() GetSourcePocketConfigurationOutput {
	return o
}

func (o GetSourcePocketConfigurationOutput) ToGetSourcePocketConfigurationOutputWithContext(ctx context.Context) GetSourcePocketConfigurationOutput {
	return o
}

// The user's Pocket access token.
func (o GetSourcePocketConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// Your application's Consumer Key.
func (o GetSourcePocketConfigurationOutput) ConsumerKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) string { return v.ConsumerKey }).(pulumi.StringOutput)
}

// must be one of ["article", "video", "image"]
// Select the content type of the items to retrieve.
func (o GetSourcePocketConfigurationOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) string { return v.ContentType }).(pulumi.StringOutput)
}

// must be one of ["simple", "complete"]
// Select the granularity of the information about each item.
func (o GetSourcePocketConfigurationOutput) DetailType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) string { return v.DetailType }).(pulumi.StringOutput)
}

// Only return items from a particular `domain`.
func (o GetSourcePocketConfigurationOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) string { return v.Domain }).(pulumi.StringOutput)
}

// Retrieve only favorited items.
func (o GetSourcePocketConfigurationOutput) Favorite() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) bool { return v.Favorite }).(pulumi.BoolOutput)
}

// Only return items whose title or url contain the `search` string.
func (o GetSourcePocketConfigurationOutput) Search() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) string { return v.Search }).(pulumi.StringOutput)
}

// Only return items modified since the given timestamp.
func (o GetSourcePocketConfigurationOutput) Since() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) string { return v.Since }).(pulumi.StringOutput)
}

// must be one of ["newest", "oldest", "title", "site"]
// Sort retrieved items by the given criteria.
func (o GetSourcePocketConfigurationOutput) Sort() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) string { return v.Sort }).(pulumi.StringOutput)
}

// must be one of ["pocket"]
func (o GetSourcePocketConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// must be one of ["unread", "archive", "all"]
// Select the state of the items to retrieve.
func (o GetSourcePocketConfigurationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) string { return v.State }).(pulumi.StringOutput)
}

// Return only items tagged with this tag name. Use *untagged* for retrieving only untagged items.
func (o GetSourcePocketConfigurationOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePocketConfiguration) string { return v.Tag }).(pulumi.StringOutput)
}

type GetSourcePokeapiConfiguration struct {
	// Pokemon requested from the API.
	PokemonName string `pulumi:"pokemonName"`
	// must be one of ["pokeapi"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourcePokeapiConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePokeapiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePokeapiConfiguration)(nil)).Elem()
}

func (o GetSourcePokeapiConfigurationOutput) ToGetSourcePokeapiConfigurationOutput() GetSourcePokeapiConfigurationOutput {
	return o
}

func (o GetSourcePokeapiConfigurationOutput) ToGetSourcePokeapiConfigurationOutputWithContext(ctx context.Context) GetSourcePokeapiConfigurationOutput {
	return o
}

// Pokemon requested from the API.
func (o GetSourcePokeapiConfigurationOutput) PokemonName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePokeapiConfiguration) string { return v.PokemonName }).(pulumi.StringOutput)
}

// must be one of ["pokeapi"]
func (o GetSourcePokeapiConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePokeapiConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourcePolygonStockApiConfiguration struct {
	// Determines whether or not the results are adjusted for splits. By default, results are adjusted and set to true. Set this to false to get results that are NOT adjusted for splits.
	Adjusted string `pulumi:"adjusted"`
	// Your API ACCESS Key
	ApiKey string `pulumi:"apiKey"`
	// The target date for the aggregate window.
	EndDate string `pulumi:"endDate"`
	// The target date for the aggregate window.
	Limit int `pulumi:"limit"`
	// The size of the timespan multiplier.
	Multiplier int `pulumi:"multiplier"`
	// Sort the results by timestamp. asc will return results in ascending order (oldest at the top), desc will return results in descending order (newest at the top).
	Sort string `pulumi:"sort"`
	// must be one of ["polygon-stock-api"]
	SourceType string `pulumi:"sourceType"`
	// The beginning date for the aggregate window.
	StartDate string `pulumi:"startDate"`
	// The exchange symbol that this item is traded under.
	StocksTicker string `pulumi:"stocksTicker"`
	// The size of the time window.
	Timespan string `pulumi:"timespan"`
}

type GetSourcePolygonStockApiConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePolygonStockApiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePolygonStockApiConfiguration)(nil)).Elem()
}

func (o GetSourcePolygonStockApiConfigurationOutput) ToGetSourcePolygonStockApiConfigurationOutput() GetSourcePolygonStockApiConfigurationOutput {
	return o
}

func (o GetSourcePolygonStockApiConfigurationOutput) ToGetSourcePolygonStockApiConfigurationOutputWithContext(ctx context.Context) GetSourcePolygonStockApiConfigurationOutput {
	return o
}

// Determines whether or not the results are adjusted for splits. By default, results are adjusted and set to true. Set this to false to get results that are NOT adjusted for splits.
func (o GetSourcePolygonStockApiConfigurationOutput) Adjusted() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePolygonStockApiConfiguration) string { return v.Adjusted }).(pulumi.StringOutput)
}

// Your API ACCESS Key
func (o GetSourcePolygonStockApiConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePolygonStockApiConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// The target date for the aggregate window.
func (o GetSourcePolygonStockApiConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePolygonStockApiConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// The target date for the aggregate window.
func (o GetSourcePolygonStockApiConfigurationOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePolygonStockApiConfiguration) int { return v.Limit }).(pulumi.IntOutput)
}

// The size of the timespan multiplier.
func (o GetSourcePolygonStockApiConfigurationOutput) Multiplier() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePolygonStockApiConfiguration) int { return v.Multiplier }).(pulumi.IntOutput)
}

// Sort the results by timestamp. asc will return results in ascending order (oldest at the top), desc will return results in descending order (newest at the top).
func (o GetSourcePolygonStockApiConfigurationOutput) Sort() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePolygonStockApiConfiguration) string { return v.Sort }).(pulumi.StringOutput)
}

// must be one of ["polygon-stock-api"]
func (o GetSourcePolygonStockApiConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePolygonStockApiConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The beginning date for the aggregate window.
func (o GetSourcePolygonStockApiConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePolygonStockApiConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// The exchange symbol that this item is traded under.
func (o GetSourcePolygonStockApiConfigurationOutput) StocksTicker() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePolygonStockApiConfiguration) string { return v.StocksTicker }).(pulumi.StringOutput)
}

// The size of the time window.
func (o GetSourcePolygonStockApiConfigurationOutput) Timespan() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePolygonStockApiConfiguration) string { return v.Timespan }).(pulumi.StringOutput)
}

type GetSourcePostgresConfiguration struct {
	// Name of the database.
	Database string `pulumi:"database"`
	// Hostname of the database.
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about \n\nJDBC URL parameters\n\n.
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// Password associated with the username.
	Password string `pulumi:"password"`
	// Port of the database.
	Port int `pulumi:"port"`
	// Replication method for extracting data from the database.
	ReplicationMethod GetSourcePostgresConfigurationReplicationMethod `pulumi:"replicationMethod"`
	// The list of schemas (case sensitive) to sync from. Defaults to public.
	Schemas []string `pulumi:"schemas"`
	// must be one of ["postgres"]
	SourceType string `pulumi:"sourceType"`
	// SSL connection modes.
	// Read more \n\n in the docs\n\n.
	SslMode GetSourcePostgresConfigurationSslMode `pulumi:"sslMode"`
	// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
	TunnelMethod GetSourcePostgresConfigurationTunnelMethod `pulumi:"tunnelMethod"`
	// Username to access the database.
	Username string `pulumi:"username"`
}

type GetSourcePostgresConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfiguration)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationOutput) ToGetSourcePostgresConfigurationOutput() GetSourcePostgresConfigurationOutput {
	return o
}

func (o GetSourcePostgresConfigurationOutput) ToGetSourcePostgresConfigurationOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationOutput {
	return o
}

// Name of the database.
func (o GetSourcePostgresConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// Hostname of the database.
func (o GetSourcePostgresConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (Eg. key1=value1&key2=value2&key3=value3). For more information read about \n\nJDBC URL parameters\n\n.
func (o GetSourcePostgresConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// Password associated with the username.
func (o GetSourcePostgresConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Port of the database.
func (o GetSourcePostgresConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePostgresConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// Replication method for extracting data from the database.
func (o GetSourcePostgresConfigurationOutput) ReplicationMethod() GetSourcePostgresConfigurationReplicationMethodOutput {
	return o.ApplyT(func(v GetSourcePostgresConfiguration) GetSourcePostgresConfigurationReplicationMethod {
		return v.ReplicationMethod
	}).(GetSourcePostgresConfigurationReplicationMethodOutput)
}

// The list of schemas (case sensitive) to sync from. Defaults to public.
func (o GetSourcePostgresConfigurationOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourcePostgresConfiguration) []string { return v.Schemas }).(pulumi.StringArrayOutput)
}

// must be one of ["postgres"]
func (o GetSourcePostgresConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// SSL connection modes.
// Read more \n\n in the docs\n\n.
func (o GetSourcePostgresConfigurationOutput) SslMode() GetSourcePostgresConfigurationSslModeOutput {
	return o.ApplyT(func(v GetSourcePostgresConfiguration) GetSourcePostgresConfigurationSslMode { return v.SslMode }).(GetSourcePostgresConfigurationSslModeOutput)
}

// Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use.
func (o GetSourcePostgresConfigurationOutput) TunnelMethod() GetSourcePostgresConfigurationTunnelMethodOutput {
	return o.ApplyT(func(v GetSourcePostgresConfiguration) GetSourcePostgresConfigurationTunnelMethod {
		return v.TunnelMethod
	}).(GetSourcePostgresConfigurationTunnelMethodOutput)
}

// Username to access the database.
func (o GetSourcePostgresConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationReplicationMethod struct {
	SourcePostgresReplicationMethodLogicalReplicationCdc       GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc       `pulumi:"sourcePostgresReplicationMethodLogicalReplicationCdc"`
	SourcePostgresReplicationMethodStandard                    GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard                    `pulumi:"sourcePostgresReplicationMethodStandard"`
	SourcePostgresReplicationMethodStandardXmin                GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin                `pulumi:"sourcePostgresReplicationMethodStandardXmin"`
	SourcePostgresUpdateReplicationMethodLogicalReplicationCdc GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc `pulumi:"sourcePostgresUpdateReplicationMethodLogicalReplicationCdc"`
	SourcePostgresUpdateReplicationMethodStandard              GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard              `pulumi:"sourcePostgresUpdateReplicationMethodStandard"`
	SourcePostgresUpdateReplicationMethodStandardXmin          GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin          `pulumi:"sourcePostgresUpdateReplicationMethodStandardXmin"`
}

type GetSourcePostgresConfigurationReplicationMethodOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationReplicationMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationReplicationMethod)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationReplicationMethodOutput) ToGetSourcePostgresConfigurationReplicationMethodOutput() GetSourcePostgresConfigurationReplicationMethodOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodOutput) ToGetSourcePostgresConfigurationReplicationMethodOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationReplicationMethodOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodOutput) SourcePostgresReplicationMethodLogicalReplicationCdc() GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethod) GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc {
		return v.SourcePostgresReplicationMethodLogicalReplicationCdc
	}).(GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodOutput) SourcePostgresReplicationMethodStandard() GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethod) GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard {
		return v.SourcePostgresReplicationMethodStandard
	}).(GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodOutput) SourcePostgresReplicationMethodStandardXmin() GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethod) GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin {
		return v.SourcePostgresReplicationMethodStandardXmin
	}).(GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodOutput) SourcePostgresUpdateReplicationMethodLogicalReplicationCdc() GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethod) GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc {
		return v.SourcePostgresUpdateReplicationMethodLogicalReplicationCdc
	}).(GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodOutput) SourcePostgresUpdateReplicationMethodStandard() GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethod) GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard {
		return v.SourcePostgresUpdateReplicationMethodStandard
	}).(GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodOutput) SourcePostgresUpdateReplicationMethodStandardXmin() GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethod) GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin {
		return v.SourcePostgresUpdateReplicationMethodStandardXmin
	}).(GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutput)
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc struct {
	AdditionalProperties  *string `pulumi:"additionalProperties"`
	InitialWaitingSeconds int     `pulumi:"initialWaitingSeconds"`
	LsnCommitBehaviour    string  `pulumi:"lsnCommitBehaviour"`
	Method                string  `pulumi:"method"`
	Plugin                string  `pulumi:"plugin"`
	Publication           string  `pulumi:"publication"`
	QueueSize             int     `pulumi:"queueSize"`
	ReplicationSlot       string  `pulumi:"replicationSlot"`
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput() GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput) InitialWaitingSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc) int {
		return v.InitialWaitingSeconds
	}).(pulumi.IntOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput) LsnCommitBehaviour() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc) string {
		return v.LsnCommitBehaviour
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc) string {
		return v.Method
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput) Plugin() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc) string {
		return v.Plugin
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput) Publication() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc) string {
		return v.Publication
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput) QueueSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc) int {
		return v.QueueSize
	}).(pulumi.IntOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput) ReplicationSlot() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdc) string {
		return v.ReplicationSlot
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard struct {
	Method string `pulumi:"method"`
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutput() GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandard) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin struct {
	Method string `pulumi:"method"`
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutput() GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXmin) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc struct {
	AdditionalProperties  *string `pulumi:"additionalProperties"`
	InitialWaitingSeconds int     `pulumi:"initialWaitingSeconds"`
	LsnCommitBehaviour    string  `pulumi:"lsnCommitBehaviour"`
	Method                string  `pulumi:"method"`
	Plugin                string  `pulumi:"plugin"`
	Publication           string  `pulumi:"publication"`
	QueueSize             int     `pulumi:"queueSize"`
	ReplicationSlot       string  `pulumi:"replicationSlot"`
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput() GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput) InitialWaitingSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc) int {
		return v.InitialWaitingSeconds
	}).(pulumi.IntOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput) LsnCommitBehaviour() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.LsnCommitBehaviour
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.Method
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput) Plugin() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.Plugin
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput) Publication() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.Publication
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput) QueueSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc) int {
		return v.QueueSize
	}).(pulumi.IntOutput)
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput) ReplicationSlot() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdc) string {
		return v.ReplicationSlot
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard struct {
	Method string `pulumi:"method"`
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutput() GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandard) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin struct {
	Method string `pulumi:"method"`
}

type GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutput() GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutput) ToGetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutput {
	return o
}

func (o GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXmin) string {
		return v.Method
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslMode struct {
	SourcePostgresSslModesAllow            GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow            `pulumi:"sourcePostgresSslModesAllow"`
	SourcePostgresSslModesDisable          GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable          `pulumi:"sourcePostgresSslModesDisable"`
	SourcePostgresSslModesPrefer           GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer           `pulumi:"sourcePostgresSslModesPrefer"`
	SourcePostgresSslModesRequire          GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire          `pulumi:"sourcePostgresSslModesRequire"`
	SourcePostgresSslModesVerifyCa         GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa         `pulumi:"sourcePostgresSslModesVerifyCa"`
	SourcePostgresSslModesVerifyFull       GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull       `pulumi:"sourcePostgresSslModesVerifyFull"`
	SourcePostgresUpdateSslModesAllow      GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow      `pulumi:"sourcePostgresUpdateSslModesAllow"`
	SourcePostgresUpdateSslModesDisable    GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable    `pulumi:"sourcePostgresUpdateSslModesDisable"`
	SourcePostgresUpdateSslModesPrefer     GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer     `pulumi:"sourcePostgresUpdateSslModesPrefer"`
	SourcePostgresUpdateSslModesRequire    GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire    `pulumi:"sourcePostgresUpdateSslModesRequire"`
	SourcePostgresUpdateSslModesVerifyCa   GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa   `pulumi:"sourcePostgresUpdateSslModesVerifyCa"`
	SourcePostgresUpdateSslModesVerifyFull GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull `pulumi:"sourcePostgresUpdateSslModesVerifyFull"`
}

type GetSourcePostgresConfigurationSslModeOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslMode)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeOutput) ToGetSourcePostgresConfigurationSslModeOutput() GetSourcePostgresConfigurationSslModeOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeOutput) ToGetSourcePostgresConfigurationSslModeOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresSslModesAllow() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow {
		return v.SourcePostgresSslModesAllow
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput)
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresSslModesDisable() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable {
		return v.SourcePostgresSslModesDisable
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput)
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresSslModesPrefer() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer {
		return v.SourcePostgresSslModesPrefer
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput)
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresSslModesRequire() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire {
		return v.SourcePostgresSslModesRequire
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput)
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresSslModesVerifyCa() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa {
		return v.SourcePostgresSslModesVerifyCa
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput)
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresSslModesVerifyFull() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull {
		return v.SourcePostgresSslModesVerifyFull
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput)
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresUpdateSslModesAllow() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow {
		return v.SourcePostgresUpdateSslModesAllow
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput)
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresUpdateSslModesDisable() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable {
		return v.SourcePostgresUpdateSslModesDisable
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput)
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresUpdateSslModesPrefer() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer {
		return v.SourcePostgresUpdateSslModesPrefer
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput)
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresUpdateSslModesRequire() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire {
		return v.SourcePostgresUpdateSslModesRequire
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput)
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresUpdateSslModesVerifyCa() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa {
		return v.SourcePostgresUpdateSslModesVerifyCa
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput)
}

func (o GetSourcePostgresConfigurationSslModeOutput) SourcePostgresUpdateSslModesVerifyFull() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslMode) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull {
		return v.SourcePostgresUpdateSslModesVerifyFull
	}).(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllow) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisable) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPrefer) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequire) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	CaCertificate        string  `pulumi:"caCertificate"`
	ClientCertificate    string  `pulumi:"clientCertificate"`
	ClientKey            string  `pulumi:"clientKey"`
	ClientKeyPassword    string  `pulumi:"clientKeyPassword"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCa) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	CaCertificate        string  `pulumi:"caCertificate"`
	ClientCertificate    string  `pulumi:"clientCertificate"`
	ClientKey            string  `pulumi:"clientKey"`
	ClientKeyPassword    string  `pulumi:"clientKeyPassword"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput() GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull) string {
		return v.ClientKey
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFull) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllow) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisable) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPrefer) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequire) string { return v.Mode }).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	CaCertificate        string  `pulumi:"caCertificate"`
	ClientCertificate    string  `pulumi:"clientCertificate"`
	ClientKey            string  `pulumi:"clientKey"`
	ClientKeyPassword    string  `pulumi:"clientKeyPassword"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa) string {
		return v.ClientKey
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCa) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	CaCertificate        string  `pulumi:"caCertificate"`
	ClientCertificate    string  `pulumi:"clientCertificate"`
	ClientKey            string  `pulumi:"clientKey"`
	ClientKeyPassword    string  `pulumi:"clientKeyPassword"`
	Mode                 string  `pulumi:"mode"`
}

type GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput() GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput) ToGetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput {
	return o
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput) CaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull) string {
		return v.CaCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull) string {
		return v.ClientCertificate
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull) string {
		return v.ClientKey
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput) ClientKeyPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull) string {
		return v.ClientKeyPassword
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFull) string {
		return v.Mode
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationTunnelMethod struct {
	SourcePostgresSshTunnelMethodNoTunnel                     GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel                     `pulumi:"sourcePostgresSshTunnelMethodNoTunnel"`
	SourcePostgresSshTunnelMethodPasswordAuthentication       GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication       `pulumi:"sourcePostgresSshTunnelMethodPasswordAuthentication"`
	SourcePostgresSshTunnelMethodSshKeyAuthentication         GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication         `pulumi:"sourcePostgresSshTunnelMethodSshKeyAuthentication"`
	SourcePostgresUpdateSshTunnelMethodNoTunnel               GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel               `pulumi:"sourcePostgresUpdateSshTunnelMethodNoTunnel"`
	SourcePostgresUpdateSshTunnelMethodPasswordAuthentication GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication `pulumi:"sourcePostgresUpdateSshTunnelMethodPasswordAuthentication"`
	SourcePostgresUpdateSshTunnelMethodSshKeyAuthentication   GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication   `pulumi:"sourcePostgresUpdateSshTunnelMethodSshKeyAuthentication"`
}

type GetSourcePostgresConfigurationTunnelMethodOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationTunnelMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationTunnelMethod)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationTunnelMethodOutput) ToGetSourcePostgresConfigurationTunnelMethodOutput() GetSourcePostgresConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodOutput) ToGetSourcePostgresConfigurationTunnelMethodOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationTunnelMethodOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodOutput) SourcePostgresSshTunnelMethodNoTunnel() GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethod) GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel {
		return v.SourcePostgresSshTunnelMethodNoTunnel
	}).(GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodOutput) SourcePostgresSshTunnelMethodPasswordAuthentication() GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethod) GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication {
		return v.SourcePostgresSshTunnelMethodPasswordAuthentication
	}).(GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodOutput) SourcePostgresSshTunnelMethodSshKeyAuthentication() GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethod) GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication {
		return v.SourcePostgresSshTunnelMethodSshKeyAuthentication
	}).(GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodOutput) SourcePostgresUpdateSshTunnelMethodNoTunnel() GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethod) GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel {
		return v.SourcePostgresUpdateSshTunnelMethodNoTunnel
	}).(GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodOutput) SourcePostgresUpdateSshTunnelMethodPasswordAuthentication() GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethod) GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication {
		return v.SourcePostgresUpdateSshTunnelMethodPasswordAuthentication
	}).(GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodOutput) SourcePostgresUpdateSshTunnelMethodSshKeyAuthentication() GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethod) GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication {
		return v.SourcePostgresUpdateSshTunnelMethodSshKeyAuthentication
	}).(GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput)
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutput() GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput() GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput() GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel struct {
	TunnelMethod string `pulumi:"tunnelMethod"`
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutput() GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnel) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication struct {
	TunnelHost         string `pulumi:"tunnelHost"`
	TunnelMethod       string `pulumi:"tunnelMethod"`
	TunnelPort         int    `pulumi:"tunnelPort"`
	TunnelUser         string `pulumi:"tunnelUser"`
	TunnelUserPassword string `pulumi:"tunnelUserPassword"`
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput() GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput) TunnelUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthentication) string {
		return v.TunnelUserPassword
	}).(pulumi.StringOutput)
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication struct {
	SshKey       string `pulumi:"sshKey"`
	TunnelHost   string `pulumi:"tunnelHost"`
	TunnelMethod string `pulumi:"tunnelMethod"`
	TunnelPort   int    `pulumi:"tunnelPort"`
	TunnelUser   string `pulumi:"tunnelUser"`
}

type GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput() GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) ToGetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput {
	return o
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.SshKey
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelHost
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelMethod
	}).(pulumi.StringOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication) int {
		return v.TunnelPort
	}).(pulumi.IntOutput)
}

func (o GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput) TunnelUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthentication) string {
		return v.TunnelUser
	}).(pulumi.StringOutput)
}

type GetSourcePosthogConfiguration struct {
	// API Key. See the \n\ndocs\n\n for information on how to generate this key.
	ApiKey string `pulumi:"apiKey"`
	// Base PostHog url. Defaults to PostHog Cloud (https://app.posthog.com).
	BaseUrl string `pulumi:"baseUrl"`
	// must be one of ["posthog"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate the data. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourcePosthogConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePosthogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePosthogConfiguration)(nil)).Elem()
}

func (o GetSourcePosthogConfigurationOutput) ToGetSourcePosthogConfigurationOutput() GetSourcePosthogConfigurationOutput {
	return o
}

func (o GetSourcePosthogConfigurationOutput) ToGetSourcePosthogConfigurationOutputWithContext(ctx context.Context) GetSourcePosthogConfigurationOutput {
	return o
}

// API Key. See the \n\ndocs\n\n for information on how to generate this key.
func (o GetSourcePosthogConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePosthogConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Base PostHog url. Defaults to PostHog Cloud (https://app.posthog.com).
func (o GetSourcePosthogConfigurationOutput) BaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePosthogConfiguration) string { return v.BaseUrl }).(pulumi.StringOutput)
}

// must be one of ["posthog"]
func (o GetSourcePosthogConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePosthogConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate the data. Any data before this date will not be replicated.
func (o GetSourcePosthogConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePosthogConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourcePostmarkappConfiguration struct {
	// must be one of ["postmarkapp"]
	SourceType string `pulumi:"sourceType"`
	// API Key for account
	XPostmarkAccountToken string `pulumi:"xPostmarkAccountToken"`
	// API Key for server
	XPostmarkServerToken string `pulumi:"xPostmarkServerToken"`
}

type GetSourcePostmarkappConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePostmarkappConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePostmarkappConfiguration)(nil)).Elem()
}

func (o GetSourcePostmarkappConfigurationOutput) ToGetSourcePostmarkappConfigurationOutput() GetSourcePostmarkappConfigurationOutput {
	return o
}

func (o GetSourcePostmarkappConfigurationOutput) ToGetSourcePostmarkappConfigurationOutputWithContext(ctx context.Context) GetSourcePostmarkappConfigurationOutput {
	return o
}

// must be one of ["postmarkapp"]
func (o GetSourcePostmarkappConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostmarkappConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// API Key for account
func (o GetSourcePostmarkappConfigurationOutput) XPostmarkAccountToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostmarkappConfiguration) string { return v.XPostmarkAccountToken }).(pulumi.StringOutput)
}

// API Key for server
func (o GetSourcePostmarkappConfigurationOutput) XPostmarkServerToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePostmarkappConfiguration) string { return v.XPostmarkServerToken }).(pulumi.StringOutput)
}

type GetSourcePrestashopConfiguration struct {
	// Your PrestaShop access key. See \n\n the docs \n\n for info on how to obtain this.
	AccessKey string `pulumi:"accessKey"`
	// must be one of ["prestashop"]
	SourceType string `pulumi:"sourceType"`
	// The Start date in the format YYYY-MM-DD.
	StartDate string `pulumi:"startDate"`
	// Shop URL without trailing slash.
	Url string `pulumi:"url"`
}

type GetSourcePrestashopConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePrestashopConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePrestashopConfiguration)(nil)).Elem()
}

func (o GetSourcePrestashopConfigurationOutput) ToGetSourcePrestashopConfigurationOutput() GetSourcePrestashopConfigurationOutput {
	return o
}

func (o GetSourcePrestashopConfigurationOutput) ToGetSourcePrestashopConfigurationOutputWithContext(ctx context.Context) GetSourcePrestashopConfigurationOutput {
	return o
}

// Your PrestaShop access key. See \n\n the docs \n\n for info on how to obtain this.
func (o GetSourcePrestashopConfigurationOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePrestashopConfiguration) string { return v.AccessKey }).(pulumi.StringOutput)
}

// must be one of ["prestashop"]
func (o GetSourcePrestashopConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePrestashopConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The Start date in the format YYYY-MM-DD.
func (o GetSourcePrestashopConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePrestashopConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Shop URL without trailing slash.
func (o GetSourcePrestashopConfigurationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePrestashopConfiguration) string { return v.Url }).(pulumi.StringOutput)
}

type GetSourcePublicApisConfiguration struct {
	// must be one of ["public-apis"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourcePublicApisConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePublicApisConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePublicApisConfiguration)(nil)).Elem()
}

func (o GetSourcePublicApisConfigurationOutput) ToGetSourcePublicApisConfigurationOutput() GetSourcePublicApisConfigurationOutput {
	return o
}

func (o GetSourcePublicApisConfigurationOutput) ToGetSourcePublicApisConfigurationOutputWithContext(ctx context.Context) GetSourcePublicApisConfigurationOutput {
	return o
}

// must be one of ["public-apis"]
func (o GetSourcePublicApisConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePublicApisConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourcePunkApiConfiguration struct {
	// To extract specific data with Unique ID
	BrewedAfter string `pulumi:"brewedAfter"`
	// To extract specific data with Unique ID
	BrewedBefore string `pulumi:"brewedBefore"`
	// To extract specific data with Unique ID
	Id string `pulumi:"id"`
	// must be one of ["punk-api"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourcePunkApiConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePunkApiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePunkApiConfiguration)(nil)).Elem()
}

func (o GetSourcePunkApiConfigurationOutput) ToGetSourcePunkApiConfigurationOutput() GetSourcePunkApiConfigurationOutput {
	return o
}

func (o GetSourcePunkApiConfigurationOutput) ToGetSourcePunkApiConfigurationOutputWithContext(ctx context.Context) GetSourcePunkApiConfigurationOutput {
	return o
}

// To extract specific data with Unique ID
func (o GetSourcePunkApiConfigurationOutput) BrewedAfter() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePunkApiConfiguration) string { return v.BrewedAfter }).(pulumi.StringOutput)
}

// To extract specific data with Unique ID
func (o GetSourcePunkApiConfigurationOutput) BrewedBefore() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePunkApiConfiguration) string { return v.BrewedBefore }).(pulumi.StringOutput)
}

// To extract specific data with Unique ID
func (o GetSourcePunkApiConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePunkApiConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

// must be one of ["punk-api"]
func (o GetSourcePunkApiConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePunkApiConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourcePypiConfiguration struct {
	// Name of the project/package. Can only be in lowercase with hyphen. This is the name used using pip command for installing the package.
	ProjectName string `pulumi:"projectName"`
	// must be one of ["pypi"]
	SourceType string `pulumi:"sourceType"`
	// Version of the project/package.  Use it to find a particular release instead of all releases.
	Version string `pulumi:"version"`
}

type GetSourcePypiConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourcePypiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourcePypiConfiguration)(nil)).Elem()
}

func (o GetSourcePypiConfigurationOutput) ToGetSourcePypiConfigurationOutput() GetSourcePypiConfigurationOutput {
	return o
}

func (o GetSourcePypiConfigurationOutput) ToGetSourcePypiConfigurationOutputWithContext(ctx context.Context) GetSourcePypiConfigurationOutput {
	return o
}

// Name of the project/package. Can only be in lowercase with hyphen. This is the name used using pip command for installing the package.
func (o GetSourcePypiConfigurationOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePypiConfiguration) string { return v.ProjectName }).(pulumi.StringOutput)
}

// must be one of ["pypi"]
func (o GetSourcePypiConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePypiConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Version of the project/package.  Use it to find a particular release instead of all releases.
func (o GetSourcePypiConfigurationOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourcePypiConfiguration) string { return v.Version }).(pulumi.StringOutput)
}

type GetSourceQualarooConfiguration struct {
	// A Qualaroo token. See the \n\ndocs\n\n for instructions on how to generate it.
	Key string `pulumi:"key"`
	// must be one of ["qualaroo"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
	// IDs of the surveys from which you'd like to replicate data. If left empty, data from all surveys to which you have access will be replicated.
	SurveyIds []string `pulumi:"surveyIds"`
	// A Qualaroo token. See the \n\ndocs\n\n for instructions on how to generate it.
	Token string `pulumi:"token"`
}

type GetSourceQualarooConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceQualarooConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceQualarooConfiguration)(nil)).Elem()
}

func (o GetSourceQualarooConfigurationOutput) ToGetSourceQualarooConfigurationOutput() GetSourceQualarooConfigurationOutput {
	return o
}

func (o GetSourceQualarooConfigurationOutput) ToGetSourceQualarooConfigurationOutputWithContext(ctx context.Context) GetSourceQualarooConfigurationOutput {
	return o
}

// A Qualaroo token. See the \n\ndocs\n\n for instructions on how to generate it.
func (o GetSourceQualarooConfigurationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQualarooConfiguration) string { return v.Key }).(pulumi.StringOutput)
}

// must be one of ["qualaroo"]
func (o GetSourceQualarooConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQualarooConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceQualarooConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQualarooConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// IDs of the surveys from which you'd like to replicate data. If left empty, data from all surveys to which you have access will be replicated.
func (o GetSourceQualarooConfigurationOutput) SurveyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceQualarooConfiguration) []string { return v.SurveyIds }).(pulumi.StringArrayOutput)
}

// A Qualaroo token. See the \n\ndocs\n\n for instructions on how to generate it.
func (o GetSourceQualarooConfigurationOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQualarooConfiguration) string { return v.Token }).(pulumi.StringOutput)
}

type GetSourceQuickbooksConfiguration struct {
	Credentials GetSourceQuickbooksConfigurationCredentials `pulumi:"credentials"`
	// Determines whether to use the sandbox or production environment.
	Sandbox bool `pulumi:"sandbox"`
	// must be one of ["quickbooks"]
	SourceType string `pulumi:"sourceType"`
	// The default value to use if no bookmark exists for an endpoint (rfc3339 date string). E.g, 2021-03-20T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceQuickbooksConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceQuickbooksConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceQuickbooksConfiguration)(nil)).Elem()
}

func (o GetSourceQuickbooksConfigurationOutput) ToGetSourceQuickbooksConfigurationOutput() GetSourceQuickbooksConfigurationOutput {
	return o
}

func (o GetSourceQuickbooksConfigurationOutput) ToGetSourceQuickbooksConfigurationOutputWithContext(ctx context.Context) GetSourceQuickbooksConfigurationOutput {
	return o
}

func (o GetSourceQuickbooksConfigurationOutput) Credentials() GetSourceQuickbooksConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfiguration) GetSourceQuickbooksConfigurationCredentials {
		return v.Credentials
	}).(GetSourceQuickbooksConfigurationCredentialsOutput)
}

// Determines whether to use the sandbox or production environment.
func (o GetSourceQuickbooksConfigurationOutput) Sandbox() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfiguration) bool { return v.Sandbox }).(pulumi.BoolOutput)
}

// must be one of ["quickbooks"]
func (o GetSourceQuickbooksConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The default value to use if no bookmark exists for an endpoint (rfc3339 date string). E.g, 2021-03-20T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceQuickbooksConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceQuickbooksConfigurationCredentials struct {
	SourceQuickbooksAuthorizationMethodOAuth20       GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20       `pulumi:"sourceQuickbooksAuthorizationMethodOAuth20"`
	SourceQuickbooksUpdateAuthorizationMethodOAuth20 GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20 `pulumi:"sourceQuickbooksUpdateAuthorizationMethodOAuth20"`
}

type GetSourceQuickbooksConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceQuickbooksConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceQuickbooksConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceQuickbooksConfigurationCredentialsOutput) ToGetSourceQuickbooksConfigurationCredentialsOutput() GetSourceQuickbooksConfigurationCredentialsOutput {
	return o
}

func (o GetSourceQuickbooksConfigurationCredentialsOutput) ToGetSourceQuickbooksConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceQuickbooksConfigurationCredentialsOutput {
	return o
}

func (o GetSourceQuickbooksConfigurationCredentialsOutput) SourceQuickbooksAuthorizationMethodOAuth20() GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentials) GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20 {
		return v.SourceQuickbooksAuthorizationMethodOAuth20
	}).(GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output)
}

func (o GetSourceQuickbooksConfigurationCredentialsOutput) SourceQuickbooksUpdateAuthorizationMethodOAuth20() GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentials) GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20 {
		return v.SourceQuickbooksUpdateAuthorizationMethodOAuth20
	}).(GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output)
}

type GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RealmId         string `pulumi:"realmId"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output) ToGetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output() GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output) ToGetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output) RealmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20) string {
		return v.RealmId
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RealmId         string `pulumi:"realmId"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output) ToGetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output() GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output) ToGetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output) RealmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20) string {
		return v.RealmId
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceRailzConfiguration struct {
	// Client ID (client_id)
	ClientId string `pulumi:"clientId"`
	// Secret key (secret_key)
	SecretKey string `pulumi:"secretKey"`
	// must be one of ["railz"]
	SourceType string `pulumi:"sourceType"`
	// Start date
	StartDate string `pulumi:"startDate"`
}

type GetSourceRailzConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceRailzConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRailzConfiguration)(nil)).Elem()
}

func (o GetSourceRailzConfigurationOutput) ToGetSourceRailzConfigurationOutput() GetSourceRailzConfigurationOutput {
	return o
}

func (o GetSourceRailzConfigurationOutput) ToGetSourceRailzConfigurationOutputWithContext(ctx context.Context) GetSourceRailzConfigurationOutput {
	return o
}

// Client ID (client_id)
func (o GetSourceRailzConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRailzConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// Secret key (secret_key)
func (o GetSourceRailzConfigurationOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRailzConfiguration) string { return v.SecretKey }).(pulumi.StringOutput)
}

// must be one of ["railz"]
func (o GetSourceRailzConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRailzConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Start date
func (o GetSourceRailzConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRailzConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceRechargeConfiguration struct {
	// The value of the Access Token generated. See the \n\ndocs\n\n for more information.
	AccessToken string `pulumi:"accessToken"`
	// must be one of ["recharge"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for Recharge API, in the format YYYY-MM-DDT00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceRechargeConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceRechargeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRechargeConfiguration)(nil)).Elem()
}

func (o GetSourceRechargeConfigurationOutput) ToGetSourceRechargeConfigurationOutput() GetSourceRechargeConfigurationOutput {
	return o
}

func (o GetSourceRechargeConfigurationOutput) ToGetSourceRechargeConfigurationOutputWithContext(ctx context.Context) GetSourceRechargeConfigurationOutput {
	return o
}

// The value of the Access Token generated. See the \n\ndocs\n\n for more information.
func (o GetSourceRechargeConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRechargeConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// must be one of ["recharge"]
func (o GetSourceRechargeConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRechargeConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for Recharge API, in the format YYYY-MM-DDT00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceRechargeConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRechargeConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceRecreationConfiguration struct {
	// API Key
	Apikey         string `pulumi:"apikey"`
	QueryCampsites string `pulumi:"queryCampsites"`
	// must be one of ["recreation"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceRecreationConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceRecreationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRecreationConfiguration)(nil)).Elem()
}

func (o GetSourceRecreationConfigurationOutput) ToGetSourceRecreationConfigurationOutput() GetSourceRecreationConfigurationOutput {
	return o
}

func (o GetSourceRecreationConfigurationOutput) ToGetSourceRecreationConfigurationOutputWithContext(ctx context.Context) GetSourceRecreationConfigurationOutput {
	return o
}

// API Key
func (o GetSourceRecreationConfigurationOutput) Apikey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRecreationConfiguration) string { return v.Apikey }).(pulumi.StringOutput)
}

func (o GetSourceRecreationConfigurationOutput) QueryCampsites() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRecreationConfiguration) string { return v.QueryCampsites }).(pulumi.StringOutput)
}

// must be one of ["recreation"]
func (o GetSourceRecreationConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRecreationConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceRecruiteeConfiguration struct {
	// Recruitee API Key. See \n\nhere\n\n.
	ApiKey string `pulumi:"apiKey"`
	// Recruitee Company ID. You can also find this ID on the \n\nRecruitee API tokens page\n\n.
	CompanyId int `pulumi:"companyId"`
	// must be one of ["recruitee"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceRecruiteeConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceRecruiteeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRecruiteeConfiguration)(nil)).Elem()
}

func (o GetSourceRecruiteeConfigurationOutput) ToGetSourceRecruiteeConfigurationOutput() GetSourceRecruiteeConfigurationOutput {
	return o
}

func (o GetSourceRecruiteeConfigurationOutput) ToGetSourceRecruiteeConfigurationOutputWithContext(ctx context.Context) GetSourceRecruiteeConfigurationOutput {
	return o
}

// Recruitee API Key. See \n\nhere\n\n.
func (o GetSourceRecruiteeConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRecruiteeConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Recruitee Company ID. You can also find this ID on the \n\nRecruitee API tokens page\n\n.
func (o GetSourceRecruiteeConfigurationOutput) CompanyId() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceRecruiteeConfiguration) int { return v.CompanyId }).(pulumi.IntOutput)
}

// must be one of ["recruitee"]
func (o GetSourceRecruiteeConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRecruiteeConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceRecurlyConfiguration struct {
	// Recurly API Key. See the  \n\ndocs\n\n for more information on how to generate this key.
	ApiKey string `pulumi:"apiKey"`
	// ISO8601 timestamp from which the replication from Recurly API will start from.
	BeginTime string `pulumi:"beginTime"`
	// ISO8601 timestamp to which the replication from Recurly API will stop. Records after that date won't be imported.
	EndTime string `pulumi:"endTime"`
	// must be one of ["recurly"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceRecurlyConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceRecurlyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRecurlyConfiguration)(nil)).Elem()
}

func (o GetSourceRecurlyConfigurationOutput) ToGetSourceRecurlyConfigurationOutput() GetSourceRecurlyConfigurationOutput {
	return o
}

func (o GetSourceRecurlyConfigurationOutput) ToGetSourceRecurlyConfigurationOutputWithContext(ctx context.Context) GetSourceRecurlyConfigurationOutput {
	return o
}

// Recurly API Key. See the  \n\ndocs\n\n for more information on how to generate this key.
func (o GetSourceRecurlyConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRecurlyConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// ISO8601 timestamp from which the replication from Recurly API will start from.
func (o GetSourceRecurlyConfigurationOutput) BeginTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRecurlyConfiguration) string { return v.BeginTime }).(pulumi.StringOutput)
}

// ISO8601 timestamp to which the replication from Recurly API will stop. Records after that date won't be imported.
func (o GetSourceRecurlyConfigurationOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRecurlyConfiguration) string { return v.EndTime }).(pulumi.StringOutput)
}

// must be one of ["recurly"]
func (o GetSourceRecurlyConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRecurlyConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceRedshiftConfiguration struct {
	// Name of the database.
	Database string `pulumi:"database"`
	// Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com).
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// Password associated with the username.
	Password string `pulumi:"password"`
	// Port of the database.
	Port int `pulumi:"port"`
	// The list of schemas to sync from. Specify one or more explicitly or keep empty to process all schemas. Schema names are case sensitive.
	Schemas []string `pulumi:"schemas"`
	// must be one of ["redshift"]
	SourceType string `pulumi:"sourceType"`
	// Username to use to access the database.
	Username string `pulumi:"username"`
}

type GetSourceRedshiftConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceRedshiftConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRedshiftConfiguration)(nil)).Elem()
}

func (o GetSourceRedshiftConfigurationOutput) ToGetSourceRedshiftConfigurationOutput() GetSourceRedshiftConfigurationOutput {
	return o
}

func (o GetSourceRedshiftConfigurationOutput) ToGetSourceRedshiftConfigurationOutputWithContext(ctx context.Context) GetSourceRedshiftConfigurationOutput {
	return o
}

// Name of the database.
func (o GetSourceRedshiftConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRedshiftConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// Host Endpoint of the Redshift Cluster (must include the cluster-id, region and end with .redshift.amazonaws.com).
func (o GetSourceRedshiftConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRedshiftConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
func (o GetSourceRedshiftConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRedshiftConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// Password associated with the username.
func (o GetSourceRedshiftConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRedshiftConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Port of the database.
func (o GetSourceRedshiftConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceRedshiftConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// The list of schemas to sync from. Specify one or more explicitly or keep empty to process all schemas. Schema names are case sensitive.
func (o GetSourceRedshiftConfigurationOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceRedshiftConfiguration) []string { return v.Schemas }).(pulumi.StringArrayOutput)
}

// must be one of ["redshift"]
func (o GetSourceRedshiftConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRedshiftConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Username to use to access the database.
func (o GetSourceRedshiftConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRedshiftConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceRetentlyConfiguration struct {
	// Choose how to authenticate to Retently
	Credentials GetSourceRetentlyConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["retently"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceRetentlyConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceRetentlyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRetentlyConfiguration)(nil)).Elem()
}

func (o GetSourceRetentlyConfigurationOutput) ToGetSourceRetentlyConfigurationOutput() GetSourceRetentlyConfigurationOutput {
	return o
}

func (o GetSourceRetentlyConfigurationOutput) ToGetSourceRetentlyConfigurationOutputWithContext(ctx context.Context) GetSourceRetentlyConfigurationOutput {
	return o
}

// Choose how to authenticate to Retently
func (o GetSourceRetentlyConfigurationOutput) Credentials() GetSourceRetentlyConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfiguration) GetSourceRetentlyConfigurationCredentials { return v.Credentials }).(GetSourceRetentlyConfigurationCredentialsOutput)
}

// must be one of ["retently"]
func (o GetSourceRetentlyConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceRetentlyConfigurationCredentials struct {
	SourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth       GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth       `pulumi:"sourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth"`
	SourceRetentlyAuthenticationMechanismAuthenticateWithApiToken           GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken           `pulumi:"sourceRetentlyAuthenticationMechanismAuthenticateWithApiToken"`
	SourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth `pulumi:"sourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth"`
	SourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken     GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken     `pulumi:"sourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken"`
}

type GetSourceRetentlyConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceRetentlyConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRetentlyConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceRetentlyConfigurationCredentialsOutput) ToGetSourceRetentlyConfigurationCredentialsOutput() GetSourceRetentlyConfigurationCredentialsOutput {
	return o
}

func (o GetSourceRetentlyConfigurationCredentialsOutput) ToGetSourceRetentlyConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceRetentlyConfigurationCredentialsOutput {
	return o
}

func (o GetSourceRetentlyConfigurationCredentialsOutput) SourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth() GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentials) GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth {
		return v.SourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth
	}).(GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsOutput) SourceRetentlyAuthenticationMechanismAuthenticateWithApiToken() GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentials) GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken {
		return v.SourceRetentlyAuthenticationMechanismAuthenticateWithApiToken
	}).(GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsOutput) SourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth() GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentials) GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth {
		return v.SourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth
	}).(GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsOutput) SourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken() GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentials) GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken {
		return v.SourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken
	}).(GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput)
}

type GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	AuthType             string  `pulumi:"authType"`
	ClientId             string  `pulumi:"clientId"`
	ClientSecret         string  `pulumi:"clientSecret"`
	RefreshToken         string  `pulumi:"refreshToken"`
}

type GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth)(nil)).Elem()
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) ToGetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput() GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput {
	return o
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) ToGetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutputWithContext(ctx context.Context) GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput {
	return o
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ApiKey               string  `pulumi:"apiKey"`
	AuthType             string  `pulumi:"authType"`
}

type GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken)(nil)).Elem()
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput) ToGetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput() GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput {
	return o
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput) ToGetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutputWithContext(ctx context.Context) GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput {
	return o
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	AuthType             string  `pulumi:"authType"`
	ClientId             string  `pulumi:"clientId"`
	ClientSecret         string  `pulumi:"clientSecret"`
	RefreshToken         string  `pulumi:"refreshToken"`
}

type GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth)(nil)).Elem()
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) ToGetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput() GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput {
	return o
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) ToGetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutputWithContext(ctx context.Context) GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput {
	return o
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ApiKey               string  `pulumi:"apiKey"`
	AuthType             string  `pulumi:"authType"`
}

type GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken)(nil)).Elem()
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput) ToGetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput() GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput {
	return o
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput) ToGetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutputWithContext(ctx context.Context) GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput {
	return o
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

func (o GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceRkiCovidConfiguration struct {
	// must be one of ["rki-covid"]
	SourceType string `pulumi:"sourceType"`
	// UTC date in the format 2017-01-25. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceRkiCovidConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceRkiCovidConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRkiCovidConfiguration)(nil)).Elem()
}

func (o GetSourceRkiCovidConfigurationOutput) ToGetSourceRkiCovidConfigurationOutput() GetSourceRkiCovidConfigurationOutput {
	return o
}

func (o GetSourceRkiCovidConfigurationOutput) ToGetSourceRkiCovidConfigurationOutputWithContext(ctx context.Context) GetSourceRkiCovidConfigurationOutput {
	return o
}

// must be one of ["rki-covid"]
func (o GetSourceRkiCovidConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRkiCovidConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date in the format 2017-01-25. Any data before this date will not be replicated.
func (o GetSourceRkiCovidConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRkiCovidConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceRssConfiguration struct {
	// must be one of ["rss"]
	SourceType string `pulumi:"sourceType"`
	// RSS Feed URL
	Url string `pulumi:"url"`
}

type GetSourceRssConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceRssConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceRssConfiguration)(nil)).Elem()
}

func (o GetSourceRssConfigurationOutput) ToGetSourceRssConfigurationOutput() GetSourceRssConfigurationOutput {
	return o
}

func (o GetSourceRssConfigurationOutput) ToGetSourceRssConfigurationOutputWithContext(ctx context.Context) GetSourceRssConfigurationOutput {
	return o
}

// must be one of ["rss"]
func (o GetSourceRssConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRssConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// RSS Feed URL
func (o GetSourceRssConfigurationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceRssConfiguration) string { return v.Url }).(pulumi.StringOutput)
}

type GetSourceS3Configuration struct {
	// The name of the stream you would like this source to output. Can contain letters, numbers, or underscores.
	Dataset string `pulumi:"dataset"`
	// The format of the files you'd like to replicate
	Format GetSourceS3ConfigurationFormat `pulumi:"format"`
	// A regular expression which tells the connector which files to replicate. All files which match this pattern will be replicated. Use | to separate multiple patterns. See \n\nthis page\n\n to understand pattern syntax (GLOBSTAR and SPLIT flags are enabled). Use pattern \n\n**\n\n to pick up all files.
	PathPattern string `pulumi:"pathPattern"`
	// Use this to load files from S3 or S3-compatible services
	Provider GetSourceS3ConfigurationProvider `pulumi:"provider"`
	// Optionally provide a schema to enforce, as a valid JSON string. Ensure this is a mapping of \n\n{ "column" : "type" }\n\n, where types are valid \n\nJSON Schema datatypes\n\n. Leave as {} to auto-infer the schema.
	Schema string `pulumi:"schema"`
	// must be one of ["s3"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceS3ConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceS3Configuration)(nil)).Elem()
}

func (o GetSourceS3ConfigurationOutput) ToGetSourceS3ConfigurationOutput() GetSourceS3ConfigurationOutput {
	return o
}

func (o GetSourceS3ConfigurationOutput) ToGetSourceS3ConfigurationOutputWithContext(ctx context.Context) GetSourceS3ConfigurationOutput {
	return o
}

// The name of the stream you would like this source to output. Can contain letters, numbers, or underscores.
func (o GetSourceS3ConfigurationOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3Configuration) string { return v.Dataset }).(pulumi.StringOutput)
}

// The format of the files you'd like to replicate
func (o GetSourceS3ConfigurationOutput) Format() GetSourceS3ConfigurationFormatOutput {
	return o.ApplyT(func(v GetSourceS3Configuration) GetSourceS3ConfigurationFormat { return v.Format }).(GetSourceS3ConfigurationFormatOutput)
}

// A regular expression which tells the connector which files to replicate. All files which match this pattern will be replicated. Use | to separate multiple patterns. See \n\nthis page\n\n to understand pattern syntax (GLOBSTAR and SPLIT flags are enabled). Use pattern \n\n**\n\n to pick up all files.
func (o GetSourceS3ConfigurationOutput) PathPattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3Configuration) string { return v.PathPattern }).(pulumi.StringOutput)
}

// Use this to load files from S3 or S3-compatible services
func (o GetSourceS3ConfigurationOutput) Provider() GetSourceS3ConfigurationProviderOutput {
	return o.ApplyT(func(v GetSourceS3Configuration) GetSourceS3ConfigurationProvider { return v.Provider }).(GetSourceS3ConfigurationProviderOutput)
}

// Optionally provide a schema to enforce, as a valid JSON string. Ensure this is a mapping of \n\n{ "column" : "type" }\n\n, where types are valid \n\nJSON Schema datatypes\n\n. Leave as {} to auto-infer the schema.
func (o GetSourceS3ConfigurationOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3Configuration) string { return v.Schema }).(pulumi.StringOutput)
}

// must be one of ["s3"]
func (o GetSourceS3ConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3Configuration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceS3ConfigurationFormat struct {
	SourceS3FileFormatAvro          GetSourceS3ConfigurationFormatSourceS3FileFormatAvro          `pulumi:"sourceS3FileFormatAvro"`
	SourceS3FileFormatCsv           GetSourceS3ConfigurationFormatSourceS3FileFormatCsv           `pulumi:"sourceS3FileFormatCsv"`
	SourceS3FileFormatJsonl         GetSourceS3ConfigurationFormatSourceS3FileFormatJsonl         `pulumi:"sourceS3FileFormatJsonl"`
	SourceS3FileFormatParquet       GetSourceS3ConfigurationFormatSourceS3FileFormatParquet       `pulumi:"sourceS3FileFormatParquet"`
	SourceS3UpdateFileFormatAvro    GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro    `pulumi:"sourceS3UpdateFileFormatAvro"`
	SourceS3UpdateFileFormatCsv     GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv     `pulumi:"sourceS3UpdateFileFormatCsv"`
	SourceS3UpdateFileFormatJsonl   GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl   `pulumi:"sourceS3UpdateFileFormatJsonl"`
	SourceS3UpdateFileFormatParquet GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet `pulumi:"sourceS3UpdateFileFormatParquet"`
}

type GetSourceS3ConfigurationFormatOutput struct{ *pulumi.OutputState }

func (GetSourceS3ConfigurationFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceS3ConfigurationFormat)(nil)).Elem()
}

func (o GetSourceS3ConfigurationFormatOutput) ToGetSourceS3ConfigurationFormatOutput() GetSourceS3ConfigurationFormatOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatOutput) ToGetSourceS3ConfigurationFormatOutputWithContext(ctx context.Context) GetSourceS3ConfigurationFormatOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatOutput) SourceS3FileFormatAvro() GetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormat) GetSourceS3ConfigurationFormatSourceS3FileFormatAvro {
		return v.SourceS3FileFormatAvro
	}).(GetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutput)
}

func (o GetSourceS3ConfigurationFormatOutput) SourceS3FileFormatCsv() GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormat) GetSourceS3ConfigurationFormatSourceS3FileFormatCsv {
		return v.SourceS3FileFormatCsv
	}).(GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput)
}

func (o GetSourceS3ConfigurationFormatOutput) SourceS3FileFormatJsonl() GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormat) GetSourceS3ConfigurationFormatSourceS3FileFormatJsonl {
		return v.SourceS3FileFormatJsonl
	}).(GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput)
}

func (o GetSourceS3ConfigurationFormatOutput) SourceS3FileFormatParquet() GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormat) GetSourceS3ConfigurationFormatSourceS3FileFormatParquet {
		return v.SourceS3FileFormatParquet
	}).(GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput)
}

func (o GetSourceS3ConfigurationFormatOutput) SourceS3UpdateFileFormatAvro() GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormat) GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro {
		return v.SourceS3UpdateFileFormatAvro
	}).(GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutput)
}

func (o GetSourceS3ConfigurationFormatOutput) SourceS3UpdateFileFormatCsv() GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormat) GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv {
		return v.SourceS3UpdateFileFormatCsv
	}).(GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput)
}

func (o GetSourceS3ConfigurationFormatOutput) SourceS3UpdateFileFormatJsonl() GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormat) GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl {
		return v.SourceS3UpdateFileFormatJsonl
	}).(GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput)
}

func (o GetSourceS3ConfigurationFormatOutput) SourceS3UpdateFileFormatParquet() GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormat) GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet {
		return v.SourceS3UpdateFileFormatParquet
	}).(GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput)
}

type GetSourceS3ConfigurationFormatSourceS3FileFormatAvro struct {
	Filetype string `pulumi:"filetype"`
}

type GetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutput struct{ *pulumi.OutputState }

func (GetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceS3ConfigurationFormatSourceS3FileFormatAvro)(nil)).Elem()
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutput) ToGetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutput() GetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutput) ToGetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutputWithContext(ctx context.Context) GetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutput) Filetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatAvro) string { return v.Filetype }).(pulumi.StringOutput)
}

type GetSourceS3ConfigurationFormatSourceS3FileFormatCsv struct {
	AdditionalReaderOptions string `pulumi:"additionalReaderOptions"`
	AdvancedOptions         string `pulumi:"advancedOptions"`
	BlockSize               int    `pulumi:"blockSize"`
	Delimiter               string `pulumi:"delimiter"`
	DoubleQuote             bool   `pulumi:"doubleQuote"`
	Encoding                string `pulumi:"encoding"`
	EscapeChar              string `pulumi:"escapeChar"`
	Filetype                string `pulumi:"filetype"`
	InferDatatypes          bool   `pulumi:"inferDatatypes"`
	NewlinesInValues        bool   `pulumi:"newlinesInValues"`
	QuoteChar               string `pulumi:"quoteChar"`
}

type GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput struct{ *pulumi.OutputState }

func (GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceS3ConfigurationFormatSourceS3FileFormatCsv)(nil)).Elem()
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) ToGetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput() GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) ToGetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutputWithContext(ctx context.Context) GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) AdditionalReaderOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatCsv) string { return v.AdditionalReaderOptions }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) AdvancedOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatCsv) string { return v.AdvancedOptions }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) BlockSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatCsv) int { return v.BlockSize }).(pulumi.IntOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatCsv) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) DoubleQuote() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatCsv) bool { return v.DoubleQuote }).(pulumi.BoolOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) Encoding() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatCsv) string { return v.Encoding }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) EscapeChar() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatCsv) string { return v.EscapeChar }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) Filetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatCsv) string { return v.Filetype }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) InferDatatypes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatCsv) bool { return v.InferDatatypes }).(pulumi.BoolOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) NewlinesInValues() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatCsv) bool { return v.NewlinesInValues }).(pulumi.BoolOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput) QuoteChar() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatCsv) string { return v.QuoteChar }).(pulumi.StringOutput)
}

type GetSourceS3ConfigurationFormatSourceS3FileFormatJsonl struct {
	BlockSize               int    `pulumi:"blockSize"`
	Filetype                string `pulumi:"filetype"`
	NewlinesInValues        bool   `pulumi:"newlinesInValues"`
	UnexpectedFieldBehavior string `pulumi:"unexpectedFieldBehavior"`
}

type GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput struct{ *pulumi.OutputState }

func (GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceS3ConfigurationFormatSourceS3FileFormatJsonl)(nil)).Elem()
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput) ToGetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput() GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput) ToGetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutputWithContext(ctx context.Context) GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput) BlockSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatJsonl) int { return v.BlockSize }).(pulumi.IntOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput) Filetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatJsonl) string { return v.Filetype }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput) NewlinesInValues() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatJsonl) bool { return v.NewlinesInValues }).(pulumi.BoolOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput) UnexpectedFieldBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatJsonl) string { return v.UnexpectedFieldBehavior }).(pulumi.StringOutput)
}

type GetSourceS3ConfigurationFormatSourceS3FileFormatParquet struct {
	BatchSize  int      `pulumi:"batchSize"`
	BufferSize int      `pulumi:"bufferSize"`
	Columns    []string `pulumi:"columns"`
	Filetype   string   `pulumi:"filetype"`
}

type GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput struct{ *pulumi.OutputState }

func (GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceS3ConfigurationFormatSourceS3FileFormatParquet)(nil)).Elem()
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput) ToGetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput() GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput) ToGetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutputWithContext(ctx context.Context) GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput) BatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatParquet) int { return v.BatchSize }).(pulumi.IntOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput) BufferSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatParquet) int { return v.BufferSize }).(pulumi.IntOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatParquet) []string { return v.Columns }).(pulumi.StringArrayOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput) Filetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3FileFormatParquet) string { return v.Filetype }).(pulumi.StringOutput)
}

type GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro struct {
	Filetype string `pulumi:"filetype"`
}

type GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutput struct{ *pulumi.OutputState }

func (GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro)(nil)).Elem()
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutput) ToGetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutput() GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutput) ToGetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutputWithContext(ctx context.Context) GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutput) Filetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvro) string { return v.Filetype }).(pulumi.StringOutput)
}

type GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv struct {
	AdditionalReaderOptions string `pulumi:"additionalReaderOptions"`
	AdvancedOptions         string `pulumi:"advancedOptions"`
	BlockSize               int    `pulumi:"blockSize"`
	Delimiter               string `pulumi:"delimiter"`
	DoubleQuote             bool   `pulumi:"doubleQuote"`
	Encoding                string `pulumi:"encoding"`
	EscapeChar              string `pulumi:"escapeChar"`
	Filetype                string `pulumi:"filetype"`
	InferDatatypes          bool   `pulumi:"inferDatatypes"`
	NewlinesInValues        bool   `pulumi:"newlinesInValues"`
	QuoteChar               string `pulumi:"quoteChar"`
}

type GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput struct{ *pulumi.OutputState }

func (GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv)(nil)).Elem()
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) ToGetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput() GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) ToGetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutputWithContext(ctx context.Context) GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) AdditionalReaderOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv) string {
		return v.AdditionalReaderOptions
	}).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) AdvancedOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv) string { return v.AdvancedOptions }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) BlockSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv) int { return v.BlockSize }).(pulumi.IntOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) DoubleQuote() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv) bool { return v.DoubleQuote }).(pulumi.BoolOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) Encoding() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv) string { return v.Encoding }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) EscapeChar() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv) string { return v.EscapeChar }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) Filetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv) string { return v.Filetype }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) InferDatatypes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv) bool { return v.InferDatatypes }).(pulumi.BoolOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) NewlinesInValues() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv) bool { return v.NewlinesInValues }).(pulumi.BoolOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput) QuoteChar() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsv) string { return v.QuoteChar }).(pulumi.StringOutput)
}

type GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl struct {
	BlockSize               int    `pulumi:"blockSize"`
	Filetype                string `pulumi:"filetype"`
	NewlinesInValues        bool   `pulumi:"newlinesInValues"`
	UnexpectedFieldBehavior string `pulumi:"unexpectedFieldBehavior"`
}

type GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput struct{ *pulumi.OutputState }

func (GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl)(nil)).Elem()
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput) ToGetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput() GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput) ToGetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutputWithContext(ctx context.Context) GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput) BlockSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl) int { return v.BlockSize }).(pulumi.IntOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput) Filetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl) string { return v.Filetype }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput) NewlinesInValues() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl) bool { return v.NewlinesInValues }).(pulumi.BoolOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput) UnexpectedFieldBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonl) string {
		return v.UnexpectedFieldBehavior
	}).(pulumi.StringOutput)
}

type GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet struct {
	BatchSize  int      `pulumi:"batchSize"`
	BufferSize int      `pulumi:"bufferSize"`
	Columns    []string `pulumi:"columns"`
	Filetype   string   `pulumi:"filetype"`
}

type GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput struct{ *pulumi.OutputState }

func (GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet)(nil)).Elem()
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput) ToGetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput() GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput) ToGetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutputWithContext(ctx context.Context) GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput {
	return o
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput) BatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet) int { return v.BatchSize }).(pulumi.IntOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput) BufferSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet) int { return v.BufferSize }).(pulumi.IntOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet) []string { return v.Columns }).(pulumi.StringArrayOutput)
}

func (o GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput) Filetype() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquet) string { return v.Filetype }).(pulumi.StringOutput)
}

type GetSourceS3ConfigurationProvider struct {
	AwsAccessKeyId     string `pulumi:"awsAccessKeyId"`
	AwsSecretAccessKey string `pulumi:"awsSecretAccessKey"`
	Bucket             string `pulumi:"bucket"`
	Endpoint           string `pulumi:"endpoint"`
	PathPrefix         string `pulumi:"pathPrefix"`
	StartDate          string `pulumi:"startDate"`
}

type GetSourceS3ConfigurationProviderOutput struct{ *pulumi.OutputState }

func (GetSourceS3ConfigurationProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceS3ConfigurationProvider)(nil)).Elem()
}

func (o GetSourceS3ConfigurationProviderOutput) ToGetSourceS3ConfigurationProviderOutput() GetSourceS3ConfigurationProviderOutput {
	return o
}

func (o GetSourceS3ConfigurationProviderOutput) ToGetSourceS3ConfigurationProviderOutputWithContext(ctx context.Context) GetSourceS3ConfigurationProviderOutput {
	return o
}

func (o GetSourceS3ConfigurationProviderOutput) AwsAccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationProvider) string { return v.AwsAccessKeyId }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationProviderOutput) AwsSecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationProvider) string { return v.AwsSecretAccessKey }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationProviderOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationProvider) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationProviderOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationProvider) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationProviderOutput) PathPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationProvider) string { return v.PathPrefix }).(pulumi.StringOutput)
}

func (o GetSourceS3ConfigurationProviderOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceS3ConfigurationProvider) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceSalesforceConfiguration struct {
	// must be one of ["Client"]
	AuthType string `pulumi:"authType"`
	// Enter your Salesforce developer application's \n\nClient ID\n\n
	ClientId string `pulumi:"clientId"`
	// Enter your Salesforce developer application's \n\nClient secret\n\n
	ClientSecret string `pulumi:"clientSecret"`
	// Toggle to use Bulk API (this might cause empty fields for some streams)
	ForceUseBulkApi bool `pulumi:"forceUseBulkApi"`
	// Toggle if you're using a \n\nSalesforce Sandbox\n\n
	IsSandbox bool `pulumi:"isSandbox"`
	// Enter your application's \n\nSalesforce Refresh Token\n\n used for Airbyte to access your Salesforce account.
	RefreshToken string `pulumi:"refreshToken"`
	// must be one of ["salesforce"]
	SourceType string `pulumi:"sourceType"`
	// Enter the date (or date-time) in the YYYY-MM-DD or YYYY-MM-DDTHH:mm:ssZ format. Airbyte will replicate the data updated on and after this date. If this field is blank, Airbyte will replicate the data for last two years.
	StartDate string `pulumi:"startDate"`
	// Add filters to select only required stream based on `SObject` name. Use this field to filter which tables are displayed by this connector. This is useful if your Salesforce account has a large number of tables (>1000), in which case you may find it easier to navigate the UI and speed up the connector's performance if you restrict the tables displayed by this connector.
	StreamsCriterias []GetSourceSalesforceConfigurationStreamsCriteria `pulumi:"streamsCriterias"`
}

type GetSourceSalesforceConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSalesforceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSalesforceConfiguration)(nil)).Elem()
}

func (o GetSourceSalesforceConfigurationOutput) ToGetSourceSalesforceConfigurationOutput() GetSourceSalesforceConfigurationOutput {
	return o
}

func (o GetSourceSalesforceConfigurationOutput) ToGetSourceSalesforceConfigurationOutputWithContext(ctx context.Context) GetSourceSalesforceConfigurationOutput {
	return o
}

// must be one of ["Client"]
func (o GetSourceSalesforceConfigurationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesforceConfiguration) string { return v.AuthType }).(pulumi.StringOutput)
}

// Enter your Salesforce developer application's \n\nClient ID\n\n
func (o GetSourceSalesforceConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesforceConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// Enter your Salesforce developer application's \n\nClient secret\n\n
func (o GetSourceSalesforceConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesforceConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// Toggle to use Bulk API (this might cause empty fields for some streams)
func (o GetSourceSalesforceConfigurationOutput) ForceUseBulkApi() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceSalesforceConfiguration) bool { return v.ForceUseBulkApi }).(pulumi.BoolOutput)
}

// Toggle if you're using a \n\nSalesforce Sandbox\n\n
func (o GetSourceSalesforceConfigurationOutput) IsSandbox() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceSalesforceConfiguration) bool { return v.IsSandbox }).(pulumi.BoolOutput)
}

// Enter your application's \n\nSalesforce Refresh Token\n\n used for Airbyte to access your Salesforce account.
func (o GetSourceSalesforceConfigurationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesforceConfiguration) string { return v.RefreshToken }).(pulumi.StringOutput)
}

// must be one of ["salesforce"]
func (o GetSourceSalesforceConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesforceConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Enter the date (or date-time) in the YYYY-MM-DD or YYYY-MM-DDTHH:mm:ssZ format. Airbyte will replicate the data updated on and after this date. If this field is blank, Airbyte will replicate the data for last two years.
func (o GetSourceSalesforceConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesforceConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Add filters to select only required stream based on `SObject` name. Use this field to filter which tables are displayed by this connector. This is useful if your Salesforce account has a large number of tables (>1000), in which case you may find it easier to navigate the UI and speed up the connector's performance if you restrict the tables displayed by this connector.
func (o GetSourceSalesforceConfigurationOutput) StreamsCriterias() GetSourceSalesforceConfigurationStreamsCriteriaArrayOutput {
	return o.ApplyT(func(v GetSourceSalesforceConfiguration) []GetSourceSalesforceConfigurationStreamsCriteria {
		return v.StreamsCriterias
	}).(GetSourceSalesforceConfigurationStreamsCriteriaArrayOutput)
}

type GetSourceSalesforceConfigurationStreamsCriteria struct {
	Criteria string `pulumi:"criteria"`
	Value    string `pulumi:"value"`
}

type GetSourceSalesforceConfigurationStreamsCriteriaOutput struct{ *pulumi.OutputState }

func (GetSourceSalesforceConfigurationStreamsCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSalesforceConfigurationStreamsCriteria)(nil)).Elem()
}

func (o GetSourceSalesforceConfigurationStreamsCriteriaOutput) ToGetSourceSalesforceConfigurationStreamsCriteriaOutput() GetSourceSalesforceConfigurationStreamsCriteriaOutput {
	return o
}

func (o GetSourceSalesforceConfigurationStreamsCriteriaOutput) ToGetSourceSalesforceConfigurationStreamsCriteriaOutputWithContext(ctx context.Context) GetSourceSalesforceConfigurationStreamsCriteriaOutput {
	return o
}

func (o GetSourceSalesforceConfigurationStreamsCriteriaOutput) Criteria() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesforceConfigurationStreamsCriteria) string { return v.Criteria }).(pulumi.StringOutput)
}

func (o GetSourceSalesforceConfigurationStreamsCriteriaOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesforceConfigurationStreamsCriteria) string { return v.Value }).(pulumi.StringOutput)
}

type GetSourceSalesforceConfigurationStreamsCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetSourceSalesforceConfigurationStreamsCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSourceSalesforceConfigurationStreamsCriteria)(nil)).Elem()
}

func (o GetSourceSalesforceConfigurationStreamsCriteriaArrayOutput) ToGetSourceSalesforceConfigurationStreamsCriteriaArrayOutput() GetSourceSalesforceConfigurationStreamsCriteriaArrayOutput {
	return o
}

func (o GetSourceSalesforceConfigurationStreamsCriteriaArrayOutput) ToGetSourceSalesforceConfigurationStreamsCriteriaArrayOutputWithContext(ctx context.Context) GetSourceSalesforceConfigurationStreamsCriteriaArrayOutput {
	return o
}

func (o GetSourceSalesforceConfigurationStreamsCriteriaArrayOutput) Index(i pulumi.IntInput) GetSourceSalesforceConfigurationStreamsCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSourceSalesforceConfigurationStreamsCriteria {
		return vs[0].([]GetSourceSalesforceConfigurationStreamsCriteria)[vs[1].(int)]
	}).(GetSourceSalesforceConfigurationStreamsCriteriaOutput)
}

type GetSourceSalesloftConfiguration struct {
	Credentials GetSourceSalesloftConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["salesloft"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for Salesloft API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceSalesloftConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSalesloftConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSalesloftConfiguration)(nil)).Elem()
}

func (o GetSourceSalesloftConfigurationOutput) ToGetSourceSalesloftConfigurationOutput() GetSourceSalesloftConfigurationOutput {
	return o
}

func (o GetSourceSalesloftConfigurationOutput) ToGetSourceSalesloftConfigurationOutputWithContext(ctx context.Context) GetSourceSalesloftConfigurationOutput {
	return o
}

func (o GetSourceSalesloftConfigurationOutput) Credentials() GetSourceSalesloftConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfiguration) GetSourceSalesloftConfigurationCredentials {
		return v.Credentials
	}).(GetSourceSalesloftConfigurationCredentialsOutput)
}

// must be one of ["salesloft"]
func (o GetSourceSalesloftConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for Salesloft API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
func (o GetSourceSalesloftConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceSalesloftConfigurationCredentials struct {
	SourceSalesloftCredentialsAuthenticateViaApiKey       GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey       `pulumi:"sourceSalesloftCredentialsAuthenticateViaApiKey"`
	SourceSalesloftCredentialsAuthenticateViaOAuth        GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth        `pulumi:"sourceSalesloftCredentialsAuthenticateViaOAuth"`
	SourceSalesloftUpdateCredentialsAuthenticateViaApiKey GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey `pulumi:"sourceSalesloftUpdateCredentialsAuthenticateViaApiKey"`
	SourceSalesloftUpdateCredentialsAuthenticateViaOAuth  GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth  `pulumi:"sourceSalesloftUpdateCredentialsAuthenticateViaOAuth"`
}

type GetSourceSalesloftConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceSalesloftConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSalesloftConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceSalesloftConfigurationCredentialsOutput) ToGetSourceSalesloftConfigurationCredentialsOutput() GetSourceSalesloftConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSalesloftConfigurationCredentialsOutput) ToGetSourceSalesloftConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceSalesloftConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSalesloftConfigurationCredentialsOutput) SourceSalesloftCredentialsAuthenticateViaApiKey() GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentials) GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey {
		return v.SourceSalesloftCredentialsAuthenticateViaApiKey
	}).(GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsOutput) SourceSalesloftCredentialsAuthenticateViaOAuth() GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentials) GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth {
		return v.SourceSalesloftCredentialsAuthenticateViaOAuth
	}).(GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsOutput) SourceSalesloftUpdateCredentialsAuthenticateViaApiKey() GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentials) GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey {
		return v.SourceSalesloftUpdateCredentialsAuthenticateViaApiKey
	}).(GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsOutput) SourceSalesloftUpdateCredentialsAuthenticateViaOAuth() GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentials) GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth {
		return v.SourceSalesloftUpdateCredentialsAuthenticateViaOAuth
	}).(GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput)
}

type GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey struct {
	ApiKey   string `pulumi:"apiKey"`
	AuthType string `pulumi:"authType"`
}

type GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput struct{ *pulumi.OutputState }

func (GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey)(nil)).Elem()
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput) ToGetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput() GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput {
	return o
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput) ToGetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutputWithContext(ctx context.Context) GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput {
	return o
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKey) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth)(nil)).Elem()
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput) ToGetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput() GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput {
	return o
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput) ToGetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutputWithContext(ctx context.Context) GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput {
	return o
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuth) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey struct {
	ApiKey   string `pulumi:"apiKey"`
	AuthType string `pulumi:"authType"`
}

type GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput struct{ *pulumi.OutputState }

func (GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey)(nil)).Elem()
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput) ToGetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput() GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput {
	return o
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput) ToGetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutputWithContext(ctx context.Context) GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput {
	return o
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKey) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth)(nil)).Elem()
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput) ToGetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput() GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput {
	return o
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput) ToGetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutputWithContext(ctx context.Context) GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput {
	return o
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuth) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceSapFieldglassConfiguration struct {
	// API Key
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["sap-fieldglass"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceSapFieldglassConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSapFieldglassConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSapFieldglassConfiguration)(nil)).Elem()
}

func (o GetSourceSapFieldglassConfigurationOutput) ToGetSourceSapFieldglassConfigurationOutput() GetSourceSapFieldglassConfigurationOutput {
	return o
}

func (o GetSourceSapFieldglassConfigurationOutput) ToGetSourceSapFieldglassConfigurationOutputWithContext(ctx context.Context) GetSourceSapFieldglassConfigurationOutput {
	return o
}

// API Key
func (o GetSourceSapFieldglassConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSapFieldglassConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["sap-fieldglass"]
func (o GetSourceSapFieldglassConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSapFieldglassConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceSecodaConfiguration struct {
	// Your API Access Key. See \n\nhere\n\n. The key is case sensitive.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["secoda"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceSecodaConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSecodaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSecodaConfiguration)(nil)).Elem()
}

func (o GetSourceSecodaConfigurationOutput) ToGetSourceSecodaConfigurationOutput() GetSourceSecodaConfigurationOutput {
	return o
}

func (o GetSourceSecodaConfigurationOutput) ToGetSourceSecodaConfigurationOutputWithContext(ctx context.Context) GetSourceSecodaConfigurationOutput {
	return o
}

// Your API Access Key. See \n\nhere\n\n. The key is case sensitive.
func (o GetSourceSecodaConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSecodaConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["secoda"]
func (o GetSourceSecodaConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSecodaConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceSendgridConfiguration struct {
	// API Key, use \n\nadmin\n\n to generate this key.
	Apikey string `pulumi:"apikey"`
	// must be one of ["sendgrid"]
	SourceType string `pulumi:"sourceType"`
	// Start time in ISO8601 format. Any data before this time point will not be replicated.
	StartTime string `pulumi:"startTime"`
}

type GetSourceSendgridConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSendgridConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSendgridConfiguration)(nil)).Elem()
}

func (o GetSourceSendgridConfigurationOutput) ToGetSourceSendgridConfigurationOutput() GetSourceSendgridConfigurationOutput {
	return o
}

func (o GetSourceSendgridConfigurationOutput) ToGetSourceSendgridConfigurationOutputWithContext(ctx context.Context) GetSourceSendgridConfigurationOutput {
	return o
}

// API Key, use \n\nadmin\n\n to generate this key.
func (o GetSourceSendgridConfigurationOutput) Apikey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSendgridConfiguration) string { return v.Apikey }).(pulumi.StringOutput)
}

// must be one of ["sendgrid"]
func (o GetSourceSendgridConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSendgridConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Start time in ISO8601 format. Any data before this time point will not be replicated.
func (o GetSourceSendgridConfigurationOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSendgridConfiguration) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetSourceSendinblueConfiguration struct {
	// Your API Key. See \n\nhere\n\n.
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["sendinblue"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceSendinblueConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSendinblueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSendinblueConfiguration)(nil)).Elem()
}

func (o GetSourceSendinblueConfigurationOutput) ToGetSourceSendinblueConfigurationOutput() GetSourceSendinblueConfigurationOutput {
	return o
}

func (o GetSourceSendinblueConfigurationOutput) ToGetSourceSendinblueConfigurationOutputWithContext(ctx context.Context) GetSourceSendinblueConfigurationOutput {
	return o
}

// Your API Key. See \n\nhere\n\n.
func (o GetSourceSendinblueConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSendinblueConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["sendinblue"]
func (o GetSourceSendinblueConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSendinblueConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceSenseforceConfiguration struct {
	// Your API access token. See \n\nhere\n\n. The toke is case sensitive.
	AccessToken string `pulumi:"accessToken"`
	// Your Senseforce API backend URL. This is the URL shown during the Login screen. See \n\nhere\n\n for more details. (Note: Most Senseforce backend APIs have the term 'galaxy' in their ULR)
	BackendUrl string `pulumi:"backendUrl"`
	// The ID of the dataset you want to synchronize. The ID can be found in the URL when opening the dataset. See \n\nhere\n\n for more details. (Note: As the Senseforce API only allows to synchronize a specific dataset, each dataset you  want to synchronize needs to be implemented as a separate airbyte source).
	DatasetId string `pulumi:"datasetId"`
	// The time increment used by the connector when requesting data from the Senseforce API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted and the more likely one could run into rate limites.  Furthermore, consider that large chunks of time might take a long time for the Senseforce query to return data - meaning it could take in effect longer than with more smaller time slices. If there are a lot of data per day, set this setting to 1. If there is only very little data per day, you might change the setting to 10 or more.
	SliceRange int `pulumi:"sliceRange"`
	// must be one of ["senseforce"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25. Only data with "Timestamp" after this date will be replicated. Important note: This start date must be set to the first day of where your dataset provides data.  If your dataset has data from 2020-10-10 10:21:10, set the startDate to 2020-10-10 or later
	StartDate string `pulumi:"startDate"`
}

type GetSourceSenseforceConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSenseforceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSenseforceConfiguration)(nil)).Elem()
}

func (o GetSourceSenseforceConfigurationOutput) ToGetSourceSenseforceConfigurationOutput() GetSourceSenseforceConfigurationOutput {
	return o
}

func (o GetSourceSenseforceConfigurationOutput) ToGetSourceSenseforceConfigurationOutputWithContext(ctx context.Context) GetSourceSenseforceConfigurationOutput {
	return o
}

// Your API access token. See \n\nhere\n\n. The toke is case sensitive.
func (o GetSourceSenseforceConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSenseforceConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// Your Senseforce API backend URL. This is the URL shown during the Login screen. See \n\nhere\n\n for more details. (Note: Most Senseforce backend APIs have the term 'galaxy' in their ULR)
func (o GetSourceSenseforceConfigurationOutput) BackendUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSenseforceConfiguration) string { return v.BackendUrl }).(pulumi.StringOutput)
}

// The ID of the dataset you want to synchronize. The ID can be found in the URL when opening the dataset. See \n\nhere\n\n for more details. (Note: As the Senseforce API only allows to synchronize a specific dataset, each dataset you  want to synchronize needs to be implemented as a separate airbyte source).
func (o GetSourceSenseforceConfigurationOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSenseforceConfiguration) string { return v.DatasetId }).(pulumi.StringOutput)
}

// The time increment used by the connector when requesting data from the Senseforce API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted and the more likely one could run into rate limites.  Furthermore, consider that large chunks of time might take a long time for the Senseforce query to return data - meaning it could take in effect longer than with more smaller time slices. If there are a lot of data per day, set this setting to 1. If there is only very little data per day, you might change the setting to 10 or more.
func (o GetSourceSenseforceConfigurationOutput) SliceRange() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceSenseforceConfiguration) int { return v.SliceRange }).(pulumi.IntOutput)
}

// must be one of ["senseforce"]
func (o GetSourceSenseforceConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSenseforceConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25. Only data with "Timestamp" after this date will be replicated. Important note: This start date must be set to the first day of where your dataset provides data.  If your dataset has data from 2020-10-10 10:21:10, set the startDate to 2020-10-10 or later
func (o GetSourceSenseforceConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSenseforceConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceSentryConfiguration struct {
	// Log into Sentry and then \n\ncreate authentication tokens\n\n.For self-hosted, you can find or create authentication tokens by visiting "{instance*url*prefix}/settings/account/api/auth-tokens/"
	AuthToken string `pulumi:"authToken"`
	// Fields to retrieve when fetching discover events
	DiscoverFields []string `pulumi:"discoverFields"`
	// Host name of Sentry API server.For self-hosted, specify your host name here. Otherwise, leave it empty.
	Hostname string `pulumi:"hostname"`
	// The slug of the organization the groups belong to.
	Organization string `pulumi:"organization"`
	// The name (slug) of the Project you want to sync.
	Project string `pulumi:"project"`
	// must be one of ["sentry"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceSentryConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSentryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSentryConfiguration)(nil)).Elem()
}

func (o GetSourceSentryConfigurationOutput) ToGetSourceSentryConfigurationOutput() GetSourceSentryConfigurationOutput {
	return o
}

func (o GetSourceSentryConfigurationOutput) ToGetSourceSentryConfigurationOutputWithContext(ctx context.Context) GetSourceSentryConfigurationOutput {
	return o
}

// Log into Sentry and then \n\ncreate authentication tokens\n\n.For self-hosted, you can find or create authentication tokens by visiting "{instance*url*prefix}/settings/account/api/auth-tokens/"
func (o GetSourceSentryConfigurationOutput) AuthToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSentryConfiguration) string { return v.AuthToken }).(pulumi.StringOutput)
}

// Fields to retrieve when fetching discover events
func (o GetSourceSentryConfigurationOutput) DiscoverFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceSentryConfiguration) []string { return v.DiscoverFields }).(pulumi.StringArrayOutput)
}

// Host name of Sentry API server.For self-hosted, specify your host name here. Otherwise, leave it empty.
func (o GetSourceSentryConfigurationOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSentryConfiguration) string { return v.Hostname }).(pulumi.StringOutput)
}

// The slug of the organization the groups belong to.
func (o GetSourceSentryConfigurationOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSentryConfiguration) string { return v.Organization }).(pulumi.StringOutput)
}

// The name (slug) of the Project you want to sync.
func (o GetSourceSentryConfigurationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSentryConfiguration) string { return v.Project }).(pulumi.StringOutput)
}

// must be one of ["sentry"]
func (o GetSourceSentryConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSentryConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceSftpBulkConfiguration struct {
	// Sync only the most recent file for the configured folder path and file pattern
	FileMostRecent bool `pulumi:"fileMostRecent"`
	// The regular expression to specify files for sync in a chosen Folder Path
	FilePattern string `pulumi:"filePattern"`
	// must be one of ["csv", "json"]
	// The file type you want to sync. Currently only 'csv' and 'json' files are supported.
	FileType string `pulumi:"fileType"`
	// The directory to search files for sync
	FolderPath string `pulumi:"folderPath"`
	// The server host address
	Host string `pulumi:"host"`
	// OS-level password for logging into the jump server host
	Password string `pulumi:"password"`
	// The server port
	Port int `pulumi:"port"`
	// The private key
	PrivateKey string `pulumi:"privateKey"`
	// The separator used in the CSV files. Define None if you want to use the Sniffer functionality
	Separator string `pulumi:"separator"`
	// must be one of ["sftp-bulk"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
	// The name of the stream or table you want to create
	StreamName string `pulumi:"streamName"`
	// The server user
	Username string `pulumi:"username"`
}

type GetSourceSftpBulkConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSftpBulkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSftpBulkConfiguration)(nil)).Elem()
}

func (o GetSourceSftpBulkConfigurationOutput) ToGetSourceSftpBulkConfigurationOutput() GetSourceSftpBulkConfigurationOutput {
	return o
}

func (o GetSourceSftpBulkConfigurationOutput) ToGetSourceSftpBulkConfigurationOutputWithContext(ctx context.Context) GetSourceSftpBulkConfigurationOutput {
	return o
}

// Sync only the most recent file for the configured folder path and file pattern
func (o GetSourceSftpBulkConfigurationOutput) FileMostRecent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) bool { return v.FileMostRecent }).(pulumi.BoolOutput)
}

// The regular expression to specify files for sync in a chosen Folder Path
func (o GetSourceSftpBulkConfigurationOutput) FilePattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) string { return v.FilePattern }).(pulumi.StringOutput)
}

// must be one of ["csv", "json"]
// The file type you want to sync. Currently only 'csv' and 'json' files are supported.
func (o GetSourceSftpBulkConfigurationOutput) FileType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) string { return v.FileType }).(pulumi.StringOutput)
}

// The directory to search files for sync
func (o GetSourceSftpBulkConfigurationOutput) FolderPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) string { return v.FolderPath }).(pulumi.StringOutput)
}

// The server host address
func (o GetSourceSftpBulkConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// OS-level password for logging into the jump server host
func (o GetSourceSftpBulkConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// The server port
func (o GetSourceSftpBulkConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// The private key
func (o GetSourceSftpBulkConfigurationOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) string { return v.PrivateKey }).(pulumi.StringOutput)
}

// The separator used in the CSV files. Define None if you want to use the Sniffer functionality
func (o GetSourceSftpBulkConfigurationOutput) Separator() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) string { return v.Separator }).(pulumi.StringOutput)
}

// must be one of ["sftp-bulk"]
func (o GetSourceSftpBulkConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
func (o GetSourceSftpBulkConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// The name of the stream or table you want to create
func (o GetSourceSftpBulkConfigurationOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) string { return v.StreamName }).(pulumi.StringOutput)
}

// The server user
func (o GetSourceSftpBulkConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpBulkConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceSftpConfiguration struct {
	// The server authentication method
	Credentials GetSourceSftpConfigurationCredentials `pulumi:"credentials"`
	// The regular expression to specify files for sync in a chosen Folder Path
	FilePattern string `pulumi:"filePattern"`
	// Coma separated file types. Currently only 'csv' and 'json' types are supported.
	FileTypes string `pulumi:"fileTypes"`
	// The directory to search files for sync
	FolderPath string `pulumi:"folderPath"`
	// The server host address
	Host string `pulumi:"host"`
	// The server port
	Port int `pulumi:"port"`
	// must be one of ["sftp"]
	SourceType string `pulumi:"sourceType"`
	// The server user
	User string `pulumi:"user"`
}

type GetSourceSftpConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSftpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSftpConfiguration)(nil)).Elem()
}

func (o GetSourceSftpConfigurationOutput) ToGetSourceSftpConfigurationOutput() GetSourceSftpConfigurationOutput {
	return o
}

func (o GetSourceSftpConfigurationOutput) ToGetSourceSftpConfigurationOutputWithContext(ctx context.Context) GetSourceSftpConfigurationOutput {
	return o
}

// The server authentication method
func (o GetSourceSftpConfigurationOutput) Credentials() GetSourceSftpConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceSftpConfiguration) GetSourceSftpConfigurationCredentials { return v.Credentials }).(GetSourceSftpConfigurationCredentialsOutput)
}

// The regular expression to specify files for sync in a chosen Folder Path
func (o GetSourceSftpConfigurationOutput) FilePattern() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfiguration) string { return v.FilePattern }).(pulumi.StringOutput)
}

// Coma separated file types. Currently only 'csv' and 'json' types are supported.
func (o GetSourceSftpConfigurationOutput) FileTypes() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfiguration) string { return v.FileTypes }).(pulumi.StringOutput)
}

// The directory to search files for sync
func (o GetSourceSftpConfigurationOutput) FolderPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfiguration) string { return v.FolderPath }).(pulumi.StringOutput)
}

// The server host address
func (o GetSourceSftpConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// The server port
func (o GetSourceSftpConfigurationOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceSftpConfiguration) int { return v.Port }).(pulumi.IntOutput)
}

// must be one of ["sftp"]
func (o GetSourceSftpConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The server user
func (o GetSourceSftpConfigurationOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfiguration) string { return v.User }).(pulumi.StringOutput)
}

type GetSourceSftpConfigurationCredentials struct {
	SourceSftpAuthenticationWildcardPasswordAuthentication       GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication       `pulumi:"sourceSftpAuthenticationWildcardPasswordAuthentication"`
	SourceSftpAuthenticationWildcardSshKeyAuthentication         GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication         `pulumi:"sourceSftpAuthenticationWildcardSshKeyAuthentication"`
	SourceSftpUpdateAuthenticationWildcardPasswordAuthentication GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication `pulumi:"sourceSftpUpdateAuthenticationWildcardPasswordAuthentication"`
	SourceSftpUpdateAuthenticationWildcardSshKeyAuthentication   GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication   `pulumi:"sourceSftpUpdateAuthenticationWildcardSshKeyAuthentication"`
}

type GetSourceSftpConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceSftpConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSftpConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceSftpConfigurationCredentialsOutput) ToGetSourceSftpConfigurationCredentialsOutput() GetSourceSftpConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSftpConfigurationCredentialsOutput) ToGetSourceSftpConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceSftpConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSftpConfigurationCredentialsOutput) SourceSftpAuthenticationWildcardPasswordAuthentication() GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentials) GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication {
		return v.SourceSftpAuthenticationWildcardPasswordAuthentication
	}).(GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput)
}

func (o GetSourceSftpConfigurationCredentialsOutput) SourceSftpAuthenticationWildcardSshKeyAuthentication() GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentials) GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication {
		return v.SourceSftpAuthenticationWildcardSshKeyAuthentication
	}).(GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput)
}

func (o GetSourceSftpConfigurationCredentialsOutput) SourceSftpUpdateAuthenticationWildcardPasswordAuthentication() GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentials) GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication {
		return v.SourceSftpUpdateAuthenticationWildcardPasswordAuthentication
	}).(GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput)
}

func (o GetSourceSftpConfigurationCredentialsOutput) SourceSftpUpdateAuthenticationWildcardSshKeyAuthentication() GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentials) GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication {
		return v.SourceSftpUpdateAuthenticationWildcardSshKeyAuthentication
	}).(GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput)
}

type GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication struct {
	AuthMethod       string `pulumi:"authMethod"`
	AuthUserPassword string `pulumi:"authUserPassword"`
}

type GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput) ToGetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput() GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput {
	return o
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput) ToGetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput {
	return o
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput) AuthUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthentication) string {
		return v.AuthUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication struct {
	AuthMethod string `pulumi:"authMethod"`
	AuthSshKey string `pulumi:"authSshKey"`
}

type GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput) ToGetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput() GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput) ToGetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput) AuthSshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthentication) string {
		return v.AuthSshKey
	}).(pulumi.StringOutput)
}

type GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication struct {
	AuthMethod       string `pulumi:"authMethod"`
	AuthUserPassword string `pulumi:"authUserPassword"`
}

type GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication)(nil)).Elem()
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput) ToGetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput() GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput {
	return o
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput) ToGetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutputWithContext(ctx context.Context) GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput {
	return o
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput) AuthUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthentication) string {
		return v.AuthUserPassword
	}).(pulumi.StringOutput)
}

type GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication struct {
	AuthMethod string `pulumi:"authMethod"`
	AuthSshKey string `pulumi:"authSshKey"`
}

type GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication)(nil)).Elem()
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput) ToGetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput() GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput) ToGetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutputWithContext(ctx context.Context) GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput {
	return o
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput) AuthSshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthentication) string {
		return v.AuthSshKey
	}).(pulumi.StringOutput)
}

type GetSourceShopifyConfiguration struct {
	// The authorization method to use to retrieve data from Shopify
	Credentials GetSourceShopifyConfigurationCredentials `pulumi:"credentials"`
	// The name of your Shopify store found in the URL. For example, if your URL was https://NAME.myshopify.com, then the name would be 'NAME' or 'NAME.myshopify.com'.
	Shop string `pulumi:"shop"`
	// must be one of ["shopify"]
	SourceType string `pulumi:"sourceType"`
	// The date you would like to replicate data from. Format: YYYY-MM-DD. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceShopifyConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceShopifyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceShopifyConfiguration)(nil)).Elem()
}

func (o GetSourceShopifyConfigurationOutput) ToGetSourceShopifyConfigurationOutput() GetSourceShopifyConfigurationOutput {
	return o
}

func (o GetSourceShopifyConfigurationOutput) ToGetSourceShopifyConfigurationOutputWithContext(ctx context.Context) GetSourceShopifyConfigurationOutput {
	return o
}

// The authorization method to use to retrieve data from Shopify
func (o GetSourceShopifyConfigurationOutput) Credentials() GetSourceShopifyConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceShopifyConfiguration) GetSourceShopifyConfigurationCredentials { return v.Credentials }).(GetSourceShopifyConfigurationCredentialsOutput)
}

// The name of your Shopify store found in the URL. For example, if your URL was https://NAME.myshopify.com, then the name would be 'NAME' or 'NAME.myshopify.com'.
func (o GetSourceShopifyConfigurationOutput) Shop() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfiguration) string { return v.Shop }).(pulumi.StringOutput)
}

// must be one of ["shopify"]
func (o GetSourceShopifyConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date you would like to replicate data from. Format: YYYY-MM-DD. Any data before this date will not be replicated.
func (o GetSourceShopifyConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceShopifyConfigurationCredentials struct {
	SourceShopifyShopifyAuthorizationMethodApiPassword       GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword       `pulumi:"sourceShopifyShopifyAuthorizationMethodApiPassword"`
	SourceShopifyShopifyAuthorizationMethodOAuth20           GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20           `pulumi:"sourceShopifyShopifyAuthorizationMethodOAuth20"`
	SourceShopifyUpdateShopifyAuthorizationMethodApiPassword GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword `pulumi:"sourceShopifyUpdateShopifyAuthorizationMethodApiPassword"`
	SourceShopifyUpdateShopifyAuthorizationMethodOAuth20     GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20     `pulumi:"sourceShopifyUpdateShopifyAuthorizationMethodOAuth20"`
}

type GetSourceShopifyConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceShopifyConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceShopifyConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceShopifyConfigurationCredentialsOutput) ToGetSourceShopifyConfigurationCredentialsOutput() GetSourceShopifyConfigurationCredentialsOutput {
	return o
}

func (o GetSourceShopifyConfigurationCredentialsOutput) ToGetSourceShopifyConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceShopifyConfigurationCredentialsOutput {
	return o
}

func (o GetSourceShopifyConfigurationCredentialsOutput) SourceShopifyShopifyAuthorizationMethodApiPassword() GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentials) GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword {
		return v.SourceShopifyShopifyAuthorizationMethodApiPassword
	}).(GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput)
}

func (o GetSourceShopifyConfigurationCredentialsOutput) SourceShopifyShopifyAuthorizationMethodOAuth20() GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentials) GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20 {
		return v.SourceShopifyShopifyAuthorizationMethodOAuth20
	}).(GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output)
}

func (o GetSourceShopifyConfigurationCredentialsOutput) SourceShopifyUpdateShopifyAuthorizationMethodApiPassword() GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentials) GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword {
		return v.SourceShopifyUpdateShopifyAuthorizationMethodApiPassword
	}).(GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput)
}

func (o GetSourceShopifyConfigurationCredentialsOutput) SourceShopifyUpdateShopifyAuthorizationMethodOAuth20() GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentials) GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20 {
		return v.SourceShopifyUpdateShopifyAuthorizationMethodOAuth20
	}).(GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output)
}

type GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword struct {
	ApiPassword string `pulumi:"apiPassword"`
	AuthMethod  string `pulumi:"authMethod"`
}

type GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput struct{ *pulumi.OutputState }

func (GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword)(nil)).Elem()
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput) ToGetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput() GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput {
	return o
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput) ToGetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutputWithContext(ctx context.Context) GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput {
	return o
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput) ApiPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword) string {
		return v.ApiPassword
	}).(pulumi.StringOutput)
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPassword) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

type GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthMethod   string `pulumi:"authMethod"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
}

type GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output) ToGetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output() GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output) ToGetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword struct {
	ApiPassword string `pulumi:"apiPassword"`
	AuthMethod  string `pulumi:"authMethod"`
}

type GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput struct{ *pulumi.OutputState }

func (GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword)(nil)).Elem()
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput) ToGetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput() GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput {
	return o
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput) ToGetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutputWithContext(ctx context.Context) GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput {
	return o
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput) ApiPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword) string {
		return v.ApiPassword
	}).(pulumi.StringOutput)
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPassword) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

type GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthMethod   string `pulumi:"authMethod"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
}

type GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output) ToGetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output() GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output) ToGetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceShortioConfiguration struct {
	DomainId string `pulumi:"domainId"`
	// Short.io Secret Key
	SecretKey string `pulumi:"secretKey"`
	// must be one of ["shortio"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceShortioConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceShortioConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceShortioConfiguration)(nil)).Elem()
}

func (o GetSourceShortioConfigurationOutput) ToGetSourceShortioConfigurationOutput() GetSourceShortioConfigurationOutput {
	return o
}

func (o GetSourceShortioConfigurationOutput) ToGetSourceShortioConfigurationOutputWithContext(ctx context.Context) GetSourceShortioConfigurationOutput {
	return o
}

func (o GetSourceShortioConfigurationOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShortioConfiguration) string { return v.DomainId }).(pulumi.StringOutput)
}

// Short.io Secret Key
func (o GetSourceShortioConfigurationOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShortioConfiguration) string { return v.SecretKey }).(pulumi.StringOutput)
}

// must be one of ["shortio"]
func (o GetSourceShortioConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShortioConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceShortioConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceShortioConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceSlackConfiguration struct {
	// A channel name list (without leading '#' char) which limit the channels from which you'd like to sync. Empty list means no filter.
	ChannelFilters []string `pulumi:"channelFilters"`
	// Choose how to authenticate into Slack
	Credentials GetSourceSlackConfigurationCredentials `pulumi:"credentials"`
	// Whether to join all channels or to sync data only from channels the bot is already in.  If false, you'll need to manually add the bot to all the channels from which you'd like to sync messages.
	JoinChannels bool `pulumi:"joinChannels"`
	// How far into the past to look for messages in threads, default is 0 days
	LookbackWindow int `pulumi:"lookbackWindow"`
	// must be one of ["slack"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceSlackConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSlackConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSlackConfiguration)(nil)).Elem()
}

func (o GetSourceSlackConfigurationOutput) ToGetSourceSlackConfigurationOutput() GetSourceSlackConfigurationOutput {
	return o
}

func (o GetSourceSlackConfigurationOutput) ToGetSourceSlackConfigurationOutputWithContext(ctx context.Context) GetSourceSlackConfigurationOutput {
	return o
}

// A channel name list (without leading '#' char) which limit the channels from which you'd like to sync. Empty list means no filter.
func (o GetSourceSlackConfigurationOutput) ChannelFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceSlackConfiguration) []string { return v.ChannelFilters }).(pulumi.StringArrayOutput)
}

// Choose how to authenticate into Slack
func (o GetSourceSlackConfigurationOutput) Credentials() GetSourceSlackConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceSlackConfiguration) GetSourceSlackConfigurationCredentials { return v.Credentials }).(GetSourceSlackConfigurationCredentialsOutput)
}

// Whether to join all channels or to sync data only from channels the bot is already in.  If false, you'll need to manually add the bot to all the channels from which you'd like to sync messages.
func (o GetSourceSlackConfigurationOutput) JoinChannels() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceSlackConfiguration) bool { return v.JoinChannels }).(pulumi.BoolOutput)
}

// How far into the past to look for messages in threads, default is 0 days
func (o GetSourceSlackConfigurationOutput) LookbackWindow() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceSlackConfiguration) int { return v.LookbackWindow }).(pulumi.IntOutput)
}

// must be one of ["slack"]
func (o GetSourceSlackConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceSlackConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceSlackConfigurationCredentials struct {
	SourceSlackAuthenticationMechanismApiToken                  GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken                  `pulumi:"sourceSlackAuthenticationMechanismApiToken"`
	SourceSlackAuthenticationMechanismSignInViaSlackOAuth       GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth       `pulumi:"sourceSlackAuthenticationMechanismSignInViaSlackOAuth"`
	SourceSlackUpdateAuthenticationMechanismApiToken            GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken            `pulumi:"sourceSlackUpdateAuthenticationMechanismApiToken"`
	SourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth `pulumi:"sourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth"`
}

type GetSourceSlackConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceSlackConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSlackConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceSlackConfigurationCredentialsOutput) ToGetSourceSlackConfigurationCredentialsOutput() GetSourceSlackConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSlackConfigurationCredentialsOutput) ToGetSourceSlackConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceSlackConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSlackConfigurationCredentialsOutput) SourceSlackAuthenticationMechanismApiToken() GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentials) GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken {
		return v.SourceSlackAuthenticationMechanismApiToken
	}).(GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput)
}

func (o GetSourceSlackConfigurationCredentialsOutput) SourceSlackAuthenticationMechanismSignInViaSlackOAuth() GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentials) GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth {
		return v.SourceSlackAuthenticationMechanismSignInViaSlackOAuth
	}).(GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput)
}

func (o GetSourceSlackConfigurationCredentialsOutput) SourceSlackUpdateAuthenticationMechanismApiToken() GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentials) GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken {
		return v.SourceSlackUpdateAuthenticationMechanismApiToken
	}).(GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput)
}

func (o GetSourceSlackConfigurationCredentialsOutput) SourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth() GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentials) GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth {
		return v.SourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth
	}).(GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput)
}

type GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken struct {
	ApiToken    string `pulumi:"apiToken"`
	OptionTitle string `pulumi:"optionTitle"`
}

type GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken)(nil)).Elem()
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput) ToGetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput() GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput {
	return o
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput) ToGetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutputWithContext(ctx context.Context) GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput {
	return o
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiToken) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

type GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth struct {
	AccessToken  string `pulumi:"accessToken"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	OptionTitle  string `pulumi:"optionTitle"`
}

type GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth)(nil)).Elem()
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput) ToGetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput() GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput {
	return o
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput) ToGetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutputWithContext(ctx context.Context) GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput {
	return o
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuth) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

type GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken struct {
	ApiToken    string `pulumi:"apiToken"`
	OptionTitle string `pulumi:"optionTitle"`
}

type GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken)(nil)).Elem()
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput) ToGetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput() GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput {
	return o
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput) ToGetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutputWithContext(ctx context.Context) GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput {
	return o
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiToken) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

type GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth struct {
	AccessToken  string `pulumi:"accessToken"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	OptionTitle  string `pulumi:"optionTitle"`
}

type GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput struct{ *pulumi.OutputState }

func (GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth)(nil)).Elem()
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput) ToGetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput() GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput {
	return o
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput) ToGetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutputWithContext(ctx context.Context) GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput {
	return o
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput) OptionTitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuth) string {
		return v.OptionTitle
	}).(pulumi.StringOutput)
}

type GetSourceSmailyConfiguration struct {
	// API user password. See https://smaily.com/help/api/general/create-api-user/
	ApiPassword string `pulumi:"apiPassword"`
	// API Subdomain. See https://smaily.com/help/api/general/create-api-user/
	ApiSubdomain string `pulumi:"apiSubdomain"`
	// API user username. See https://smaily.com/help/api/general/create-api-user/
	ApiUsername string `pulumi:"apiUsername"`
	// must be one of ["smaily"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceSmailyConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSmailyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSmailyConfiguration)(nil)).Elem()
}

func (o GetSourceSmailyConfigurationOutput) ToGetSourceSmailyConfigurationOutput() GetSourceSmailyConfigurationOutput {
	return o
}

func (o GetSourceSmailyConfigurationOutput) ToGetSourceSmailyConfigurationOutputWithContext(ctx context.Context) GetSourceSmailyConfigurationOutput {
	return o
}

// API user password. See https://smaily.com/help/api/general/create-api-user/
func (o GetSourceSmailyConfigurationOutput) ApiPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmailyConfiguration) string { return v.ApiPassword }).(pulumi.StringOutput)
}

// API Subdomain. See https://smaily.com/help/api/general/create-api-user/
func (o GetSourceSmailyConfigurationOutput) ApiSubdomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmailyConfiguration) string { return v.ApiSubdomain }).(pulumi.StringOutput)
}

// API user username. See https://smaily.com/help/api/general/create-api-user/
func (o GetSourceSmailyConfigurationOutput) ApiUsername() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmailyConfiguration) string { return v.ApiUsername }).(pulumi.StringOutput)
}

// must be one of ["smaily"]
func (o GetSourceSmailyConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmailyConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceSmartengageConfiguration struct {
	// API Key
	ApiKey string `pulumi:"apiKey"`
	// must be one of ["smartengage"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceSmartengageConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSmartengageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSmartengageConfiguration)(nil)).Elem()
}

func (o GetSourceSmartengageConfigurationOutput) ToGetSourceSmartengageConfigurationOutput() GetSourceSmartengageConfigurationOutput {
	return o
}

func (o GetSourceSmartengageConfigurationOutput) ToGetSourceSmartengageConfigurationOutputWithContext(ctx context.Context) GetSourceSmartengageConfigurationOutput {
	return o
}

// API Key
func (o GetSourceSmartengageConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartengageConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// must be one of ["smartengage"]
func (o GetSourceSmartengageConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartengageConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceSmartsheetsConfiguration struct {
	Credentials GetSourceSmartsheetsConfigurationCredentials `pulumi:"credentials"`
	// A List of available columns which metadata can be pulled from.
	MetadataFields []string `pulumi:"metadataFields"`
	// must be one of ["smartsheets"]
	SourceType string `pulumi:"sourceType"`
	// The spreadsheet ID. Find it by opening the spreadsheet then navigating to File > Properties
	SpreadsheetId string `pulumi:"spreadsheetId"`
	// Only rows modified after this date/time will be replicated. This should be an ISO 8601 string, for instance: `2000-01-01T13:00:00`
	StartDatetime string `pulumi:"startDatetime"`
}

type GetSourceSmartsheetsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSmartsheetsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSmartsheetsConfiguration)(nil)).Elem()
}

func (o GetSourceSmartsheetsConfigurationOutput) ToGetSourceSmartsheetsConfigurationOutput() GetSourceSmartsheetsConfigurationOutput {
	return o
}

func (o GetSourceSmartsheetsConfigurationOutput) ToGetSourceSmartsheetsConfigurationOutputWithContext(ctx context.Context) GetSourceSmartsheetsConfigurationOutput {
	return o
}

func (o GetSourceSmartsheetsConfigurationOutput) Credentials() GetSourceSmartsheetsConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfiguration) GetSourceSmartsheetsConfigurationCredentials {
		return v.Credentials
	}).(GetSourceSmartsheetsConfigurationCredentialsOutput)
}

// A List of available columns which metadata can be pulled from.
func (o GetSourceSmartsheetsConfigurationOutput) MetadataFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfiguration) []string { return v.MetadataFields }).(pulumi.StringArrayOutput)
}

// must be one of ["smartsheets"]
func (o GetSourceSmartsheetsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The spreadsheet ID. Find it by opening the spreadsheet then navigating to File > Properties
func (o GetSourceSmartsheetsConfigurationOutput) SpreadsheetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfiguration) string { return v.SpreadsheetId }).(pulumi.StringOutput)
}

// Only rows modified after this date/time will be replicated. This should be an ISO 8601 string, for instance: `2000-01-01T13:00:00`
func (o GetSourceSmartsheetsConfigurationOutput) StartDatetime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfiguration) string { return v.StartDatetime }).(pulumi.StringOutput)
}

type GetSourceSmartsheetsConfigurationCredentials struct {
	SourceSmartsheetsAuthorizationMethodApiAccessToken       GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken       `pulumi:"sourceSmartsheetsAuthorizationMethodApiAccessToken"`
	SourceSmartsheetsAuthorizationMethodOAuth20              GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20              `pulumi:"sourceSmartsheetsAuthorizationMethodOAuth20"`
	SourceSmartsheetsUpdateAuthorizationMethodApiAccessToken GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken `pulumi:"sourceSmartsheetsUpdateAuthorizationMethodApiAccessToken"`
	SourceSmartsheetsUpdateAuthorizationMethodOAuth20        GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20        `pulumi:"sourceSmartsheetsUpdateAuthorizationMethodOAuth20"`
}

type GetSourceSmartsheetsConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceSmartsheetsConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSmartsheetsConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceSmartsheetsConfigurationCredentialsOutput) ToGetSourceSmartsheetsConfigurationCredentialsOutput() GetSourceSmartsheetsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSmartsheetsConfigurationCredentialsOutput) ToGetSourceSmartsheetsConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceSmartsheetsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSmartsheetsConfigurationCredentialsOutput) SourceSmartsheetsAuthorizationMethodApiAccessToken() GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentials) GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken {
		return v.SourceSmartsheetsAuthorizationMethodApiAccessToken
	}).(GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsOutput) SourceSmartsheetsAuthorizationMethodOAuth20() GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentials) GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20 {
		return v.SourceSmartsheetsAuthorizationMethodOAuth20
	}).(GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output)
}

func (o GetSourceSmartsheetsConfigurationCredentialsOutput) SourceSmartsheetsUpdateAuthorizationMethodApiAccessToken() GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentials) GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken {
		return v.SourceSmartsheetsUpdateAuthorizationMethodApiAccessToken
	}).(GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsOutput) SourceSmartsheetsUpdateAuthorizationMethodOAuth20() GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentials) GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20 {
		return v.SourceSmartsheetsUpdateAuthorizationMethodOAuth20
	}).(GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output)
}

type GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthType    string `pulumi:"authType"`
}

type GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken)(nil)).Elem()
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput) ToGetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput() GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput {
	return o
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput) ToGetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutputWithContext(ctx context.Context) GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput {
	return o
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output) ToGetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output() GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output) ToGetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthType    string `pulumi:"authType"`
}

type GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken)(nil)).Elem()
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput) ToGetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput() GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput {
	return o
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput) ToGetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutputWithContext(ctx context.Context) GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput {
	return o
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output) ToGetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output() GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output) ToGetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceSnapchatMarketingConfiguration struct {
	// The Client ID of your Snapchat developer application.
	ClientId string `pulumi:"clientId"`
	// The Client Secret of your Snapchat developer application.
	ClientSecret string `pulumi:"clientSecret"`
	// Date in the format 2017-01-25. Any data after this date will not be replicated.
	EndDate string `pulumi:"endDate"`
	// Refresh Token to renew the expired Access Token.
	RefreshToken string `pulumi:"refreshToken"`
	// must be one of ["snapchat-marketing"]
	SourceType string `pulumi:"sourceType"`
	// Date in the format 2022-01-01. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceSnapchatMarketingConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSnapchatMarketingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSnapchatMarketingConfiguration)(nil)).Elem()
}

func (o GetSourceSnapchatMarketingConfigurationOutput) ToGetSourceSnapchatMarketingConfigurationOutput() GetSourceSnapchatMarketingConfigurationOutput {
	return o
}

func (o GetSourceSnapchatMarketingConfigurationOutput) ToGetSourceSnapchatMarketingConfigurationOutputWithContext(ctx context.Context) GetSourceSnapchatMarketingConfigurationOutput {
	return o
}

// The Client ID of your Snapchat developer application.
func (o GetSourceSnapchatMarketingConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnapchatMarketingConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret of your Snapchat developer application.
func (o GetSourceSnapchatMarketingConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnapchatMarketingConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// Date in the format 2017-01-25. Any data after this date will not be replicated.
func (o GetSourceSnapchatMarketingConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnapchatMarketingConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// Refresh Token to renew the expired Access Token.
func (o GetSourceSnapchatMarketingConfigurationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnapchatMarketingConfiguration) string { return v.RefreshToken }).(pulumi.StringOutput)
}

// must be one of ["snapchat-marketing"]
func (o GetSourceSnapchatMarketingConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnapchatMarketingConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Date in the format 2022-01-01. Any data before this date will not be replicated.
func (o GetSourceSnapchatMarketingConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnapchatMarketingConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceSnowflakeConfiguration struct {
	Credentials GetSourceSnowflakeConfigurationCredentials `pulumi:"credentials"`
	// The database you created for Airbyte to access data.
	Database string `pulumi:"database"`
	// The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).
	Host string `pulumi:"host"`
	// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
	JdbcUrlParams string `pulumi:"jdbcUrlParams"`
	// The role you created for Airbyte to access Snowflake.
	Role string `pulumi:"role"`
	// The source Snowflake schema tables. Leave empty to access tables from multiple schemas.
	Schema string `pulumi:"schema"`
	// must be one of ["snowflake"]
	SourceType string `pulumi:"sourceType"`
	// The warehouse you created for Airbyte to access data.
	Warehouse string `pulumi:"warehouse"`
}

type GetSourceSnowflakeConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSnowflakeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSnowflakeConfiguration)(nil)).Elem()
}

func (o GetSourceSnowflakeConfigurationOutput) ToGetSourceSnowflakeConfigurationOutput() GetSourceSnowflakeConfigurationOutput {
	return o
}

func (o GetSourceSnowflakeConfigurationOutput) ToGetSourceSnowflakeConfigurationOutputWithContext(ctx context.Context) GetSourceSnowflakeConfigurationOutput {
	return o
}

func (o GetSourceSnowflakeConfigurationOutput) Credentials() GetSourceSnowflakeConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfiguration) GetSourceSnowflakeConfigurationCredentials {
		return v.Credentials
	}).(GetSourceSnowflakeConfigurationCredentialsOutput)
}

// The database you created for Airbyte to access data.
func (o GetSourceSnowflakeConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// The host domain of the snowflake instance (must include the account, region, cloud environment, and end with snowflakecomputing.com).
func (o GetSourceSnowflakeConfigurationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfiguration) string { return v.Host }).(pulumi.StringOutput)
}

// Additional properties to pass to the JDBC URL string when connecting to the database formatted as 'key=value' pairs separated by the symbol '&'. (example: key1=value1&key2=value2&key3=value3).
func (o GetSourceSnowflakeConfigurationOutput) JdbcUrlParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfiguration) string { return v.JdbcUrlParams }).(pulumi.StringOutput)
}

// The role you created for Airbyte to access Snowflake.
func (o GetSourceSnowflakeConfigurationOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfiguration) string { return v.Role }).(pulumi.StringOutput)
}

// The source Snowflake schema tables. Leave empty to access tables from multiple schemas.
func (o GetSourceSnowflakeConfigurationOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfiguration) string { return v.Schema }).(pulumi.StringOutput)
}

// must be one of ["snowflake"]
func (o GetSourceSnowflakeConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The warehouse you created for Airbyte to access data.
func (o GetSourceSnowflakeConfigurationOutput) Warehouse() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfiguration) string { return v.Warehouse }).(pulumi.StringOutput)
}

type GetSourceSnowflakeConfigurationCredentials struct {
	SourceSnowflakeAuthorizationMethodOAuth20                   GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20                   `pulumi:"sourceSnowflakeAuthorizationMethodOAuth20"`
	SourceSnowflakeAuthorizationMethodUsernameAndPassword       GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword       `pulumi:"sourceSnowflakeAuthorizationMethodUsernameAndPassword"`
	SourceSnowflakeUpdateAuthorizationMethodOAuth20             GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20             `pulumi:"sourceSnowflakeUpdateAuthorizationMethodOAuth20"`
	SourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword `pulumi:"sourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword"`
}

type GetSourceSnowflakeConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceSnowflakeConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSnowflakeConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceSnowflakeConfigurationCredentialsOutput) ToGetSourceSnowflakeConfigurationCredentialsOutput() GetSourceSnowflakeConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSnowflakeConfigurationCredentialsOutput) ToGetSourceSnowflakeConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceSnowflakeConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSnowflakeConfigurationCredentialsOutput) SourceSnowflakeAuthorizationMethodOAuth20() GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentials) GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20 {
		return v.SourceSnowflakeAuthorizationMethodOAuth20
	}).(GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output)
}

func (o GetSourceSnowflakeConfigurationCredentialsOutput) SourceSnowflakeAuthorizationMethodUsernameAndPassword() GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentials) GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword {
		return v.SourceSnowflakeAuthorizationMethodUsernameAndPassword
	}).(GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsOutput) SourceSnowflakeUpdateAuthorizationMethodOAuth20() GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentials) GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20 {
		return v.SourceSnowflakeUpdateAuthorizationMethodOAuth20
	}).(GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output)
}

func (o GetSourceSnowflakeConfigurationCredentialsOutput) SourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword() GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentials) GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword {
		return v.SourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword
	}).(GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput)
}

type GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output) ToGetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output() GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output) ToGetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword struct {
	AuthType string `pulumi:"authType"`
	Password string `pulumi:"password"`
	Username string `pulumi:"username"`
}

type GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput struct{ *pulumi.OutputState }

func (GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword)(nil)).Elem()
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput) ToGetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput() GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput {
	return o
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput) ToGetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutputWithContext(ctx context.Context) GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput {
	return o
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPassword) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output) ToGetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output() GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output) ToGetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword struct {
	AuthType string `pulumi:"authType"`
	Password string `pulumi:"password"`
	Username string `pulumi:"username"`
}

type GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput struct{ *pulumi.OutputState }

func (GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword)(nil)).Elem()
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput) ToGetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput() GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput {
	return o
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput) ToGetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutputWithContext(ctx context.Context) GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput {
	return o
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword) string {
		return v.Password
	}).(pulumi.StringOutput)
}

func (o GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPassword) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type GetSourceSonarCloudConfiguration struct {
	// Comma-separated list of component keys.
	ComponentKeys []string `pulumi:"componentKeys"`
	// To retrieve issues created before the given date (inclusive).
	EndDate string `pulumi:"endDate"`
	// Organization key. See \n\nhere\n\n.
	Organization string `pulumi:"organization"`
	// must be one of ["sonar-cloud"]
	SourceType string `pulumi:"sourceType"`
	// To retrieve issues created after the given date (inclusive).
	StartDate string `pulumi:"startDate"`
	// Your User Token. See \n\nhere\n\n. The token is case sensitive.
	UserToken string `pulumi:"userToken"`
}

type GetSourceSonarCloudConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSonarCloudConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSonarCloudConfiguration)(nil)).Elem()
}

func (o GetSourceSonarCloudConfigurationOutput) ToGetSourceSonarCloudConfigurationOutput() GetSourceSonarCloudConfigurationOutput {
	return o
}

func (o GetSourceSonarCloudConfigurationOutput) ToGetSourceSonarCloudConfigurationOutputWithContext(ctx context.Context) GetSourceSonarCloudConfigurationOutput {
	return o
}

// Comma-separated list of component keys.
func (o GetSourceSonarCloudConfigurationOutput) ComponentKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceSonarCloudConfiguration) []string { return v.ComponentKeys }).(pulumi.StringArrayOutput)
}

// To retrieve issues created before the given date (inclusive).
func (o GetSourceSonarCloudConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSonarCloudConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// Organization key. See \n\nhere\n\n.
func (o GetSourceSonarCloudConfigurationOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSonarCloudConfiguration) string { return v.Organization }).(pulumi.StringOutput)
}

// must be one of ["sonar-cloud"]
func (o GetSourceSonarCloudConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSonarCloudConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// To retrieve issues created after the given date (inclusive).
func (o GetSourceSonarCloudConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSonarCloudConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Your User Token. See \n\nhere\n\n. The token is case sensitive.
func (o GetSourceSonarCloudConfigurationOutput) UserToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSonarCloudConfiguration) string { return v.UserToken }).(pulumi.StringOutput)
}

type GetSourceSpaceXApiConfiguration struct {
	Id      string `pulumi:"id"`
	Options string `pulumi:"options"`
	// must be one of ["spacex-api"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceSpaceXApiConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSpaceXApiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSpaceXApiConfiguration)(nil)).Elem()
}

func (o GetSourceSpaceXApiConfigurationOutput) ToGetSourceSpaceXApiConfigurationOutput() GetSourceSpaceXApiConfigurationOutput {
	return o
}

func (o GetSourceSpaceXApiConfigurationOutput) ToGetSourceSpaceXApiConfigurationOutputWithContext(ctx context.Context) GetSourceSpaceXApiConfigurationOutput {
	return o
}

func (o GetSourceSpaceXApiConfigurationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSpaceXApiConfiguration) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSourceSpaceXApiConfigurationOutput) Options() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSpaceXApiConfiguration) string { return v.Options }).(pulumi.StringOutput)
}

// must be one of ["spacex-api"]
func (o GetSourceSpaceXApiConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSpaceXApiConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceSquareConfiguration struct {
	// Choose how to authenticate to Square.
	Credentials GetSourceSquareConfigurationCredentials `pulumi:"credentials"`
	// In some streams there is an option to include deleted objects (Items, Categories, Discounts, Taxes)
	IncludeDeletedObjects bool `pulumi:"includeDeletedObjects"`
	// Determines whether to use the sandbox or production environment.
	IsSandbox bool `pulumi:"isSandbox"`
	// must be one of ["square"]
	SourceType string `pulumi:"sourceType"`
	// UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated. If not set, all data will be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceSquareConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSquareConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSquareConfiguration)(nil)).Elem()
}

func (o GetSourceSquareConfigurationOutput) ToGetSourceSquareConfigurationOutput() GetSourceSquareConfigurationOutput {
	return o
}

func (o GetSourceSquareConfigurationOutput) ToGetSourceSquareConfigurationOutputWithContext(ctx context.Context) GetSourceSquareConfigurationOutput {
	return o
}

// Choose how to authenticate to Square.
func (o GetSourceSquareConfigurationOutput) Credentials() GetSourceSquareConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceSquareConfiguration) GetSourceSquareConfigurationCredentials { return v.Credentials }).(GetSourceSquareConfigurationCredentialsOutput)
}

// In some streams there is an option to include deleted objects (Items, Categories, Discounts, Taxes)
func (o GetSourceSquareConfigurationOutput) IncludeDeletedObjects() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceSquareConfiguration) bool { return v.IncludeDeletedObjects }).(pulumi.BoolOutput)
}

// Determines whether to use the sandbox or production environment.
func (o GetSourceSquareConfigurationOutput) IsSandbox() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceSquareConfiguration) bool { return v.IsSandbox }).(pulumi.BoolOutput)
}

// must be one of ["square"]
func (o GetSourceSquareConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date in the format YYYY-MM-DD. Any data before this date will not be replicated. If not set, all data will be replicated.
func (o GetSourceSquareConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceSquareConfigurationCredentials struct {
	SourceSquareAuthenticationApiKey                    GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey                    `pulumi:"sourceSquareAuthenticationApiKey"`
	SourceSquareAuthenticationOauthAuthentication       GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication       `pulumi:"sourceSquareAuthenticationOauthAuthentication"`
	SourceSquareUpdateAuthenticationApiKey              GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey              `pulumi:"sourceSquareUpdateAuthenticationApiKey"`
	SourceSquareUpdateAuthenticationOauthAuthentication GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication `pulumi:"sourceSquareUpdateAuthenticationOauthAuthentication"`
}

type GetSourceSquareConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceSquareConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSquareConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceSquareConfigurationCredentialsOutput) ToGetSourceSquareConfigurationCredentialsOutput() GetSourceSquareConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSquareConfigurationCredentialsOutput) ToGetSourceSquareConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceSquareConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSquareConfigurationCredentialsOutput) SourceSquareAuthenticationApiKey() GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentials) GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey {
		return v.SourceSquareAuthenticationApiKey
	}).(GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput)
}

func (o GetSourceSquareConfigurationCredentialsOutput) SourceSquareAuthenticationOauthAuthentication() GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentials) GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication {
		return v.SourceSquareAuthenticationOauthAuthentication
	}).(GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput)
}

func (o GetSourceSquareConfigurationCredentialsOutput) SourceSquareUpdateAuthenticationApiKey() GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentials) GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey {
		return v.SourceSquareUpdateAuthenticationApiKey
	}).(GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput)
}

func (o GetSourceSquareConfigurationCredentialsOutput) SourceSquareUpdateAuthenticationOauthAuthentication() GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentials) GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication {
		return v.SourceSquareUpdateAuthenticationOauthAuthentication
	}).(GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput)
}

type GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey struct {
	ApiKey   string `pulumi:"apiKey"`
	AuthType string `pulumi:"authType"`
}

type GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput struct{ *pulumi.OutputState }

func (GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey)(nil)).Elem()
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput) ToGetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput() GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput {
	return o
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput) ToGetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutputWithContext(ctx context.Context) GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput {
	return o
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKey) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication)(nil)).Elem()
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput) ToGetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput() GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput {
	return o
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput) ToGetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutputWithContext(ctx context.Context) GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput {
	return o
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthentication) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey struct {
	ApiKey   string `pulumi:"apiKey"`
	AuthType string `pulumi:"authType"`
}

type GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput struct{ *pulumi.OutputState }

func (GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey)(nil)).Elem()
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput) ToGetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput() GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput {
	return o
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput) ToGetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutputWithContext(ctx context.Context) GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput {
	return o
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey) string {
		return v.ApiKey
	}).(pulumi.StringOutput)
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKey) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication struct {
	AuthType     string `pulumi:"authType"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication)(nil)).Elem()
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput) ToGetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput() GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput {
	return o
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput) ToGetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutputWithContext(ctx context.Context) GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput {
	return o
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthentication) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceStravaConfiguration struct {
	// The Athlete ID of your Strava developer application.
	AthleteId int `pulumi:"athleteId"`
	// must be one of ["Client"]
	AuthType string `pulumi:"authType"`
	// The Client ID of your Strava developer application.
	ClientId string `pulumi:"clientId"`
	// The Client Secret of your Strava developer application.
	ClientSecret string `pulumi:"clientSecret"`
	// The Refresh Token with the activity: readAll permissions.
	RefreshToken string `pulumi:"refreshToken"`
	// must be one of ["strava"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceStravaConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceStravaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceStravaConfiguration)(nil)).Elem()
}

func (o GetSourceStravaConfigurationOutput) ToGetSourceStravaConfigurationOutput() GetSourceStravaConfigurationOutput {
	return o
}

func (o GetSourceStravaConfigurationOutput) ToGetSourceStravaConfigurationOutputWithContext(ctx context.Context) GetSourceStravaConfigurationOutput {
	return o
}

// The Athlete ID of your Strava developer application.
func (o GetSourceStravaConfigurationOutput) AthleteId() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceStravaConfiguration) int { return v.AthleteId }).(pulumi.IntOutput)
}

// must be one of ["Client"]
func (o GetSourceStravaConfigurationOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceStravaConfiguration) string { return v.AuthType }).(pulumi.StringOutput)
}

// The Client ID of your Strava developer application.
func (o GetSourceStravaConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceStravaConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// The Client Secret of your Strava developer application.
func (o GetSourceStravaConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceStravaConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The Refresh Token with the activity: readAll permissions.
func (o GetSourceStravaConfigurationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceStravaConfiguration) string { return v.RefreshToken }).(pulumi.StringOutput)
}

// must be one of ["strava"]
func (o GetSourceStravaConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceStravaConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time. Any data before this date will not be replicated.
func (o GetSourceStravaConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceStravaConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceStripeConfiguration struct {
	// Your Stripe account ID (starts with 'acct_', find yours \n\nhere\n\n).
	AccountId string `pulumi:"accountId"`
	// Stripe API key (usually starts with 'sk*live*'; find yours \n\nhere\n\n).
	ClientSecret string `pulumi:"clientSecret"`
	// When set, the connector will always re-export data from the past N days, where N is the value set here. This is useful if your data is frequently updated after creation. More info \n\nhere\n\n
	LookbackWindowDays int `pulumi:"lookbackWindowDays"`
	// The time increment used by the connector when requesting data from the Stripe API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted.
	SliceRange int `pulumi:"sliceRange"`
	// must be one of ["stripe"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Only data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceStripeConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceStripeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceStripeConfiguration)(nil)).Elem()
}

func (o GetSourceStripeConfigurationOutput) ToGetSourceStripeConfigurationOutput() GetSourceStripeConfigurationOutput {
	return o
}

func (o GetSourceStripeConfigurationOutput) ToGetSourceStripeConfigurationOutputWithContext(ctx context.Context) GetSourceStripeConfigurationOutput {
	return o
}

// Your Stripe account ID (starts with 'acct_', find yours \n\nhere\n\n).
func (o GetSourceStripeConfigurationOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceStripeConfiguration) string { return v.AccountId }).(pulumi.StringOutput)
}

// Stripe API key (usually starts with 'sk*live*'; find yours \n\nhere\n\n).
func (o GetSourceStripeConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceStripeConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// When set, the connector will always re-export data from the past N days, where N is the value set here. This is useful if your data is frequently updated after creation. More info \n\nhere\n\n
func (o GetSourceStripeConfigurationOutput) LookbackWindowDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceStripeConfiguration) int { return v.LookbackWindowDays }).(pulumi.IntOutput)
}

// The time increment used by the connector when requesting data from the Stripe API. The bigger the value is, the less requests will be made and faster the sync will be. On the other hand, the more seldom the state is persisted.
func (o GetSourceStripeConfigurationOutput) SliceRange() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceStripeConfiguration) int { return v.SliceRange }).(pulumi.IntOutput)
}

// must be one of ["stripe"]
func (o GetSourceStripeConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceStripeConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Only data generated after this date will be replicated.
func (o GetSourceStripeConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceStripeConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceSurveySparrowConfiguration struct {
	// Your access token. See \n\nhere\n\n. The key is case sensitive.
	AccessToken string `pulumi:"accessToken"`
	// Is your account location is EU based? If yes, the base url to retrieve data will be different.
	Region GetSourceSurveySparrowConfigurationRegion `pulumi:"region"`
	// must be one of ["survey-sparrow"]
	SourceType string `pulumi:"sourceType"`
	// A List of your survey ids for survey-specific stream
	SurveyIds []string `pulumi:"surveyIds"`
}

type GetSourceSurveySparrowConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSurveySparrowConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSurveySparrowConfiguration)(nil)).Elem()
}

func (o GetSourceSurveySparrowConfigurationOutput) ToGetSourceSurveySparrowConfigurationOutput() GetSourceSurveySparrowConfigurationOutput {
	return o
}

func (o GetSourceSurveySparrowConfigurationOutput) ToGetSourceSurveySparrowConfigurationOutputWithContext(ctx context.Context) GetSourceSurveySparrowConfigurationOutput {
	return o
}

// Your access token. See \n\nhere\n\n. The key is case sensitive.
func (o GetSourceSurveySparrowConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// Is your account location is EU based? If yes, the base url to retrieve data will be different.
func (o GetSourceSurveySparrowConfigurationOutput) Region() GetSourceSurveySparrowConfigurationRegionOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfiguration) GetSourceSurveySparrowConfigurationRegion { return v.Region }).(GetSourceSurveySparrowConfigurationRegionOutput)
}

// must be one of ["survey-sparrow"]
func (o GetSourceSurveySparrowConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// A List of your survey ids for survey-specific stream
func (o GetSourceSurveySparrowConfigurationOutput) SurveyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfiguration) []string { return v.SurveyIds }).(pulumi.StringArrayOutput)
}

type GetSourceSurveySparrowConfigurationRegion struct {
	SourceSurveySparrowBaseUrlEuBasedAccount       GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount       `pulumi:"sourceSurveySparrowBaseUrlEuBasedAccount"`
	SourceSurveySparrowBaseUrlGlobalAccount        GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount        `pulumi:"sourceSurveySparrowBaseUrlGlobalAccount"`
	SourceSurveySparrowUpdateBaseUrlEuBasedAccount GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount `pulumi:"sourceSurveySparrowUpdateBaseUrlEuBasedAccount"`
	SourceSurveySparrowUpdateBaseUrlGlobalAccount  GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount  `pulumi:"sourceSurveySparrowUpdateBaseUrlGlobalAccount"`
}

type GetSourceSurveySparrowConfigurationRegionOutput struct{ *pulumi.OutputState }

func (GetSourceSurveySparrowConfigurationRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSurveySparrowConfigurationRegion)(nil)).Elem()
}

func (o GetSourceSurveySparrowConfigurationRegionOutput) ToGetSourceSurveySparrowConfigurationRegionOutput() GetSourceSurveySparrowConfigurationRegionOutput {
	return o
}

func (o GetSourceSurveySparrowConfigurationRegionOutput) ToGetSourceSurveySparrowConfigurationRegionOutputWithContext(ctx context.Context) GetSourceSurveySparrowConfigurationRegionOutput {
	return o
}

func (o GetSourceSurveySparrowConfigurationRegionOutput) SourceSurveySparrowBaseUrlEuBasedAccount() GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfigurationRegion) GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount {
		return v.SourceSurveySparrowBaseUrlEuBasedAccount
	}).(GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutput)
}

func (o GetSourceSurveySparrowConfigurationRegionOutput) SourceSurveySparrowBaseUrlGlobalAccount() GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfigurationRegion) GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount {
		return v.SourceSurveySparrowBaseUrlGlobalAccount
	}).(GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutput)
}

func (o GetSourceSurveySparrowConfigurationRegionOutput) SourceSurveySparrowUpdateBaseUrlEuBasedAccount() GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfigurationRegion) GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount {
		return v.SourceSurveySparrowUpdateBaseUrlEuBasedAccount
	}).(GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutput)
}

func (o GetSourceSurveySparrowConfigurationRegionOutput) SourceSurveySparrowUpdateBaseUrlGlobalAccount() GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfigurationRegion) GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount {
		return v.SourceSurveySparrowUpdateBaseUrlGlobalAccount
	}).(GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutput)
}

type GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount struct {
	UrlBase string `pulumi:"urlBase"`
}

type GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutput struct{ *pulumi.OutputState }

func (GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount)(nil)).Elem()
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutput) ToGetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutput() GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutput {
	return o
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutput) ToGetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutputWithContext(ctx context.Context) GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutput {
	return o
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutput) UrlBase() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccount) string {
		return v.UrlBase
	}).(pulumi.StringOutput)
}

type GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount struct {
	UrlBase string `pulumi:"urlBase"`
}

type GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutput struct{ *pulumi.OutputState }

func (GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount)(nil)).Elem()
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutput) ToGetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutput() GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutput {
	return o
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutput) ToGetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutputWithContext(ctx context.Context) GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutput {
	return o
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutput) UrlBase() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccount) string {
		return v.UrlBase
	}).(pulumi.StringOutput)
}

type GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount struct {
	UrlBase string `pulumi:"urlBase"`
}

type GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutput struct{ *pulumi.OutputState }

func (GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount)(nil)).Elem()
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutput) ToGetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutput() GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutput {
	return o
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutput) ToGetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutputWithContext(ctx context.Context) GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutput {
	return o
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutput) UrlBase() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccount) string {
		return v.UrlBase
	}).(pulumi.StringOutput)
}

type GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount struct {
	UrlBase string `pulumi:"urlBase"`
}

type GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutput struct{ *pulumi.OutputState }

func (GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount)(nil)).Elem()
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutput) ToGetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutput() GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutput {
	return o
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutput) ToGetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutputWithContext(ctx context.Context) GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutput {
	return o
}

func (o GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutput) UrlBase() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccount) string {
		return v.UrlBase
	}).(pulumi.StringOutput)
}

type GetSourceSurveymonkeyConfiguration struct {
	// The authorization method to use to retrieve data from SurveyMonkey
	Credentials GetSourceSurveymonkeyConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["USA", "Europe", "Canada"]
	// Depending on the originating datacenter of the SurveyMonkey account, the API access URL may be different.
	Origin string `pulumi:"origin"`
	// must be one of ["surveymonkey"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
	// IDs of the surveys from which you'd like to replicate data. If left empty, data from all boards to which you have access will be replicated.
	SurveyIds []string `pulumi:"surveyIds"`
}

type GetSourceSurveymonkeyConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceSurveymonkeyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSurveymonkeyConfiguration)(nil)).Elem()
}

func (o GetSourceSurveymonkeyConfigurationOutput) ToGetSourceSurveymonkeyConfigurationOutput() GetSourceSurveymonkeyConfigurationOutput {
	return o
}

func (o GetSourceSurveymonkeyConfigurationOutput) ToGetSourceSurveymonkeyConfigurationOutputWithContext(ctx context.Context) GetSourceSurveymonkeyConfigurationOutput {
	return o
}

// The authorization method to use to retrieve data from SurveyMonkey
func (o GetSourceSurveymonkeyConfigurationOutput) Credentials() GetSourceSurveymonkeyConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceSurveymonkeyConfiguration) GetSourceSurveymonkeyConfigurationCredentials {
		return v.Credentials
	}).(GetSourceSurveymonkeyConfigurationCredentialsOutput)
}

// must be one of ["USA", "Europe", "Canada"]
// Depending on the originating datacenter of the SurveyMonkey account, the API access URL may be different.
func (o GetSourceSurveymonkeyConfigurationOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveymonkeyConfiguration) string { return v.Origin }).(pulumi.StringOutput)
}

// must be one of ["surveymonkey"]
func (o GetSourceSurveymonkeyConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveymonkeyConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceSurveymonkeyConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveymonkeyConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// IDs of the surveys from which you'd like to replicate data. If left empty, data from all boards to which you have access will be replicated.
func (o GetSourceSurveymonkeyConfigurationOutput) SurveyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceSurveymonkeyConfiguration) []string { return v.SurveyIds }).(pulumi.StringArrayOutput)
}

type GetSourceSurveymonkeyConfigurationCredentials struct {
	AccessToken  string `pulumi:"accessToken"`
	AuthMethod   string `pulumi:"authMethod"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
}

type GetSourceSurveymonkeyConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceSurveymonkeyConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceSurveymonkeyConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceSurveymonkeyConfigurationCredentialsOutput) ToGetSourceSurveymonkeyConfigurationCredentialsOutput() GetSourceSurveymonkeyConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSurveymonkeyConfigurationCredentialsOutput) ToGetSourceSurveymonkeyConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceSurveymonkeyConfigurationCredentialsOutput {
	return o
}

func (o GetSourceSurveymonkeyConfigurationCredentialsOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveymonkeyConfigurationCredentials) string { return v.AccessToken }).(pulumi.StringOutput)
}

func (o GetSourceSurveymonkeyConfigurationCredentialsOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveymonkeyConfigurationCredentials) string { return v.AuthMethod }).(pulumi.StringOutput)
}

func (o GetSourceSurveymonkeyConfigurationCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveymonkeyConfigurationCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetSourceSurveymonkeyConfigurationCredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceSurveymonkeyConfigurationCredentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

type GetSourceTempoConfiguration struct {
	// Tempo API Token. Go to Tempo>Settings, scroll down to Data Access and select API integration.
	ApiToken string `pulumi:"apiToken"`
	// must be one of ["tempo"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceTempoConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceTempoConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTempoConfiguration)(nil)).Elem()
}

func (o GetSourceTempoConfigurationOutput) ToGetSourceTempoConfigurationOutput() GetSourceTempoConfigurationOutput {
	return o
}

func (o GetSourceTempoConfigurationOutput) ToGetSourceTempoConfigurationOutputWithContext(ctx context.Context) GetSourceTempoConfigurationOutput {
	return o
}

// Tempo API Token. Go to Tempo>Settings, scroll down to Data Access and select API integration.
func (o GetSourceTempoConfigurationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTempoConfiguration) string { return v.ApiToken }).(pulumi.StringOutput)
}

// must be one of ["tempo"]
func (o GetSourceTempoConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTempoConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceTheGuardianApiConfiguration struct {
	// Your API Key. See \n\nhere\n\n. The key is case sensitive.
	ApiKey string `pulumi:"apiKey"`
	// (Optional) Use this to set the maximum date (YYYY-MM-DD) of the results. Results newer than the endDate will not be shown. Default is set to the current date (today) for incremental syncs.
	EndDate string `pulumi:"endDate"`
	// (Optional) The query (q) parameter filters the results to only those that include that search term. The q parameter supports AND, OR and NOT operators.
	Query string `pulumi:"query"`
	// (Optional) Use this to filter the results by a particular section. See \n\nhere\n\n for a list of all sections, and \n\nhere\n\n for the sections endpoint documentation.
	Section string `pulumi:"section"`
	// must be one of ["the-guardian-api"]
	SourceType string `pulumi:"sourceType"`
	// Use this to set the minimum date (YYYY-MM-DD) of the results. Results older than the startDate will not be shown.
	StartDate string `pulumi:"startDate"`
	// (Optional) A tag is a piece of data that is used by The Guardian to categorise content. Use this parameter to filter results by showing only the ones matching the entered tag. See \n\nhere\n\n for a list of all tags, and \n\nhere\n\n for the tags endpoint documentation.
	Tag string `pulumi:"tag"`
}

type GetSourceTheGuardianApiConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceTheGuardianApiConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTheGuardianApiConfiguration)(nil)).Elem()
}

func (o GetSourceTheGuardianApiConfigurationOutput) ToGetSourceTheGuardianApiConfigurationOutput() GetSourceTheGuardianApiConfigurationOutput {
	return o
}

func (o GetSourceTheGuardianApiConfigurationOutput) ToGetSourceTheGuardianApiConfigurationOutputWithContext(ctx context.Context) GetSourceTheGuardianApiConfigurationOutput {
	return o
}

// Your API Key. See \n\nhere\n\n. The key is case sensitive.
func (o GetSourceTheGuardianApiConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTheGuardianApiConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// (Optional) Use this to set the maximum date (YYYY-MM-DD) of the results. Results newer than the endDate will not be shown. Default is set to the current date (today) for incremental syncs.
func (o GetSourceTheGuardianApiConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTheGuardianApiConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// (Optional) The query (q) parameter filters the results to only those that include that search term. The q parameter supports AND, OR and NOT operators.
func (o GetSourceTheGuardianApiConfigurationOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTheGuardianApiConfiguration) string { return v.Query }).(pulumi.StringOutput)
}

// (Optional) Use this to filter the results by a particular section. See \n\nhere\n\n for a list of all sections, and \n\nhere\n\n for the sections endpoint documentation.
func (o GetSourceTheGuardianApiConfigurationOutput) Section() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTheGuardianApiConfiguration) string { return v.Section }).(pulumi.StringOutput)
}

// must be one of ["the-guardian-api"]
func (o GetSourceTheGuardianApiConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTheGuardianApiConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Use this to set the minimum date (YYYY-MM-DD) of the results. Results older than the startDate will not be shown.
func (o GetSourceTheGuardianApiConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTheGuardianApiConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// (Optional) A tag is a piece of data that is used by The Guardian to categorise content. Use this parameter to filter results by showing only the ones matching the entered tag. See \n\nhere\n\n for a list of all tags, and \n\nhere\n\n for the tags endpoint documentation.
func (o GetSourceTheGuardianApiConfigurationOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTheGuardianApiConfiguration) string { return v.Tag }).(pulumi.StringOutput)
}

type GetSourceTiktokMarketingConfiguration struct {
	// The attribution window in days.
	AttributionWindow int `pulumi:"attributionWindow"`
	// Authentication method
	Credentials GetSourceTiktokMarketingConfigurationCredentials `pulumi:"credentials"`
	// The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DD. All data generated between startDate and this date will be replicated. Not setting this option will result in always syncing the data till the current date.
	EndDate string `pulumi:"endDate"`
	// Set to active if you want to include deleted data in reports.
	IncludeDeleted bool `pulumi:"includeDeleted"`
	// must be one of ["tiktok-marketing"]
	SourceType string `pulumi:"sourceType"`
	// The Start Date in format: YYYY-MM-DD. Any data before this date will not be replicated. If this parameter is not set, all data will be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceTiktokMarketingConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceTiktokMarketingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTiktokMarketingConfiguration)(nil)).Elem()
}

func (o GetSourceTiktokMarketingConfigurationOutput) ToGetSourceTiktokMarketingConfigurationOutput() GetSourceTiktokMarketingConfigurationOutput {
	return o
}

func (o GetSourceTiktokMarketingConfigurationOutput) ToGetSourceTiktokMarketingConfigurationOutputWithContext(ctx context.Context) GetSourceTiktokMarketingConfigurationOutput {
	return o
}

// The attribution window in days.
func (o GetSourceTiktokMarketingConfigurationOutput) AttributionWindow() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfiguration) int { return v.AttributionWindow }).(pulumi.IntOutput)
}

// Authentication method
func (o GetSourceTiktokMarketingConfigurationOutput) Credentials() GetSourceTiktokMarketingConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfiguration) GetSourceTiktokMarketingConfigurationCredentials {
		return v.Credentials
	}).(GetSourceTiktokMarketingConfigurationCredentialsOutput)
}

// The date until which you'd like to replicate data for all incremental streams, in the format YYYY-MM-DD. All data generated between startDate and this date will be replicated. Not setting this option will result in always syncing the data till the current date.
func (o GetSourceTiktokMarketingConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// Set to active if you want to include deleted data in reports.
func (o GetSourceTiktokMarketingConfigurationOutput) IncludeDeleted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfiguration) bool { return v.IncludeDeleted }).(pulumi.BoolOutput)
}

// must be one of ["tiktok-marketing"]
func (o GetSourceTiktokMarketingConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The Start Date in format: YYYY-MM-DD. Any data before this date will not be replicated. If this parameter is not set, all data will be replicated.
func (o GetSourceTiktokMarketingConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceTiktokMarketingConfigurationCredentials struct {
	SourceTiktokMarketingAuthenticationMethodOAuth20                  GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20                  `pulumi:"sourceTiktokMarketingAuthenticationMethodOAuth20"`
	SourceTiktokMarketingAuthenticationMethodSandboxAccessToken       GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken       `pulumi:"sourceTiktokMarketingAuthenticationMethodSandboxAccessToken"`
	SourceTiktokMarketingUpdateAuthenticationMethodOAuth20            GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20            `pulumi:"sourceTiktokMarketingUpdateAuthenticationMethodOAuth20"`
	SourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken `pulumi:"sourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken"`
}

type GetSourceTiktokMarketingConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceTiktokMarketingConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTiktokMarketingConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceTiktokMarketingConfigurationCredentialsOutput) ToGetSourceTiktokMarketingConfigurationCredentialsOutput() GetSourceTiktokMarketingConfigurationCredentialsOutput {
	return o
}

func (o GetSourceTiktokMarketingConfigurationCredentialsOutput) ToGetSourceTiktokMarketingConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceTiktokMarketingConfigurationCredentialsOutput {
	return o
}

func (o GetSourceTiktokMarketingConfigurationCredentialsOutput) SourceTiktokMarketingAuthenticationMethodOAuth20() GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentials) GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20 {
		return v.SourceTiktokMarketingAuthenticationMethodOAuth20
	}).(GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsOutput) SourceTiktokMarketingAuthenticationMethodSandboxAccessToken() GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentials) GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken {
		return v.SourceTiktokMarketingAuthenticationMethodSandboxAccessToken
	}).(GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsOutput) SourceTiktokMarketingUpdateAuthenticationMethodOAuth20() GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentials) GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20 {
		return v.SourceTiktokMarketingUpdateAuthenticationMethodOAuth20
	}).(GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsOutput) SourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken() GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentials) GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken {
		return v.SourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken
	}).(GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput)
}

type GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AdvertiserId string `pulumi:"advertiserId"`
	AppId        string `pulumi:"appId"`
	AuthType     string `pulumi:"authType"`
	Secret       string `pulumi:"secret"`
}

type GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output) ToGetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output() GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output {
	return o
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output) ToGetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output {
	return o
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output) AdvertiserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20) string {
		return v.AdvertiserId
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20) string {
		return v.AppId
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20) string {
		return v.Secret
	}).(pulumi.StringOutput)
}

type GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken struct {
	AccessToken  string `pulumi:"accessToken"`
	AdvertiserId string `pulumi:"advertiserId"`
	AuthType     string `pulumi:"authType"`
}

type GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken)(nil)).Elem()
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput) ToGetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput() GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput {
	return o
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput) ToGetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutputWithContext(ctx context.Context) GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput {
	return o
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput) AdvertiserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken) string {
		return v.AdvertiserId
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	AdvertiserId string `pulumi:"advertiserId"`
	AppId        string `pulumi:"appId"`
	AuthType     string `pulumi:"authType"`
	Secret       string `pulumi:"secret"`
}

type GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output) ToGetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output() GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output {
	return o
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output) ToGetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output {
	return o
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output) AdvertiserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20) string {
		return v.AdvertiserId
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20) string {
		return v.AppId
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20) string {
		return v.Secret
	}).(pulumi.StringOutput)
}

type GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken struct {
	AccessToken  string `pulumi:"accessToken"`
	AdvertiserId string `pulumi:"advertiserId"`
	AuthType     string `pulumi:"authType"`
}

type GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken)(nil)).Elem()
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput) ToGetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput() GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput {
	return o
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput) ToGetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutputWithContext(ctx context.Context) GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput {
	return o
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput) AdvertiserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken) string {
		return v.AdvertiserId
	}).(pulumi.StringOutput)
}

func (o GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceTodoistConfiguration struct {
	// must be one of ["todoist"]
	SourceType string `pulumi:"sourceType"`
	// Your API Token. See \n\nhere\n\n. The token is case sensitive.
	Token string `pulumi:"token"`
}

type GetSourceTodoistConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceTodoistConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTodoistConfiguration)(nil)).Elem()
}

func (o GetSourceTodoistConfigurationOutput) ToGetSourceTodoistConfigurationOutput() GetSourceTodoistConfigurationOutput {
	return o
}

func (o GetSourceTodoistConfigurationOutput) ToGetSourceTodoistConfigurationOutputWithContext(ctx context.Context) GetSourceTodoistConfigurationOutput {
	return o
}

// must be one of ["todoist"]
func (o GetSourceTodoistConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTodoistConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Your API Token. See \n\nhere\n\n. The token is case sensitive.
func (o GetSourceTodoistConfigurationOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTodoistConfiguration) string { return v.Token }).(pulumi.StringOutput)
}

type GetSourceTrelloConfiguration struct {
	// IDs of the boards to replicate data from. If left empty, data from all boards to which you have access will be replicated.
	BoardIds []string `pulumi:"boardIds"`
	// Trello API key. See the \n\ndocs\n\n for instructions on how to generate it.
	Key string `pulumi:"key"`
	// must be one of ["trello"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
	// Trello API token. See the \n\ndocs\n\n for instructions on how to generate it.
	Token string `pulumi:"token"`
}

type GetSourceTrelloConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceTrelloConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTrelloConfiguration)(nil)).Elem()
}

func (o GetSourceTrelloConfigurationOutput) ToGetSourceTrelloConfigurationOutput() GetSourceTrelloConfigurationOutput {
	return o
}

func (o GetSourceTrelloConfigurationOutput) ToGetSourceTrelloConfigurationOutputWithContext(ctx context.Context) GetSourceTrelloConfigurationOutput {
	return o
}

// IDs of the boards to replicate data from. If left empty, data from all boards to which you have access will be replicated.
func (o GetSourceTrelloConfigurationOutput) BoardIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceTrelloConfiguration) []string { return v.BoardIds }).(pulumi.StringArrayOutput)
}

// Trello API key. See the \n\ndocs\n\n for instructions on how to generate it.
func (o GetSourceTrelloConfigurationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrelloConfiguration) string { return v.Key }).(pulumi.StringOutput)
}

// must be one of ["trello"]
func (o GetSourceTrelloConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrelloConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2017-01-25T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceTrelloConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrelloConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Trello API token. See the \n\ndocs\n\n for instructions on how to generate it.
func (o GetSourceTrelloConfigurationOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrelloConfiguration) string { return v.Token }).(pulumi.StringOutput)
}

type GetSourceTrustpilotConfiguration struct {
	// The names of business units which shall be synchronized. Some streams e.g. configured*business*units or privateReviews use this configuration.
	BusinessUnits []string                                    `pulumi:"businessUnits"`
	Credentials   GetSourceTrustpilotConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["trustpilot"]
	SourceType string `pulumi:"sourceType"`
	// For streams with sync. method incremental the start date time to be used
	StartDate string `pulumi:"startDate"`
}

type GetSourceTrustpilotConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceTrustpilotConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTrustpilotConfiguration)(nil)).Elem()
}

func (o GetSourceTrustpilotConfigurationOutput) ToGetSourceTrustpilotConfigurationOutput() GetSourceTrustpilotConfigurationOutput {
	return o
}

func (o GetSourceTrustpilotConfigurationOutput) ToGetSourceTrustpilotConfigurationOutputWithContext(ctx context.Context) GetSourceTrustpilotConfigurationOutput {
	return o
}

// The names of business units which shall be synchronized. Some streams e.g. configured*business*units or privateReviews use this configuration.
func (o GetSourceTrustpilotConfigurationOutput) BusinessUnits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfiguration) []string { return v.BusinessUnits }).(pulumi.StringArrayOutput)
}

func (o GetSourceTrustpilotConfigurationOutput) Credentials() GetSourceTrustpilotConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfiguration) GetSourceTrustpilotConfigurationCredentials {
		return v.Credentials
	}).(GetSourceTrustpilotConfigurationCredentialsOutput)
}

// must be one of ["trustpilot"]
func (o GetSourceTrustpilotConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// For streams with sync. method incremental the start date time to be used
func (o GetSourceTrustpilotConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceTrustpilotConfigurationCredentials struct {
	SourceTrustpilotAuthorizationMethodApiKey        GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey        `pulumi:"sourceTrustpilotAuthorizationMethodApiKey"`
	SourceTrustpilotAuthorizationMethodOAuth20       GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20       `pulumi:"sourceTrustpilotAuthorizationMethodOAuth20"`
	SourceTrustpilotUpdateAuthorizationMethodApiKey  GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey  `pulumi:"sourceTrustpilotUpdateAuthorizationMethodApiKey"`
	SourceTrustpilotUpdateAuthorizationMethodOAuth20 GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20 `pulumi:"sourceTrustpilotUpdateAuthorizationMethodOAuth20"`
}

type GetSourceTrustpilotConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceTrustpilotConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTrustpilotConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceTrustpilotConfigurationCredentialsOutput) ToGetSourceTrustpilotConfigurationCredentialsOutput() GetSourceTrustpilotConfigurationCredentialsOutput {
	return o
}

func (o GetSourceTrustpilotConfigurationCredentialsOutput) ToGetSourceTrustpilotConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceTrustpilotConfigurationCredentialsOutput {
	return o
}

func (o GetSourceTrustpilotConfigurationCredentialsOutput) SourceTrustpilotAuthorizationMethodApiKey() GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentials) GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey {
		return v.SourceTrustpilotAuthorizationMethodApiKey
	}).(GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsOutput) SourceTrustpilotAuthorizationMethodOAuth20() GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentials) GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20 {
		return v.SourceTrustpilotAuthorizationMethodOAuth20
	}).(GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output)
}

func (o GetSourceTrustpilotConfigurationCredentialsOutput) SourceTrustpilotUpdateAuthorizationMethodApiKey() GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentials) GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey {
		return v.SourceTrustpilotUpdateAuthorizationMethodApiKey
	}).(GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsOutput) SourceTrustpilotUpdateAuthorizationMethodOAuth20() GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentials) GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20 {
		return v.SourceTrustpilotUpdateAuthorizationMethodOAuth20
	}).(GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output)
}

type GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey struct {
	AuthType string `pulumi:"authType"`
	ClientId string `pulumi:"clientId"`
}

type GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput struct{ *pulumi.OutputState }

func (GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey)(nil)).Elem()
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput) ToGetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput() GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput {
	return o
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput) ToGetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutputWithContext(ctx context.Context) GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput {
	return o
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKey) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

type GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output) ToGetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output() GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output) ToGetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey struct {
	AuthType string `pulumi:"authType"`
	ClientId string `pulumi:"clientId"`
}

type GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput struct{ *pulumi.OutputState }

func (GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey)(nil)).Elem()
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput) ToGetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput() GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput {
	return o
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput) ToGetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutputWithContext(ctx context.Context) GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput {
	return o
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKey) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

type GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output) ToGetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output() GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output) ToGetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceTvmazeScheduleConfiguration struct {
	// Country code for domestic TV schedule retrieval.
	DomesticScheduleCountryCode string `pulumi:"domesticScheduleCountryCode"`
	// End date for TV schedule retrieval. May be in the future. Optional.
	EndDate string `pulumi:"endDate"`
	// must be one of ["tvmaze-schedule"]
	SourceType string `pulumi:"sourceType"`
	// Start date for TV schedule retrieval. May be in the future.
	StartDate string `pulumi:"startDate"`
	// ISO 3166-1 country code for web TV schedule retrieval. Leave blank for
	// all countries plus global web channels (e.g. Netflix). Alternatively,
	// set to 'global' for just global web channels.
	WebScheduleCountryCode string `pulumi:"webScheduleCountryCode"`
}

type GetSourceTvmazeScheduleConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceTvmazeScheduleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTvmazeScheduleConfiguration)(nil)).Elem()
}

func (o GetSourceTvmazeScheduleConfigurationOutput) ToGetSourceTvmazeScheduleConfigurationOutput() GetSourceTvmazeScheduleConfigurationOutput {
	return o
}

func (o GetSourceTvmazeScheduleConfigurationOutput) ToGetSourceTvmazeScheduleConfigurationOutputWithContext(ctx context.Context) GetSourceTvmazeScheduleConfigurationOutput {
	return o
}

// Country code for domestic TV schedule retrieval.
func (o GetSourceTvmazeScheduleConfigurationOutput) DomesticScheduleCountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTvmazeScheduleConfiguration) string { return v.DomesticScheduleCountryCode }).(pulumi.StringOutput)
}

// End date for TV schedule retrieval. May be in the future. Optional.
func (o GetSourceTvmazeScheduleConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTvmazeScheduleConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// must be one of ["tvmaze-schedule"]
func (o GetSourceTvmazeScheduleConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTvmazeScheduleConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Start date for TV schedule retrieval. May be in the future.
func (o GetSourceTvmazeScheduleConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTvmazeScheduleConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// ISO 3166-1 country code for web TV schedule retrieval. Leave blank for
// all countries plus global web channels (e.g. Netflix). Alternatively,
// set to 'global' for just global web channels.
func (o GetSourceTvmazeScheduleConfigurationOutput) WebScheduleCountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTvmazeScheduleConfiguration) string { return v.WebScheduleCountryCode }).(pulumi.StringOutput)
}

type GetSourceTwilioConfiguration struct {
	// Twilio account SID
	AccountSid string `pulumi:"accountSid"`
	// Twilio Auth Token.
	AuthToken string `pulumi:"authToken"`
	// How far into the past to look for records. (in minutes)
	LookbackWindow int `pulumi:"lookbackWindow"`
	// must be one of ["twilio"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format 2020-10-01T00:00:00Z. Any data before this date will not be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceTwilioConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceTwilioConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTwilioConfiguration)(nil)).Elem()
}

func (o GetSourceTwilioConfigurationOutput) ToGetSourceTwilioConfigurationOutput() GetSourceTwilioConfigurationOutput {
	return o
}

func (o GetSourceTwilioConfigurationOutput) ToGetSourceTwilioConfigurationOutputWithContext(ctx context.Context) GetSourceTwilioConfigurationOutput {
	return o
}

// Twilio account SID
func (o GetSourceTwilioConfigurationOutput) AccountSid() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwilioConfiguration) string { return v.AccountSid }).(pulumi.StringOutput)
}

// Twilio Auth Token.
func (o GetSourceTwilioConfigurationOutput) AuthToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwilioConfiguration) string { return v.AuthToken }).(pulumi.StringOutput)
}

// How far into the past to look for records. (in minutes)
func (o GetSourceTwilioConfigurationOutput) LookbackWindow() pulumi.IntOutput {
	return o.ApplyT(func(v GetSourceTwilioConfiguration) int { return v.LookbackWindow }).(pulumi.IntOutput)
}

// must be one of ["twilio"]
func (o GetSourceTwilioConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwilioConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format 2020-10-01T00:00:00Z. Any data before this date will not be replicated.
func (o GetSourceTwilioConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwilioConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceTwilioTaskrouterConfiguration struct {
	// Twilio Account ID
	AccountSid string `pulumi:"accountSid"`
	// Twilio Auth Token
	AuthToken string `pulumi:"authToken"`
	// must be one of ["twilio-taskrouter"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceTwilioTaskrouterConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceTwilioTaskrouterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTwilioTaskrouterConfiguration)(nil)).Elem()
}

func (o GetSourceTwilioTaskrouterConfigurationOutput) ToGetSourceTwilioTaskrouterConfigurationOutput() GetSourceTwilioTaskrouterConfigurationOutput {
	return o
}

func (o GetSourceTwilioTaskrouterConfigurationOutput) ToGetSourceTwilioTaskrouterConfigurationOutputWithContext(ctx context.Context) GetSourceTwilioTaskrouterConfigurationOutput {
	return o
}

// Twilio Account ID
func (o GetSourceTwilioTaskrouterConfigurationOutput) AccountSid() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwilioTaskrouterConfiguration) string { return v.AccountSid }).(pulumi.StringOutput)
}

// Twilio Auth Token
func (o GetSourceTwilioTaskrouterConfigurationOutput) AuthToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwilioTaskrouterConfiguration) string { return v.AuthToken }).(pulumi.StringOutput)
}

// must be one of ["twilio-taskrouter"]
func (o GetSourceTwilioTaskrouterConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwilioTaskrouterConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceTwitterConfiguration struct {
	// App only Bearer Token. See the \n\ndocs\n\n for more information on how to obtain this token.
	ApiKey string `pulumi:"apiKey"`
	// The end date for retrieving tweets must be a minimum of 10 seconds prior to the request time.
	EndDate string `pulumi:"endDate"`
	// Query for matching Tweets. You can learn how to build this query by reading \n\n build a query guide \n\n.
	Query string `pulumi:"query"`
	// must be one of ["twitter"]
	SourceType string `pulumi:"sourceType"`
	// The start date for retrieving tweets cannot be more than 7 days in the past.
	StartDate string `pulumi:"startDate"`
}

type GetSourceTwitterConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceTwitterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTwitterConfiguration)(nil)).Elem()
}

func (o GetSourceTwitterConfigurationOutput) ToGetSourceTwitterConfigurationOutput() GetSourceTwitterConfigurationOutput {
	return o
}

func (o GetSourceTwitterConfigurationOutput) ToGetSourceTwitterConfigurationOutputWithContext(ctx context.Context) GetSourceTwitterConfigurationOutput {
	return o
}

// App only Bearer Token. See the \n\ndocs\n\n for more information on how to obtain this token.
func (o GetSourceTwitterConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwitterConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// The end date for retrieving tweets must be a minimum of 10 seconds prior to the request time.
func (o GetSourceTwitterConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwitterConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// Query for matching Tweets. You can learn how to build this query by reading \n\n build a query guide \n\n.
func (o GetSourceTwitterConfigurationOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwitterConfiguration) string { return v.Query }).(pulumi.StringOutput)
}

// must be one of ["twitter"]
func (o GetSourceTwitterConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwitterConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The start date for retrieving tweets cannot be more than 7 days in the past.
func (o GetSourceTwitterConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTwitterConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceTypeformConfiguration struct {
	Credentials GetSourceTypeformConfigurationCredentials `pulumi:"credentials"`
	// When this parameter is set, the connector will replicate data only from the input forms. Otherwise, all forms in your Typeform account will be replicated. You can find form IDs in your form URLs. For example, in the URL "https://mysite.typeform.com/to/u6nXL7" the formId is u6nXL7. You can find form URLs on Share panel
	FormIds []string `pulumi:"formIds"`
	// must be one of ["typeform"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for Typeform API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
}

type GetSourceTypeformConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceTypeformConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTypeformConfiguration)(nil)).Elem()
}

func (o GetSourceTypeformConfigurationOutput) ToGetSourceTypeformConfigurationOutput() GetSourceTypeformConfigurationOutput {
	return o
}

func (o GetSourceTypeformConfigurationOutput) ToGetSourceTypeformConfigurationOutputWithContext(ctx context.Context) GetSourceTypeformConfigurationOutput {
	return o
}

func (o GetSourceTypeformConfigurationOutput) Credentials() GetSourceTypeformConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceTypeformConfiguration) GetSourceTypeformConfigurationCredentials { return v.Credentials }).(GetSourceTypeformConfigurationCredentialsOutput)
}

// When this parameter is set, the connector will replicate data only from the input forms. Otherwise, all forms in your Typeform account will be replicated. You can find form IDs in your form URLs. For example, in the URL "https://mysite.typeform.com/to/u6nXL7" the formId is u6nXL7. You can find form URLs on Share panel
func (o GetSourceTypeformConfigurationOutput) FormIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSourceTypeformConfiguration) []string { return v.FormIds }).(pulumi.StringArrayOutput)
}

// must be one of ["typeform"]
func (o GetSourceTypeformConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for Typeform API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
func (o GetSourceTypeformConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceTypeformConfigurationCredentials struct {
	SourceTypeformAuthorizationMethodOAuth20            GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20            `pulumi:"sourceTypeformAuthorizationMethodOAuth20"`
	SourceTypeformAuthorizationMethodPrivateToken       GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken       `pulumi:"sourceTypeformAuthorizationMethodPrivateToken"`
	SourceTypeformUpdateAuthorizationMethodOAuth20      GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20      `pulumi:"sourceTypeformUpdateAuthorizationMethodOAuth20"`
	SourceTypeformUpdateAuthorizationMethodPrivateToken GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken `pulumi:"sourceTypeformUpdateAuthorizationMethodPrivateToken"`
}

type GetSourceTypeformConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceTypeformConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTypeformConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceTypeformConfigurationCredentialsOutput) ToGetSourceTypeformConfigurationCredentialsOutput() GetSourceTypeformConfigurationCredentialsOutput {
	return o
}

func (o GetSourceTypeformConfigurationCredentialsOutput) ToGetSourceTypeformConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceTypeformConfigurationCredentialsOutput {
	return o
}

func (o GetSourceTypeformConfigurationCredentialsOutput) SourceTypeformAuthorizationMethodOAuth20() GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentials) GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20 {
		return v.SourceTypeformAuthorizationMethodOAuth20
	}).(GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output)
}

func (o GetSourceTypeformConfigurationCredentialsOutput) SourceTypeformAuthorizationMethodPrivateToken() GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentials) GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken {
		return v.SourceTypeformAuthorizationMethodPrivateToken
	}).(GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput)
}

func (o GetSourceTypeformConfigurationCredentialsOutput) SourceTypeformUpdateAuthorizationMethodOAuth20() GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentials) GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20 {
		return v.SourceTypeformUpdateAuthorizationMethodOAuth20
	}).(GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output)
}

func (o GetSourceTypeformConfigurationCredentialsOutput) SourceTypeformUpdateAuthorizationMethodPrivateToken() GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentials) GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken {
		return v.SourceTypeformUpdateAuthorizationMethodPrivateToken
	}).(GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput)
}

type GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output) ToGetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output() GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output) ToGetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthType    string `pulumi:"authType"`
}

type GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput struct{ *pulumi.OutputState }

func (GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken)(nil)).Elem()
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput) ToGetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput() GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput {
	return o
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput) ToGetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutputWithContext(ctx context.Context) GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput {
	return o
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20 struct {
	AccessToken     string `pulumi:"accessToken"`
	AuthType        string `pulumi:"authType"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output) ToGetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output() GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output) ToGetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20) string {
		return v.TokenExpiryDate
	}).(pulumi.StringOutput)
}

type GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken struct {
	AccessToken string `pulumi:"accessToken"`
	AuthType    string `pulumi:"authType"`
}

type GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput struct{ *pulumi.OutputState }

func (GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken)(nil)).Elem()
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput) ToGetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput() GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput {
	return o
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput) ToGetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutputWithContext(ctx context.Context) GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput {
	return o
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

type GetSourceUsCensusConfiguration struct {
	// Your API Key. Get your key \n\nhere\n\n.
	ApiKey string `pulumi:"apiKey"`
	// The query parameters portion of the GET request, without the api key
	QueryParams string `pulumi:"queryParams"`
	// The path portion of the GET request
	QueryPath string `pulumi:"queryPath"`
	// must be one of ["us-census"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceUsCensusConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceUsCensusConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceUsCensusConfiguration)(nil)).Elem()
}

func (o GetSourceUsCensusConfigurationOutput) ToGetSourceUsCensusConfigurationOutput() GetSourceUsCensusConfigurationOutput {
	return o
}

func (o GetSourceUsCensusConfigurationOutput) ToGetSourceUsCensusConfigurationOutputWithContext(ctx context.Context) GetSourceUsCensusConfigurationOutput {
	return o
}

// Your API Key. Get your key \n\nhere\n\n.
func (o GetSourceUsCensusConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceUsCensusConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// The query parameters portion of the GET request, without the api key
func (o GetSourceUsCensusConfigurationOutput) QueryParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceUsCensusConfiguration) string { return v.QueryParams }).(pulumi.StringOutput)
}

// The path portion of the GET request
func (o GetSourceUsCensusConfigurationOutput) QueryPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceUsCensusConfiguration) string { return v.QueryPath }).(pulumi.StringOutput)
}

// must be one of ["us-census"]
func (o GetSourceUsCensusConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceUsCensusConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceVantageConfiguration struct {
	// Your API Access token. See \n\nhere\n\n.
	AccessToken string `pulumi:"accessToken"`
	// must be one of ["vantage"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceVantageConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceVantageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceVantageConfiguration)(nil)).Elem()
}

func (o GetSourceVantageConfigurationOutput) ToGetSourceVantageConfigurationOutput() GetSourceVantageConfigurationOutput {
	return o
}

func (o GetSourceVantageConfigurationOutput) ToGetSourceVantageConfigurationOutputWithContext(ctx context.Context) GetSourceVantageConfigurationOutput {
	return o
}

// Your API Access token. See \n\nhere\n\n.
func (o GetSourceVantageConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceVantageConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// must be one of ["vantage"]
func (o GetSourceVantageConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceVantageConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceWebflowConfiguration struct {
	// The API token for authenticating to Webflow. See https://university.webflow.com/lesson/intro-to-the-webflow-api
	ApiKey string `pulumi:"apiKey"`
	// The id of the Webflow site you are requesting data from. See https://developers.webflow.com/#sites
	SiteId string `pulumi:"siteId"`
	// must be one of ["webflow"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceWebflowConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceWebflowConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceWebflowConfiguration)(nil)).Elem()
}

func (o GetSourceWebflowConfigurationOutput) ToGetSourceWebflowConfigurationOutput() GetSourceWebflowConfigurationOutput {
	return o
}

func (o GetSourceWebflowConfigurationOutput) ToGetSourceWebflowConfigurationOutputWithContext(ctx context.Context) GetSourceWebflowConfigurationOutput {
	return o
}

// The API token for authenticating to Webflow. See https://university.webflow.com/lesson/intro-to-the-webflow-api
func (o GetSourceWebflowConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWebflowConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// The id of the Webflow site you are requesting data from. See https://developers.webflow.com/#sites
func (o GetSourceWebflowConfigurationOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWebflowConfiguration) string { return v.SiteId }).(pulumi.StringOutput)
}

// must be one of ["webflow"]
func (o GetSourceWebflowConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWebflowConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceWhiskyHunterConfiguration struct {
	// must be one of ["whisky-hunter"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceWhiskyHunterConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceWhiskyHunterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceWhiskyHunterConfiguration)(nil)).Elem()
}

func (o GetSourceWhiskyHunterConfigurationOutput) ToGetSourceWhiskyHunterConfigurationOutput() GetSourceWhiskyHunterConfigurationOutput {
	return o
}

func (o GetSourceWhiskyHunterConfigurationOutput) ToGetSourceWhiskyHunterConfigurationOutputWithContext(ctx context.Context) GetSourceWhiskyHunterConfigurationOutput {
	return o
}

// must be one of ["whisky-hunter"]
func (o GetSourceWhiskyHunterConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWhiskyHunterConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceWikipediaPageviewsConfiguration struct {
	// If you want to filter by access method, use one of desktop, mobile-app or mobile-web. If you are interested in pageviews regardless of access method, use all-access.
	Access string `pulumi:"access"`
	// If you want to filter by agent type, use one of user, automated or spider. If you are interested in pageviews regardless of agent type, use all-agents.
	Agent string `pulumi:"agent"`
	// The title of any article in the specified project. Any spaces should be replaced with underscores. It also should be URI-encoded, so that non-URI-safe characters like %, / or ? are accepted.
	Article string `pulumi:"article"`
	// The ISO 3166-1 alpha-2 code of a country for which to retrieve top articles.
	Country string `pulumi:"country"`
	// The date of the last day to include, in YYYYMMDD or YYYYMMDDHH format.
	End string `pulumi:"end"`
	// If you want to filter by project, use the domain of any Wikimedia project.
	Project string `pulumi:"project"`
	// must be one of ["wikipedia-pageviews"]
	SourceType string `pulumi:"sourceType"`
	// The date of the first day to include, in YYYYMMDD or YYYYMMDDHH format.
	Start string `pulumi:"start"`
}

type GetSourceWikipediaPageviewsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceWikipediaPageviewsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceWikipediaPageviewsConfiguration)(nil)).Elem()
}

func (o GetSourceWikipediaPageviewsConfigurationOutput) ToGetSourceWikipediaPageviewsConfigurationOutput() GetSourceWikipediaPageviewsConfigurationOutput {
	return o
}

func (o GetSourceWikipediaPageviewsConfigurationOutput) ToGetSourceWikipediaPageviewsConfigurationOutputWithContext(ctx context.Context) GetSourceWikipediaPageviewsConfigurationOutput {
	return o
}

// If you want to filter by access method, use one of desktop, mobile-app or mobile-web. If you are interested in pageviews regardless of access method, use all-access.
func (o GetSourceWikipediaPageviewsConfigurationOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWikipediaPageviewsConfiguration) string { return v.Access }).(pulumi.StringOutput)
}

// If you want to filter by agent type, use one of user, automated or spider. If you are interested in pageviews regardless of agent type, use all-agents.
func (o GetSourceWikipediaPageviewsConfigurationOutput) Agent() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWikipediaPageviewsConfiguration) string { return v.Agent }).(pulumi.StringOutput)
}

// The title of any article in the specified project. Any spaces should be replaced with underscores. It also should be URI-encoded, so that non-URI-safe characters like %, / or ? are accepted.
func (o GetSourceWikipediaPageviewsConfigurationOutput) Article() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWikipediaPageviewsConfiguration) string { return v.Article }).(pulumi.StringOutput)
}

// The ISO 3166-1 alpha-2 code of a country for which to retrieve top articles.
func (o GetSourceWikipediaPageviewsConfigurationOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWikipediaPageviewsConfiguration) string { return v.Country }).(pulumi.StringOutput)
}

// The date of the last day to include, in YYYYMMDD or YYYYMMDDHH format.
func (o GetSourceWikipediaPageviewsConfigurationOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWikipediaPageviewsConfiguration) string { return v.End }).(pulumi.StringOutput)
}

// If you want to filter by project, use the domain of any Wikimedia project.
func (o GetSourceWikipediaPageviewsConfigurationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWikipediaPageviewsConfiguration) string { return v.Project }).(pulumi.StringOutput)
}

// must be one of ["wikipedia-pageviews"]
func (o GetSourceWikipediaPageviewsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWikipediaPageviewsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date of the first day to include, in YYYYMMDD or YYYYMMDDHH format.
func (o GetSourceWikipediaPageviewsConfigurationOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWikipediaPageviewsConfiguration) string { return v.Start }).(pulumi.StringOutput)
}

type GetSourceWoocommerceConfiguration struct {
	// Customer Key for API in WooCommerce shop
	ApiKey string `pulumi:"apiKey"`
	// Customer Secret for API in WooCommerce shop
	ApiSecret string `pulumi:"apiSecret"`
	// The name of the store. For https://EXAMPLE.com, the shop name is 'EXAMPLE.com'.
	Shop string `pulumi:"shop"`
	// must be one of ["woocommerce"]
	SourceType string `pulumi:"sourceType"`
	// The date you would like to replicate data from. Format: YYYY-MM-DD
	StartDate string `pulumi:"startDate"`
}

type GetSourceWoocommerceConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceWoocommerceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceWoocommerceConfiguration)(nil)).Elem()
}

func (o GetSourceWoocommerceConfigurationOutput) ToGetSourceWoocommerceConfigurationOutput() GetSourceWoocommerceConfigurationOutput {
	return o
}

func (o GetSourceWoocommerceConfigurationOutput) ToGetSourceWoocommerceConfigurationOutputWithContext(ctx context.Context) GetSourceWoocommerceConfigurationOutput {
	return o
}

// Customer Key for API in WooCommerce shop
func (o GetSourceWoocommerceConfigurationOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWoocommerceConfiguration) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Customer Secret for API in WooCommerce shop
func (o GetSourceWoocommerceConfigurationOutput) ApiSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWoocommerceConfiguration) string { return v.ApiSecret }).(pulumi.StringOutput)
}

// The name of the store. For https://EXAMPLE.com, the shop name is 'EXAMPLE.com'.
func (o GetSourceWoocommerceConfigurationOutput) Shop() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWoocommerceConfiguration) string { return v.Shop }).(pulumi.StringOutput)
}

// must be one of ["woocommerce"]
func (o GetSourceWoocommerceConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWoocommerceConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date you would like to replicate data from. Format: YYYY-MM-DD
func (o GetSourceWoocommerceConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceWoocommerceConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceXeroConfiguration struct {
	Authentication GetSourceXeroConfigurationAuthentication `pulumi:"authentication"`
	// must be one of ["xero"]
	SourceType string `pulumi:"sourceType"`
	// UTC date and time in the format YYYY-MM-DDTHH:mm:ssZ. Any data with createdAt before this data will not be synced.
	StartDate string `pulumi:"startDate"`
	// Enter your Xero organization's Tenant ID
	TenantId string `pulumi:"tenantId"`
}

type GetSourceXeroConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceXeroConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceXeroConfiguration)(nil)).Elem()
}

func (o GetSourceXeroConfigurationOutput) ToGetSourceXeroConfigurationOutput() GetSourceXeroConfigurationOutput {
	return o
}

func (o GetSourceXeroConfigurationOutput) ToGetSourceXeroConfigurationOutputWithContext(ctx context.Context) GetSourceXeroConfigurationOutput {
	return o
}

func (o GetSourceXeroConfigurationOutput) Authentication() GetSourceXeroConfigurationAuthenticationOutput {
	return o.ApplyT(func(v GetSourceXeroConfiguration) GetSourceXeroConfigurationAuthentication { return v.Authentication }).(GetSourceXeroConfigurationAuthenticationOutput)
}

// must be one of ["xero"]
func (o GetSourceXeroConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceXeroConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// UTC date and time in the format YYYY-MM-DDTHH:mm:ssZ. Any data with createdAt before this data will not be synced.
func (o GetSourceXeroConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceXeroConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Enter your Xero organization's Tenant ID
func (o GetSourceXeroConfigurationOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceXeroConfiguration) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetSourceXeroConfigurationAuthentication struct {
	AccessToken     string `pulumi:"accessToken"`
	ClientId        string `pulumi:"clientId"`
	ClientSecret    string `pulumi:"clientSecret"`
	RefreshToken    string `pulumi:"refreshToken"`
	TokenExpiryDate string `pulumi:"tokenExpiryDate"`
}

type GetSourceXeroConfigurationAuthenticationOutput struct{ *pulumi.OutputState }

func (GetSourceXeroConfigurationAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceXeroConfigurationAuthentication)(nil)).Elem()
}

func (o GetSourceXeroConfigurationAuthenticationOutput) ToGetSourceXeroConfigurationAuthenticationOutput() GetSourceXeroConfigurationAuthenticationOutput {
	return o
}

func (o GetSourceXeroConfigurationAuthenticationOutput) ToGetSourceXeroConfigurationAuthenticationOutputWithContext(ctx context.Context) GetSourceXeroConfigurationAuthenticationOutput {
	return o
}

func (o GetSourceXeroConfigurationAuthenticationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceXeroConfigurationAuthentication) string { return v.AccessToken }).(pulumi.StringOutput)
}

func (o GetSourceXeroConfigurationAuthenticationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceXeroConfigurationAuthentication) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetSourceXeroConfigurationAuthenticationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceXeroConfigurationAuthentication) string { return v.ClientSecret }).(pulumi.StringOutput)
}

func (o GetSourceXeroConfigurationAuthenticationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceXeroConfigurationAuthentication) string { return v.RefreshToken }).(pulumi.StringOutput)
}

func (o GetSourceXeroConfigurationAuthenticationOutput) TokenExpiryDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceXeroConfigurationAuthentication) string { return v.TokenExpiryDate }).(pulumi.StringOutput)
}

type GetSourceXkcdConfiguration struct {
	// must be one of ["xkcd"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceXkcdConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceXkcdConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceXkcdConfiguration)(nil)).Elem()
}

func (o GetSourceXkcdConfigurationOutput) ToGetSourceXkcdConfigurationOutput() GetSourceXkcdConfigurationOutput {
	return o
}

func (o GetSourceXkcdConfigurationOutput) ToGetSourceXkcdConfigurationOutputWithContext(ctx context.Context) GetSourceXkcdConfigurationOutput {
	return o
}

// must be one of ["xkcd"]
func (o GetSourceXkcdConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceXkcdConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceYandexMetricaConfiguration struct {
	// Your Yandex Metrica API access token
	AuthToken string `pulumi:"authToken"`
	// Counter ID
	CounterId string `pulumi:"counterId"`
	// Starting point for your data replication, in format of "YYYY-MM-DD". If not provided will sync till most recent date.
	EndDate string `pulumi:"endDate"`
	// must be one of ["yandex-metrica"]
	SourceType string `pulumi:"sourceType"`
	// Starting point for your data replication, in format of "YYYY-MM-DD".
	StartDate string `pulumi:"startDate"`
}

type GetSourceYandexMetricaConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceYandexMetricaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceYandexMetricaConfiguration)(nil)).Elem()
}

func (o GetSourceYandexMetricaConfigurationOutput) ToGetSourceYandexMetricaConfigurationOutput() GetSourceYandexMetricaConfigurationOutput {
	return o
}

func (o GetSourceYandexMetricaConfigurationOutput) ToGetSourceYandexMetricaConfigurationOutputWithContext(ctx context.Context) GetSourceYandexMetricaConfigurationOutput {
	return o
}

// Your Yandex Metrica API access token
func (o GetSourceYandexMetricaConfigurationOutput) AuthToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYandexMetricaConfiguration) string { return v.AuthToken }).(pulumi.StringOutput)
}

// Counter ID
func (o GetSourceYandexMetricaConfigurationOutput) CounterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYandexMetricaConfiguration) string { return v.CounterId }).(pulumi.StringOutput)
}

// Starting point for your data replication, in format of "YYYY-MM-DD". If not provided will sync till most recent date.
func (o GetSourceYandexMetricaConfigurationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYandexMetricaConfiguration) string { return v.EndDate }).(pulumi.StringOutput)
}

// must be one of ["yandex-metrica"]
func (o GetSourceYandexMetricaConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYandexMetricaConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Starting point for your data replication, in format of "YYYY-MM-DD".
func (o GetSourceYandexMetricaConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYandexMetricaConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceYotpoConfiguration struct {
	// Access token recieved as a result of API call to https://api.yotpo.com/oauth/token (Ref- https://apidocs.yotpo.com/reference/yotpo-authentication)
	AccessToken string `pulumi:"accessToken"`
	// App key found at settings (Ref- https://settings.yotpo.com/#/general_settings)
	AppKey string `pulumi:"appKey"`
	// Email address registered with yotpo.
	Email string `pulumi:"email"`
	// must be one of ["yotpo"]
	SourceType string `pulumi:"sourceType"`
	// Date time filter for incremental filter, Specify which date to extract from.
	StartDate string `pulumi:"startDate"`
}

type GetSourceYotpoConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceYotpoConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceYotpoConfiguration)(nil)).Elem()
}

func (o GetSourceYotpoConfigurationOutput) ToGetSourceYotpoConfigurationOutput() GetSourceYotpoConfigurationOutput {
	return o
}

func (o GetSourceYotpoConfigurationOutput) ToGetSourceYotpoConfigurationOutputWithContext(ctx context.Context) GetSourceYotpoConfigurationOutput {
	return o
}

// Access token recieved as a result of API call to https://api.yotpo.com/oauth/token (Ref- https://apidocs.yotpo.com/reference/yotpo-authentication)
func (o GetSourceYotpoConfigurationOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYotpoConfiguration) string { return v.AccessToken }).(pulumi.StringOutput)
}

// App key found at settings (Ref- https://settings.yotpo.com/#/general_settings)
func (o GetSourceYotpoConfigurationOutput) AppKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYotpoConfiguration) string { return v.AppKey }).(pulumi.StringOutput)
}

// Email address registered with yotpo.
func (o GetSourceYotpoConfigurationOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYotpoConfiguration) string { return v.Email }).(pulumi.StringOutput)
}

// must be one of ["yotpo"]
func (o GetSourceYotpoConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYotpoConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Date time filter for incremental filter, Specify which date to extract from.
func (o GetSourceYotpoConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYotpoConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetSourceYouniumConfiguration struct {
	// Legal Entity that data should be pulled from
	LegalEntity string `pulumi:"legalEntity"`
	// Account password for younium account API key
	Password string `pulumi:"password"`
	// Property defining if connector is used against playground or production environment
	Playground bool `pulumi:"playground"`
	// must be one of ["younium"]
	SourceType string `pulumi:"sourceType"`
	// Username for Younium account
	Username string `pulumi:"username"`
}

type GetSourceYouniumConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceYouniumConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceYouniumConfiguration)(nil)).Elem()
}

func (o GetSourceYouniumConfigurationOutput) ToGetSourceYouniumConfigurationOutput() GetSourceYouniumConfigurationOutput {
	return o
}

func (o GetSourceYouniumConfigurationOutput) ToGetSourceYouniumConfigurationOutputWithContext(ctx context.Context) GetSourceYouniumConfigurationOutput {
	return o
}

// Legal Entity that data should be pulled from
func (o GetSourceYouniumConfigurationOutput) LegalEntity() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYouniumConfiguration) string { return v.LegalEntity }).(pulumi.StringOutput)
}

// Account password for younium account API key
func (o GetSourceYouniumConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYouniumConfiguration) string { return v.Password }).(pulumi.StringOutput)
}

// Property defining if connector is used against playground or production environment
func (o GetSourceYouniumConfigurationOutput) Playground() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceYouniumConfiguration) bool { return v.Playground }).(pulumi.BoolOutput)
}

// must be one of ["younium"]
func (o GetSourceYouniumConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYouniumConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Username for Younium account
func (o GetSourceYouniumConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYouniumConfiguration) string { return v.Username }).(pulumi.StringOutput)
}

type GetSourceYoutubeAnalyticsConfiguration struct {
	Credentials GetSourceYoutubeAnalyticsConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["youtube-analytics"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceYoutubeAnalyticsConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceYoutubeAnalyticsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceYoutubeAnalyticsConfiguration)(nil)).Elem()
}

func (o GetSourceYoutubeAnalyticsConfigurationOutput) ToGetSourceYoutubeAnalyticsConfigurationOutput() GetSourceYoutubeAnalyticsConfigurationOutput {
	return o
}

func (o GetSourceYoutubeAnalyticsConfigurationOutput) ToGetSourceYoutubeAnalyticsConfigurationOutputWithContext(ctx context.Context) GetSourceYoutubeAnalyticsConfigurationOutput {
	return o
}

func (o GetSourceYoutubeAnalyticsConfigurationOutput) Credentials() GetSourceYoutubeAnalyticsConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceYoutubeAnalyticsConfiguration) GetSourceYoutubeAnalyticsConfigurationCredentials {
		return v.Credentials
	}).(GetSourceYoutubeAnalyticsConfigurationCredentialsOutput)
}

// must be one of ["youtube-analytics"]
func (o GetSourceYoutubeAnalyticsConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYoutubeAnalyticsConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceYoutubeAnalyticsConfigurationCredentials struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ClientId             string  `pulumi:"clientId"`
	ClientSecret         string  `pulumi:"clientSecret"`
	RefreshToken         string  `pulumi:"refreshToken"`
}

type GetSourceYoutubeAnalyticsConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceYoutubeAnalyticsConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceYoutubeAnalyticsConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceYoutubeAnalyticsConfigurationCredentialsOutput) ToGetSourceYoutubeAnalyticsConfigurationCredentialsOutput() GetSourceYoutubeAnalyticsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceYoutubeAnalyticsConfigurationCredentialsOutput) ToGetSourceYoutubeAnalyticsConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceYoutubeAnalyticsConfigurationCredentialsOutput {
	return o
}

func (o GetSourceYoutubeAnalyticsConfigurationCredentialsOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceYoutubeAnalyticsConfigurationCredentials) *string { return v.AdditionalProperties }).(pulumi.StringPtrOutput)
}

func (o GetSourceYoutubeAnalyticsConfigurationCredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYoutubeAnalyticsConfigurationCredentials) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetSourceYoutubeAnalyticsConfigurationCredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYoutubeAnalyticsConfigurationCredentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

func (o GetSourceYoutubeAnalyticsConfigurationCredentialsOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceYoutubeAnalyticsConfigurationCredentials) string { return v.RefreshToken }).(pulumi.StringOutput)
}

type GetSourceZendeskChatConfiguration struct {
	Credentials GetSourceZendeskChatConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["zendesk-chat"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for Zendesk Chat API, in the format YYYY-MM-DDT00:00:00Z.
	StartDate string `pulumi:"startDate"`
	// Required if you access Zendesk Chat from a Zendesk Support subdomain.
	Subdomain string `pulumi:"subdomain"`
}

type GetSourceZendeskChatConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskChatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskChatConfiguration)(nil)).Elem()
}

func (o GetSourceZendeskChatConfigurationOutput) ToGetSourceZendeskChatConfigurationOutput() GetSourceZendeskChatConfigurationOutput {
	return o
}

func (o GetSourceZendeskChatConfigurationOutput) ToGetSourceZendeskChatConfigurationOutputWithContext(ctx context.Context) GetSourceZendeskChatConfigurationOutput {
	return o
}

func (o GetSourceZendeskChatConfigurationOutput) Credentials() GetSourceZendeskChatConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfiguration) GetSourceZendeskChatConfigurationCredentials {
		return v.Credentials
	}).(GetSourceZendeskChatConfigurationCredentialsOutput)
}

// must be one of ["zendesk-chat"]
func (o GetSourceZendeskChatConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for Zendesk Chat API, in the format YYYY-MM-DDT00:00:00Z.
func (o GetSourceZendeskChatConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// Required if you access Zendesk Chat from a Zendesk Support subdomain.
func (o GetSourceZendeskChatConfigurationOutput) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfiguration) string { return v.Subdomain }).(pulumi.StringOutput)
}

type GetSourceZendeskChatConfigurationCredentials struct {
	SourceZendeskChatAuthorizationMethodAccessToken       GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken       `pulumi:"sourceZendeskChatAuthorizationMethodAccessToken"`
	SourceZendeskChatAuthorizationMethodOAuth20           GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20           `pulumi:"sourceZendeskChatAuthorizationMethodOAuth20"`
	SourceZendeskChatUpdateAuthorizationMethodAccessToken GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken `pulumi:"sourceZendeskChatUpdateAuthorizationMethodAccessToken"`
	SourceZendeskChatUpdateAuthorizationMethodOAuth20     GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20     `pulumi:"sourceZendeskChatUpdateAuthorizationMethodOAuth20"`
}

type GetSourceZendeskChatConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskChatConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskChatConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceZendeskChatConfigurationCredentialsOutput) ToGetSourceZendeskChatConfigurationCredentialsOutput() GetSourceZendeskChatConfigurationCredentialsOutput {
	return o
}

func (o GetSourceZendeskChatConfigurationCredentialsOutput) ToGetSourceZendeskChatConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceZendeskChatConfigurationCredentialsOutput {
	return o
}

func (o GetSourceZendeskChatConfigurationCredentialsOutput) SourceZendeskChatAuthorizationMethodAccessToken() GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentials) GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken {
		return v.SourceZendeskChatAuthorizationMethodAccessToken
	}).(GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsOutput) SourceZendeskChatAuthorizationMethodOAuth20() GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentials) GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20 {
		return v.SourceZendeskChatAuthorizationMethodOAuth20
	}).(GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output)
}

func (o GetSourceZendeskChatConfigurationCredentialsOutput) SourceZendeskChatUpdateAuthorizationMethodAccessToken() GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentials) GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken {
		return v.SourceZendeskChatUpdateAuthorizationMethodAccessToken
	}).(GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsOutput) SourceZendeskChatUpdateAuthorizationMethodOAuth20() GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentials) GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20 {
		return v.SourceZendeskChatUpdateAuthorizationMethodOAuth20
	}).(GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output)
}

type GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	Credentials string `pulumi:"credentials"`
}

type GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken)(nil)).Elem()
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput) ToGetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput() GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput {
	return o
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput) ToGetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutputWithContext(ctx context.Context) GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput {
	return o
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessToken) string {
		return v.Credentials
	}).(pulumi.StringOutput)
}

type GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	Credentials  string `pulumi:"credentials"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output) ToGetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output() GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output) ToGetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20) string {
		return v.Credentials
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken struct {
	AccessToken string `pulumi:"accessToken"`
	Credentials string `pulumi:"credentials"`
}

type GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken)(nil)).Elem()
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput) ToGetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput() GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput {
	return o
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput) ToGetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutputWithContext(ctx context.Context) GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput {
	return o
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessToken) string {
		return v.Credentials
	}).(pulumi.StringOutput)
}

type GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20 struct {
	AccessToken  string `pulumi:"accessToken"`
	ClientId     string `pulumi:"clientId"`
	ClientSecret string `pulumi:"clientSecret"`
	Credentials  string `pulumi:"credentials"`
	RefreshToken string `pulumi:"refreshToken"`
}

type GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output) ToGetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output() GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output) ToGetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20) string {
		return v.Credentials
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20) string {
		return v.RefreshToken
	}).(pulumi.StringOutput)
}

type GetSourceZendeskSunshineConfiguration struct {
	Credentials GetSourceZendeskSunshineConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["zendesk-sunshine"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for Zendesk Sunshine API, in the format YYYY-MM-DDT00:00:00Z.
	StartDate string `pulumi:"startDate"`
	// The subdomain for your Zendesk Account.
	Subdomain string `pulumi:"subdomain"`
}

type GetSourceZendeskSunshineConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskSunshineConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSunshineConfiguration)(nil)).Elem()
}

func (o GetSourceZendeskSunshineConfigurationOutput) ToGetSourceZendeskSunshineConfigurationOutput() GetSourceZendeskSunshineConfigurationOutput {
	return o
}

func (o GetSourceZendeskSunshineConfigurationOutput) ToGetSourceZendeskSunshineConfigurationOutputWithContext(ctx context.Context) GetSourceZendeskSunshineConfigurationOutput {
	return o
}

func (o GetSourceZendeskSunshineConfigurationOutput) Credentials() GetSourceZendeskSunshineConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfiguration) GetSourceZendeskSunshineConfigurationCredentials {
		return v.Credentials
	}).(GetSourceZendeskSunshineConfigurationCredentialsOutput)
}

// must be one of ["zendesk-sunshine"]
func (o GetSourceZendeskSunshineConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for Zendesk Sunshine API, in the format YYYY-MM-DDT00:00:00Z.
func (o GetSourceZendeskSunshineConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// The subdomain for your Zendesk Account.
func (o GetSourceZendeskSunshineConfigurationOutput) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfiguration) string { return v.Subdomain }).(pulumi.StringOutput)
}

type GetSourceZendeskSunshineConfigurationCredentials struct {
	SourceZendeskSunshineAuthorizationMethodApiToken       GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken       `pulumi:"sourceZendeskSunshineAuthorizationMethodApiToken"`
	SourceZendeskSunshineAuthorizationMethodOAuth20        GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20        `pulumi:"sourceZendeskSunshineAuthorizationMethodOAuth20"`
	SourceZendeskSunshineUpdateAuthorizationMethodApiToken GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken `pulumi:"sourceZendeskSunshineUpdateAuthorizationMethodApiToken"`
	SourceZendeskSunshineUpdateAuthorizationMethodOAuth20  GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20  `pulumi:"sourceZendeskSunshineUpdateAuthorizationMethodOAuth20"`
}

type GetSourceZendeskSunshineConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskSunshineConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSunshineConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceZendeskSunshineConfigurationCredentialsOutput) ToGetSourceZendeskSunshineConfigurationCredentialsOutput() GetSourceZendeskSunshineConfigurationCredentialsOutput {
	return o
}

func (o GetSourceZendeskSunshineConfigurationCredentialsOutput) ToGetSourceZendeskSunshineConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceZendeskSunshineConfigurationCredentialsOutput {
	return o
}

func (o GetSourceZendeskSunshineConfigurationCredentialsOutput) SourceZendeskSunshineAuthorizationMethodApiToken() GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentials) GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken {
		return v.SourceZendeskSunshineAuthorizationMethodApiToken
	}).(GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsOutput) SourceZendeskSunshineAuthorizationMethodOAuth20() GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentials) GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20 {
		return v.SourceZendeskSunshineAuthorizationMethodOAuth20
	}).(GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsOutput) SourceZendeskSunshineUpdateAuthorizationMethodApiToken() GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentials) GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken {
		return v.SourceZendeskSunshineUpdateAuthorizationMethodApiToken
	}).(GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsOutput) SourceZendeskSunshineUpdateAuthorizationMethodOAuth20() GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentials) GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20 {
		return v.SourceZendeskSunshineUpdateAuthorizationMethodOAuth20
	}).(GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output)
}

type GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ApiToken             string  `pulumi:"apiToken"`
	AuthMethod           string  `pulumi:"authMethod"`
	Email                string  `pulumi:"email"`
}

type GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken)(nil)).Elem()
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput) ToGetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput() GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput) ToGetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutputWithContext(ctx context.Context) GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiToken) string {
		return v.Email
	}).(pulumi.StringOutput)
}

type GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20 struct {
	AccessToken          string  `pulumi:"accessToken"`
	AdditionalProperties *string `pulumi:"additionalProperties"`
	AuthMethod           string  `pulumi:"authMethod"`
	ClientId             string  `pulumi:"clientId"`
	ClientSecret         string  `pulumi:"clientSecret"`
}

type GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output) ToGetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output() GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output) ToGetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ApiToken             string  `pulumi:"apiToken"`
	AuthMethod           string  `pulumi:"authMethod"`
	Email                string  `pulumi:"email"`
}

type GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken)(nil)).Elem()
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput) ToGetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput() GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput) ToGetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutputWithContext(ctx context.Context) GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput {
	return o
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiToken) string {
		return v.Email
	}).(pulumi.StringOutput)
}

type GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20 struct {
	AccessToken          string  `pulumi:"accessToken"`
	AdditionalProperties *string `pulumi:"additionalProperties"`
	AuthMethod           string  `pulumi:"authMethod"`
	ClientId             string  `pulumi:"clientId"`
	ClientSecret         string  `pulumi:"clientSecret"`
}

type GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20)(nil)).Elem()
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output) ToGetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output() GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output) ToGetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20OutputWithContext(ctx context.Context) GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output {
	return o
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output) AuthMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20) string {
		return v.AuthMethod
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceZendeskSupportConfiguration struct {
	// Zendesk allows two authentication methods. We recommend using `OAuth2.0` for Airbyte Cloud users and `API token` for Airbyte Open Source users.
	Credentials GetSourceZendeskSupportConfigurationCredentials `pulumi:"credentials"`
	// Makes each stream read a single page of data.
	IgnorePagination bool `pulumi:"ignorePagination"`
	// must be one of ["zendesk-support"]
	SourceType string `pulumi:"sourceType"`
	// The UTC date and time from which you'd like to replicate data, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
	// This is your unique Zendesk subdomain that can be found in your account URL. For example, in https://MY*SUBDOMAIN.zendesk.com/, MY*SUBDOMAIN is the value of your subdomain.
	Subdomain string `pulumi:"subdomain"`
}

type GetSourceZendeskSupportConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskSupportConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSupportConfiguration)(nil)).Elem()
}

func (o GetSourceZendeskSupportConfigurationOutput) ToGetSourceZendeskSupportConfigurationOutput() GetSourceZendeskSupportConfigurationOutput {
	return o
}

func (o GetSourceZendeskSupportConfigurationOutput) ToGetSourceZendeskSupportConfigurationOutputWithContext(ctx context.Context) GetSourceZendeskSupportConfigurationOutput {
	return o
}

// Zendesk allows two authentication methods. We recommend using `OAuth2.0` for Airbyte Cloud users and `API token` for Airbyte Open Source users.
func (o GetSourceZendeskSupportConfigurationOutput) Credentials() GetSourceZendeskSupportConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfiguration) GetSourceZendeskSupportConfigurationCredentials {
		return v.Credentials
	}).(GetSourceZendeskSupportConfigurationCredentialsOutput)
}

// Makes each stream read a single page of data.
func (o GetSourceZendeskSupportConfigurationOutput) IgnorePagination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfiguration) bool { return v.IgnorePagination }).(pulumi.BoolOutput)
}

// must be one of ["zendesk-support"]
func (o GetSourceZendeskSupportConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The UTC date and time from which you'd like to replicate data, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
func (o GetSourceZendeskSupportConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// This is your unique Zendesk subdomain that can be found in your account URL. For example, in https://MY*SUBDOMAIN.zendesk.com/, MY*SUBDOMAIN is the value of your subdomain.
func (o GetSourceZendeskSupportConfigurationOutput) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfiguration) string { return v.Subdomain }).(pulumi.StringOutput)
}

type GetSourceZendeskSupportConfigurationCredentials struct {
	SourceZendeskSupportAuthenticationApiToken       GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken       `pulumi:"sourceZendeskSupportAuthenticationApiToken"`
	SourceZendeskSupportAuthenticationOAuth20        GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20        `pulumi:"sourceZendeskSupportAuthenticationOAuth20"`
	SourceZendeskSupportUpdateAuthenticationApiToken GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken `pulumi:"sourceZendeskSupportUpdateAuthenticationApiToken"`
	SourceZendeskSupportUpdateAuthenticationOAuth20  GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20  `pulumi:"sourceZendeskSupportUpdateAuthenticationOAuth20"`
}

type GetSourceZendeskSupportConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskSupportConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSupportConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceZendeskSupportConfigurationCredentialsOutput) ToGetSourceZendeskSupportConfigurationCredentialsOutput() GetSourceZendeskSupportConfigurationCredentialsOutput {
	return o
}

func (o GetSourceZendeskSupportConfigurationCredentialsOutput) ToGetSourceZendeskSupportConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceZendeskSupportConfigurationCredentialsOutput {
	return o
}

func (o GetSourceZendeskSupportConfigurationCredentialsOutput) SourceZendeskSupportAuthenticationApiToken() GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentials) GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken {
		return v.SourceZendeskSupportAuthenticationApiToken
	}).(GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsOutput) SourceZendeskSupportAuthenticationOAuth20() GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentials) GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20 {
		return v.SourceZendeskSupportAuthenticationOAuth20
	}).(GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output)
}

func (o GetSourceZendeskSupportConfigurationCredentialsOutput) SourceZendeskSupportUpdateAuthenticationApiToken() GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentials) GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken {
		return v.SourceZendeskSupportUpdateAuthenticationApiToken
	}).(GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsOutput) SourceZendeskSupportUpdateAuthenticationOAuth20() GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentials) GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20 {
		return v.SourceZendeskSupportUpdateAuthenticationOAuth20
	}).(GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output)
}

type GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ApiToken             string  `pulumi:"apiToken"`
	Credentials          string  `pulumi:"credentials"`
	Email                string  `pulumi:"email"`
}

type GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken)(nil)).Elem()
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput) ToGetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput() GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput {
	return o
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput) ToGetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutputWithContext(ctx context.Context) GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput {
	return o
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken) string {
		return v.Credentials
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiToken) string {
		return v.Email
	}).(pulumi.StringOutput)
}

type GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20 struct {
	AccessToken          string  `pulumi:"accessToken"`
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ClientId             string  `pulumi:"clientId"`
	ClientSecret         string  `pulumi:"clientSecret"`
	Credentials          string  `pulumi:"credentials"`
}

type GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output) ToGetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output() GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output {
	return o
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output) ToGetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output {
	return o
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20) string {
		return v.Credentials
	}).(pulumi.StringOutput)
}

type GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ApiToken             string  `pulumi:"apiToken"`
	Credentials          string  `pulumi:"credentials"`
	Email                string  `pulumi:"email"`
}

type GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken)(nil)).Elem()
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput) ToGetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput() GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput {
	return o
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput) ToGetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutputWithContext(ctx context.Context) GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput {
	return o
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken) string {
		return v.Credentials
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiToken) string {
		return v.Email
	}).(pulumi.StringOutput)
}

type GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20 struct {
	AccessToken          string  `pulumi:"accessToken"`
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ClientId             string  `pulumi:"clientId"`
	ClientSecret         string  `pulumi:"clientSecret"`
	Credentials          string  `pulumi:"credentials"`
}

type GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output) ToGetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output() GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output) ToGetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20) string {
		return v.Credentials
	}).(pulumi.StringOutput)
}

type GetSourceZendeskTalkConfiguration struct {
	// Zendesk service provides two authentication methods. Choose between: `OAuth2.0` or `API token`.
	Credentials GetSourceZendeskTalkConfigurationCredentials `pulumi:"credentials"`
	// must be one of ["zendesk-talk"]
	SourceType string `pulumi:"sourceType"`
	// The date from which you'd like to replicate data for Zendesk Talk API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
	StartDate string `pulumi:"startDate"`
	// This is your Zendesk subdomain that can be found in your account URL. For example, in https://{MY*SUBDOMAIN}.zendesk.com/, where MY*SUBDOMAIN is the value of your subdomain.
	Subdomain string `pulumi:"subdomain"`
}

type GetSourceZendeskTalkConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskTalkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskTalkConfiguration)(nil)).Elem()
}

func (o GetSourceZendeskTalkConfigurationOutput) ToGetSourceZendeskTalkConfigurationOutput() GetSourceZendeskTalkConfigurationOutput {
	return o
}

func (o GetSourceZendeskTalkConfigurationOutput) ToGetSourceZendeskTalkConfigurationOutputWithContext(ctx context.Context) GetSourceZendeskTalkConfigurationOutput {
	return o
}

// Zendesk service provides two authentication methods. Choose between: `OAuth2.0` or `API token`.
func (o GetSourceZendeskTalkConfigurationOutput) Credentials() GetSourceZendeskTalkConfigurationCredentialsOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfiguration) GetSourceZendeskTalkConfigurationCredentials {
		return v.Credentials
	}).(GetSourceZendeskTalkConfigurationCredentialsOutput)
}

// must be one of ["zendesk-talk"]
func (o GetSourceZendeskTalkConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// The date from which you'd like to replicate data for Zendesk Talk API, in the format YYYY-MM-DDT00:00:00Z. All data generated after this date will be replicated.
func (o GetSourceZendeskTalkConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// This is your Zendesk subdomain that can be found in your account URL. For example, in https://{MY*SUBDOMAIN}.zendesk.com/, where MY*SUBDOMAIN is the value of your subdomain.
func (o GetSourceZendeskTalkConfigurationOutput) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfiguration) string { return v.Subdomain }).(pulumi.StringOutput)
}

type GetSourceZendeskTalkConfigurationCredentials struct {
	SourceZendeskTalkAuthenticationApiToken       GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken       `pulumi:"sourceZendeskTalkAuthenticationApiToken"`
	SourceZendeskTalkAuthenticationOAuth20        GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20        `pulumi:"sourceZendeskTalkAuthenticationOAuth20"`
	SourceZendeskTalkUpdateAuthenticationApiToken GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken `pulumi:"sourceZendeskTalkUpdateAuthenticationApiToken"`
	SourceZendeskTalkUpdateAuthenticationOAuth20  GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20  `pulumi:"sourceZendeskTalkUpdateAuthenticationOAuth20"`
}

type GetSourceZendeskTalkConfigurationCredentialsOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskTalkConfigurationCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskTalkConfigurationCredentials)(nil)).Elem()
}

func (o GetSourceZendeskTalkConfigurationCredentialsOutput) ToGetSourceZendeskTalkConfigurationCredentialsOutput() GetSourceZendeskTalkConfigurationCredentialsOutput {
	return o
}

func (o GetSourceZendeskTalkConfigurationCredentialsOutput) ToGetSourceZendeskTalkConfigurationCredentialsOutputWithContext(ctx context.Context) GetSourceZendeskTalkConfigurationCredentialsOutput {
	return o
}

func (o GetSourceZendeskTalkConfigurationCredentialsOutput) SourceZendeskTalkAuthenticationApiToken() GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentials) GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken {
		return v.SourceZendeskTalkAuthenticationApiToken
	}).(GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsOutput) SourceZendeskTalkAuthenticationOAuth20() GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentials) GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20 {
		return v.SourceZendeskTalkAuthenticationOAuth20
	}).(GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output)
}

func (o GetSourceZendeskTalkConfigurationCredentialsOutput) SourceZendeskTalkUpdateAuthenticationApiToken() GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentials) GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken {
		return v.SourceZendeskTalkUpdateAuthenticationApiToken
	}).(GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsOutput) SourceZendeskTalkUpdateAuthenticationOAuth20() GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentials) GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20 {
		return v.SourceZendeskTalkUpdateAuthenticationOAuth20
	}).(GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output)
}

type GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ApiToken             string  `pulumi:"apiToken"`
	AuthType             string  `pulumi:"authType"`
	Email                string  `pulumi:"email"`
}

type GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken)(nil)).Elem()
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput) ToGetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput() GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput {
	return o
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput) ToGetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutputWithContext(ctx context.Context) GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput {
	return o
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiToken) string {
		return v.Email
	}).(pulumi.StringOutput)
}

type GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20 struct {
	AccessToken          string  `pulumi:"accessToken"`
	AdditionalProperties *string `pulumi:"additionalProperties"`
	AuthType             string  `pulumi:"authType"`
	ClientId             string  `pulumi:"clientId"`
	ClientSecret         string  `pulumi:"clientSecret"`
}

type GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output) ToGetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output() GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output {
	return o
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output) ToGetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output {
	return o
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken struct {
	AdditionalProperties *string `pulumi:"additionalProperties"`
	ApiToken             string  `pulumi:"apiToken"`
	AuthType             string  `pulumi:"authType"`
	Email                string  `pulumi:"email"`
}

type GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput struct{ *pulumi.OutputState }

func (GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken)(nil)).Elem()
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput) ToGetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput() GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput {
	return o
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput) ToGetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutputWithContext(ctx context.Context) GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput {
	return o
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken) string {
		return v.ApiToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiToken) string {
		return v.Email
	}).(pulumi.StringOutput)
}

type GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20 struct {
	AccessToken          string  `pulumi:"accessToken"`
	AdditionalProperties *string `pulumi:"additionalProperties"`
	AuthType             string  `pulumi:"authType"`
	ClientId             string  `pulumi:"clientId"`
	ClientSecret         string  `pulumi:"clientSecret"`
}

type GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output struct{ *pulumi.OutputState }

func (GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20)(nil)).Elem()
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output) ToGetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output() GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output) ToGetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20OutputWithContext(ctx context.Context) GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output {
	return o
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20) string {
		return v.AccessToken
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output) AdditionalProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20) *string {
		return v.AdditionalProperties
	}).(pulumi.StringPtrOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20) string {
		return v.AuthType
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

func (o GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20) string {
		return v.ClientSecret
	}).(pulumi.StringOutput)
}

type GetSourceZenloopConfiguration struct {
	// Zenloop API Token. You can get the API token in settings page \n\nhere\n\n
	ApiToken string `pulumi:"apiToken"`
	// Zenloop date_from. Format: 2021-10-24T03:30:30Z or 2021-10-24. Leave empty if only data from current data should be synced
	DateFrom string `pulumi:"dateFrom"`
	// must be one of ["zenloop"]
	SourceType string `pulumi:"sourceType"`
	// Zenloop Survey Group ID. Can be found by pulling All Survey Groups via SurveyGroups stream. Leave empty to pull answers from all survey groups
	SurveyGroupId string `pulumi:"surveyGroupId"`
	// Zenloop Survey ID. Can be found \n\nhere\n\n. Leave empty to pull answers from all surveys
	SurveyId string `pulumi:"surveyId"`
}

type GetSourceZenloopConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceZenloopConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZenloopConfiguration)(nil)).Elem()
}

func (o GetSourceZenloopConfigurationOutput) ToGetSourceZenloopConfigurationOutput() GetSourceZenloopConfigurationOutput {
	return o
}

func (o GetSourceZenloopConfigurationOutput) ToGetSourceZenloopConfigurationOutputWithContext(ctx context.Context) GetSourceZenloopConfigurationOutput {
	return o
}

// Zenloop API Token. You can get the API token in settings page \n\nhere\n\n
func (o GetSourceZenloopConfigurationOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZenloopConfiguration) string { return v.ApiToken }).(pulumi.StringOutput)
}

// Zenloop date_from. Format: 2021-10-24T03:30:30Z or 2021-10-24. Leave empty if only data from current data should be synced
func (o GetSourceZenloopConfigurationOutput) DateFrom() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZenloopConfiguration) string { return v.DateFrom }).(pulumi.StringOutput)
}

// must be one of ["zenloop"]
func (o GetSourceZenloopConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZenloopConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Zenloop Survey Group ID. Can be found by pulling All Survey Groups via SurveyGroups stream. Leave empty to pull answers from all survey groups
func (o GetSourceZenloopConfigurationOutput) SurveyGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZenloopConfiguration) string { return v.SurveyGroupId }).(pulumi.StringOutput)
}

// Zenloop Survey ID. Can be found \n\nhere\n\n. Leave empty to pull answers from all surveys
func (o GetSourceZenloopConfigurationOutput) SurveyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZenloopConfiguration) string { return v.SurveyId }).(pulumi.StringOutput)
}

type GetSourceZohoCrmConfiguration struct {
	// OAuth2.0 Client ID
	ClientId string `pulumi:"clientId"`
	// OAuth2.0 Client Secret
	ClientSecret string `pulumi:"clientSecret"`
	// must be one of ["US", "AU", "EU", "IN", "CN", "JP"]
	// Please choose the region of your Data Center location. More info by this \n\nLink\n\n
	DcRegion string `pulumi:"dcRegion"`
	// must be one of ["Free", "Standard", "Professional", "Enterprise", "Ultimate"]
	// Choose your Edition of Zoho CRM to determine API Concurrency Limits
	Edition string `pulumi:"edition"`
	// must be one of ["Production", "Developer", "Sandbox"]
	// Please choose the environment
	Environment string `pulumi:"environment"`
	// OAuth2.0 Refresh Token
	RefreshToken string `pulumi:"refreshToken"`
	// must be one of ["zoho-crm"]
	SourceType string `pulumi:"sourceType"`
	// ISO 8601, for instance: `YYYY-MM-DD`, `YYYY-MM-DD HH:MM:SS+HH:MM`
	StartDatetime string `pulumi:"startDatetime"`
}

type GetSourceZohoCrmConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceZohoCrmConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZohoCrmConfiguration)(nil)).Elem()
}

func (o GetSourceZohoCrmConfigurationOutput) ToGetSourceZohoCrmConfigurationOutput() GetSourceZohoCrmConfigurationOutput {
	return o
}

func (o GetSourceZohoCrmConfigurationOutput) ToGetSourceZohoCrmConfigurationOutputWithContext(ctx context.Context) GetSourceZohoCrmConfigurationOutput {
	return o
}

// OAuth2.0 Client ID
func (o GetSourceZohoCrmConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZohoCrmConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// OAuth2.0 Client Secret
func (o GetSourceZohoCrmConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZohoCrmConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// must be one of ["US", "AU", "EU", "IN", "CN", "JP"]
// Please choose the region of your Data Center location. More info by this \n\nLink\n\n
func (o GetSourceZohoCrmConfigurationOutput) DcRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZohoCrmConfiguration) string { return v.DcRegion }).(pulumi.StringOutput)
}

// must be one of ["Free", "Standard", "Professional", "Enterprise", "Ultimate"]
// Choose your Edition of Zoho CRM to determine API Concurrency Limits
func (o GetSourceZohoCrmConfigurationOutput) Edition() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZohoCrmConfiguration) string { return v.Edition }).(pulumi.StringOutput)
}

// must be one of ["Production", "Developer", "Sandbox"]
// Please choose the environment
func (o GetSourceZohoCrmConfigurationOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZohoCrmConfiguration) string { return v.Environment }).(pulumi.StringOutput)
}

// OAuth2.0 Refresh Token
func (o GetSourceZohoCrmConfigurationOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZohoCrmConfiguration) string { return v.RefreshToken }).(pulumi.StringOutput)
}

// must be one of ["zoho-crm"]
func (o GetSourceZohoCrmConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZohoCrmConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// ISO 8601, for instance: `YYYY-MM-DD`, `YYYY-MM-DD HH:MM:SS+HH:MM`
func (o GetSourceZohoCrmConfigurationOutput) StartDatetime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZohoCrmConfiguration) string { return v.StartDatetime }).(pulumi.StringOutput)
}

type GetSourceZoomConfiguration struct {
	// JWT Token
	JwtToken string `pulumi:"jwtToken"`
	// must be one of ["zoom"]
	SourceType string `pulumi:"sourceType"`
}

type GetSourceZoomConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceZoomConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZoomConfiguration)(nil)).Elem()
}

func (o GetSourceZoomConfigurationOutput) ToGetSourceZoomConfigurationOutput() GetSourceZoomConfigurationOutput {
	return o
}

func (o GetSourceZoomConfigurationOutput) ToGetSourceZoomConfigurationOutputWithContext(ctx context.Context) GetSourceZoomConfigurationOutput {
	return o
}

// JWT Token
func (o GetSourceZoomConfigurationOutput) JwtToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZoomConfiguration) string { return v.JwtToken }).(pulumi.StringOutput)
}

// must be one of ["zoom"]
func (o GetSourceZoomConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZoomConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

type GetSourceZuoraConfiguration struct {
	// Your OAuth user Client ID
	ClientId string `pulumi:"clientId"`
	// Your OAuth user Client Secret
	ClientSecret string `pulumi:"clientSecret"`
	// must be one of ["Live", "Unlimited"]
	// Choose between `Live`, or `Unlimited` - the optimized, replicated database at 12 hours freshness for high volume extraction \n\nLink\n\n
	DataQuery string `pulumi:"dataQuery"`
	// must be one of ["zuora"]
	SourceType string `pulumi:"sourceType"`
	// Start Date in format: YYYY-MM-DD
	StartDate string `pulumi:"startDate"`
	// must be one of ["US Production", "US Cloud Production", "US API Sandbox", "US Cloud API Sandbox", "US Central Sandbox", "US Performance Test", "EU Production", "EU API Sandbox", "EU Central Sandbox"]
	// Please choose the right endpoint where your Tenant is located. More info by this \n\nLink\n\n
	TenantEndpoint string `pulumi:"tenantEndpoint"`
	// The amount of days for each data-chunk begining from start_date. Bigger the value - faster the fetch. (0.1 - as for couple of hours, 1 - as for a Day; 364 - as for a Year).
	WindowInDays string `pulumi:"windowInDays"`
}

type GetSourceZuoraConfigurationOutput struct{ *pulumi.OutputState }

func (GetSourceZuoraConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSourceZuoraConfiguration)(nil)).Elem()
}

func (o GetSourceZuoraConfigurationOutput) ToGetSourceZuoraConfigurationOutput() GetSourceZuoraConfigurationOutput {
	return o
}

func (o GetSourceZuoraConfigurationOutput) ToGetSourceZuoraConfigurationOutputWithContext(ctx context.Context) GetSourceZuoraConfigurationOutput {
	return o
}

// Your OAuth user Client ID
func (o GetSourceZuoraConfigurationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZuoraConfiguration) string { return v.ClientId }).(pulumi.StringOutput)
}

// Your OAuth user Client Secret
func (o GetSourceZuoraConfigurationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZuoraConfiguration) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// must be one of ["Live", "Unlimited"]
// Choose between `Live`, or `Unlimited` - the optimized, replicated database at 12 hours freshness for high volume extraction \n\nLink\n\n
func (o GetSourceZuoraConfigurationOutput) DataQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZuoraConfiguration) string { return v.DataQuery }).(pulumi.StringOutput)
}

// must be one of ["zuora"]
func (o GetSourceZuoraConfigurationOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZuoraConfiguration) string { return v.SourceType }).(pulumi.StringOutput)
}

// Start Date in format: YYYY-MM-DD
func (o GetSourceZuoraConfigurationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZuoraConfiguration) string { return v.StartDate }).(pulumi.StringOutput)
}

// must be one of ["US Production", "US Cloud Production", "US API Sandbox", "US Cloud API Sandbox", "US Central Sandbox", "US Performance Test", "EU Production", "EU API Sandbox", "EU Central Sandbox"]
// Please choose the right endpoint where your Tenant is located. More info by this \n\nLink\n\n
func (o GetSourceZuoraConfigurationOutput) TenantEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZuoraConfiguration) string { return v.TenantEndpoint }).(pulumi.StringOutput)
}

// The amount of days for each data-chunk begining from start_date. Bigger the value - faster the fetch. (0.1 - as for couple of hours, 1 - as for a Day; 364 - as for a Year).
func (o GetSourceZuoraConfigurationOutput) WindowInDays() pulumi.StringOutput {
	return o.ApplyT(func(v GetSourceZuoraConfiguration) string { return v.WindowInDays }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSourceOktaConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceOktaConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceOktaConfigurationCredentialsSourceOktaAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceOktaConfigurationCredentialsSourceOktaUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceOmnisendConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceOnesignalConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceOnesignalConfigurationApplicationOutput{})
	pulumi.RegisterOutputType(GetSourceOnesignalConfigurationApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetSourceOpenweatherConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationConnectionDataOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationConnectionDataSourceOracleConnectByServiceNameOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationConnectionDataSourceOracleConnectBySystemIdSidOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectByServiceNameOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationConnectionDataSourceOracleUpdateConnectBySystemIdSidOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationEncryptionOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationEncryptionSourceOracleEncryptionNativeNetworkEncryptionNneOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationEncryptionSourceOracleEncryptionTlsEncryptedVerifyCertificateOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionNativeNetworkEncryptionNneOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationEncryptionSourceOracleUpdateEncryptionTlsEncryptedVerifyCertificateOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationTunnelMethodSourceOracleSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceOracleConfigurationTunnelMethodSourceOracleUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceOrbConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceOrbitConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceOutbrainAmplifyConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceOutbrainAmplifyConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyAuthenticationMethodUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceOutbrainAmplifyConfigurationCredentialsSourceOutbrainAmplifyUpdateAuthenticationMethodUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetSourceOutreachConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePaypalTransactionConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePaystackConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePendoConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePersistiqConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePexelsApiConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePinterestConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePinterestConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourcePinterestConfigurationCredentialsSourcePinterestAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourcePinterestConfigurationCredentialsSourcePinterestUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourcePipedriveConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePipedriveConfigurationAuthorizationOutput{})
	pulumi.RegisterOutputType(GetSourcePocketConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePokeapiConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePolygonStockApiConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationReplicationMethodOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodLogicalReplicationCdcOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationReplicationMethodSourcePostgresReplicationMethodStandardXminOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodLogicalReplicationCdcOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationReplicationMethodSourcePostgresUpdateReplicationMethodStandardXminOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesAllowOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesDisableOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesPreferOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesRequireOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyCaOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresSslModesVerifyFullOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesAllowOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesDisableOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesPreferOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesRequireOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyCaOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationSslModeSourcePostgresUpdateSslModesVerifyFullOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationTunnelMethodOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationTunnelMethodSourcePostgresSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodNoTunnelOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourcePostgresConfigurationTunnelMethodSourcePostgresUpdateSshTunnelMethodSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourcePosthogConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePostmarkappConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePrestashopConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePublicApisConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePunkApiConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourcePypiConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceQualarooConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceQuickbooksConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceQuickbooksConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceQuickbooksConfigurationCredentialsSourceQuickbooksUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceRailzConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceRechargeConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceRecreationConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceRecruiteeConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceRecurlyConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceRedshiftConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceRetentlyConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceRetentlyConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceRetentlyConfigurationCredentialsSourceRetentlyAuthenticationMechanismAuthenticateWithApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateViaRetentlyOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceRetentlyConfigurationCredentialsSourceRetentlyUpdateAuthenticationMechanismAuthenticateWithApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceRkiCovidConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceRssConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceS3ConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceS3ConfigurationFormatOutput{})
	pulumi.RegisterOutputType(GetSourceS3ConfigurationFormatSourceS3FileFormatAvroOutput{})
	pulumi.RegisterOutputType(GetSourceS3ConfigurationFormatSourceS3FileFormatCsvOutput{})
	pulumi.RegisterOutputType(GetSourceS3ConfigurationFormatSourceS3FileFormatJsonlOutput{})
	pulumi.RegisterOutputType(GetSourceS3ConfigurationFormatSourceS3FileFormatParquetOutput{})
	pulumi.RegisterOutputType(GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatAvroOutput{})
	pulumi.RegisterOutputType(GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatCsvOutput{})
	pulumi.RegisterOutputType(GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatJsonlOutput{})
	pulumi.RegisterOutputType(GetSourceS3ConfigurationFormatSourceS3UpdateFileFormatParquetOutput{})
	pulumi.RegisterOutputType(GetSourceS3ConfigurationProviderOutput{})
	pulumi.RegisterOutputType(GetSourceSalesforceConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSalesforceConfigurationStreamsCriteriaOutput{})
	pulumi.RegisterOutputType(GetSourceSalesforceConfigurationStreamsCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetSourceSalesloftConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSalesloftConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaApiKeyOutput{})
	pulumi.RegisterOutputType(GetSourceSalesloftConfigurationCredentialsSourceSalesloftCredentialsAuthenticateViaOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaApiKeyOutput{})
	pulumi.RegisterOutputType(GetSourceSalesloftConfigurationCredentialsSourceSalesloftUpdateCredentialsAuthenticateViaOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceSapFieldglassConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSecodaConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSendgridConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSendinblueConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSenseforceConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSentryConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSftpBulkConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSftpConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSftpConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceSftpConfigurationCredentialsSourceSftpAuthenticationWildcardSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardPasswordAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceSftpConfigurationCredentialsSourceSftpUpdateAuthenticationWildcardSshKeyAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceShopifyConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceShopifyConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodApiPasswordOutput{})
	pulumi.RegisterOutputType(GetSourceShopifyConfigurationCredentialsSourceShopifyShopifyAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodApiPasswordOutput{})
	pulumi.RegisterOutputType(GetSourceShopifyConfigurationCredentialsSourceShopifyUpdateShopifyAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceShortioConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSlackConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSlackConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceSlackConfigurationCredentialsSourceSlackAuthenticationMechanismSignInViaSlackOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceSlackConfigurationCredentialsSourceSlackUpdateAuthenticationMechanismSignInViaSlackOAuthOutput{})
	pulumi.RegisterOutputType(GetSourceSmailyConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSmartengageConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSmartsheetsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSmartsheetsConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodApiAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodApiAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceSmartsheetsConfigurationCredentialsSourceSmartsheetsUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceSnapchatMarketingConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSnowflakeConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSnowflakeConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeAuthorizationMethodUsernameAndPasswordOutput{})
	pulumi.RegisterOutputType(GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceSnowflakeConfigurationCredentialsSourceSnowflakeUpdateAuthorizationMethodUsernameAndPasswordOutput{})
	pulumi.RegisterOutputType(GetSourceSonarCloudConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSpaceXApiConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSquareConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSquareConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationApiKeyOutput{})
	pulumi.RegisterOutputType(GetSourceSquareConfigurationCredentialsSourceSquareAuthenticationOauthAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationApiKeyOutput{})
	pulumi.RegisterOutputType(GetSourceSquareConfigurationCredentialsSourceSquareUpdateAuthenticationOauthAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceStravaConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceStripeConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSurveySparrowConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSurveySparrowConfigurationRegionOutput{})
	pulumi.RegisterOutputType(GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlEuBasedAccountOutput{})
	pulumi.RegisterOutputType(GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowBaseUrlGlobalAccountOutput{})
	pulumi.RegisterOutputType(GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlEuBasedAccountOutput{})
	pulumi.RegisterOutputType(GetSourceSurveySparrowConfigurationRegionSourceSurveySparrowUpdateBaseUrlGlobalAccountOutput{})
	pulumi.RegisterOutputType(GetSourceSurveymonkeyConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceSurveymonkeyConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceTempoConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceTheGuardianApiConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceTiktokMarketingConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceTiktokMarketingConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingAuthenticationMethodSandboxAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceTiktokMarketingConfigurationCredentialsSourceTiktokMarketingUpdateAuthenticationMethodSandboxAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceTodoistConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceTrelloConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceTrustpilotConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceTrustpilotConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodApiKeyOutput{})
	pulumi.RegisterOutputType(GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodApiKeyOutput{})
	pulumi.RegisterOutputType(GetSourceTrustpilotConfigurationCredentialsSourceTrustpilotUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceTvmazeScheduleConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceTwilioConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceTwilioTaskrouterConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceTwitterConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceTypeformConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceTypeformConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceTypeformConfigurationCredentialsSourceTypeformAuthorizationMethodPrivateTokenOutput{})
	pulumi.RegisterOutputType(GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceTypeformConfigurationCredentialsSourceTypeformUpdateAuthorizationMethodPrivateTokenOutput{})
	pulumi.RegisterOutputType(GetSourceUsCensusConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceVantageConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceWebflowConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceWhiskyHunterConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceWikipediaPageviewsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceWoocommerceConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceXeroConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceXeroConfigurationAuthenticationOutput{})
	pulumi.RegisterOutputType(GetSourceXkcdConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceYandexMetricaConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceYotpoConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceYouniumConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceYoutubeAnalyticsConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceYoutubeAnalyticsConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskChatConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskChatConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodAccessTokenOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskChatConfigurationCredentialsSourceZendeskChatUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceZendeskSunshineConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskSunshineConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskSunshineConfigurationCredentialsSourceZendeskSunshineUpdateAuthorizationMethodOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceZendeskSupportConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskSupportConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskSupportConfigurationCredentialsSourceZendeskSupportUpdateAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceZendeskTalkConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskTalkConfigurationCredentialsOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationApiTokenOutput{})
	pulumi.RegisterOutputType(GetSourceZendeskTalkConfigurationCredentialsSourceZendeskTalkUpdateAuthenticationOAuth20Output{})
	pulumi.RegisterOutputType(GetSourceZenloopConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceZohoCrmConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceZoomConfigurationOutput{})
	pulumi.RegisterOutputType(GetSourceZuoraConfigurationOutput{})
}
