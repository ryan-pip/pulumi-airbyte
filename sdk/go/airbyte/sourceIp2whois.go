// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-airbyte/sdk/go/airbyte/internal"
)

// SourceIp2whois Resource
type SourceIp2whois struct {
	pulumi.CustomResourceState

	Configuration SourceIp2whoisConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput               `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceIp2whois registers a new resource with the given unique name, arguments, and options.
func NewSourceIp2whois(ctx *pulumi.Context,
	name string, args *SourceIp2whoisArgs, opts ...pulumi.ResourceOption) (*SourceIp2whois, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceIp2whois
	err := ctx.RegisterResource("airbyte:index/sourceIp2whois:SourceIp2whois", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceIp2whois gets an existing SourceIp2whois resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceIp2whois(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceIp2whoisState, opts ...pulumi.ResourceOption) (*SourceIp2whois, error) {
	var resource SourceIp2whois
	err := ctx.ReadResource("airbyte:index/sourceIp2whois:SourceIp2whois", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceIp2whois resources.
type sourceIp2whoisState struct {
	Configuration *SourceIp2whoisConfiguration `pulumi:"configuration"`
	Name          *string                      `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceIp2whoisState struct {
	Configuration SourceIp2whoisConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceIp2whoisState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceIp2whoisState)(nil)).Elem()
}

type sourceIp2whoisArgs struct {
	Configuration SourceIp2whoisConfiguration `pulumi:"configuration"`
	Name          string                      `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceIp2whois resource.
type SourceIp2whoisArgs struct {
	Configuration SourceIp2whoisConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceIp2whoisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceIp2whoisArgs)(nil)).Elem()
}

type SourceIp2whoisInput interface {
	pulumi.Input

	ToSourceIp2whoisOutput() SourceIp2whoisOutput
	ToSourceIp2whoisOutputWithContext(ctx context.Context) SourceIp2whoisOutput
}

func (*SourceIp2whois) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceIp2whois)(nil)).Elem()
}

func (i *SourceIp2whois) ToSourceIp2whoisOutput() SourceIp2whoisOutput {
	return i.ToSourceIp2whoisOutputWithContext(context.Background())
}

func (i *SourceIp2whois) ToSourceIp2whoisOutputWithContext(ctx context.Context) SourceIp2whoisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceIp2whoisOutput)
}

// SourceIp2whoisArrayInput is an input type that accepts SourceIp2whoisArray and SourceIp2whoisArrayOutput values.
// You can construct a concrete instance of `SourceIp2whoisArrayInput` via:
//
//	SourceIp2whoisArray{ SourceIp2whoisArgs{...} }
type SourceIp2whoisArrayInput interface {
	pulumi.Input

	ToSourceIp2whoisArrayOutput() SourceIp2whoisArrayOutput
	ToSourceIp2whoisArrayOutputWithContext(context.Context) SourceIp2whoisArrayOutput
}

type SourceIp2whoisArray []SourceIp2whoisInput

func (SourceIp2whoisArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceIp2whois)(nil)).Elem()
}

func (i SourceIp2whoisArray) ToSourceIp2whoisArrayOutput() SourceIp2whoisArrayOutput {
	return i.ToSourceIp2whoisArrayOutputWithContext(context.Background())
}

func (i SourceIp2whoisArray) ToSourceIp2whoisArrayOutputWithContext(ctx context.Context) SourceIp2whoisArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceIp2whoisArrayOutput)
}

// SourceIp2whoisMapInput is an input type that accepts SourceIp2whoisMap and SourceIp2whoisMapOutput values.
// You can construct a concrete instance of `SourceIp2whoisMapInput` via:
//
//	SourceIp2whoisMap{ "key": SourceIp2whoisArgs{...} }
type SourceIp2whoisMapInput interface {
	pulumi.Input

	ToSourceIp2whoisMapOutput() SourceIp2whoisMapOutput
	ToSourceIp2whoisMapOutputWithContext(context.Context) SourceIp2whoisMapOutput
}

type SourceIp2whoisMap map[string]SourceIp2whoisInput

func (SourceIp2whoisMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceIp2whois)(nil)).Elem()
}

func (i SourceIp2whoisMap) ToSourceIp2whoisMapOutput() SourceIp2whoisMapOutput {
	return i.ToSourceIp2whoisMapOutputWithContext(context.Background())
}

func (i SourceIp2whoisMap) ToSourceIp2whoisMapOutputWithContext(ctx context.Context) SourceIp2whoisMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceIp2whoisMapOutput)
}

type SourceIp2whoisOutput struct{ *pulumi.OutputState }

func (SourceIp2whoisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceIp2whois)(nil)).Elem()
}

func (o SourceIp2whoisOutput) ToSourceIp2whoisOutput() SourceIp2whoisOutput {
	return o
}

func (o SourceIp2whoisOutput) ToSourceIp2whoisOutputWithContext(ctx context.Context) SourceIp2whoisOutput {
	return o
}

func (o SourceIp2whoisOutput) Configuration() SourceIp2whoisConfigurationOutput {
	return o.ApplyT(func(v *SourceIp2whois) SourceIp2whoisConfigurationOutput { return v.Configuration }).(SourceIp2whoisConfigurationOutput)
}

func (o SourceIp2whoisOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceIp2whois) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceIp2whoisOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceIp2whois) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceIp2whoisOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceIp2whois) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceIp2whoisOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceIp2whois) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceIp2whoisOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceIp2whois) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceIp2whoisArrayOutput struct{ *pulumi.OutputState }

func (SourceIp2whoisArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceIp2whois)(nil)).Elem()
}

func (o SourceIp2whoisArrayOutput) ToSourceIp2whoisArrayOutput() SourceIp2whoisArrayOutput {
	return o
}

func (o SourceIp2whoisArrayOutput) ToSourceIp2whoisArrayOutputWithContext(ctx context.Context) SourceIp2whoisArrayOutput {
	return o
}

func (o SourceIp2whoisArrayOutput) Index(i pulumi.IntInput) SourceIp2whoisOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceIp2whois {
		return vs[0].([]*SourceIp2whois)[vs[1].(int)]
	}).(SourceIp2whoisOutput)
}

type SourceIp2whoisMapOutput struct{ *pulumi.OutputState }

func (SourceIp2whoisMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceIp2whois)(nil)).Elem()
}

func (o SourceIp2whoisMapOutput) ToSourceIp2whoisMapOutput() SourceIp2whoisMapOutput {
	return o
}

func (o SourceIp2whoisMapOutput) ToSourceIp2whoisMapOutputWithContext(ctx context.Context) SourceIp2whoisMapOutput {
	return o
}

func (o SourceIp2whoisMapOutput) MapIndex(k pulumi.StringInput) SourceIp2whoisOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceIp2whois {
		return vs[0].(map[string]*SourceIp2whois)[vs[1].(string)]
	}).(SourceIp2whoisOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceIp2whoisInput)(nil)).Elem(), &SourceIp2whois{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceIp2whoisArrayInput)(nil)).Elem(), SourceIp2whoisArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceIp2whoisMapInput)(nil)).Elem(), SourceIp2whoisMap{})
	pulumi.RegisterOutputType(SourceIp2whoisOutput{})
	pulumi.RegisterOutputType(SourceIp2whoisArrayOutput{})
	pulumi.RegisterOutputType(SourceIp2whoisMapOutput{})
}
