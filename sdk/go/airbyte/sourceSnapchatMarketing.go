// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/ryan-pip/pulumi-airbyte/sdk/go/airbyte/internal"
)

// SourceSnapchatMarketing Resource
type SourceSnapchatMarketing struct {
	pulumi.CustomResourceState

	Configuration SourceSnapchatMarketingConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                        `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceSnapchatMarketing registers a new resource with the given unique name, arguments, and options.
func NewSourceSnapchatMarketing(ctx *pulumi.Context,
	name string, args *SourceSnapchatMarketingArgs, opts ...pulumi.ResourceOption) (*SourceSnapchatMarketing, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceSnapchatMarketing
	err := ctx.RegisterResource("airbyte:index/sourceSnapchatMarketing:SourceSnapchatMarketing", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceSnapchatMarketing gets an existing SourceSnapchatMarketing resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceSnapchatMarketing(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceSnapchatMarketingState, opts ...pulumi.ResourceOption) (*SourceSnapchatMarketing, error) {
	var resource SourceSnapchatMarketing
	err := ctx.ReadResource("airbyte:index/sourceSnapchatMarketing:SourceSnapchatMarketing", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceSnapchatMarketing resources.
type sourceSnapchatMarketingState struct {
	Configuration *SourceSnapchatMarketingConfiguration `pulumi:"configuration"`
	Name          *string                               `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceSnapchatMarketingState struct {
	Configuration SourceSnapchatMarketingConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceSnapchatMarketingState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceSnapchatMarketingState)(nil)).Elem()
}

type sourceSnapchatMarketingArgs struct {
	Configuration SourceSnapchatMarketingConfiguration `pulumi:"configuration"`
	Name          string                               `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceSnapchatMarketing resource.
type SourceSnapchatMarketingArgs struct {
	Configuration SourceSnapchatMarketingConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceSnapchatMarketingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceSnapchatMarketingArgs)(nil)).Elem()
}

type SourceSnapchatMarketingInput interface {
	pulumi.Input

	ToSourceSnapchatMarketingOutput() SourceSnapchatMarketingOutput
	ToSourceSnapchatMarketingOutputWithContext(ctx context.Context) SourceSnapchatMarketingOutput
}

func (*SourceSnapchatMarketing) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceSnapchatMarketing)(nil)).Elem()
}

func (i *SourceSnapchatMarketing) ToSourceSnapchatMarketingOutput() SourceSnapchatMarketingOutput {
	return i.ToSourceSnapchatMarketingOutputWithContext(context.Background())
}

func (i *SourceSnapchatMarketing) ToSourceSnapchatMarketingOutputWithContext(ctx context.Context) SourceSnapchatMarketingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSnapchatMarketingOutput)
}

// SourceSnapchatMarketingArrayInput is an input type that accepts SourceSnapchatMarketingArray and SourceSnapchatMarketingArrayOutput values.
// You can construct a concrete instance of `SourceSnapchatMarketingArrayInput` via:
//
//	SourceSnapchatMarketingArray{ SourceSnapchatMarketingArgs{...} }
type SourceSnapchatMarketingArrayInput interface {
	pulumi.Input

	ToSourceSnapchatMarketingArrayOutput() SourceSnapchatMarketingArrayOutput
	ToSourceSnapchatMarketingArrayOutputWithContext(context.Context) SourceSnapchatMarketingArrayOutput
}

type SourceSnapchatMarketingArray []SourceSnapchatMarketingInput

func (SourceSnapchatMarketingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceSnapchatMarketing)(nil)).Elem()
}

func (i SourceSnapchatMarketingArray) ToSourceSnapchatMarketingArrayOutput() SourceSnapchatMarketingArrayOutput {
	return i.ToSourceSnapchatMarketingArrayOutputWithContext(context.Background())
}

func (i SourceSnapchatMarketingArray) ToSourceSnapchatMarketingArrayOutputWithContext(ctx context.Context) SourceSnapchatMarketingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSnapchatMarketingArrayOutput)
}

// SourceSnapchatMarketingMapInput is an input type that accepts SourceSnapchatMarketingMap and SourceSnapchatMarketingMapOutput values.
// You can construct a concrete instance of `SourceSnapchatMarketingMapInput` via:
//
//	SourceSnapchatMarketingMap{ "key": SourceSnapchatMarketingArgs{...} }
type SourceSnapchatMarketingMapInput interface {
	pulumi.Input

	ToSourceSnapchatMarketingMapOutput() SourceSnapchatMarketingMapOutput
	ToSourceSnapchatMarketingMapOutputWithContext(context.Context) SourceSnapchatMarketingMapOutput
}

type SourceSnapchatMarketingMap map[string]SourceSnapchatMarketingInput

func (SourceSnapchatMarketingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceSnapchatMarketing)(nil)).Elem()
}

func (i SourceSnapchatMarketingMap) ToSourceSnapchatMarketingMapOutput() SourceSnapchatMarketingMapOutput {
	return i.ToSourceSnapchatMarketingMapOutputWithContext(context.Background())
}

func (i SourceSnapchatMarketingMap) ToSourceSnapchatMarketingMapOutputWithContext(ctx context.Context) SourceSnapchatMarketingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceSnapchatMarketingMapOutput)
}

type SourceSnapchatMarketingOutput struct{ *pulumi.OutputState }

func (SourceSnapchatMarketingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceSnapchatMarketing)(nil)).Elem()
}

func (o SourceSnapchatMarketingOutput) ToSourceSnapchatMarketingOutput() SourceSnapchatMarketingOutput {
	return o
}

func (o SourceSnapchatMarketingOutput) ToSourceSnapchatMarketingOutputWithContext(ctx context.Context) SourceSnapchatMarketingOutput {
	return o
}

func (o SourceSnapchatMarketingOutput) Configuration() SourceSnapchatMarketingConfigurationOutput {
	return o.ApplyT(func(v *SourceSnapchatMarketing) SourceSnapchatMarketingConfigurationOutput { return v.Configuration }).(SourceSnapchatMarketingConfigurationOutput)
}

func (o SourceSnapchatMarketingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSnapchatMarketing) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceSnapchatMarketingOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceSnapchatMarketing) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceSnapchatMarketingOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSnapchatMarketing) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceSnapchatMarketingOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSnapchatMarketing) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceSnapchatMarketingOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceSnapchatMarketing) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceSnapchatMarketingArrayOutput struct{ *pulumi.OutputState }

func (SourceSnapchatMarketingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceSnapchatMarketing)(nil)).Elem()
}

func (o SourceSnapchatMarketingArrayOutput) ToSourceSnapchatMarketingArrayOutput() SourceSnapchatMarketingArrayOutput {
	return o
}

func (o SourceSnapchatMarketingArrayOutput) ToSourceSnapchatMarketingArrayOutputWithContext(ctx context.Context) SourceSnapchatMarketingArrayOutput {
	return o
}

func (o SourceSnapchatMarketingArrayOutput) Index(i pulumi.IntInput) SourceSnapchatMarketingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceSnapchatMarketing {
		return vs[0].([]*SourceSnapchatMarketing)[vs[1].(int)]
	}).(SourceSnapchatMarketingOutput)
}

type SourceSnapchatMarketingMapOutput struct{ *pulumi.OutputState }

func (SourceSnapchatMarketingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceSnapchatMarketing)(nil)).Elem()
}

func (o SourceSnapchatMarketingMapOutput) ToSourceSnapchatMarketingMapOutput() SourceSnapchatMarketingMapOutput {
	return o
}

func (o SourceSnapchatMarketingMapOutput) ToSourceSnapchatMarketingMapOutputWithContext(ctx context.Context) SourceSnapchatMarketingMapOutput {
	return o
}

func (o SourceSnapchatMarketingMapOutput) MapIndex(k pulumi.StringInput) SourceSnapchatMarketingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceSnapchatMarketing {
		return vs[0].(map[string]*SourceSnapchatMarketing)[vs[1].(string)]
	}).(SourceSnapchatMarketingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceSnapchatMarketingInput)(nil)).Elem(), &SourceSnapchatMarketing{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceSnapchatMarketingArrayInput)(nil)).Elem(), SourceSnapchatMarketingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceSnapchatMarketingMapInput)(nil)).Elem(), SourceSnapchatMarketingMap{})
	pulumi.RegisterOutputType(SourceSnapchatMarketingOutput{})
	pulumi.RegisterOutputType(SourceSnapchatMarketingArrayOutput{})
	pulumi.RegisterOutputType(SourceSnapchatMarketingMapOutput{})
}
