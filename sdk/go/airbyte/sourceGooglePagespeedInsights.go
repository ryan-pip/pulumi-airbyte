// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SourceGooglePagespeedInsights Resource
type SourceGooglePagespeedInsights struct {
	pulumi.CustomResourceState

	Configuration SourceGooglePagespeedInsightsConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                              `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceGooglePagespeedInsights registers a new resource with the given unique name, arguments, and options.
func NewSourceGooglePagespeedInsights(ctx *pulumi.Context,
	name string, args *SourceGooglePagespeedInsightsArgs, opts ...pulumi.ResourceOption) (*SourceGooglePagespeedInsights, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceGooglePagespeedInsights
	err := ctx.RegisterResource("airbyte:index/sourceGooglePagespeedInsights:SourceGooglePagespeedInsights", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceGooglePagespeedInsights gets an existing SourceGooglePagespeedInsights resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceGooglePagespeedInsights(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceGooglePagespeedInsightsState, opts ...pulumi.ResourceOption) (*SourceGooglePagespeedInsights, error) {
	var resource SourceGooglePagespeedInsights
	err := ctx.ReadResource("airbyte:index/sourceGooglePagespeedInsights:SourceGooglePagespeedInsights", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceGooglePagespeedInsights resources.
type sourceGooglePagespeedInsightsState struct {
	Configuration *SourceGooglePagespeedInsightsConfiguration `pulumi:"configuration"`
	Name          *string                                     `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceGooglePagespeedInsightsState struct {
	Configuration SourceGooglePagespeedInsightsConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceGooglePagespeedInsightsState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceGooglePagespeedInsightsState)(nil)).Elem()
}

type sourceGooglePagespeedInsightsArgs struct {
	Configuration SourceGooglePagespeedInsightsConfiguration `pulumi:"configuration"`
	Name          string                                     `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceGooglePagespeedInsights resource.
type SourceGooglePagespeedInsightsArgs struct {
	Configuration SourceGooglePagespeedInsightsConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceGooglePagespeedInsightsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceGooglePagespeedInsightsArgs)(nil)).Elem()
}

type SourceGooglePagespeedInsightsInput interface {
	pulumi.Input

	ToSourceGooglePagespeedInsightsOutput() SourceGooglePagespeedInsightsOutput
	ToSourceGooglePagespeedInsightsOutputWithContext(ctx context.Context) SourceGooglePagespeedInsightsOutput
}

func (*SourceGooglePagespeedInsights) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceGooglePagespeedInsights)(nil)).Elem()
}

func (i *SourceGooglePagespeedInsights) ToSourceGooglePagespeedInsightsOutput() SourceGooglePagespeedInsightsOutput {
	return i.ToSourceGooglePagespeedInsightsOutputWithContext(context.Background())
}

func (i *SourceGooglePagespeedInsights) ToSourceGooglePagespeedInsightsOutputWithContext(ctx context.Context) SourceGooglePagespeedInsightsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceGooglePagespeedInsightsOutput)
}

// SourceGooglePagespeedInsightsArrayInput is an input type that accepts SourceGooglePagespeedInsightsArray and SourceGooglePagespeedInsightsArrayOutput values.
// You can construct a concrete instance of `SourceGooglePagespeedInsightsArrayInput` via:
//
//	SourceGooglePagespeedInsightsArray{ SourceGooglePagespeedInsightsArgs{...} }
type SourceGooglePagespeedInsightsArrayInput interface {
	pulumi.Input

	ToSourceGooglePagespeedInsightsArrayOutput() SourceGooglePagespeedInsightsArrayOutput
	ToSourceGooglePagespeedInsightsArrayOutputWithContext(context.Context) SourceGooglePagespeedInsightsArrayOutput
}

type SourceGooglePagespeedInsightsArray []SourceGooglePagespeedInsightsInput

func (SourceGooglePagespeedInsightsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceGooglePagespeedInsights)(nil)).Elem()
}

func (i SourceGooglePagespeedInsightsArray) ToSourceGooglePagespeedInsightsArrayOutput() SourceGooglePagespeedInsightsArrayOutput {
	return i.ToSourceGooglePagespeedInsightsArrayOutputWithContext(context.Background())
}

func (i SourceGooglePagespeedInsightsArray) ToSourceGooglePagespeedInsightsArrayOutputWithContext(ctx context.Context) SourceGooglePagespeedInsightsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceGooglePagespeedInsightsArrayOutput)
}

// SourceGooglePagespeedInsightsMapInput is an input type that accepts SourceGooglePagespeedInsightsMap and SourceGooglePagespeedInsightsMapOutput values.
// You can construct a concrete instance of `SourceGooglePagespeedInsightsMapInput` via:
//
//	SourceGooglePagespeedInsightsMap{ "key": SourceGooglePagespeedInsightsArgs{...} }
type SourceGooglePagespeedInsightsMapInput interface {
	pulumi.Input

	ToSourceGooglePagespeedInsightsMapOutput() SourceGooglePagespeedInsightsMapOutput
	ToSourceGooglePagespeedInsightsMapOutputWithContext(context.Context) SourceGooglePagespeedInsightsMapOutput
}

type SourceGooglePagespeedInsightsMap map[string]SourceGooglePagespeedInsightsInput

func (SourceGooglePagespeedInsightsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceGooglePagespeedInsights)(nil)).Elem()
}

func (i SourceGooglePagespeedInsightsMap) ToSourceGooglePagespeedInsightsMapOutput() SourceGooglePagespeedInsightsMapOutput {
	return i.ToSourceGooglePagespeedInsightsMapOutputWithContext(context.Background())
}

func (i SourceGooglePagespeedInsightsMap) ToSourceGooglePagespeedInsightsMapOutputWithContext(ctx context.Context) SourceGooglePagespeedInsightsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceGooglePagespeedInsightsMapOutput)
}

type SourceGooglePagespeedInsightsOutput struct{ *pulumi.OutputState }

func (SourceGooglePagespeedInsightsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceGooglePagespeedInsights)(nil)).Elem()
}

func (o SourceGooglePagespeedInsightsOutput) ToSourceGooglePagespeedInsightsOutput() SourceGooglePagespeedInsightsOutput {
	return o
}

func (o SourceGooglePagespeedInsightsOutput) ToSourceGooglePagespeedInsightsOutputWithContext(ctx context.Context) SourceGooglePagespeedInsightsOutput {
	return o
}

func (o SourceGooglePagespeedInsightsOutput) Configuration() SourceGooglePagespeedInsightsConfigurationOutput {
	return o.ApplyT(func(v *SourceGooglePagespeedInsights) SourceGooglePagespeedInsightsConfigurationOutput {
		return v.Configuration
	}).(SourceGooglePagespeedInsightsConfigurationOutput)
}

func (o SourceGooglePagespeedInsightsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGooglePagespeedInsights) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceGooglePagespeedInsightsOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceGooglePagespeedInsights) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceGooglePagespeedInsightsOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGooglePagespeedInsights) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceGooglePagespeedInsightsOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGooglePagespeedInsights) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceGooglePagespeedInsightsOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGooglePagespeedInsights) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceGooglePagespeedInsightsArrayOutput struct{ *pulumi.OutputState }

func (SourceGooglePagespeedInsightsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceGooglePagespeedInsights)(nil)).Elem()
}

func (o SourceGooglePagespeedInsightsArrayOutput) ToSourceGooglePagespeedInsightsArrayOutput() SourceGooglePagespeedInsightsArrayOutput {
	return o
}

func (o SourceGooglePagespeedInsightsArrayOutput) ToSourceGooglePagespeedInsightsArrayOutputWithContext(ctx context.Context) SourceGooglePagespeedInsightsArrayOutput {
	return o
}

func (o SourceGooglePagespeedInsightsArrayOutput) Index(i pulumi.IntInput) SourceGooglePagespeedInsightsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceGooglePagespeedInsights {
		return vs[0].([]*SourceGooglePagespeedInsights)[vs[1].(int)]
	}).(SourceGooglePagespeedInsightsOutput)
}

type SourceGooglePagespeedInsightsMapOutput struct{ *pulumi.OutputState }

func (SourceGooglePagespeedInsightsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceGooglePagespeedInsights)(nil)).Elem()
}

func (o SourceGooglePagespeedInsightsMapOutput) ToSourceGooglePagespeedInsightsMapOutput() SourceGooglePagespeedInsightsMapOutput {
	return o
}

func (o SourceGooglePagespeedInsightsMapOutput) ToSourceGooglePagespeedInsightsMapOutputWithContext(ctx context.Context) SourceGooglePagespeedInsightsMapOutput {
	return o
}

func (o SourceGooglePagespeedInsightsMapOutput) MapIndex(k pulumi.StringInput) SourceGooglePagespeedInsightsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceGooglePagespeedInsights {
		return vs[0].(map[string]*SourceGooglePagespeedInsights)[vs[1].(string)]
	}).(SourceGooglePagespeedInsightsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceGooglePagespeedInsightsInput)(nil)).Elem(), &SourceGooglePagespeedInsights{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceGooglePagespeedInsightsArrayInput)(nil)).Elem(), SourceGooglePagespeedInsightsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceGooglePagespeedInsightsMapInput)(nil)).Elem(), SourceGooglePagespeedInsightsMap{})
	pulumi.RegisterOutputType(SourceGooglePagespeedInsightsOutput{})
	pulumi.RegisterOutputType(SourceGooglePagespeedInsightsArrayOutput{})
	pulumi.RegisterOutputType(SourceGooglePagespeedInsightsMapOutput{})
}
