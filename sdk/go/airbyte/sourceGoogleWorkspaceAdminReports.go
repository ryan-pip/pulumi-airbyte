// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-airbyte/sdk/go/airbyte/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SourceGoogleWorkspaceAdminReports Resource
type SourceGoogleWorkspaceAdminReports struct {
	pulumi.CustomResourceState

	Configuration SourceGoogleWorkspaceAdminReportsConfigurationOutput `pulumi:"configuration"`
	Name          pulumi.StringOutput                                  `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrOutput `pulumi:"secretId"`
	SourceId    pulumi.StringOutput    `pulumi:"sourceId"`
	SourceType  pulumi.StringOutput    `pulumi:"sourceType"`
	WorkspaceId pulumi.StringOutput    `pulumi:"workspaceId"`
}

// NewSourceGoogleWorkspaceAdminReports registers a new resource with the given unique name, arguments, and options.
func NewSourceGoogleWorkspaceAdminReports(ctx *pulumi.Context,
	name string, args *SourceGoogleWorkspaceAdminReportsArgs, opts ...pulumi.ResourceOption) (*SourceGoogleWorkspaceAdminReports, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SourceGoogleWorkspaceAdminReports
	err := ctx.RegisterResource("airbyte:index/sourceGoogleWorkspaceAdminReports:SourceGoogleWorkspaceAdminReports", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourceGoogleWorkspaceAdminReports gets an existing SourceGoogleWorkspaceAdminReports resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourceGoogleWorkspaceAdminReports(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourceGoogleWorkspaceAdminReportsState, opts ...pulumi.ResourceOption) (*SourceGoogleWorkspaceAdminReports, error) {
	var resource SourceGoogleWorkspaceAdminReports
	err := ctx.ReadResource("airbyte:index/sourceGoogleWorkspaceAdminReports:SourceGoogleWorkspaceAdminReports", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourceGoogleWorkspaceAdminReports resources.
type sourceGoogleWorkspaceAdminReportsState struct {
	Configuration *SourceGoogleWorkspaceAdminReportsConfiguration `pulumi:"configuration"`
	Name          *string                                         `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	SourceId    *string `pulumi:"sourceId"`
	SourceType  *string `pulumi:"sourceType"`
	WorkspaceId *string `pulumi:"workspaceId"`
}

type SourceGoogleWorkspaceAdminReportsState struct {
	Configuration SourceGoogleWorkspaceAdminReportsConfigurationPtrInput
	Name          pulumi.StringPtrInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	SourceId    pulumi.StringPtrInput
	SourceType  pulumi.StringPtrInput
	WorkspaceId pulumi.StringPtrInput
}

func (SourceGoogleWorkspaceAdminReportsState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceGoogleWorkspaceAdminReportsState)(nil)).Elem()
}

type sourceGoogleWorkspaceAdminReportsArgs struct {
	Configuration SourceGoogleWorkspaceAdminReportsConfiguration `pulumi:"configuration"`
	Name          string                                         `pulumi:"name"`
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    *string `pulumi:"secretId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

// The set of arguments for constructing a SourceGoogleWorkspaceAdminReports resource.
type SourceGoogleWorkspaceAdminReportsArgs struct {
	Configuration SourceGoogleWorkspaceAdminReportsConfigurationInput
	Name          pulumi.StringInput
	// Optional secretID obtained through the public API OAuth redirect flow.
	SecretId    pulumi.StringPtrInput
	WorkspaceId pulumi.StringInput
}

func (SourceGoogleWorkspaceAdminReportsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourceGoogleWorkspaceAdminReportsArgs)(nil)).Elem()
}

type SourceGoogleWorkspaceAdminReportsInput interface {
	pulumi.Input

	ToSourceGoogleWorkspaceAdminReportsOutput() SourceGoogleWorkspaceAdminReportsOutput
	ToSourceGoogleWorkspaceAdminReportsOutputWithContext(ctx context.Context) SourceGoogleWorkspaceAdminReportsOutput
}

func (*SourceGoogleWorkspaceAdminReports) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceGoogleWorkspaceAdminReports)(nil)).Elem()
}

func (i *SourceGoogleWorkspaceAdminReports) ToSourceGoogleWorkspaceAdminReportsOutput() SourceGoogleWorkspaceAdminReportsOutput {
	return i.ToSourceGoogleWorkspaceAdminReportsOutputWithContext(context.Background())
}

func (i *SourceGoogleWorkspaceAdminReports) ToSourceGoogleWorkspaceAdminReportsOutputWithContext(ctx context.Context) SourceGoogleWorkspaceAdminReportsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceGoogleWorkspaceAdminReportsOutput)
}

// SourceGoogleWorkspaceAdminReportsArrayInput is an input type that accepts SourceGoogleWorkspaceAdminReportsArray and SourceGoogleWorkspaceAdminReportsArrayOutput values.
// You can construct a concrete instance of `SourceGoogleWorkspaceAdminReportsArrayInput` via:
//
//	SourceGoogleWorkspaceAdminReportsArray{ SourceGoogleWorkspaceAdminReportsArgs{...} }
type SourceGoogleWorkspaceAdminReportsArrayInput interface {
	pulumi.Input

	ToSourceGoogleWorkspaceAdminReportsArrayOutput() SourceGoogleWorkspaceAdminReportsArrayOutput
	ToSourceGoogleWorkspaceAdminReportsArrayOutputWithContext(context.Context) SourceGoogleWorkspaceAdminReportsArrayOutput
}

type SourceGoogleWorkspaceAdminReportsArray []SourceGoogleWorkspaceAdminReportsInput

func (SourceGoogleWorkspaceAdminReportsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceGoogleWorkspaceAdminReports)(nil)).Elem()
}

func (i SourceGoogleWorkspaceAdminReportsArray) ToSourceGoogleWorkspaceAdminReportsArrayOutput() SourceGoogleWorkspaceAdminReportsArrayOutput {
	return i.ToSourceGoogleWorkspaceAdminReportsArrayOutputWithContext(context.Background())
}

func (i SourceGoogleWorkspaceAdminReportsArray) ToSourceGoogleWorkspaceAdminReportsArrayOutputWithContext(ctx context.Context) SourceGoogleWorkspaceAdminReportsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceGoogleWorkspaceAdminReportsArrayOutput)
}

// SourceGoogleWorkspaceAdminReportsMapInput is an input type that accepts SourceGoogleWorkspaceAdminReportsMap and SourceGoogleWorkspaceAdminReportsMapOutput values.
// You can construct a concrete instance of `SourceGoogleWorkspaceAdminReportsMapInput` via:
//
//	SourceGoogleWorkspaceAdminReportsMap{ "key": SourceGoogleWorkspaceAdminReportsArgs{...} }
type SourceGoogleWorkspaceAdminReportsMapInput interface {
	pulumi.Input

	ToSourceGoogleWorkspaceAdminReportsMapOutput() SourceGoogleWorkspaceAdminReportsMapOutput
	ToSourceGoogleWorkspaceAdminReportsMapOutputWithContext(context.Context) SourceGoogleWorkspaceAdminReportsMapOutput
}

type SourceGoogleWorkspaceAdminReportsMap map[string]SourceGoogleWorkspaceAdminReportsInput

func (SourceGoogleWorkspaceAdminReportsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceGoogleWorkspaceAdminReports)(nil)).Elem()
}

func (i SourceGoogleWorkspaceAdminReportsMap) ToSourceGoogleWorkspaceAdminReportsMapOutput() SourceGoogleWorkspaceAdminReportsMapOutput {
	return i.ToSourceGoogleWorkspaceAdminReportsMapOutputWithContext(context.Background())
}

func (i SourceGoogleWorkspaceAdminReportsMap) ToSourceGoogleWorkspaceAdminReportsMapOutputWithContext(ctx context.Context) SourceGoogleWorkspaceAdminReportsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceGoogleWorkspaceAdminReportsMapOutput)
}

type SourceGoogleWorkspaceAdminReportsOutput struct{ *pulumi.OutputState }

func (SourceGoogleWorkspaceAdminReportsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceGoogleWorkspaceAdminReports)(nil)).Elem()
}

func (o SourceGoogleWorkspaceAdminReportsOutput) ToSourceGoogleWorkspaceAdminReportsOutput() SourceGoogleWorkspaceAdminReportsOutput {
	return o
}

func (o SourceGoogleWorkspaceAdminReportsOutput) ToSourceGoogleWorkspaceAdminReportsOutputWithContext(ctx context.Context) SourceGoogleWorkspaceAdminReportsOutput {
	return o
}

func (o SourceGoogleWorkspaceAdminReportsOutput) Configuration() SourceGoogleWorkspaceAdminReportsConfigurationOutput {
	return o.ApplyT(func(v *SourceGoogleWorkspaceAdminReports) SourceGoogleWorkspaceAdminReportsConfigurationOutput {
		return v.Configuration
	}).(SourceGoogleWorkspaceAdminReportsConfigurationOutput)
}

func (o SourceGoogleWorkspaceAdminReportsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGoogleWorkspaceAdminReports) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Optional secretID obtained through the public API OAuth redirect flow.
func (o SourceGoogleWorkspaceAdminReportsOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceGoogleWorkspaceAdminReports) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o SourceGoogleWorkspaceAdminReportsOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGoogleWorkspaceAdminReports) pulumi.StringOutput { return v.SourceId }).(pulumi.StringOutput)
}

func (o SourceGoogleWorkspaceAdminReportsOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGoogleWorkspaceAdminReports) pulumi.StringOutput { return v.SourceType }).(pulumi.StringOutput)
}

func (o SourceGoogleWorkspaceAdminReportsOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourceGoogleWorkspaceAdminReports) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SourceGoogleWorkspaceAdminReportsArrayOutput struct{ *pulumi.OutputState }

func (SourceGoogleWorkspaceAdminReportsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SourceGoogleWorkspaceAdminReports)(nil)).Elem()
}

func (o SourceGoogleWorkspaceAdminReportsArrayOutput) ToSourceGoogleWorkspaceAdminReportsArrayOutput() SourceGoogleWorkspaceAdminReportsArrayOutput {
	return o
}

func (o SourceGoogleWorkspaceAdminReportsArrayOutput) ToSourceGoogleWorkspaceAdminReportsArrayOutputWithContext(ctx context.Context) SourceGoogleWorkspaceAdminReportsArrayOutput {
	return o
}

func (o SourceGoogleWorkspaceAdminReportsArrayOutput) Index(i pulumi.IntInput) SourceGoogleWorkspaceAdminReportsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SourceGoogleWorkspaceAdminReports {
		return vs[0].([]*SourceGoogleWorkspaceAdminReports)[vs[1].(int)]
	}).(SourceGoogleWorkspaceAdminReportsOutput)
}

type SourceGoogleWorkspaceAdminReportsMapOutput struct{ *pulumi.OutputState }

func (SourceGoogleWorkspaceAdminReportsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SourceGoogleWorkspaceAdminReports)(nil)).Elem()
}

func (o SourceGoogleWorkspaceAdminReportsMapOutput) ToSourceGoogleWorkspaceAdminReportsMapOutput() SourceGoogleWorkspaceAdminReportsMapOutput {
	return o
}

func (o SourceGoogleWorkspaceAdminReportsMapOutput) ToSourceGoogleWorkspaceAdminReportsMapOutputWithContext(ctx context.Context) SourceGoogleWorkspaceAdminReportsMapOutput {
	return o
}

func (o SourceGoogleWorkspaceAdminReportsMapOutput) MapIndex(k pulumi.StringInput) SourceGoogleWorkspaceAdminReportsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SourceGoogleWorkspaceAdminReports {
		return vs[0].(map[string]*SourceGoogleWorkspaceAdminReports)[vs[1].(string)]
	}).(SourceGoogleWorkspaceAdminReportsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourceGoogleWorkspaceAdminReportsInput)(nil)).Elem(), &SourceGoogleWorkspaceAdminReports{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceGoogleWorkspaceAdminReportsArrayInput)(nil)).Elem(), SourceGoogleWorkspaceAdminReportsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceGoogleWorkspaceAdminReportsMapInput)(nil)).Elem(), SourceGoogleWorkspaceAdminReportsMap{})
	pulumi.RegisterOutputType(SourceGoogleWorkspaceAdminReportsOutput{})
	pulumi.RegisterOutputType(SourceGoogleWorkspaceAdminReportsArrayOutput{})
	pulumi.RegisterOutputType(SourceGoogleWorkspaceAdminReportsMapOutput{})
}
