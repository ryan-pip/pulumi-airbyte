// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package airbyte

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSourceKlarna(ctx *pulumi.Context, args *LookupSourceKlarnaArgs, opts ...pulumi.InvokeOption) (*LookupSourceKlarnaResult, error) {
	var rv LookupSourceKlarnaResult
	err := ctx.Invoke("airbyte:index/getSourceKlarna:getSourceKlarna", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourceKlarna.
type LookupSourceKlarnaArgs struct {
	SecretId *string `pulumi:"secretId"`
	SourceId string  `pulumi:"sourceId"`
}

// A collection of values returned by getSourceKlarna.
type LookupSourceKlarnaResult struct {
	Configuration GetSourceKlarnaConfiguration `pulumi:"configuration"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	Name        string  `pulumi:"name"`
	SecretId    *string `pulumi:"secretId"`
	SourceId    string  `pulumi:"sourceId"`
	WorkspaceId string  `pulumi:"workspaceId"`
}

func LookupSourceKlarnaOutput(ctx *pulumi.Context, args LookupSourceKlarnaOutputArgs, opts ...pulumi.InvokeOption) LookupSourceKlarnaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSourceKlarnaResult, error) {
			args := v.(LookupSourceKlarnaArgs)
			r, err := LookupSourceKlarna(ctx, &args, opts...)
			var s LookupSourceKlarnaResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSourceKlarnaResultOutput)
}

// A collection of arguments for invoking getSourceKlarna.
type LookupSourceKlarnaOutputArgs struct {
	SecretId pulumi.StringPtrInput `pulumi:"secretId"`
	SourceId pulumi.StringInput    `pulumi:"sourceId"`
}

func (LookupSourceKlarnaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceKlarnaArgs)(nil)).Elem()
}

// A collection of values returned by getSourceKlarna.
type LookupSourceKlarnaResultOutput struct{ *pulumi.OutputState }

func (LookupSourceKlarnaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourceKlarnaResult)(nil)).Elem()
}

func (o LookupSourceKlarnaResultOutput) ToLookupSourceKlarnaResultOutput() LookupSourceKlarnaResultOutput {
	return o
}

func (o LookupSourceKlarnaResultOutput) ToLookupSourceKlarnaResultOutputWithContext(ctx context.Context) LookupSourceKlarnaResultOutput {
	return o
}

func (o LookupSourceKlarnaResultOutput) Configuration() GetSourceKlarnaConfigurationOutput {
	return o.ApplyT(func(v LookupSourceKlarnaResult) GetSourceKlarnaConfiguration { return v.Configuration }).(GetSourceKlarnaConfigurationOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSourceKlarnaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceKlarnaResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourceKlarnaResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceKlarnaResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSourceKlarnaResultOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourceKlarnaResult) *string { return v.SecretId }).(pulumi.StringPtrOutput)
}

func (o LookupSourceKlarnaResultOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceKlarnaResult) string { return v.SourceId }).(pulumi.StringOutput)
}

func (o LookupSourceKlarnaResultOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourceKlarnaResult) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourceKlarnaResultOutput{})
}
