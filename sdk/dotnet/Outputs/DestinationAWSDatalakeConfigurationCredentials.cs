// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class DestinationAWSDatalakeConfigurationCredentials
    {
        public readonly Outputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole? DestinationAwsDatalakeAuthenticationModeIamRole;
        public readonly Outputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser? DestinationAwsDatalakeAuthenticationModeIamUser;
        public readonly Outputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole? DestinationAwsDatalakeUpdateAuthenticationModeIamRole;
        public readonly Outputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser? DestinationAwsDatalakeUpdateAuthenticationModeIamUser;

        [OutputConstructor]
        private DestinationAWSDatalakeConfigurationCredentials(
            Outputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamRole? destinationAwsDatalakeAuthenticationModeIamRole,

            Outputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeAuthenticationModeIamUser? destinationAwsDatalakeAuthenticationModeIamUser,

            Outputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamRole? destinationAwsDatalakeUpdateAuthenticationModeIamRole,

            Outputs.DestinationAWSDatalakeConfigurationCredentialsDestinationAwsDatalakeUpdateAuthenticationModeIamUser? destinationAwsDatalakeUpdateAuthenticationModeIamUser)
        {
            DestinationAwsDatalakeAuthenticationModeIamRole = destinationAwsDatalakeAuthenticationModeIamRole;
            DestinationAwsDatalakeAuthenticationModeIamUser = destinationAwsDatalakeAuthenticationModeIamUser;
            DestinationAwsDatalakeUpdateAuthenticationModeIamRole = destinationAwsDatalakeUpdateAuthenticationModeIamRole;
            DestinationAwsDatalakeUpdateAuthenticationModeIamUser = destinationAwsDatalakeUpdateAuthenticationModeIamUser;
        }
    }
}
