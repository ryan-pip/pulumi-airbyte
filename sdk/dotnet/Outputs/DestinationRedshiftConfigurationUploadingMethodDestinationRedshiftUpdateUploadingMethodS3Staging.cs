// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte.Outputs
{

    [OutputType]
    public sealed class DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging
    {
        public readonly string AccessKeyId;
        public readonly Outputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption? Encryption;
        public readonly int? FileBufferCount;
        public readonly string? FileNamePattern;
        public readonly string Method;
        public readonly bool? PurgeStagingData;
        public readonly string S3BucketName;
        public readonly string? S3BucketPath;
        public readonly string S3BucketRegion;
        public readonly string SecretAccessKey;

        [OutputConstructor]
        private DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3Staging(
            string accessKeyId,

            Outputs.DestinationRedshiftConfigurationUploadingMethodDestinationRedshiftUpdateUploadingMethodS3StagingEncryption? encryption,

            int? fileBufferCount,

            string? fileNamePattern,

            string method,

            bool? purgeStagingData,

            string s3BucketName,

            string? s3BucketPath,

            string s3BucketRegion,

            string secretAccessKey)
        {
            AccessKeyId = accessKeyId;
            Encryption = encryption;
            FileBufferCount = fileBufferCount;
            FileNamePattern = fileNamePattern;
            Method = method;
            PurgeStagingData = purgeStagingData;
            S3BucketName = s3BucketName;
            S3BucketPath = s3BucketPath;
            S3BucketRegion = s3BucketRegion;
            SecretAccessKey = secretAccessKey;
        }
    }
}
