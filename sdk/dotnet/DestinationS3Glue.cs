// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte
{
    [AirbyteResourceType("airbyte:index/destinationS3Glue:DestinationS3Glue")]
    public partial class DestinationS3Glue : global::Pulumi.CustomResource
    {
        [Output("configuration")]
        public Output<Outputs.DestinationS3GlueConfiguration> Configuration { get; private set; } = null!;

        [Output("destinationId")]
        public Output<string> DestinationId { get; private set; } = null!;

        [Output("destinationType")]
        public Output<string> DestinationType { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a DestinationS3Glue resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DestinationS3Glue(string name, DestinationS3GlueArgs args, CustomResourceOptions? options = null)
            : base("airbyte:index/destinationS3Glue:DestinationS3Glue", name, args ?? new DestinationS3GlueArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DestinationS3Glue(string name, Input<string> id, DestinationS3GlueState? state = null, CustomResourceOptions? options = null)
            : base("airbyte:index/destinationS3Glue:DestinationS3Glue", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DestinationS3Glue resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DestinationS3Glue Get(string name, Input<string> id, DestinationS3GlueState? state = null, CustomResourceOptions? options = null)
        {
            return new DestinationS3Glue(name, id, state, options);
        }
    }

    public sealed class DestinationS3GlueArgs : global::Pulumi.ResourceArgs
    {
        [Input("configuration", required: true)]
        public Input<Inputs.DestinationS3GlueConfigurationArgs> Configuration { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public DestinationS3GlueArgs()
        {
        }
        public static new DestinationS3GlueArgs Empty => new DestinationS3GlueArgs();
    }

    public sealed class DestinationS3GlueState : global::Pulumi.ResourceArgs
    {
        [Input("configuration")]
        public Input<Inputs.DestinationS3GlueConfigurationGetArgs>? Configuration { get; set; }

        [Input("destinationId")]
        public Input<string>? DestinationId { get; set; }

        [Input("destinationType")]
        public Input<string>? DestinationType { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public DestinationS3GlueState()
        {
        }
        public static new DestinationS3GlueState Empty => new DestinationS3GlueState();
    }
}
