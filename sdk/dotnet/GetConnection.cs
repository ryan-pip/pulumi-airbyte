// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Airbyte
{
    public static class GetConnection
    {
        public static Task<GetConnectionResult> InvokeAsync(GetConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectionResult>("airbyte:index/getConnection:getConnection", args ?? new GetConnectionArgs(), options.WithDefaults());

        public static Output<GetConnectionResult> Invoke(GetConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionResult>("airbyte:index/getConnection:getConnection", args ?? new GetConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectionArgs : global::Pulumi.InvokeArgs
    {
        [Input("connectionId", required: true)]
        public string ConnectionId { get; set; } = null!;

        public GetConnectionArgs()
        {
        }
        public static new GetConnectionArgs Empty => new GetConnectionArgs();
    }

    public sealed class GetConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("connectionId", required: true)]
        public Input<string> ConnectionId { get; set; } = null!;

        public GetConnectionInvokeArgs()
        {
        }
        public static new GetConnectionInvokeArgs Empty => new GetConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectionResult
    {
        public readonly Outputs.GetConnectionConfigurations Configurations;
        public readonly string ConnectionId;
        public readonly string DataResidency;
        public readonly string DestinationId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string NamespaceDefinition;
        public readonly string NamespaceFormat;
        public readonly string NonBreakingSchemaUpdatesBehavior;
        public readonly string Prefix;
        public readonly Outputs.GetConnectionSchedule Schedule;
        public readonly string SourceId;
        public readonly string Status;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetConnectionResult(
            Outputs.GetConnectionConfigurations configurations,

            string connectionId,

            string dataResidency,

            string destinationId,

            string id,

            string name,

            string namespaceDefinition,

            string namespaceFormat,

            string nonBreakingSchemaUpdatesBehavior,

            string prefix,

            Outputs.GetConnectionSchedule schedule,

            string sourceId,

            string status,

            string workspaceId)
        {
            Configurations = configurations;
            ConnectionId = connectionId;
            DataResidency = dataResidency;
            DestinationId = destinationId;
            Id = id;
            Name = name;
            NamespaceDefinition = namespaceDefinition;
            NamespaceFormat = namespaceFormat;
            NonBreakingSchemaUpdatesBehavior = nonBreakingSchemaUpdatesBehavior;
            Prefix = prefix;
            Schedule = schedule;
            SourceId = sourceId;
            Status = status;
            WorkspaceId = workspaceId;
        }
    }
}
